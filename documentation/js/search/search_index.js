var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.8","fields":["title","body"],"fieldVectors":[["title/controllers/AdminController.html",[0,1.869,1,3.015]],["body/controllers/AdminController.html",[0,2.363,1,4.766,2,2.363,3,0.146,4,0.146,5,0.11,6,4.587,7,3.547,8,1.377,9,0.24,10,2.837,11,0.896,12,4.044,13,6.556,14,6.258,15,1.456,16,0.013,17,6.578,18,0.428,19,5.26,20,2.837,21,5.26,22,4.755,23,5.2,24,6.578,25,5.26,26,2.464,27,2.181,28,0.342,29,1.632,30,6.578,31,0.713,32,3.811,33,4.766,34,4.766,35,3.811,36,1.577,37,4.539,38,4.587,39,4.143,40,5.26,41,0.146,42,0.39,43,3.547,44,1.812,45,2.727,46,3.534,47,5.26,48,4.143,49,3.811,50,4.143,51,1.245,52,5.26,53,4.587,54,5.26,55,5.26,56,5.26,57,5.26,58,5.26,59,0.008,60,0.01,61,0.008]],["title/modules/AdminModule.html",[62,1.725,63,2.806]],["body/modules/AdminModule.html",[1,5.418,2,3.127,3,0.16,4,0.16,5,0.121,16,0.013,22,3.649,31,0.789,36,1.73,37,5.106,38,5.031,39,4.544,41,0.16,42,0.428,59,0.009,60,0.011,61,0.009,62,3.1,63,5.445,64,2.955,65,2.955,66,3.261,67,3.261,68,2.955,69,4.226,70,3.261,71,5.031,72,5.031,73,3.935,74,3.261,75,3.1,76,5.77,77,5.77,78,3.89,79,2.488,80,2.824,81,3.89,82,5.77]],["title/injectables/AdminService.html",[37,2.632,83,1.66]],["body/injectables/AdminService.html",[3,0.142,4,0.142,5,0.107,9,0.233,10,2.781,11,0.889,12,4.012,13,6.483,14,5.624,16,0.013,18,0.46,20,2.781,22,5.031,26,3.021,27,2.933,28,0.419,29,2.001,31,0.762,36,1.528,37,4.079,39,4.015,41,0.142,42,0.378,44,2.222,45,2.674,46,2.739,59,0.008,60,0.01,61,0.008,79,2.781,80,2.495,83,2.573,84,2.881,85,4.445,86,3.156,87,5.098,88,5.013,89,4.22,90,5.387,91,5.098,92,5.098,93,6.449,94,5.098,95,4.673,96,3.438,97,1.248,98,2.739,99,5.098,100,3.303,101,5.098,102,3.438,103,1.477,104,3.041,105,5.098,106,5.098,107,4.015,108,5.098,109,2.881,110,3.224,111,3.438,112,0.855,113,4.015]],["title/controllers/AppController.html",[0,1.869,114,3.015]],["body/controllers/AppController.html",[0,3.214,2,2.712,3,0.168,4,0.168,5,0.127,9,0.276,10,3.085,15,1.337,16,0.013,18,0.393,20,2.604,31,0.711,36,1.81,41,0.168,42,0.448,43,4.072,44,2.08,45,2.503,59,0.009,60,0.011,61,0.009,114,5.184,115,5.265,116,6.873,117,6.039,118,0.465,119,4.821,120,5.265,121,6.039]],["title/modules/AppModule.html",[62,1.725,122,3.015]],["body/modules/AppModule.html",[2,2.476,3,0.112,4,0.112,5,0.084,12,2.823,16,0.013,31,0.815,36,1.205,41,0.112,42,0.298,43,2.709,44,1.384,59,0.006,60,0.009,61,0.006,62,2.608,63,4.942,64,2.058,65,2.058,66,2.271,67,2.271,68,2.058,69,3.556,70,2.271,73,3.115,74,2.271,75,2.159,78,2.709,79,2.377,80,1.966,81,4.566,98,2.962,103,1.962,114,4.559,118,0.261,119,4.635,120,3.504,122,5.966,123,3.504,124,3.504,125,3.504,126,4.372,127,4.56,128,4.942,129,4.942,130,4.942,131,4.018,132,4.018,133,5.512,134,4.018,135,3.165,136,3.972,137,2.709,138,2.541,139,2.709,140,4.018,141,5.512,142,3.165,143,3.165,144,4.018,145,4.018,146,5.512,147,4.018,148,3.504,149,4.806,150,4.018,151,3.165,152,3.994,153,4.018,154,5.512,155,3.165,156,4.018,157,4.018,158,4.018,159,4.018,160,4.806,161,5.512,162,4.018,163,4.018,164,4.018,165,1.834,166,4.018,167,4.018,168,4.018,169,1.179,170,4.018,171,4.018,172,4.018,173,4.018,174,4.018,175,3.504,176,3.504,177,3.504,178,4.018,179,4.018,180,2.912,181,4.018,182,4.018,183,4.018,184,4.018,185,4.018,186,4.018,187,4.018,188,4.018,189,4.018,190,4.018,191,5.512,192,5.512,193,4.018,194,4.018,195,3.504,196,4.018,197,4.018,198,4.018,199,0.517,200,4.018,201,4.018]],["title/injectables/AppService.html",[83,1.66,119,2.632]],["body/injectables/AppService.html",[3,0.172,4,0.172,5,0.13,9,0.282,10,3.127,16,0.013,18,0.401,20,2.664,31,0.614,36,1.852,41,0.172,42,0.458,45,2.56,59,0.01,60,0.011,61,0.01,83,2.892,84,3.491,116,6.924,118,0.471,119,4.585,202,5.386,203,6.177,204,4.865,205,5.386]],["title/controllers/AuthController.html",[0,1.869,206,3.015]],["body/controllers/AuthController.html",[0,1.174,2,1.174,3,0.073,4,0.073,5,0.055,7,1.763,9,0.119,10,1.737,11,0.916,12,4.134,15,1.539,16,0.013,18,0.452,20,2.999,23,5.79,26,3.258,27,2.883,28,0.452,29,2.157,31,0.691,32,1.894,33,4.001,34,5.039,35,1.894,36,0.784,41,0.073,42,0.194,44,1.388,45,2.81,46,3.736,48,2.059,49,4.912,50,2.059,51,1.605,59,0.004,60,0.006,61,0.004,79,1.127,86,1.279,89,2.932,98,1.405,100,2.063,104,4.044,109,1.477,118,0.552,206,2.919,207,2.28,208,2.614,209,4.285,210,4.285,211,4.915,212,4.915,213,3.513,214,4.285,215,4.915,216,4.285,217,4.285,218,3.513,219,3.492,220,5.522,221,5.522,222,6.438,223,2.614,224,2.614,225,3.513,226,2.28,227,4.915,228,4.029,229,2.614,230,5.146,231,2.614,232,4.815,233,4.815,234,4.029,235,2.614,236,2.614,237,4.285,238,4.029,239,2.614,240,2.614,241,3.723,242,4.029,243,2.614,244,2.121,245,2.28,246,2.044,247,2.614,248,4.915,249,2.614,250,2.614,251,1.203,252,4.029,253,2.614,254,2.614,255,3.723,256,4.029,257,2.614,258,0.778,259,3.513,260,5.522,261,5.522,262,5.522,263,4.029,264,2.614,265,2.614,266,2.28,267,2.28,268,2.059,269,3.108,270,2.28,271,5.477,272,1.56,273,2.28,274,2.28,275,2.28,276,2.059,277,1.653,278,1.763,279,2.059,280,2.614,281,2.614,282,2.614,283,2.614,284,2.28,285,0.505,286,2.614,287,2.614,288,2.614,289,2.614,290,5.964,291,2.614,292,2.614,293,2.614,294,5.171,295,5.171,296,2.614,297,2.614,298,2.614,299,2.614,300,2.614,301,2.614,302,4.915,303,2.614,304,2.614,305,2.614,306,2.614,307,2.614,308,2.614,309,2.614,310,2.28,311,2.614,312,2.059,313,2.614,314,2.059,315,2.059,316,2.614,317,2.614,318,2.614,319,2.614,320,2.614]],["title/modules/AuthModule.html",[62,1.725,126,2.482]],["body/modules/AuthModule.html",[2,2.869,3,0.14,4,0.14,5,0.105,16,0.013,31,0.816,36,1.505,41,0.14,42,0.372,45,2.081,59,0.008,60,0.01,61,0.008,62,2.912,64,2.572,65,2.572,66,2.837,67,2.837,68,2.572,69,3.97,70,3.97,73,3.61,74,2.837,75,2.697,78,3.385,79,2.165,80,2.457,81,4.307,126,4.833,127,3.81,135,3.954,136,3.787,137,3.385,138,3.175,139,3.385,160,4.378,206,5.09,246,1.859,269,4.935,270,4.378,272,2.995,277,3.175,321,4.378,322,4.378,323,4.378,324,5.57,325,5.021,326,5.021,327,5.021,328,6.387,329,5.021,330,3.954,331,4.378,332,5.021,333,5.021,334,3.954,335,5.021,336,5.021,337,5.021,338,4.378,339,5.021,340,5.021,341,5.021]],["title/injectables/AuthService.html",[83,1.66,269,2.632]],["body/injectables/AuthService.html",[3,0.043,4,0.043,5,0.032,9,0.071,10,1.135,11,0.845,12,3.811,16,0.013,18,0.4,20,2.492,26,2.803,27,2.619,28,0.4,29,1.856,31,0.692,36,0.464,41,0.043,42,0.115,44,1.909,45,1.091,46,3.65,59,0.002,60,0.004,61,0.002,79,1.135,80,0.758,83,1.05,84,0.875,86,1.288,88,2.731,89,2.048,90,2.935,95,3.815,96,1.044,97,0.379,98,0.832,100,2.839,102,4.954,103,2.219,104,3.852,109,2.289,112,0.26,118,0.516,136,2.697,137,1.044,138,0.979,139,1.044,142,1.22,143,1.22,165,0.419,169,0.563,175,2.295,199,0.199,209,2.295,210,2.295,213,2.994,214,2.295,216,2.295,217,2.994,218,1.35,219,2.172,225,1.35,226,2.295,230,4.578,232,2.994,233,2.994,237,3.532,241,3.55,244,2.758,245,2.295,246,1.949,251,1.357,255,3.061,258,0.876,259,1.35,269,1.665,272,0.924,273,1.35,274,1.35,275,1.35,284,5.924,285,1.271,310,1.35,330,1.22,342,1.35,343,0.262,344,3.328,345,3.434,346,2.633,347,2.633,348,1.22,349,3.434,350,4.05,351,5.265,352,2.633,353,4.05,354,1.549,355,5.217,356,2.073,357,2.295,358,1.549,359,6.582,360,1.549,361,2.633,362,1.549,363,1.549,364,1.549,365,1.549,366,2.633,367,4.05,368,1.549,369,2.633,370,1.549,371,4.05,372,4.05,373,1.549,374,0.533,375,0.875,376,2.633,377,2.633,378,4.147,379,4.365,380,3.575,381,1.35,382,1.549,383,2.295,384,1.549,385,1.35,386,1.549,387,1.35,388,1.35,389,0.979,390,1.22,391,1.35,392,1.908,393,4.304,394,3.888,395,1.775,396,1.35,397,1.22,398,4.578,399,1.35,400,3.434,401,4.383,402,2.633,403,1.549,404,2.633,405,2.633,406,3.958,407,3.958,408,3.575,409,4.712,410,3.532,411,3.532,412,3.532,413,3.532,414,2.633,415,4.05,416,1.549,417,2.633,418,1.549,419,1.549,420,1.549,421,1.549,422,4.539,423,1.549,424,2.633,425,2.633,426,1.549,427,2.633,428,2.633,429,1.549,430,5.702,431,1.775,432,1.908,433,1.549,434,2.295,435,1.549,436,1.318,437,1.549,438,1.549,439,1.35,440,1.35,441,1.549,442,1.549,443,1.549,444,4.365,445,5.423,446,1.549,447,1.549,448,1.549,449,1.549,450,1.549,451,1.549,452,3.575,453,2.633,454,1.549,455,1.549,456,2.994,457,1.549,458,1.549,459,2.704,460,1.549,461,1.127,462,1.15,463,2.633,464,4.05,465,2.295,466,2.633,467,1.549,468,4.936,469,4.539,470,4.936,471,3.19,472,3.434,473,3.434,474,3.434,475,2.633,476,1.549,477,1.549,478,5.265,479,2.633,480,1.549,481,1.549,482,1.549,483,1.549,484,1.549,485,1.549,486,1.549,487,1.549,488,1.549,489,2.633,490,1.22,491,1.017,492,4.05,493,1.549,494,2.633,495,4.539,496,2.633,497,2.633,498,0.927,499,2.633,500,2.633,501,3.434,502,4.833,503,1.35,504,1.549,505,4.05,506,4.05,507,4.05,508,1.549,509,0.406,510,1.22,511,1.22,512,1.549,513,1.549,514,1.549,515,1.549,516,3.434,517,1.549,518,2.633,519,4.304,520,1.35,521,2.633,522,2.633,523,4.936,524,2.633,525,2.633,526,1.549,527,1.22,528,1.549,529,1.549,530,3.575,531,2.994,532,3.575,533,4.591,534,1.549,535,1.549,536,1.549,537,2.633,538,2.633,539,1.549,540,0.645,541,1.549,542,1.549,543,2.633,544,1.549,545,1.549,546,1.549,547,1.549,548,1.549,549,1.549,550,1.549,551,1.35,552,1.549,553,1.549,554,2.633,555,1.549,556,2.633,557,1.549,558,1.549,559,1.35,560,1.549,561,1.549,562,1.549,563,1.549,564,1.549,565,1.549,566,1.549,567,1.549,568,1.549,569,1.549,570,1.549,571,1.549,572,1.549,573,1.549,574,1.549,575,1.549,576,1.549,577,1.549,578,2.633,579,3.532,580,1.549,581,1.549,582,1.549,583,1.549,584,1.549,585,1.549,586,1.549,587,1.549,588,1.549,589,1.549,590,1.549,591,1.35,592,1.549,593,1.35,594,1.549,595,1.549,596,1.35,597,1.549,598,1.22,599,0.331,600,2.633,601,1.549,602,1.35,603,1.549]],["title/classes/BuyerAddMarketDto.html",[42,0.309,604,3.015]],["body/classes/BuyerAddMarketDto.html",[3,0.158,4,0.158,5,0.119,9,0.26,11,0.953,16,0.013,18,0.502,28,0.502,31,0.686,41,0.158,42,0.422,59,0.009,60,0.011,61,0.009,97,1.394,118,0.523,199,0.888,244,2.855,246,2.107,272,3.396,343,0.686,461,1.202,462,1.202,604,5.004,605,0.646,606,4.964,607,4.434,608,5.693,609,5.693,610,5.693,611,3.994,612,5.693]],["title/classes/BuyerMarket.html",[42,0.309,613,2.482]],["body/classes/BuyerMarket.html",[3,0.129,4,0.129,5,0.097,9,0.212,11,0.952,15,1.498,16,0.013,18,0.44,28,0.467,31,0.603,41,0.2,42,0.532,59,0.007,60,0.009,61,0.007,97,1.137,118,0.519,165,2.251,199,0.983,244,2.758,246,1.719,343,0.603,461,1.205,462,1.205,605,0.527,611,4.291,613,3.624,614,3.132,615,2.251,616,4.645,617,4.645,618,4.058,619,4.645,620,2.744,621,3.132,622,2.771,623,2.731,624,1.719,625,1.6,626,1.719,627,3.366,628,3.366,629,1.1,630,0.994,631,2.771,632,0.928,633,1.6,634,2.937,635,1.6,636,3.366,637,2.937,638,2.771]],["title/classes/BuyerRemoveMarketDto.html",[42,0.309,639,2.806]],["body/classes/BuyerRemoveMarketDto.html",[3,0.171,4,0.171,5,0.129,9,0.281,11,0.93,16,0.013,18,0.47,28,0.47,41,0.171,42,0.455,59,0.01,60,0.011,61,0.01,118,0.515,244,2.949,343,0.718,605,0.697,607,4.579,639,4.871,640,5.352,641,6.138,642,6.138]],["title/classes/ChangelogAuthor.html",[42,0.309,643,3.015]],["body/classes/ChangelogAuthor.html",[3,0.212,4,0.153,5,0.116,9,0.252,11,0.935,15,1.622,16,0.013,18,0.476,28,0.476,31,0.673,41,0.153,42,0.409,59,0.009,60,0.011,61,0.009,97,1.35,118,0.497,165,2.163,199,0.871,246,2.041,272,3.289,343,0.673,461,1.185,462,1.185,605,0.626,611,4.216,615,2.437,618,3.827,620,2.542,623,2.437,643,4.907,644,4.807,645,5.513,646,5.513,647,5.513]],["title/classes/ChangelogModel.html",[22,2.632,42,0.309]],["body/classes/ChangelogModel.html",[3,0.135,4,0.135,5,0.102,9,0.221,11,0.945,15,1.671,16,0.013,18,0.491,22,3.946,28,0.491,31,0.62,41,0.135,42,0.359,59,0.008,60,0.01,61,0.008,97,1.185,118,0.518,165,2.198,169,1.335,180,3.508,343,0.62,383,6.021,498,1.429,605,0.55,615,2.51,620,2.57,623,2.51,632,1.38,633,2.744,634,3.946,635,2.744,643,5.003,648,4.221,649,2.652,650,6.905,651,6.905,652,4.841,653,6.24,654,4.841,655,5.745,656,5.745,657,4.841,658,6.24,659,4.841,660,4.915,661,4.841,662,4.841,663,4.915,664,3.813,665,4.841]],["title/classes/CommentMarket.html",[42,0.309,631,2.482]],["body/classes/CommentMarket.html",[3,0.126,4,0.126,5,0.095,9,0.207,11,0.954,15,1.573,16,0.013,18,0.462,28,0.48,31,0.593,41,0.198,42,0.527,59,0.007,60,0.009,61,0.007,97,1.108,118,0.521,165,2.252,199,0.976,244,2.294,246,1.675,343,0.593,461,1.194,462,1.194,605,0.514,611,4.269,613,2.699,614,3.051,615,2.363,618,4.016,620,2.735,621,3.051,622,2.699,623,2.721,624,1.675,625,1.559,626,1.675,627,3.279,628,3.279,629,1.071,630,0.968,631,3.562,632,1.335,633,2.057,634,3.776,635,2.057,636,4.327,637,4.226,638,2.699,666,4.525,667,4.525,668,4.525,669,4.525]],["title/classes/CommentMarketDto.html",[42,0.309,670,2.806]],["body/classes/CommentMarketDto.html",[3,0.155,4,0.155,5,0.117,9,0.254,11,0.959,16,0.013,18,0.511,28,0.511,31,0.677,41,0.155,42,0.413,59,0.009,60,0.011,61,0.009,97,1.363,118,0.532,199,0.876,244,2.827,246,2.06,343,0.677,461,1.19,462,1.19,605,0.632,607,4.391,611,3.954,637,4.655,670,4.592,671,4.852,672,5.565,673,5.565,674,5.565,675,5.565,676,5.565,677,5.565]],["title/classes/CommentRemoveMarketDto.html",[42,0.309,678,2.806]],["body/classes/CommentRemoveMarketDto.html",[3,0.173,4,0.173,5,0.13,9,0.284,16,0.013,18,0.473,28,0.473,41,0.173,42,0.461,59,0.01,60,0.011,61,0.01,118,0.517,343,0.723,605,0.706,607,4.603,632,1.542,678,4.907,679,5.419,680,6.215,681,6.215]],["title/modules/ConfigModule.html",[62,1.725,127,2.482]],["body/modules/ConfigModule.html",[3,0.164,4,0.164,5,0.124,16,0.013,31,0.701,36,1.771,41,0.164,42,0.438,59,0.009,60,0.011,61,0.009,62,3.131,64,3.025,65,3.025,66,3.338,67,3.338,68,3.025,69,3.991,70,4.269,73,3.991,74,3.338,75,3.174,103,1.712,127,4.772,136,4.265,195,5.151,682,5.151,683,5.151,684,5.907,685,5.907,686,5.907]],["title/classes/ConfigService.html",[42,0.309,136,2.131]],["body/classes/ConfigService.html",[3,0.138,4,0.138,5,0.133,9,0.227,10,2.737,11,0.794,16,0.013,18,0.479,20,2.144,26,2.329,27,2.06,28,0.479,29,1.542,31,0.695,36,1.49,41,0.138,42,0.369,44,2.681,45,2.06,59,0.008,60,0.01,61,0.008,86,3.421,100,3.581,103,1.839,118,0.514,136,3.251,177,4.334,343,0.63,344,5.248,374,1.712,375,2.809,401,4.171,431,3.351,605,0.564,687,4.334,688,6.992,689,6.346,690,4.334,691,4.97,692,6.346,693,6.346,694,4.97,695,1.177,696,4.97,697,4.97,698,4.97,699,4.97,700,4.97,701,4.97,702,6.346,703,4.97,704,4.97,705,4.97,706,4.97,707,6.346,708,4.97,709,4.97,710,3.602,711,4.97,712,6.346,713,4.97,714,4.334,715,4.97,716,4.334,717,4.97,718,4.334,719,4.97,720,4.334,721,4.97,722,4.334,723,4.97,724,4.334,725,4.97,726,4.97]],["title/classes/DiscountMarket.html",[42,0.309,622,2.482]],["body/classes/DiscountMarket.html",[3,0.132,4,0.132,5,0.099,9,0.217,11,0.949,15,1.363,16,0.013,18,0.4,28,0.444,31,0.612,41,0.201,42,0.536,59,0.007,60,0.01,61,0.007,97,1.161,118,0.509,165,2.249,199,0.988,244,2.365,246,1.755,343,0.612,461,1.105,462,1.105,605,0.538,611,4.204,613,2.828,614,3.197,615,2.047,618,3.864,620,2.751,621,3.197,622,3.672,623,2.739,624,2.279,625,2.121,626,2.279,627,4.461,628,4.954,629,1.619,630,1.317,631,2.828,632,0.947,633,1.633,634,2.998,635,1.633,636,3.435,637,2.998,638,2.828,727,4.741,728,4.741]],["title/classes/Email.html",[42,0.309,285,0.803]],["body/classes/Email.html",[3,0.11,4,0.11,5,0.083,8,1.038,9,0.181,11,0.979,16,0.013,18,0.438,28,0.486,29,1.694,41,0.224,42,0.599,51,0.939,59,0.006,60,0.008,61,0.006,112,0.665,118,0.538,169,0.848,199,1.072,251,1.649,258,0.765,285,1.054,343,0.543,436,0.848,461,1.01,462,1.01,491,0.765,498,1.25,509,1.43,540,0.971,599,0.848,605,0.45,629,0.939,630,1.562,632,0.792,649,1.523,695,1.594,729,1.644,730,1.912,731,1.848,732,3.965,733,3.965,734,1.9,735,3.965,736,3.965,737,1.441,738,1.383,739,1.383,740,1.636,741,0.82,742,0.878,743,1.074,744,0.878,745,1.074,746,1.074,747,1.074,748,1.074,749,0.971,750,0.971,751,0.971,752,0.971,753,0.971,754,0.908,755,1.209,756,1.074,757,0.878,758,1.074,759,1.169,760,1.004,761,1.004,762,1.337,763,1.337,764,1.337,765,1.337,766,1.038,767,1.074]],["title/classes/Email-1.html",[42,0.259,285,0.674,768,0.799]],["body/classes/Email-1.html",[3,0.079,4,0.079,5,0.059,8,0.74,9,0.236,11,0.962,15,1.273,16,0.013,18,0.374,28,0.422,29,1.327,31,0.425,41,0.21,42,0.56,51,0.67,59,0.004,60,0.007,61,0.004,97,0.692,103,0.819,112,0.474,118,0.508,165,2.295,169,1.647,199,1.01,251,1.408,258,0.546,285,0.826,343,0.425,374,2.847,436,0.605,461,0.834,462,0.834,491,0.546,498,1.181,509,1.12,540,0.692,599,0.605,605,0.321,615,1.912,620,2.8,623,2.796,624,1.047,625,2.602,626,1.047,629,0.67,630,1.39,632,0.565,633,0.974,635,0.974,695,1.362,730,1.673,731,1.645,734,1.788,737,0.915,738,0.716,739,0.716,740,1.12,741,0.585,742,0.947,743,1.158,744,0.626,745,0.766,746,0.766,747,0.766,748,0.766,749,0.692,750,0.692,751,0.692,752,0.692,753,0.692,754,0.647,755,0.947,756,0.766,757,0.626,758,0.766,759,0.915,760,0.716,761,0.716,762,1.047,763,1.047,764,1.047,765,1.263,766,0.74,767,0.766,768,1.181,769,1.22,770,1.788,771,2.828,772,2.48,773,2.828,774,2.828,775,2.828,776,2.139,777,1.172,778,1.22,779,1.172,780,1.22,781,1.172,782,1.27,783,1.27,784,1.22,785,1.27,786,1.27,787,2.775,788,1.172,789,1.706]],["title/classes/GeneralGateway.html",[42,0.309,152,3.015]],["body/classes/GeneralGateway.html",[3,0.119,4,0.119,5,0.09,9,0.196,10,2.488,15,0.951,16,0.013,18,0.472,20,2.488,26,3.051,27,2.7,28,0.472,29,2.02,31,0.721,36,1.288,41,0.119,42,0.319,43,2.897,44,2.631,45,2.7,59,0.007,60,0.009,61,0.007,86,2.103,100,3.829,103,1.671,118,0.279,152,4.18,165,1.562,169,1.234,204,3.384,205,3.746,244,2.216,343,0.573,344,5.041,374,1.48,375,2.428,391,3.746,392,4.18,393,5.679,394,5.129,398,4.18,401,4.153,406,5.03,407,5.03,408,4.543,409,5.483,410,5.03,411,5.03,412,5.03,413,5.03,490,3.384,491,1.344,502,5.03,520,3.746,605,0.488,759,1.6,760,1.461,761,1.461,768,1.594,790,3.746,791,5.03,792,6.513,793,6.513,794,6.513,795,5.769,796,5.769,797,4.296,798,4.46,799,5.769,800,5.769,801,5.03,802,4.296,803,6.513,804,5.769,805,4.296,806,5.03,807,5.769,808,4.296,809,5.769,810,3.746,811,4.296,812,5.769,813,5.769,814,5.769,815,5.769,816,5.769,817,5.769,818,4.296,819,5.769,820,4.296,821,4.296]],["title/interfaces/IJwtPayload.html",[395,2.806,822,3.015]],["body/interfaces/IJwtPayload.html",[3,0.163,4,0.163,5,0.123,9,0.268,16,0.013,28,0.519,29,2.18,41,0.163,59,0.009,60,0.011,61,0.009,109,4.411,112,1.309,118,0.548,285,1.507,343,0.698,395,4.739,491,1.507,630,1.611,822,4.246,823,5.861,824,5.11,825,7.805]],["title/injectables/JwtStrategy.html",[83,1.66,324,2.806]],["body/injectables/JwtStrategy.html",[3,0.13,4,0.13,5,0.098,9,0.213,10,2.628,12,3.475,16,0.013,18,0.396,20,2.013,26,2.854,27,2.526,28,0.396,29,1.89,31,0.794,36,1.399,41,0.13,42,0.346,44,2.099,45,1.935,46,2.507,59,0.007,60,0.009,61,0.007,79,2.013,80,2.284,83,2.43,84,2.637,86,2.982,88,4.85,96,3.147,97,1.143,100,2.39,102,5.031,103,2.162,109,3.444,136,3.993,137,3.147,138,2.951,139,3.147,169,0.998,244,1.793,246,2.512,272,2.784,277,2.951,285,1.176,324,4.109,334,3.675,338,4.069,348,3.675,379,6.027,395,4.85,396,4.069,397,3.675,401,3.635,430,3.675,431,3.147,432,3.381,459,3.675,490,5.343,491,0.901,527,3.675,710,3.381,781,1.935,789,1.861,826,4.069,827,6.093,828,4.667,829,6.093,830,4.667,831,4.667,832,4.667,833,4.667,834,4.069,835,4.667,836,4.667,837,4.667,838,4.667,839,4.667,840,4.667,841,6.093,842,4.069,843,4.069,844,4.667,845,4.667,846,4.667,847,4.667,848,4.667,849,4.667,850,4.667,851,4.069,852,4.069]],["title/classes/Market.html",[42,0.309,737,0.89]],["body/classes/Market.html",[3,0.105,4,0.105,5,0.08,8,0.993,9,0.173,11,0.979,16,0.013,18,0.49,28,0.518,41,0.223,42,0.595,51,0.898,59,0.006,60,0.008,61,0.006,112,0.636,118,0.537,169,0.812,199,1.078,251,1.297,258,0.732,285,0.732,343,0.526,436,0.812,461,1.124,462,1.124,491,0.732,498,1.213,509,1.387,540,0.929,599,0.812,605,0.431,629,0.898,630,1.487,632,0.758,649,2.344,695,1.254,729,1.572,730,1.653,731,1.673,734,1.873,737,1.581,738,1.673,739,1.673,740,1.82,741,0.784,742,0.84,743,1.027,744,0.84,745,1.027,746,1.027,747,1.027,748,1.027,749,0.929,750,0.929,751,0.929,752,0.929,753,0.929,754,0.868,755,1.172,756,1.027,757,0.84,758,1.027,759,1.133,760,0.96,761,0.96,762,1.297,763,1.297,764,1.297,765,1.297,766,0.993,767,1.027,853,3.793,854,3.793,855,3.793,856,3.793,857,3.793,858,3.793,859,3.793,860,3.793]],["title/controllers/MarketController.html",[0,1.869,861,3.015]],["body/controllers/MarketController.html",[0,1.268,2,1.268,3,0.078,4,0.078,5,0.059,7,1.903,9,0.129,10,1.842,11,0.916,12,4.132,15,1.537,16,0.013,18,0.451,20,2.995,23,5.692,26,3.253,27,2.879,28,0.451,29,2.154,31,0.758,32,2.045,33,4.886,34,4.886,35,2.045,36,0.846,41,0.078,42,0.209,44,1.471,45,2.879,46,3.731,48,2.223,49,4.705,50,2.223,51,1.537,59,0.004,60,0.007,61,0.004,79,1.217,86,1.381,89,3.074,98,1.516,100,2.188,104,3.873,112,0.473,118,0.541,199,0.663,222,6.353,268,2.223,271,5.311,276,2.223,277,1.785,278,1.903,279,2.223,294,4.861,295,4.861,312,2.223,314,4.525,315,3.364,389,1.785,390,2.223,639,4.378,670,4.378,678,4.378,737,0.604,861,3.095,862,2.461,863,4.493,864,4.493,865,3.734,866,4.493,867,4.493,868,4.493,869,4.493,870,3.734,871,2.461,872,4.271,873,2.822,874,2.461,875,4.106,876,4.271,877,2.822,878,3.724,879,4.378,880,4.271,881,2.822,882,2.822,883,6.055,884,6.761,885,4.271,886,2.822,887,5.662,888,2.461,889,4.271,890,2.822,891,3.724,892,3.724,893,2.822,894,2.822,895,3.724,896,4.271,897,2.822,898,3.724,899,4.378,900,4.271,901,2.822,902,2.461,903,4.271,904,2.223,905,3.259,906,2.461,907,2.223,908,2.461,909,2.461,910,2.461,911,2.461,912,3.095,913,2.822,914,2.461,915,2.461,916,2.822,917,2.822,918,2.822,919,2.461,920,2.822,921,2.822,922,2.822,923,2.822,924,2.822,925,5.746,926,2.822,927,2.822,928,2.822,929,2.822,930,2.822,931,2.822]],["title/classes/MarketModel.html",[42,0.309,875,2.632]],["body/classes/MarketModel.html",[3,0.103,4,0.103,5,0.078,9,0.276,11,0.96,15,1.745,16,0.013,18,0.512,27,2.504,28,0.512,31,0.651,41,0.103,42,0.276,59,0.006,60,0.008,61,0.006,97,0.911,118,0.488,165,2.218,169,1.118,180,2.697,199,0.842,246,1.378,343,0.519,461,0.977,462,0.977,498,1.197,605,0.423,611,3.708,613,4.117,615,2.536,618,2.954,620,2.569,621,2.51,622,3.604,623,2.536,624,1.935,626,1.935,631,4.117,632,1.207,633,2.257,635,2.257,638,4.117,649,2.321,655,4.117,656,4.117,663,4.117,664,2.931,731,1.53,734,1.551,737,1.118,738,1.53,739,1.53,741,1.249,768,1.718,776,2.504,777,1.543,788,1.543,789,2.085,875,3.306,932,3.245,933,4.758,934,5.268,935,4.758,936,3.722,937,3.722,938,5.268,939,3.722,940,3.722,941,4.558,942,4.558,943,3.722,944,3.722,945,3.722,946,3.722,947,3.722,948,5.227,949,3.722,950,3.722,951,3.722,952,5.713,953,3.722,954,3.722,955,3.722,956,3.722,957,3.722,958,3.722,959,3.722,960,3.722,961,3.722,962,5.268]],["title/modules/MarketModule.html",[62,1.725,128,2.806]],["body/modules/MarketModule.html",[2,3.073,3,0.156,4,0.156,5,0.118,16,0.013,31,0.797,36,1.681,41,0.156,42,0.416,59,0.009,60,0.011,61,0.009,62,3.061,64,2.872,65,2.872,66,3.169,67,3.169,68,2.872,69,4.173,70,3.169,73,3.867,74,3.169,75,3.012,78,3.781,79,2.418,80,2.744,81,4.614,126,4.784,128,5.527,151,4.416,861,5.351,875,3.546,905,5.072,906,4.889,907,4.416,963,4.889,964,5.607,965,4.889,966,5.607,967,5.607,968,5.607]],["title/injectables/MarketService.html",[83,1.66,905,2.632]],["body/injectables/MarketService.html",[3,0.051,4,0.051,5,0.039,9,0.084,10,1.311,11,0.874,12,3.944,16,0.013,18,0.425,20,2.666,26,2.985,27,3.105,28,0.434,29,1.976,31,0.663,36,0.551,41,0.051,42,0.136,44,1.723,45,2.563,46,3.714,59,0.003,60,0.005,61,0.003,79,1.311,80,0.9,83,1.212,84,1.039,86,1.488,88,3.045,89,2.318,90,3.272,95,4.321,96,1.239,97,0.45,98,0.988,100,2.561,102,4.937,103,2.307,104,4.367,107,1.448,110,3.771,112,1,113,2.394,118,0.484,165,1.052,199,0.5,244,2.612,343,0.302,344,3.632,374,0.633,375,1.718,378,3.061,380,5.146,389,1.162,398,4.48,399,1.603,444,4.696,445,5.766,452,2.394,461,0.73,462,0.73,471,4.243,510,3.939,511,2.394,530,3.939,532,4.87,559,1.603,598,3.061,602,4.36,604,3.624,607,4.853,632,1.077,637,1.162,639,3.372,649,1.168,660,1.448,670,3.372,678,3.632,710,3.624,731,0.77,737,0.393,738,1.143,739,0.984,741,0.804,766,1.411,768,0.421,779,0.762,863,2.65,864,2.65,865,2.203,866,3.389,867,3.389,868,2.65,869,3.389,870,2.816,871,2.65,874,2.65,875,3.606,878,2.65,879,3.372,883,4.697,884,6.326,887,3.389,888,1.603,891,2.65,895,1.603,898,1.603,899,3.632,904,3.556,905,1.922,907,1.448,908,1.603,909,1.603,910,1.603,914,1.603,915,1.603,933,2.394,934,3.389,935,3.061,969,1.603,970,3.04,971,1.838,972,3.04,973,3.04,974,1.838,975,1.838,976,1.838,977,1.838,978,1.838,979,1.838,980,5.001,981,1.838,982,1.838,983,1.838,984,1.838,985,3.04,986,1.603,987,1.838,988,1.838,989,3.04,990,1.838,991,1.838,992,1.838,993,3.04,994,1.838,995,1.838,996,1.838,997,2.65,998,1.838,999,2.65,1000,3.04,1001,3.04,1002,5.001,1003,1.838,1004,2.65,1005,3.04,1006,5.963,1007,3.04,1008,3.04,1009,3.04,1010,4.971,1011,1.838,1012,1.838,1013,5.387,1014,5.387,1015,1.838,1016,3.04,1017,3.04,1018,1.838,1019,1.838,1020,3.389,1021,5.001,1022,4.515,1023,1.838,1024,5.391,1025,6.371,1026,1.838,1027,1.838,1028,1.838,1029,3.886,1030,4.697,1031,5.387,1032,1.838,1033,6.371,1034,5.001,1035,4.515,1036,1.838,1037,1.838,1038,1.838,1039,1.838,1040,1.838,1041,1.838,1042,5.555,1043,5.001,1044,4.515,1045,1.838,1046,1.838,1047,1.838,1048,1.838,1049,1.838,1050,1.838,1051,1.838,1052,5.387,1053,5.387,1054,1.838,1055,3.04,1056,1.838,1057,3.389,1058,1.838,1059,1.838,1060,3.886,1061,3.886,1062,1.603,1063,1.838,1064,1.838,1065,5.387,1066,5.702,1067,1.838,1068,3.389,1069,1.838,1070,1.838,1071,1.838]],["title/classes/Membership.html",[42,0.309,754,0.953]],["body/classes/Membership.html",[3,0.112,4,0.112,5,0.085,8,1.058,9,0.185,11,0.979,16,0.013,18,0.41,28,0.462,41,0.225,42,0.6,51,0.957,59,0.006,60,0.009,61,0.006,112,0.677,118,0.536,169,0.864,199,1.074,251,1.355,258,0.78,285,0.78,343,0.55,436,0.864,461,1.02,462,1.02,491,0.78,498,1.267,509,1.449,540,0.989,599,0.864,605,0.459,629,0.957,630,1.608,632,0.807,649,1.552,695,1.31,729,1.675,730,1.925,731,1.859,734,1.893,737,1.452,738,1.401,739,1.401,740,1.652,741,0.835,742,0.894,743,1.094,744,0.894,745,1.094,746,1.094,747,1.094,748,1.094,749,0.989,750,0.989,751,0.989,752,0.989,753,0.989,754,1.267,755,1.502,756,1.094,757,0.894,758,1.094,759,1.184,760,1.023,761,1.023,762,1.355,763,1.355,764,1.355,765,1.355,766,1.058,767,1.094,1072,4.04,1073,4.04,1074,4.04]],["title/classes/Membership-1.html",[42,0.259,754,0.799,768,0.799]],["body/classes/Membership-1.html",[3,0.08,4,0.08,5,0.06,8,0.753,9,0.238,11,0.962,15,1.154,16,0.013,18,0.339,28,0.377,31,0.43,41,0.211,42,0.562,51,0.681,59,0.004,60,0.007,61,0.004,97,0.704,103,0.834,112,0.482,118,0.502,165,2.294,169,1.652,199,1.013,251,1.061,258,0.555,285,0.555,343,0.43,374,2.856,436,0.616,461,0.843,462,0.843,491,0.555,498,1.193,509,1.135,540,0.704,599,0.616,605,0.327,615,1.733,620,2.803,623,2.799,624,1.065,625,2.611,626,1.065,629,0.681,630,1.452,632,0.575,633,0.991,635,0.991,695,1.026,730,1.685,731,1.656,734,1.775,737,0.927,738,0.728,739,0.728,740,1.135,741,0.595,742,0.959,743,1.174,744,0.637,745,0.779,746,0.779,747,0.779,748,0.779,749,0.704,750,0.704,751,0.704,752,0.704,753,0.704,754,0.992,755,1.284,756,0.779,757,0.637,758,0.779,759,0.927,760,0.728,761,0.728,762,1.061,763,1.061,764,1.061,765,1.276,766,0.753,767,0.779,768,1.193,769,1.241,770,2.74,772,2.248,776,2.161,777,1.193,778,1.241,779,1.193,780,1.241,781,1.193,782,1.292,783,1.292,784,1.241,785,1.292,786,1.292,787,2.796,788,1.193,789,1.728,1075,2.877,1076,2.877,1077,2.877]],["title/classes/Notifications.html",[42,0.309,757,0.921]],["body/classes/Notifications.html",[3,0.112,4,0.112,5,0.084,8,1.054,9,0.184,11,0.979,16,0.013,18,0.409,28,0.477,41,0.225,42,0.6,51,1.491,59,0.006,60,0.009,61,0.006,112,0.675,118,0.535,169,0.861,199,1.073,251,1.351,258,0.777,285,0.777,343,0.548,436,0.861,461,1.018,462,1.018,491,0.777,498,1.263,509,1.445,540,0.985,599,0.861,605,0.457,629,0.953,630,1.519,632,0.804,649,1.546,695,1.306,729,1.668,730,1.705,731,1.716,734,1.926,737,1.569,738,1.397,739,1.397,740,1.649,741,0.832,742,0.891,743,1.09,744,0.891,745,1.09,746,1.09,747,1.09,748,1.09,749,0.985,750,0.985,751,0.985,752,0.985,753,0.985,754,0.921,755,1.221,756,1.09,757,1.221,758,1.705,759,1.181,760,1.019,761,1.019,762,1.351,763,1.351,764,1.351,765,1.351,766,1.054,767,1.09,1078,4.024,1079,4.024,1080,4.024]],["title/classes/Notifications-1.html",[42,0.259,757,0.773,768,0.799]],["body/classes/Notifications-1.html",[3,0.08,4,0.08,5,0.06,8,0.751,9,0.238,11,0.962,15,1.152,16,0.013,18,0.338,28,0.404,31,0.43,41,0.211,42,0.562,51,1.232,59,0.004,60,0.007,61,0.004,97,0.702,103,0.831,112,0.481,118,0.502,165,2.294,169,1.675,199,1.013,251,1.059,258,0.554,285,0.554,343,0.43,374,2.855,436,0.614,461,0.841,462,0.841,491,0.554,498,1.191,509,1.132,540,0.702,599,0.614,605,0.326,615,1.73,620,2.803,623,2.798,624,1.062,625,2.61,626,1.062,629,0.679,630,1.33,632,0.573,633,0.988,635,0.988,695,1.024,730,1.409,731,1.467,734,1.827,737,1.24,738,0.726,739,0.726,740,1.132,741,0.593,742,0.957,743,1.171,744,0.635,745,0.777,746,0.777,747,0.777,748,0.777,749,0.702,750,0.702,751,0.702,752,0.702,753,0.702,754,0.657,755,0.957,756,0.777,757,0.957,758,1.409,759,0.925,760,0.726,761,0.726,762,1.059,763,1.059,764,1.059,765,1.274,766,0.751,767,0.777,768,1.191,769,1.237,772,2.244,776,2.157,777,1.189,778,1.237,779,1.189,780,1.237,781,1.189,782,1.289,783,1.289,784,1.237,785,1.289,786,1.289,787,2.792,788,1.189,789,1.725,1081,2.869,1082,2.869,1083,2.869]],["title/classes/Online.html",[42,0.309,759,0.89]],["body/classes/Online.html",[3,0.112,4,0.112,5,0.084,8,1.054,9,0.184,11,0.979,16,0.013,18,0.409,28,0.477,41,0.225,42,0.6,51,0.953,59,0.006,60,0.009,61,0.006,112,0.675,118,0.535,169,0.861,199,1.075,251,1.351,258,0.777,285,0.777,343,0.548,436,0.861,461,1.018,462,1.018,491,0.777,498,1.263,509,1.445,540,0.985,599,0.861,605,0.457,629,0.953,630,1.569,632,0.804,649,1.546,695,1.306,729,1.668,730,1.705,731,1.716,734,1.905,737,1.45,738,1.397,739,1.397,740,1.649,741,0.832,742,0.891,743,1.09,744,0.891,745,1.09,746,1.09,747,1.09,748,1.09,749,0.985,750,0.985,751,0.985,752,0.985,753,0.985,754,0.921,755,1.221,756,1.09,757,0.891,758,1.09,759,1.519,760,1.594,761,1.594,762,1.351,763,1.351,764,1.351,765,1.351,766,1.054,767,1.09,1084,4.024,1085,4.024,1086,4.024]],["title/classes/Online-1.html",[42,0.259,759,0.747,768,0.799]],["body/classes/Online-1.html",[3,0.08,4,0.08,5,0.06,8,0.751,9,0.238,11,0.962,15,1.152,16,0.013,18,0.338,28,0.404,31,0.43,41,0.211,42,0.562,51,0.679,59,0.004,60,0.007,61,0.004,97,0.702,103,0.831,112,0.481,118,0.502,165,2.294,169,1.651,199,1.018,251,1.059,258,0.554,285,0.554,343,0.43,374,2.855,436,0.614,461,0.841,462,0.841,491,0.554,498,1.191,509,1.132,540,0.702,599,0.614,605,0.326,615,1.73,620,2.803,623,2.798,624,1.062,625,2.635,626,1.062,629,0.679,630,1.398,632,0.573,633,0.988,635,0.988,695,1.024,730,1.409,731,1.467,734,1.794,737,0.925,738,0.726,739,0.726,740,1.132,741,0.593,742,0.957,743,1.171,744,0.635,745,0.777,746,0.777,747,0.777,748,0.777,749,0.702,750,0.702,751,0.702,752,0.702,753,0.702,754,0.657,755,0.957,756,0.777,757,0.635,758,0.777,759,1.33,760,1.318,761,1.318,762,1.059,763,1.059,764,1.059,765,1.274,766,0.751,767,0.777,768,1.191,769,1.237,770,1.814,772,2.244,776,2.157,777,1.189,778,1.237,779,1.189,780,1.237,781,1.189,782,1.289,783,1.289,784,1.237,785,1.289,786,1.289,787,2.792,788,1.189,789,1.725,1087,2.869,1088,2.869,1089,2.869]],["title/classes/Password.html",[42,0.309,436,0.89]],["body/classes/Password.html",[3,0.11,4,0.11,5,0.083,8,1.033,9,0.18,11,0.978,16,0.013,18,0.437,28,0.485,29,2.261,41,0.224,42,0.598,51,0.934,59,0.006,60,0.008,61,0.006,112,0.661,118,0.537,169,0.844,199,1.071,251,1.645,258,0.761,285,0.761,343,0.541,436,1.164,461,1.007,462,1.007,491,0.761,498,1.246,509,1.425,540,0.966,599,0.844,605,0.448,629,0.934,630,1.559,632,0.788,649,1.515,695,1.591,729,1.635,730,1.909,731,1.845,734,1.899,737,1.437,738,1.378,739,1.378,740,1.632,741,0.816,742,0.873,743,1.068,744,0.873,745,1.068,746,1.068,747,1.068,748,1.068,749,0.966,750,0.966,751,0.966,752,0.966,753,0.966,754,0.903,755,1.204,756,1.068,757,0.873,758,1.068,759,1.164,760,0.999,761,0.999,762,1.332,763,1.332,764,1.332,765,1.332,766,1.033,767,1.068,1090,3.944,1091,3.944,1092,3.944,1093,3.944]],["title/classes/Password-1.html",[42,0.259,436,0.747,768,0.799]],["body/classes/Password-1.html",[3,0.078,4,0.078,5,0.059,8,0.738,9,0.235,11,0.962,15,1.271,16,0.013,18,0.373,28,0.422,29,2.013,31,0.424,41,0.21,42,0.56,51,0.667,59,0.004,60,0.007,61,0.004,97,0.69,103,0.816,112,0.472,118,0.507,165,2.296,169,1.631,199,1.01,251,1.406,258,0.544,285,0.544,343,0.424,374,2.846,436,0.913,461,0.832,462,0.832,491,0.544,498,1.178,509,1.117,540,0.69,599,0.603,605,0.32,615,1.909,620,2.8,623,2.795,624,1.043,625,2.6,626,1.043,629,0.667,630,1.388,632,0.563,633,0.97,635,0.97,695,1.359,730,1.67,731,1.643,734,1.787,737,0.913,738,0.713,739,0.713,740,1.117,741,0.583,742,0.944,743,1.155,744,0.624,745,0.763,746,0.763,747,0.763,748,0.763,749,0.69,750,0.69,751,0.69,752,0.69,753,0.69,754,0.645,755,0.944,756,0.763,757,0.624,758,0.763,759,0.913,760,0.713,761,0.713,762,1.044,763,1.044,764,1.044,765,1.26,766,0.738,767,0.763,768,1.178,769,1.215,770,1.782,772,2.476,776,2.134,777,1.168,778,1.215,779,1.168,780,1.215,781,1.168,782,1.265,783,1.265,784,1.215,785,1.265,786,1.265,787,2.77,788,1.168,789,1.701,1094,2.817,1095,2.817,1096,2.817,1097,2.817]],["title/classes/Rank.html",[42,0.309,112,0.698]],["body/classes/Rank.html",[3,0.112,4,0.112,5,0.084,8,1.649,9,0.184,11,0.979,16,0.013,18,0.409,28,0.477,41,0.225,42,0.6,51,0.953,59,0.006,60,0.009,61,0.006,112,0.925,118,0.535,169,0.861,199,1.073,251,1.351,258,0.777,285,0.777,343,0.548,436,0.861,461,1.018,462,1.018,491,0.777,498,1.263,509,1.445,540,0.985,599,0.861,605,0.457,629,0.953,630,1.519,632,0.804,649,1.546,695,1.306,729,1.668,730,1.705,731,1.716,734,1.926,737,1.45,738,1.397,739,1.397,740,1.859,741,0.832,742,0.891,743,1.09,744,0.891,745,1.09,746,1.09,747,1.09,748,1.09,749,0.985,750,0.985,751,0.985,752,0.985,753,0.985,754,0.921,755,1.221,756,1.705,757,0.891,758,1.09,759,1.181,760,1.019,761,1.019,762,1.351,763,1.351,764,1.351,765,1.351,766,1.054,767,1.09,1098,4.024,1099,4.024,1100,4.024]],["title/classes/Rank-1.html",[42,0.259,112,0.585,768,0.799]],["body/classes/Rank-1.html",[3,0.08,4,0.08,5,0.06,8,1.363,9,0.238,11,0.962,15,1.152,16,0.013,18,0.338,28,0.404,31,0.43,41,0.211,42,0.562,51,0.679,59,0.004,60,0.007,61,0.004,97,0.702,103,0.831,112,0.725,118,0.502,165,2.294,169,1.675,199,1.013,251,1.059,258,0.554,285,0.554,343,0.43,374,2.855,436,0.614,461,0.841,462,0.841,491,0.554,498,1.191,509,1.132,540,0.702,599,0.614,605,0.326,615,1.73,620,2.803,623,2.798,624,1.062,625,2.61,626,1.062,629,0.679,630,1.33,632,0.573,633,0.988,635,0.988,695,1.024,730,1.409,731,1.467,734,1.827,737,0.925,738,0.726,739,0.726,740,1.517,741,0.593,742,0.957,743,1.171,744,0.635,745,0.777,746,0.777,747,0.777,748,0.777,749,0.702,750,0.702,751,0.702,752,0.702,753,0.702,754,0.657,755,0.957,756,1.409,757,0.635,758,0.777,759,0.925,760,0.726,761,0.726,762,1.059,763,1.059,764,1.059,765,1.274,766,0.751,767,0.777,768,1.191,769,1.237,772,2.244,776,2.157,777,1.189,778,1.237,779,1.189,780,1.237,781,1.189,782,1.289,783,1.289,784,1.237,785,1.289,786,1.289,787,2.792,788,1.189,789,1.725,1101,2.869,1102,2.869,1103,2.869]],["title/guards/RankGuard.html",[912,3.015,1104,3.277]],["body/guards/RankGuard.html",[3,0.15,4,0.15,5,0.113,9,0.247,10,2.881,16,0.013,18,0.434,20,2.326,26,3.13,27,2.77,28,0.434,29,2.073,31,0.664,36,1.617,41,0.15,42,0.4,43,3.637,44,1.858,45,2.77,59,0.008,60,0.01,61,0.008,83,2.665,86,2.639,112,0.904,118,0.434,155,4.248,165,1.461,244,2.566,401,4.526,434,4.703,459,5.262,734,1.582,791,4.703,912,4.841,1105,5.394,1106,4.703,1107,7.586,1108,5.394,1109,7.945,1110,5.394,1111,6.681,1112,7.586,1113,5.394,1114,6.681,1115,5.394,1116,5.394,1117,5.394,1118,6.681,1119,5.394,1120,5.394,1121,5.394]],["title/classes/ReactionAddMarketDto.html",[42,0.309,879,2.806]],["body/classes/ReactionAddMarketDto.html",[3,0.155,4,0.155,5,0.117,9,0.254,11,0.959,16,0.013,18,0.511,28,0.532,31,0.677,41,0.155,42,0.413,59,0.009,60,0.011,61,0.009,97,1.363,118,0.52,199,0.986,244,2.827,246,2.06,272,3.32,343,0.677,461,1.19,462,1.19,605,0.632,607,4.391,611,3.954,879,4.592,1122,4.852,1123,5.565,1124,5.565,1125,5.565,1126,5.565,1127,5.565]],["title/classes/ReactionRemoveMarketDto.html",[42,0.309,899,2.806]],["body/classes/ReactionRemoveMarketDto.html",[3,0.173,4,0.173,5,0.13,9,0.284,16,0.013,18,0.473,28,0.473,41,0.173,42,0.461,59,0.01,60,0.011,61,0.01,118,0.517,244,2.964,343,0.723,605,0.706,607,4.603,899,4.907,1128,5.419,1129,6.215,1130,6.215]],["title/classes/Reactions.html",[42,0.309,741,0.861]],["body/classes/Reactions.html",[3,0.113,4,0.113,5,0.085,8,1.067,9,0.186,11,0.978,16,0.013,18,0.362,28,0.49,41,0.225,42,0.601,51,0.964,59,0.006,60,0.009,61,0.006,112,0.683,118,0.538,169,0.871,199,1.077,251,1.362,258,0.786,285,0.786,343,0.553,436,0.871,461,1.025,462,1.025,491,0.786,498,1.274,509,1.457,540,0.997,599,0.871,605,0.462,629,0.964,630,1.525,632,1.266,649,1.565,695,1.317,729,1.688,730,1.716,731,1.724,734,1.895,737,1.457,738,1.409,739,1.409,740,1.659,741,1.151,742,0.902,743,1.103,744,0.902,745,1.103,746,1.103,747,1.103,748,1.103,749,0.997,750,0.997,751,0.997,752,0.997,753,0.997,754,0.932,755,1.231,756,1.103,757,0.902,758,1.103,759,1.19,760,1.031,761,1.031,762,1.362,763,1.362,764,1.362,765,1.362,766,1.067,767,1.103,1131,4.073,1132,4.073]],["title/classes/Reactions-1.html",[42,0.259,741,0.722,768,0.799]],["body/classes/Reactions-1.html",[3,0.082,4,0.082,5,0.062,8,0.772,9,0.242,11,0.96,15,0.653,16,0.013,18,0.192,28,0.409,31,0.438,41,0.212,42,0.565,51,0.698,59,0.005,60,0.007,61,0.005,97,0.722,103,0.854,112,0.494,118,0.504,165,2.294,169,1.645,199,1.022,251,1.081,258,0.569,285,0.569,343,0.438,374,2.847,436,0.631,461,0.855,462,0.855,491,0.569,498,1.211,509,1.156,540,0.722,599,0.631,605,0.335,615,0.98,620,2.807,623,2.803,624,1.634,625,2.649,626,1.634,629,0.698,630,1.346,632,0.589,633,1.016,635,1.016,695,1.045,730,1.433,731,1.487,734,1.784,737,0.944,738,0.747,739,0.747,740,1.156,741,0.913,742,0.977,743,1.195,744,0.653,745,0.798,746,0.798,747,0.798,748,0.798,749,0.722,750,0.722,751,0.722,752,0.722,753,0.722,754,0.675,755,0.977,756,0.798,757,0.653,758,0.798,759,0.944,760,0.747,761,0.747,762,1.081,763,1.081,764,1.081,765,1.295,766,0.772,767,0.798,768,1.345,769,1.271,772,2.281,776,2.193,777,1.222,778,1.271,779,1.222,780,1.271,781,1.222,782,1.324,783,1.324,784,1.271,785,1.324,786,1.324,787,2.825,788,1.222,789,1.76,1133,2.948]],["title/classes/ReactionsDto.html",[42,0.309,1134,2.806]],["body/classes/ReactionsDto.html",[3,0.159,4,0.159,5,0.12,9,0.262,15,1.651,16,0.013,18,0.485,28,0.524,31,0.57,41,0.159,42,0.514,44,2.855,59,0.009,60,0.011,61,0.009,118,0.524,343,0.689,605,0.651,1134,4.678,1135,5.002,1136,5.874,1137,5.874,1138,5.404,1139,5.736,1140,5.736,1141,5.736,1142,4.901,1143,4.901,1144,3.422]],["title/classes/ReactionsMarket.html",[42,0.309,638,2.482]],["body/classes/ReactionsMarket.html",[3,0.127,4,0.127,5,0.095,9,0.208,11,0.954,15,1.577,16,0.013,18,0.463,28,0.504,31,0.596,41,0.198,42,0.528,59,0.007,60,0.009,61,0.007,97,1.115,118,0.517,165,2.254,199,0.996,244,2.736,246,1.685,343,0.596,461,1.197,462,1.197,605,0.517,611,4.274,613,2.716,614,3.07,615,2.369,618,4.026,620,2.737,621,3.07,622,2.716,623,2.724,624,1.685,625,1.568,626,1.685,627,3.299,628,3.299,629,1.078,630,0.974,631,2.716,632,0.91,633,1.568,634,2.879,635,1.568,636,3.299,637,2.879,638,3.576,1145,4.553,1146,4.553,1147,4.553,1148,4.553]],["title/classes/Security.html",[42,0.309,258,0.803]],["body/classes/Security.html",[3,0.107,4,0.107,5,0.08,8,1.005,9,0.175,11,0.979,16,0.013,18,0.482,28,0.505,41,0.223,42,0.596,51,0.908,59,0.006,60,0.008,61,0.006,112,0.643,118,0.532,169,0.821,199,1.08,251,1.307,258,1.031,285,0.741,343,0.53,436,0.821,461,0.993,462,0.993,491,0.741,498,1.222,509,1.739,540,1.504,599,0.821,605,0.436,629,0.908,630,1.493,632,0.767,649,1.474,695,1.264,729,1.591,730,1.663,731,1.681,734,1.891,737,1.421,738,1.352,739,1.352,740,1.608,741,0.793,742,0.849,743,1.039,744,0.849,745,1.039,746,1.039,747,1.039,748,1.039,749,1.504,750,1.504,751,1.504,752,1.504,753,1.504,754,0.878,755,1.182,756,1.039,757,0.849,758,1.039,759,1.142,760,0.972,761,0.972,762,1.307,763,1.307,764,1.307,765,1.307,766,1.005,767,1.039,1149,3.837,1150,3.837,1151,3.837,1152,3.837,1153,3.837,1154,3.837,1155,3.837]],["title/classes/Security-1.html",[42,0.259,258,0.674,768,0.799]],["body/classes/Security-1.html",[3,0.075,4,0.075,5,0.057,8,0.71,9,0.23,11,0.963,15,1.472,16,0.013,18,0.432,28,0.457,31,0.412,41,0.208,42,0.555,51,0.642,59,0.004,60,0.006,61,0.004,97,0.664,103,0.786,112,0.455,118,0.496,165,2.293,169,1.634,199,1.032,251,1.015,258,0.8,285,0.524,343,0.412,374,2.859,436,0.58,461,0.813,462,0.813,491,0.524,498,1.151,509,1.474,540,1.231,599,0.58,605,0.308,615,2.212,620,2.793,623,2.788,624,1.004,625,2.705,626,1.004,629,0.642,630,1.297,632,0.542,633,0.934,635,0.934,695,0.981,730,1.362,731,1.425,734,1.773,737,0.887,738,0.687,739,0.687,740,1.085,741,0.561,742,0.917,743,1.122,744,0.6,745,0.734,746,0.734,747,0.734,748,0.734,749,1.231,750,1.231,751,1.231,752,1.231,753,1.231,754,0.621,755,0.917,756,0.734,757,0.6,758,0.734,759,0.887,760,0.687,761,0.687,762,1.015,763,1.015,764,1.015,765,1.231,766,0.71,767,0.734,768,1.151,769,1.17,772,2.168,776,2.084,777,1.124,778,1.17,779,1.124,780,1.17,781,1.124,782,1.218,783,1.218,784,1.17,785,1.218,786,1.218,787,2.724,788,1.124,789,1.653,1156,2.712,1157,2.712,1158,2.712,1159,2.712,1160,2.712,1161,2.712,1162,2.712]],["title/classes/SecurityCode.html",[42,0.309,1163,3.015]],["body/classes/SecurityCode.html",[3,0.142,4,0.142,5,0.107,9,0.233,15,1.735,16,0.013,18,0.509,28,0.509,31,0.507,41,0.179,42,0.525,44,2.907,59,0.008,60,0.01,61,0.008,118,0.46,199,1.053,219,3.23,258,0.986,343,0.641,491,0.986,540,1.734,605,0.58,749,1.734,750,1.734,751,1.734,752,1.734,753,1.734,1142,4.083,1143,5.092,1144,3.046,1163,5.13,1164,4.022,1165,6.691,1166,5.107,1167,5.107,1168,5.107,1169,5.107,1170,5.107,1171,5.107,1172,5.107,1173,6.173,1174,5.63]],["title/classes/SecurityDto.html",[42,0.309,255,2.806]],["body/classes/SecurityDto.html",[3,0.145,4,0.145,5,0.109,9,0.238,15,1.744,16,0.013,18,0.512,28,0.512,31,0.518,41,0.145,42,0.485,44,2.912,59,0.008,60,0.01,61,0.008,118,0.425,199,1.056,255,4.411,343,0.65,491,1.38,605,0.592,749,1.75,750,1.75,751,1.75,752,1.75,753,1.75,1138,3.778,1142,4.137,1143,5.056,1144,3.11,1165,6.732,1173,6.205,1175,4.546,1176,5.214,1177,5.214,1178,5.214,1179,5.214,1180,5.214,1181,5.214]],["title/classes/SecurityUpdateDto.html",[42,0.309,219,2.632]],["body/classes/SecurityUpdateDto.html",[3,0.157,4,0.157,5,0.118,9,0.258,15,1.248,16,0.013,18,0.446,28,0.446,31,0.56,41,0.191,42,0.549,44,2.766,59,0.009,60,0.011,61,0.009,118,0.481,199,1.015,219,4.342,258,1.429,343,0.682,491,1.429,540,1.381,605,0.64,749,1.381,750,1.381,751,1.381,752,1.381,753,1.381,1138,4.086,1142,4.342,1143,5.189,1144,3.364,1163,5.364,1164,4.441,1173,6.325,1174,5.987,1182,5.639,1183,5.639]],["title/classes/Sessions.html",[42,0.309,599,0.89]],["body/classes/Sessions.html",[3,0.11,4,0.11,5,0.083,8,1.035,9,0.181,11,0.978,16,0.013,18,0.437,28,0.486,29,1.691,41,0.224,42,0.599,51,0.936,59,0.006,60,0.008,61,0.006,112,0.663,118,0.539,169,0.846,199,1.074,251,1.335,258,0.763,285,0.763,343,0.542,436,0.846,461,1.141,462,1.141,491,0.763,498,1.54,509,1.761,540,0.968,599,1.166,605,0.449,629,0.936,630,1.51,632,0.79,649,1.519,695,1.291,729,1.639,730,1.69,731,1.703,734,1.9,737,1.439,738,1.38,739,1.38,740,1.634,741,0.818,742,0.875,743,1.071,744,0.875,745,1.071,746,1.071,747,1.071,748,1.071,749,0.968,750,0.968,751,0.968,752,0.968,753,0.968,754,0.905,755,1.207,756,1.071,757,0.875,758,1.071,759,1.166,760,1.001,761,1.001,762,1.335,763,1.335,764,1.335,765,1.335,766,1.035,767,1.071,1184,3.954,1185,3.954,1186,3.954,1187,3.954]],["title/classes/Sessions-1.html",[42,0.259,599,0.747,768,0.799]],["body/classes/Sessions-1.html",[3,0.079,4,0.079,5,0.06,8,0.743,9,0.236,11,0.962,15,1.144,16,0.013,18,0.375,28,0.423,29,1.331,31,0.426,41,0.21,42,0.56,51,0.672,59,0.004,60,0.007,61,0.004,97,0.695,103,0.822,112,0.476,118,0.511,165,2.292,169,1.648,199,1.016,251,1.05,258,0.548,285,0.548,343,0.426,374,2.843,436,0.607,461,1,462,1,491,0.548,498,1.417,509,1.509,540,0.695,599,0.918,605,0.322,615,1.719,620,2.801,623,2.796,624,1.051,625,2.604,626,1.051,629,0.672,630,1.324,632,0.567,633,0.978,635,0.978,695,1.016,730,1.4,731,1.459,734,1.79,737,0.918,738,0.719,739,0.719,740,1.123,741,0.587,742,0.949,743,1.162,744,0.628,745,0.769,746,0.769,747,0.769,748,0.769,749,0.695,750,0.695,751,0.695,752,0.695,753,0.695,754,0.65,755,0.949,756,0.769,757,0.628,758,0.769,759,0.918,760,0.719,761,0.719,762,1.05,763,1.05,764,1.05,765,1.266,766,0.743,767,0.769,768,1.184,769,1.224,772,2.23,776,2.389,777,1.177,778,1.224,779,1.177,780,1.224,781,1.177,782,1.275,783,1.275,784,1.224,785,1.275,786,1.275,787,2.779,788,1.177,789,2.062,1188,2.839,1189,2.839,1190,2.839,1191,2.839]],["title/classes/SignInDto.html",[42,0.309,241,2.806]],["body/classes/SignInDto.html",[3,0.153,4,0.153,5,0.116,9,0.252,11,0.907,15,1.692,16,0.013,18,0.497,28,0.497,31,0.548,41,0.153,42,0.502,44,2.751,59,0.009,60,0.011,61,0.009,118,0.531,199,0.871,241,4.566,285,1.415,343,0.673,436,1.568,461,1.185,462,1.185,605,0.626,1142,4.636,1143,5.052,1144,3.289,1192,4.807,1193,5.513,1194,5.513,1195,5.513,1196,6.772,1197,5.513,1198,5.513,1199,6.772]],["title/classes/Stats.html",[42,0.309,744,0.921]],["body/classes/Stats.html",[3,0.109,4,0.109,5,0.082,8,1.029,9,0.18,11,0.979,16,0.013,18,0.458,28,0.494,41,0.224,42,0.598,51,0.93,59,0.006,60,0.008,61,0.006,112,0.659,118,0.534,169,0.84,199,1.081,251,1.329,258,0.758,285,0.758,343,0.539,436,0.84,461,1.005,462,1.005,491,0.758,498,1.242,509,1.421,540,0.962,599,0.84,605,0.446,629,1.472,630,1.506,632,0.785,649,1.509,695,1.285,729,1.628,730,1.684,731,1.698,734,1.884,737,1.435,738,1.374,739,1.374,740,1.628,741,0.812,742,0.869,743,1.064,744,1.201,745,1.684,746,1.684,747,1.684,748,1.684,749,0.962,750,0.962,751,0.962,752,0.962,753,0.962,754,0.899,755,1.201,756,1.064,757,0.869,758,1.064,759,1.161,760,0.995,761,0.995,762,1.329,763,1.329,764,1.329,765,1.329,766,1.029,767,1.064,1200,3.928,1201,3.928,1202,3.928,1203,3.928,1204,3.928]],["title/classes/Stats-1.html",[42,0.259,744,0.773,768,0.799]],["body/classes/Stats-1.html",[3,0.077,4,0.077,5,0.058,8,0.73,9,0.234,11,0.962,15,1.359,16,0.013,18,0.399,28,0.437,31,0.42,41,0.209,42,0.558,51,0.66,59,0.004,60,0.007,61,0.004,97,0.683,103,0.808,112,0.467,118,0.499,165,2.293,169,1.628,199,1.032,251,1.036,258,0.538,285,0.538,343,0.42,374,2.857,436,0.597,461,0.827,462,0.827,491,0.538,498,1.171,509,1.108,540,0.683,599,0.597,605,0.317,615,2.041,620,2.798,623,2.793,624,1.032,625,2.701,626,1.032,629,1.211,630,1.314,632,0.557,633,0.96,635,0.96,695,1.002,730,1.385,731,1.446,734,1.762,737,0.905,738,0.706,739,0.706,740,1.108,741,0.577,742,0.937,743,1.146,744,0.937,745,1.385,746,1.385,747,1.385,748,1.385,749,0.683,750,0.683,751,0.683,752,0.683,753,0.683,754,0.638,755,0.937,756,0.755,757,0.617,758,0.755,759,0.905,760,0.706,761,0.706,762,1.036,763,1.036,764,1.036,765,1.252,766,0.73,767,0.755,768,1.171,769,1.202,772,2.206,776,2.12,777,1.156,778,1.202,779,1.156,780,1.202,781,1.156,782,1.252,783,1.252,784,1.202,785,1.252,786,1.252,787,2.757,788,1.156,789,1.688,1205,2.788,1206,2.788,1207,2.788,1208,2.788,1209,2.788]],["title/classes/Suspension.html",[42,0.309,742,0.921]],["body/classes/Suspension.html",[3,0.113,4,0.113,5,0.085,8,1.067,9,0.186,11,0.978,16,0.013,18,0.362,28,0.463,41,0.225,42,0.601,51,0.964,59,0.006,60,0.009,61,0.006,112,0.683,118,0.538,169,0.871,199,1.074,251,1.362,258,0.786,285,0.786,343,0.553,436,0.871,461,1.025,462,1.025,491,0.786,498,1.274,509,1.457,540,0.997,599,0.871,605,0.462,629,0.964,630,1.525,632,0.814,649,1.565,695,1.317,729,1.688,730,1.716,731,1.864,734,1.908,737,1.457,738,1.409,739,1.409,740,1.659,741,0.842,742,1.231,743,1.716,744,0.902,745,1.103,746,1.103,747,1.103,748,1.103,749,0.997,750,0.997,751,0.997,752,0.997,753,0.997,754,0.932,755,1.231,756,1.103,757,0.902,758,1.103,759,1.19,760,1.031,761,1.031,762,1.362,763,1.362,764,1.362,765,1.362,766,1.067,767,1.103,1210,4.073,1211,4.073]],["title/classes/Suspension-1.html",[42,0.259,742,0.773,768,0.799]],["body/classes/Suspension-1.html",[3,0.08,4,0.08,5,0.06,8,0.754,9,0.238,11,0.961,15,0.96,16,0.013,18,0.282,28,0.377,31,0.431,41,0.211,42,0.562,51,0.682,59,0.004,60,0.007,61,0.004,97,0.705,103,0.834,112,0.483,118,0.506,165,2.293,169,1.652,199,1.013,251,1.062,258,0.556,285,0.556,343,0.431,374,2.851,436,0.616,461,0.843,462,0.843,491,0.556,498,1.194,509,1.136,540,0.705,599,0.616,605,0.327,615,1.442,620,2.803,623,2.799,624,1.066,625,2.612,626,1.066,629,0.682,630,1.332,632,0.575,633,1.494,635,1.494,695,1.027,730,1.413,731,1.657,734,1.795,737,0.928,738,0.729,739,0.729,740,1.136,741,0.596,742,1.285,743,1.686,744,0.637,745,0.78,746,0.78,747,0.78,748,0.78,749,0.705,750,0.705,751,0.705,752,0.705,753,0.705,754,0.659,755,0.96,756,0.78,757,0.637,758,0.78,759,0.928,760,0.729,761,0.729,762,1.062,763,1.062,764,1.062,765,1.277,766,0.754,767,0.78,768,1.194,769,1.242,772,2.249,776,2.162,777,1.194,778,1.242,779,1.798,780,1.87,781,1.798,782,1.948,783,1.948,784,1.87,785,1.948,786,1.948,787,2.797,788,1.194,789,1.73,1212,2.88,1213,2.88]],["title/classes/Transaction.html",[42,0.309,755,0.921]],["body/classes/Transaction.html",[3,0.105,4,0.105,5,0.079,8,0.991,9,0.173,11,0.979,16,0.013,18,0.49,28,0.518,29,1.64,41,0.223,42,0.595,51,0.896,59,0.006,60,0.008,61,0.006,112,0.634,118,0.537,169,0.809,199,1.076,251,1.295,258,0.73,285,0.73,343,0.525,436,0.809,461,0.985,462,0.985,491,0.73,498,1.511,509,1.385,540,0.926,599,0.809,605,0.43,629,0.896,630,1.486,632,0.756,649,1.453,695,1.252,729,1.568,730,1.651,731,1.671,734,1.872,737,1.539,738,1.671,739,1.671,740,1.818,741,0.782,742,0.837,743,1.025,744,0.837,745,1.025,746,1.025,747,1.025,748,1.025,749,0.926,750,0.926,751,0.926,752,0.926,753,0.926,754,0.866,755,1.349,756,1.025,757,0.837,758,1.025,759,1.131,760,0.958,761,0.958,762,1.295,763,1.295,764,1.295,765,1.492,766,1.596,767,1.651,1214,3.783,1215,3.783,1216,3.783,1217,3.783,1218,3.783,1219,3.783,1220,3.783,1221,3.783]],["title/classes/Transaction-1.html",[42,0.259,755,0.773,768,0.799]],["body/classes/Transaction-1.html",[3,0.075,4,0.075,5,0.057,8,0.709,9,0.23,11,0.964,15,1.472,16,0.013,18,0.446,28,0.481,29,1.284,31,0.411,41,0.208,42,0.555,51,0.642,59,0.004,60,0.006,61,0.004,97,0.663,103,0.785,112,0.454,118,0.507,165,2.291,169,1.634,199,1.024,251,1.014,258,0.523,285,0.523,343,0.411,374,2.825,436,0.58,461,0.813,462,0.813,491,0.523,498,1.463,509,1.084,540,0.663,599,0.58,605,0.308,615,2.125,620,2.793,623,2.788,624,1.003,625,2.579,626,1.003,629,0.642,630,1.297,632,0.541,633,0.933,635,0.933,695,0.98,730,1.361,731,1.425,734,1.751,737,1.204,738,1.272,739,1.272,740,1.473,741,0.56,742,0.916,743,1.121,744,0.6,745,0.734,746,0.734,747,0.734,748,0.734,749,0.663,750,0.663,751,0.663,752,0.663,753,0.663,754,0.62,755,1.112,756,0.734,757,0.6,758,0.734,759,0.886,760,0.686,761,0.686,762,1.014,763,1.014,764,1.014,765,1.378,766,1.316,767,1.361,768,1.15,769,1.168,770,1.713,772,2.167,776,2.332,777,1.123,778,1.168,779,1.123,780,1.168,781,1.123,782,1.217,783,1.217,784,1.168,785,1.217,786,1.217,787,2.723,788,1.123,789,2.004,1222,2.709,1223,2.362,1224,2.709,1225,2.709,1226,2.709,1227,2.709,1228,2.709,1229,2.709,1230,2.709]],["title/classes/TransactionBuyer.html",[42,0.309,765,1.019]],["body/classes/TransactionBuyer.html",[3,0.112,4,0.112,5,0.084,8,1.054,9,0.184,11,0.979,16,0.013,18,0.409,28,0.477,41,0.225,42,0.6,51,0.953,59,0.006,60,0.009,61,0.006,112,0.675,118,0.54,169,0.861,199,1.073,251,1.351,258,0.777,285,0.777,343,0.548,436,0.861,461,1.148,462,1.148,491,1.216,498,1.263,509,1.445,540,0.985,599,0.861,605,0.457,629,0.953,630,1.519,632,0.804,649,1.546,695,1.306,729,1.668,730,1.705,731,1.716,734,1.892,737,1.45,738,1.397,739,1.397,740,1.649,741,0.832,742,0.891,743,1.09,744,0.891,745,1.09,746,1.09,747,1.09,748,1.09,749,0.985,750,0.985,751,0.985,752,0.985,753,0.985,754,0.921,755,1.221,756,1.09,757,0.891,758,1.09,759,1.181,760,1.019,761,1.019,762,1.351,763,1.351,764,1.351,765,1.542,766,1.054,767,1.09,1231,4.024,1232,4.024,1233,4.024]],["title/classes/TransactionBuyer-1.html",[42,0.259,765,0.855,768,0.799]],["body/classes/TransactionBuyer-1.html",[3,0.08,4,0.08,5,0.061,8,0.756,9,0.239,11,0.962,15,1.156,16,0.013,18,0.339,28,0.405,31,0.431,41,0.211,42,0.562,51,0.683,59,0.004,60,0.007,61,0.004,97,0.706,103,0.836,112,0.484,118,0.512,165,2.294,169,1.639,199,1.013,251,1.063,258,0.557,285,0.557,343,0.431,374,2.842,436,0.617,461,1.008,462,1.008,491,1.008,498,1.196,509,1.137,540,0.706,599,0.617,605,0.328,615,1.736,620,2.804,623,2.799,624,1.068,625,2.613,626,1.068,629,0.683,630,1.333,632,0.577,633,0.994,635,0.994,695,1.028,730,1.414,731,1.471,734,1.776,737,0.929,738,0.731,739,0.731,740,1.137,741,0.597,742,0.961,743,1.176,744,0.639,745,0.781,746,0.781,747,0.781,748,0.781,749,0.706,750,0.706,751,0.706,752,0.706,753,0.706,754,0.661,755,0.961,756,0.781,757,0.639,758,0.781,759,0.929,760,0.731,761,0.731,762,1.063,763,1.063,764,1.063,765,1.423,766,0.756,767,0.781,768,1.196,769,1.244,772,2.252,776,2.165,777,1.196,778,1.244,779,1.196,780,1.244,781,1.196,782,1.296,783,1.296,784,1.244,785,1.296,786,1.296,787,2.799,788,1.196,789,1.732,1234,2.885,1235,2.885,1236,2.885]],["title/controllers/TransactionController.html",[0,1.869,1237,3.015]],["body/controllers/TransactionController.html",[0,2.876,2,2.876,3,0.178,4,0.178,5,0.134,7,4.317,16,0.013,31,0.636,36,1.919,41,0.178,42,0.475,59,0.01,60,0.011,61,0.01,755,1.417,1237,5.364,1238,5.582,1239,6.402]],["title/modules/TransactionModule.html",[62,1.725,129,2.806]],["body/modules/TransactionModule.html",[2,3.175,3,0.164,4,0.164,5,0.124,16,0.013,31,0.751,36,1.774,41,0.164,42,0.439,59,0.009,60,0.011,61,0.009,62,3.134,64,3.031,65,3.031,66,3.345,67,3.345,68,3.031,69,4.272,70,3.345,73,3.995,74,3.345,75,3.18,129,5.477,1237,5.477,1240,5.161,1241,5.161,1242,5.477,1243,5.919,1244,5.919,1245,5.919]],["title/injectables/TransactionService.html",[83,1.66,1242,2.806]],["body/injectables/TransactionService.html",[3,0.179,4,0.179,5,0.135,16,0.013,31,0.639,36,1.928,41,0.179,42,0.477,59,0.01,60,0.012,61,0.01,83,2.96,84,3.634,1242,5.004,1246,5.607]],["title/classes/UpdateUserDto.html",[42,0.309,1247,2.806]],["body/classes/UpdateUserDto.html",[3,0.155,4,0.155,5,0.117,9,0.255,15,1.63,16,0.013,18,0.479,28,0.479,31,0.554,41,0.155,42,0.506,44,2.842,59,0.009,60,0.011,61,0.009,118,0.521,199,0.877,343,0.677,375,4.163,491,1.422,605,0.633,630,1.459,695,1.744,734,1.614,1138,4.941,1142,4.658,1143,4.978,1144,3.326,1247,4.598,1248,6.692,1249,4.861,1250,5.575,1251,5.575,1252,5.575]],["title/controllers/UserController.html",[0,1.869,1253,3.015]],["body/controllers/UserController.html",[0,1.23,2,1.23,3,0.076,4,0.076,5,0.14,7,1.847,9,0.125,10,1.801,11,0.729,12,4.005,15,1.477,16,0.013,18,0.434,20,2.879,23,3.666,26,3.007,27,2.852,28,0.417,29,1.991,31,0.753,32,1.985,33,3.666,34,5.589,35,1.985,36,0.821,41,0.076,42,0.203,44,1.743,45,2.852,46,3.448,49,4.414,51,1.442,59,0.004,60,0.006,61,0.004,79,1.181,86,1.341,89,3.018,98,1.472,100,2.591,104,3.375,110,1.732,111,1.847,112,0.459,118,0.547,136,2.591,137,1.847,138,1.732,139,1.847,148,3.641,149,4.412,222,6.226,230,3.025,244,1.052,266,2.389,267,2.389,268,2.157,271,5.055,276,2.157,277,1.732,278,3.815,279,2.157,294,2.157,295,4.797,312,2.157,314,4.457,315,3.985,356,6.075,357,6.465,389,1.732,390,2.157,401,2.491,439,4.934,440,4.934,491,1.328,762,1.022,763,1.022,764,1.022,798,3.018,865,3.666,870,3.666,892,2.389,902,2.389,904,2.157,911,2.389,919,3.641,1134,4.501,1136,3.985,1137,3.985,1247,4.501,1253,3.025,1254,2.389,1255,7.652,1256,5.059,1257,5.059,1258,5.659,1259,4.412,1260,2.739,1261,4.175,1262,2.739,1263,2.739,1264,2.739,1265,2.739,1266,2.739,1267,2.739,1268,2.739,1269,2.739,1270,2.739,1271,4.175,1272,2.739,1273,2.739,1274,2.739,1275,2.739,1276,2.389,1277,4.175,1278,2.739,1279,5.059,1280,5.059,1281,2.739,1282,2.389,1283,2.389,1284,2.389,1285,2.389,1286,2.389,1287,2.739,1288,5.059,1289,2.389,1290,2.389,1291,2.739,1292,2.739,1293,2.739,1294,2.739,1295,2.739,1296,2.739,1297,2.739,1298,2.739,1299,4.175,1300,4.175,1301,2.739,1302,3.641,1303,4.175,1304,4.175,1305,4.175,1306,4.175,1307,4.175,1308,4.175,1309,4.175,1310,4.175,1311,4.175,1312,4.175,1313,4.175,1314,4.175,1315,3.641,1316,4.175,1317,5.659,1318,2.739,1319,2.739,1320,2.739,1321,2.739,1322,2.739,1323,2.739,1324,2.739,1325,2.739,1326,2.739,1327,2.739,1328,2.739,1329,2.739,1330,2.739,1331,2.739,1332,2.739]],["title/classes/UserDto.html",[42,0.309,1333,3.277]],["body/classes/UserDto.html",[3,0.109,4,0.109,5,0.082,9,0.179,11,0.979,16,0.013,18,0.541,27,2.574,28,0.541,29,1.68,31,0.389,41,0.109,42,0.29,59,0.006,60,0.008,61,0.006,109,3.509,110,3.927,111,4.187,112,1.219,118,0.534,199,0.697,258,1.404,285,1.404,343,0.538,436,1.556,461,1.004,462,1.004,498,1.422,599,1.556,605,0.445,737,1.556,741,1.504,742,1.61,744,1.61,754,1.422,755,1.374,757,1.61,759,1.556,762,0.959,763,0.959,764,0.959,1333,4.266,1334,3.416,1335,4.89,1336,4.499,1337,4.89,1338,4.89,1339,4.89,1340,3.918,1341,3.918,1342,3.918,1343,3.918,1344,3.918,1345,3.918,1346,3.918,1347,3.918,1348,3.918,1349,3.918,1350,3.918,1351,3.918,1352,3.918,1353,3.918,1354,3.918,1355,3.918,1356,3.918,1357,3.918,1358,3.918,1359,3.918,1360,3.918,1361,3.918,1362,3.918,1363,3.918]],["title/classes/UserModel.html",[42,0.309,246,1.54]],["body/classes/UserModel.html",[3,0.076,4,0.076,5,0.058,9,0.232,11,0.965,15,1.759,16,0.013,18,0.519,27,2.101,28,0.519,29,1.298,31,0.503,41,0.076,42,0.204,59,0.004,60,0.006,61,0.004,97,0.673,103,2.044,109,3.202,110,3.205,111,3.417,112,1.12,118,0.508,165,2.17,169,1.674,180,1.99,199,0.538,204,3.295,246,1.549,258,1.29,285,1.33,343,0.416,374,2.637,392,3.032,436,1.429,461,0.916,462,0.916,498,1.819,579,3.648,599,1.473,605,0.312,615,2.028,618,1.552,620,2.616,623,2.028,625,1.441,633,2.372,635,2.372,655,3.295,656,3.295,660,4.463,663,3.295,664,2.163,741,1.424,742,1.479,744,1.479,754,1.297,755,1.35,757,1.479,759,1.429,762,0.673,763,0.673,764,0.673,768,1.297,770,4.462,772,3.104,776,2.101,777,1.139,778,1.804,788,1.139,789,1.669,933,3.295,938,4.419,941,3.648,942,3.648,952,4.941,962,4.419,1223,6.547,1335,4.803,1336,3.672,1337,3.992,1338,3.992,1339,3.992,1364,2.395,1365,2.747,1366,4.184,1367,2.747,1368,2.747,1369,2.747,1370,4.184,1371,2.747,1372,2.747,1373,2.747,1374,4.184,1375,3.648,1376,5.667,1377,4.184,1378,4.184,1379,4.184,1380,4.184,1381,2.747,1382,2.747,1383,2.747,1384,4.184,1385,2.747,1386,2.747,1387,2.747,1388,2.747,1389,2.747,1390,2.747,1391,2.747,1392,2.747,1393,2.747,1394,2.747,1395,2.747,1396,4.184,1397,2.747,1398,2.747]],["title/modules/UserModule.html",[62,1.725,130,2.806]],["body/modules/UserModule.html",[2,2.991,3,0.149,4,0.149,5,0.112,16,0.013,31,0.799,36,1.608,41,0.149,42,0.398,59,0.008,60,0.01,61,0.008,62,3.002,64,2.748,65,2.748,66,3.032,67,3.032,68,2.748,69,4.092,70,4.092,73,3.763,74,3.032,75,2.882,78,3.617,79,2.313,80,2.625,81,4.49,126,4.733,127,4.733,130,5.594,135,4.225,151,4.225,246,1.986,331,4.677,798,4.972,1253,5.247,1284,4.677,1399,4.677,1400,5.364,1401,4.677,1402,4.677,1403,5.364,1404,5.364,1405,4.677]],["title/injectables/UserService.html",[83,1.66,798,2.482]],["body/injectables/UserService.html",[3,0.055,4,0.055,5,0.041,9,0.09,10,1.384,11,0.875,12,3.927,16,0.013,18,0.424,20,2.64,26,2.868,27,2.766,28,0.501,29,1.899,31,0.608,36,0.589,41,0.055,42,0.146,44,1.785,45,2.305,46,3.779,53,1.713,59,0.003,60,0.005,61,0.003,79,1.384,80,0.961,83,1.28,84,1.11,86,1.571,88,3.17,89,2.428,90,3.406,95,4.722,96,1.324,97,0.481,98,1.055,100,2.848,102,5.043,103,2.222,104,2.428,107,1.547,109,2.3,110,3.711,111,3.75,112,0.682,113,1.547,118,0.525,165,0.532,176,4.518,199,0.253,230,5.226,244,3.198,246,2.059,258,0.379,343,0.319,344,3.75,348,1.547,355,6.133,356,4.822,374,0.677,375,2.929,378,4.081,379,3.702,380,2.528,381,4.099,389,1.242,397,1.547,398,3.755,401,2.428,430,2.528,431,1.324,432,1.423,444,4.822,445,5.845,461,0.318,462,0.318,465,1.713,471,4.622,491,1.288,503,1.713,510,1.547,511,1.547,519,2.799,527,3.206,530,3.702,531,1.713,532,5.255,533,5.338,551,5.117,591,2.799,596,5.338,598,1.547,599,0.687,618,1.11,625,0.677,630,0.42,632,0.813,690,2.799,695,1.113,710,4.252,734,0.465,737,0.687,741,1.072,742,0.435,744,1.04,757,0.435,759,1.31,760,0.497,761,0.497,768,0.45,779,2.433,780,0.847,784,2.027,798,1.915,842,1.713,851,3.549,865,2.326,870,2.326,986,1.713,999,3.549,1004,3.549,1020,3.549,1042,5.117,1057,1.713,1062,1.713,1068,1.713,1134,3.75,1136,5.362,1137,5.362,1247,3.957,1259,3.549,1276,1.713,1285,1.713,1286,1.713,1290,1.713,1315,3.549,1335,3.206,1336,2.326,1337,3.206,1338,2.528,1339,2.528,1375,3.549,1405,1.713,1406,1.713,1407,3.21,1408,4.071,1409,4.701,1410,4.071,1411,3.21,1412,3.21,1413,1.964,1414,3.21,1415,1.964,1416,1.964,1417,1.964,1418,1.964,1419,3.21,1420,1.964,1421,1.964,1422,1.964,1423,1.964,1424,7.479,1425,5.561,1426,1.964,1427,1.964,1428,3.21,1429,3.21,1430,1.964,1431,1.964,1432,3.21,1433,1.964,1434,1.964,1435,1.964,1436,1.964,1437,1.964,1438,1.964,1439,1.964,1440,1.964,1441,1.964,1442,7.034,1443,1.964,1444,4.071,1445,3.21,1446,3.21,1447,1.964,1448,1.964,1449,1.964,1450,4.071,1451,1.964,1452,3.21,1453,1.964,1454,1.964,1455,3.21,1456,1.964,1457,3.21,1458,1.964,1459,1.964,1460,1.964,1461,1.964,1462,1.964,1463,1.964,1464,1.964,1465,1.964]],["title/coverage.html",[1466,4.922]],["body/coverage.html",[0,3.133,1,2.494,5,0.072,6,3.001,16,0.013,22,2.177,28,0.224,37,2.177,42,0.631,59,0.005,60,0.008,61,0.005,68,1.763,83,2.866,85,3.001,103,0.997,112,0.97,114,2.494,115,3.001,119,2.177,136,1.763,152,2.494,202,3.001,206,2.494,207,3.001,219,2.177,241,2.321,246,1.274,255,2.321,258,0.955,269,2.177,278,2.321,285,0.955,324,2.321,342,3.001,395,2.321,436,1.058,599,1.058,604,2.494,606,3.001,613,2.053,614,4.265,622,2.053,625,2.956,631,2.053,638,2.053,639,2.321,640,3.001,643,2.494,644,3.001,648,3.001,670,2.321,671,3.001,678,2.321,679,3.001,687,3.001,729,3.275,737,0.737,741,1.023,742,1.094,744,1.094,754,1.132,755,1.094,757,1.094,759,1.058,765,1.211,769,3.382,790,3.001,798,2.053,822,2.494,824,3.001,826,3.001,861,2.494,862,3.001,875,2.177,879,2.321,899,2.321,905,2.177,912,2.494,932,3.001,969,3.001,1104,2.711,1106,3.001,1122,3.001,1128,3.001,1134,2.321,1135,3.001,1163,2.494,1164,3.895,1175,3.001,1192,3.001,1237,2.494,1238,3.001,1242,2.321,1246,3.001,1247,2.321,1248,3.001,1249,3.001,1253,2.494,1254,3.001,1302,4.312,1333,2.711,1334,3.001,1364,3.001,1406,3.001,1466,3.001,1467,3.442,1468,3.442,1469,3.442,1470,5.787,1471,3.442,1472,4.945,1473,4.945,1474,7.692,1475,7.692,1476,7.185,1477,3.001,1478,6.7,1479,3.001,1480,3.001,1481,3.442,1482,7.954,1483,6.326,1484,3.442,1485,5.787,1486,3.442,1487,3.442,1488,3.442,1489,3.442,1490,3.442]],["title/dependencies.html",[65,2.559,1491,3.491]],["body/dependencies.html",[16,0.013,36,1.611,42,0.494,59,0.008,60,0.01,61,0.008,65,2.752,79,2.875,80,2.63,97,1.316,98,2.887,142,4.233,143,4.233,155,4.233,251,1.316,277,3.399,330,4.233,334,4.233,385,4.686,387,4.686,388,4.686,392,4.83,394,5.25,810,4.686,834,5.812,1144,3.206,1282,5.812,1283,5.812,1289,4.686,1492,5.374,1493,7.247,1494,6.666,1495,5.374,1496,6.666,1497,5.374,1498,5.374,1499,5.374,1500,5.374,1501,5.374,1502,5.374,1503,5.374,1504,5.374,1505,5.374,1506,5.374,1507,5.374,1508,5.374,1509,5.374,1510,5.374,1511,5.374,1512,5.374,1513,5.374,1514,5.374,1515,5.374,1516,5.374,1517,5.374,1518,5.374,1519,5.374,1520,5.374,1521,5.374,1522,5.374,1523,5.374,1524,5.374,1525,5.374,1526,5.374,1527,5.374,1528,5.374,1529,5.374,1530,5.374,1531,5.374,1532,5.374]],["title/miscellaneous/enumerations.html",[1533,2.208,1534,4.356]],["body/miscellaneous/enumerations.html",[9,0.273,16,0.013,59,0.009,60,0.011,61,0.009,138,4.497,375,4.738,389,4.497,714,6.201,716,6.201,718,6.201,720,6.201,722,6.201,724,6.201,740,1.862,1336,5.153,1533,3.781,1534,5.213,1535,5.978,1536,5.978,1537,5.978,1538,5.978,1539,6.201,1540,7.112]],["title/miscellaneous/functions.html",[1533,2.208,1541,4.356]],["body/miscellaneous/functions.html",[9,0.299,16,0.012,59,0.01,60,0.012,61,0.01,68,4.036,1480,5.705,1533,4.138,1541,5.705,1542,6.543]],["title/index.html",[9,0.16,1543,3.491,1544,3.491]],["body/index.html",[5,0.105,11,0.57,16,0.012,59,0.008,60,0.01,61,0.008,75,2.697,103,1.455,408,3.954,409,5.031,431,3.385,432,3.638,452,3.954,456,4.378,593,6.125,781,2.081,801,5.569,806,5.569,843,4.378,852,4.378,935,3.954,997,4.378,1010,4.378,1024,4.378,1030,5.569,1539,5.569,1545,5.021,1546,8.165,1547,5.021,1548,6.387,1549,5.021,1550,5.021,1551,6.387,1552,5.021,1553,5.021,1554,5.021,1555,5.021,1556,5.021,1557,5.021,1558,5.021,1559,5.021,1560,6.387,1561,7.025,1562,6.387,1563,6.387,1564,5.021,1565,5.021,1566,5.021,1567,5.021,1568,5.021,1569,5.021,1570,6.387,1571,5.021,1572,7.393,1573,5.021,1574,5.021,1575,5.021,1576,5.021,1577,5.021,1578,5.021,1579,6.387,1580,6.387,1581,6.387,1582,5.021,1583,5.021,1584,5.021,1585,6.387,1586,5.021,1587,5.021,1588,5.021,1589,6.387,1590,5.021,1591,5.021,1592,5.021,1593,6.387,1594,7.025,1595,7.025,1596,6.387,1597,6.387,1598,6.387,1599,5.021,1600,5.021,1601,5.021,1602,5.021,1603,5.021,1604,5.021,1605,5.021,1606,7.025,1607,7.025,1608,5.021,1609,5.021,1610,5.021,1611,5.021,1612,5.021,1613,5.021,1614,5.021,1615,5.021,1616,5.021,1617,5.021,1618,5.021,1619,5.021,1620,5.021,1621,5.021]],["title/modules.html",[64,2.891]],["body/modules.html",[16,0.011,59,0.01,60,0.011,61,0.01,63,4.156,64,3.157,122,4.466,126,3.677,127,3.677,128,4.156,129,4.156,130,4.156,1622,8.275,1623,8.275,1624,8.275,1625,8.275]],["title/overview.html",[1626,4.922]],["body/overview.html",[2,2.236,16,0.013,37,4.425,59,0.008,60,0.01,61,0.008,62,2.064,63,5.134,64,2.55,65,2.55,66,2.814,67,2.814,68,2.55,69,2.814,70,2.814,71,4.341,72,4.341,73,3.591,74,2.814,75,2.675,84,2.814,119,4.425,122,6.07,123,4.341,124,4.341,125,4.341,126,4.864,127,4.542,128,5.336,129,5.134,130,5.498,136,3.775,269,4.425,321,4.341,322,4.341,323,4.341,324,5.336,605,0.565,634,3.149,682,4.341,683,4.341,768,1.454,798,4.721,822,3.608,905,4.425,963,4.341,965,4.341,1104,3.921,1240,4.341,1241,4.341,1242,4.718,1399,4.341,1401,4.341,1402,4.341,1626,4.341,1627,6.353,1628,4.979]],["title/miscellaneous/variables.html",[1533,2.208,1629,4.356]],["body/miscellaneous/variables.html",[9,0.285,16,0.013,59,0.01,60,0.011,61,0.01,112,1.335,118,0.405,278,4.913,374,2.51,375,4.118,695,1.475,1477,5.431,1479,5.431,1533,3.939,1629,5.431,1630,6.228,1631,6.228,1632,6.228,1633,6.228,1634,6.228,1635,6.228,1636,6.228]]],"invertedIndex":[["",{"_index":16,"title":{},"body":{"controllers/AdminController.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BuyerAddMarketDto.html":{},"classes/BuyerMarket.html":{},"classes/BuyerRemoveMarketDto.html":{},"classes/ChangelogAuthor.html":{},"classes/ChangelogModel.html":{},"classes/CommentMarket.html":{},"classes/CommentMarketDto.html":{},"classes/CommentRemoveMarketDto.html":{},"modules/ConfigModule.html":{},"classes/ConfigService.html":{},"classes/DiscountMarket.html":{},"classes/Email.html":{},"classes/Email-1.html":{},"classes/GeneralGateway.html":{},"interfaces/IJwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/Market.html":{},"controllers/MarketController.html":{},"classes/MarketModel.html":{},"modules/MarketModule.html":{},"injectables/MarketService.html":{},"classes/Membership.html":{},"classes/Membership-1.html":{},"classes/Notifications.html":{},"classes/Notifications-1.html":{},"classes/Online.html":{},"classes/Online-1.html":{},"classes/Password.html":{},"classes/Password-1.html":{},"classes/Rank.html":{},"classes/Rank-1.html":{},"guards/RankGuard.html":{},"classes/ReactionAddMarketDto.html":{},"classes/ReactionRemoveMarketDto.html":{},"classes/Reactions.html":{},"classes/Reactions-1.html":{},"classes/ReactionsDto.html":{},"classes/ReactionsMarket.html":{},"classes/Security.html":{},"classes/Security-1.html":{},"classes/SecurityCode.html":{},"classes/SecurityDto.html":{},"classes/SecurityUpdateDto.html":{},"classes/Sessions.html":{},"classes/Sessions-1.html":{},"classes/SignInDto.html":{},"classes/Stats.html":{},"classes/Stats-1.html":{},"classes/Suspension.html":{},"classes/Suspension-1.html":{},"classes/Transaction.html":{},"classes/Transaction-1.html":{},"classes/TransactionBuyer.html":{},"classes/TransactionBuyer-1.html":{},"controllers/TransactionController.html":{},"modules/TransactionModule.html":{},"injectables/TransactionService.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"classes/UserModel.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":625,"title":{},"body":{"classes/BuyerMarket.html":{},"classes/CommentMarket.html":{},"classes/DiscountMarket.html":{},"classes/Email-1.html":{},"classes/Membership-1.html":{},"classes/Notifications-1.html":{},"classes/Online-1.html":{},"classes/Password-1.html":{},"classes/Rank-1.html":{},"classes/Reactions-1.html":{},"classes/ReactionsMarket.html":{},"classes/Security-1.html":{},"classes/Sessions-1.html":{},"classes/Stats-1.html":{},"classes/Suspension-1.html":{},"classes/Transaction-1.html":{},"classes/TransactionBuyer-1.html":{},"classes/UserModel.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["0.1.13",{"_index":1527,"title":{},"body":{"dependencies.html":{}}}],["0.11.0",{"_index":1506,"title":{},"body":{"dependencies.html":{}}}],["0.2.3",{"_index":1505,"title":{},"body":{"dependencies.html":{}}}],["0.4.1",{"_index":1523,"title":{},"body":{"dependencies.html":{}}}],["0.5.12",{"_index":1499,"title":{},"body":{"dependencies.html":{}}}],["0.5.27",{"_index":1517,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1478,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1471,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":1488,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":1472,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":1484,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1470,"title":{},"body":{"coverage.html":{}}}],["0/23",{"_index":1487,"title":{},"body":{"coverage.html":{}}}],["0/24",{"_index":1486,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1474,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1482,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1475,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1476,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1473,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1485,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1483,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":768,"title":{"classes/Email-1.html":{},"classes/Membership-1.html":{},"classes/Notifications-1.html":{},"classes/Online-1.html":{},"classes/Password-1.html":{},"classes/Rank-1.html":{},"classes/Reactions-1.html":{},"classes/Security-1.html":{},"classes/Sessions-1.html":{},"classes/Stats-1.html":{},"classes/Suspension-1.html":{},"classes/Transaction-1.html":{},"classes/TransactionBuyer-1.html":{}},"body":{"classes/Email-1.html":{},"classes/GeneralGateway.html":{},"classes/MarketModel.html":{},"injectables/MarketService.html":{},"classes/Membership-1.html":{},"classes/Notifications-1.html":{},"classes/Online-1.html":{},"classes/Password-1.html":{},"classes/Rank-1.html":{},"classes/Reactions-1.html":{},"classes/Security-1.html":{},"classes/Sessions-1.html":{},"classes/Stats-1.html":{},"classes/Suspension-1.html":{},"classes/Transaction-1.html":{},"classes/TransactionBuyer-1.html":{},"classes/UserModel.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["1.0.4",{"_index":1532,"title":{},"body":{"dependencies.html":{}}}],["1.1.3",{"_index":1492,"title":{},"body":{"dependencies.html":{}}}],["1.4.2",{"_index":1520,"title":{},"body":{"dependencies.html":{}}}],["1.7.4",{"_index":1508,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":655,"title":{},"body":{"classes/ChangelogModel.html":{},"classes/MarketModel.html":{},"classes/UserModel.html":{}}}],["100",{"_index":941,"title":{},"body":{"classes/MarketModel.html":{},"classes/UserModel.html":{}}}],["1000",{"_index":942,"title":{},"body":{"classes/MarketModel.html":{},"classes/UserModel.html":{}}}],["11000",{"_index":450,"title":{},"body":{"injectables/AuthService.html":{}}}],["127.0.0.1",{"_index":1370,"title":{},"body":{"classes/UserModel.html":{}}}],["140",{"_index":1380,"title":{},"body":{"classes/UserModel.html":{}}}],["15",{"_index":1396,"title":{},"body":{"classes/UserModel.html":{}}}],["15d",{"_index":341,"title":{},"body":{"modules/AuthModule.html":{}}}],["16).tostring(16",{"_index":1311,"title":{},"body":{"controllers/UserController.html":{}}}],["1]._id",{"_index":515,"title":{},"body":{"injectables/AuthService.html":{}}}],["2",{"_index":1015,"title":{},"body":{"injectables/MarketService.html":{}}}],["2.10.1",{"_index":1503,"title":{},"body":{"dependencies.html":{}}}],["2.24.0",{"_index":1516,"title":{},"body":{"dependencies.html":{}}}],["2.4.3",{"_index":1500,"title":{},"body":{"dependencies.html":{}}}],["200",{"_index":786,"title":{},"body":{"classes/Email-1.html":{},"classes/Membership-1.html":{},"classes/Notifications-1.html":{},"classes/Online-1.html":{},"classes/Password-1.html":{},"classes/Rank-1.html":{},"classes/Reactions-1.html":{},"classes/Security-1.html":{},"classes/Sessions-1.html":{},"classes/Stats-1.html":{},"classes/Suspension-1.html":{},"classes/Transaction-1.html":{},"classes/TransactionBuyer-1.html":{}}}],["250",{"_index":658,"title":{},"body":{"classes/ChangelogModel.html":{}}}],["3",{"_index":1016,"title":{},"body":{"injectables/MarketService.html":{}}}],["3.0.0",{"_index":1529,"title":{},"body":{"dependencies.html":{}}}],["3.21.2",{"_index":1513,"title":{},"body":{"dependencies.html":{}}}],["30",{"_index":656,"title":{},"body":{"classes/ChangelogModel.html":{},"classes/MarketModel.html":{},"classes/UserModel.html":{}}}],["3000",{"_index":653,"title":{},"body":{"classes/ChangelogModel.html":{}}}],["4",{"_index":1018,"title":{},"body":{"injectables/MarketService.html":{}}}],["4.0.0",{"_index":1524,"title":{},"body":{"dependencies.html":{}}}],["4.1.3",{"_index":1521,"title":{},"body":{"dependencies.html":{}}}],["5",{"_index":660,"title":{},"body":{"classes/ChangelogModel.html":{},"injectables/MarketService.html":{},"classes/UserModel.html":{}}}],["5.0.0",{"_index":1511,"title":{},"body":{"dependencies.html":{}}}],["5.8.7",{"_index":1519,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":634,"title":{},"body":{"classes/BuyerMarket.html":{},"classes/ChangelogModel.html":{},"classes/CommentMarket.html":{},"classes/DiscountMarket.html":{},"classes/ReactionsMarket.html":{},"overview.html":{}}}],["500",{"_index":636,"title":{},"body":{"classes/BuyerMarket.html":{},"classes/CommentMarket.html":{},"classes/DiscountMarket.html":{},"classes/ReactionsMarket.html":{}}}],["6",{"_index":1628,"title":{},"body":{"overview.html":{}}}],["6.1.1",{"_index":1494,"title":{},"body":{"dependencies.html":{}}}],["6.10.14",{"_index":1496,"title":{},"body":{"dependencies.html":{}}}],["6.2.1",{"_index":1497,"title":{},"body":{"dependencies.html":{}}}],["6.5.3",{"_index":1531,"title":{},"body":{"dependencies.html":{}}}],["6.7.2",{"_index":1493,"title":{},"body":{"dependencies.html":{}}}],["7",{"_index":1627,"title":{},"body":{"overview.html":{}}}],["7.0.0",{"_index":1522,"title":{},"body":{"dependencies.html":{}}}],["8.5.1",{"_index":1515,"title":{},"body":{"dependencies.html":{}}}],["90",{"_index":785,"title":{},"body":{"classes/Email-1.html":{},"classes/Membership-1.html":{},"classes/Notifications-1.html":{},"classes/Online-1.html":{},"classes/Password-1.html":{},"classes/Rank-1.html":{},"classes/Reactions-1.html":{},"classes/Security-1.html":{},"classes/Sessions-1.html":{},"classes/Stats-1.html":{},"classes/Suspension-1.html":{},"classes/Transaction-1.html":{},"classes/TransactionBuyer-1.html":{}}}],["99",{"_index":627,"title":{},"body":{"classes/BuyerMarket.html":{},"classes/CommentMarket.html":{},"classes/DiscountMarket.html":{},"classes/ReactionsMarket.html":{}}}],["9999",{"_index":948,"title":{},"body":{"classes/MarketModel.html":{}}}],["__dirname",{"_index":177,"title":{},"body":{"modules/AppModule.html":{},"classes/ConfigService.html":{}}}],["__v",{"_index":1441,"title":{},"body":{"injectables/UserService.html":{}}}],["_id",{"_index":498,"title":{},"body":{"injectables/AuthService.html":{},"classes/ChangelogModel.html":{},"classes/Email.html":{},"classes/Email-1.html":{},"classes/Market.html":{},"classes/MarketModel.html":{},"classes/Membership.html":{},"classes/Membership-1.html":{},"classes/Notifications.html":{},"classes/Notifications-1.html":{},"classes/Online.html":{},"classes/Online-1.html":{},"classes/Password.html":{},"classes/Password-1.html":{},"classes/Rank.html":{},"classes/Rank-1.html":{},"classes/Reactions.html":{},"classes/Reactions-1.html":{},"classes/Security.html":{},"classes/Security-1.html":{},"classes/Sessions.html":{},"classes/Sessions-1.html":{},"classes/Stats.html":{},"classes/Stats-1.html":{},"classes/Suspension.html":{},"classes/Suspension-1.html":{},"classes/Transaction.html":{},"classes/Transaction-1.html":{},"classes/TransactionBuyer.html":{},"classes/TransactionBuyer-1.html":{},"classes/UserDto.html":{},"classes/UserModel.html":{}}}],["_req",{"_index":1304,"title":{},"body":{"controllers/UserController.html":{}}}],["accepted",{"_index":1607,"title":{},"body":{"index.html":{}}}],["access",{"_index":489,"title":{},"body":{"injectables/AuthService.html":{}}}],["account",{"_index":430,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/UserService.html":{}}}],["actions",{"_index":1567,"title":{},"body":{"index.html":{}}}],["activation",{"_index":544,"title":{},"body":{"injectables/AuthService.html":{}}}],["adapter",{"_index":179,"title":{},"body":{"modules/AppModule.html":{}}}],["add",{"_index":1457,"title":{},"body":{"injectables/UserService.html":{}}}],["add(15",{"_index":411,"title":{},"body":{"injectables/AuthService.html":{},"classes/GeneralGateway.html":{}}}],["addbuyertoproduct",{"_index":970,"title":{},"body":{"injectables/MarketService.html":{}}}],["addbuyertoproduct(buyeraddmarketdto",{"_index":973,"title":{},"body":{"injectables/MarketService.html":{}}}],["addcomment",{"_index":863,"title":{},"body":{"controllers/MarketController.html":{},"injectables/MarketService.html":{}}}],["addcomment(commentmarketdto",{"_index":871,"title":{},"body":{"controllers/MarketController.html":{},"injectables/MarketService.html":{}}}],["added",{"_index":1024,"title":{},"body":{"injectables/MarketService.html":{},"index.html":{}}}],["adding",{"_index":1020,"title":{},"body":{"injectables/MarketService.html":{},"injectables/UserService.html":{}}}],["addproduct",{"_index":864,"title":{},"body":{"controllers/MarketController.html":{},"injectables/MarketService.html":{}}}],["addproduct(marketmodel",{"_index":874,"title":{},"body":{"controllers/MarketController.html":{},"injectables/MarketService.html":{}}}],["addreaction",{"_index":865,"title":{},"body":{"controllers/MarketController.html":{},"injectables/MarketService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["addreaction(reactionaddmarketdto",{"_index":878,"title":{},"body":{"controllers/MarketController.html":{},"injectables/MarketService.html":{}}}],["addreaction(reactionsdto",{"_index":1412,"title":{},"body":{"injectables/UserService.html":{}}}],["addreaction(res",{"_index":1260,"title":{},"body":{"controllers/UserController.html":{}}}],["address",{"_index":537,"title":{},"body":{"injectables/AuthService.html":{}}}],["admin",{"_index":8,"title":{},"body":{"controllers/AdminController.html":{},"classes/Email.html":{},"classes/Email-1.html":{},"classes/Market.html":{},"classes/Membership.html":{},"classes/Membership-1.html":{},"classes/Notifications.html":{},"classes/Notifications-1.html":{},"classes/Online.html":{},"classes/Online-1.html":{},"classes/Password.html":{},"classes/Password-1.html":{},"classes/Rank.html":{},"classes/Rank-1.html":{},"classes/Reactions.html":{},"classes/Reactions-1.html":{},"classes/Security.html":{},"classes/Security-1.html":{},"classes/Sessions.html":{},"classes/Sessions-1.html":{},"classes/Stats.html":{},"classes/Stats-1.html":{},"classes/Suspension.html":{},"classes/Suspension-1.html":{},"classes/Transaction.html":{},"classes/Transaction-1.html":{},"classes/TransactionBuyer.html":{},"classes/TransactionBuyer-1.html":{}}}],["admin.controller",{"_index":77,"title":{},"body":{"modules/AdminModule.html":{}}}],["admin.service",{"_index":38,"title":{},"body":{"controllers/AdminController.html":{},"modules/AdminModule.html":{}}}],["admincontroller",{"_index":1,"title":{"controllers/AdminController.html":{}},"body":{"controllers/AdminController.html":{},"modules/AdminModule.html":{},"coverage.html":{}}}],["administrator",{"_index":1539,"title":{},"body":{"miscellaneous/enumerations.html":{},"index.html":{}}}],["administrators",{"_index":1572,"title":{},"body":{"index.html":{}}}],["adminmodule",{"_index":63,"title":{"modules/AdminModule.html":{}},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["adminservice",{"_index":37,"title":{"injectables/AdminService.html":{}},"body":{"controllers/AdminController.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"coverage.html":{},"overview.html":{}}}],["affected",{"_index":1586,"title":{},"body":{"index.html":{}}}],["akatsuki",{"_index":431,"title":{},"body":{"injectables/AuthService.html":{},"classes/ConfigService.html":{},"injectables/JwtStrategy.html":{},"injectables/UserService.html":{},"index.html":{}}}],["already",{"_index":453,"title":{},"body":{"injectables/AuthService.html":{}}}],["api",{"_index":1546,"title":{},"body":{"index.html":{}}}],["app.controller",{"_index":134,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":120,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["app_interceptor",{"_index":154,"title":{},"body":{"modules/AppModule.html":{}}}],["appcontroller",{"_index":114,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["appmodule",{"_index":122,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appmodule.port",{"_index":200,"title":{},"body":{"modules/AppModule.html":{}}}],["appservice",{"_index":119,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["array(32",{"_index":1307,"title":{},"body":{"controllers/UserController.html":{}}}],["arrayprop",{"_index":952,"title":{},"body":{"classes/MarketModel.html":{},"classes/UserModel.html":{}}}],["arrayprop({items",{"_index":938,"title":{},"body":{"classes/MarketModel.html":{},"classes/UserModel.html":{}}}],["assistant",{"_index":1571,"title":{},"body":{"index.html":{}}}],["associated",{"_index":580,"title":{},"body":{"injectables/AuthService.html":{}}}],["async",{"_index":12,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/MarketController.html":{},"injectables/MarketService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["attempt",{"_index":468,"title":{},"body":{"injectables/AuthService.html":{}}}],["auth",{"_index":208,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth.controller",{"_index":326,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.service",{"_index":270,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["auth/auth.module",{"_index":151,"title":{},"body":{"modules/AppModule.html":{},"modules/MarketModule.html":{},"modules/UserModule.html":{}}}],["auth/email/verification/${usercreated._id",{"_index":441,"title":{},"body":{"injectables/AuthService.html":{}}}],["authcontroller",{"_index":206,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authguard",{"_index":276,"title":{},"body":{"controllers/AuthController.html":{},"controllers/MarketController.html":{},"controllers/UserController.html":{}}}],["authmodule",{"_index":126,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/MarketModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":632,"title":{},"body":{"classes/BuyerMarket.html":{},"classes/ChangelogModel.html":{},"classes/CommentMarket.html":{},"classes/CommentRemoveMarketDto.html":{},"classes/DiscountMarket.html":{},"classes/Email.html":{},"classes/Email-1.html":{},"classes/Market.html":{},"classes/MarketModel.html":{},"injectables/MarketService.html":{},"classes/Membership.html":{},"classes/Membership-1.html":{},"classes/Notifications.html":{},"classes/Notifications-1.html":{},"classes/Online.html":{},"classes/Online-1.html":{},"classes/Password.html":{},"classes/Password-1.html":{},"classes/Rank.html":{},"classes/Rank-1.html":{},"classes/Reactions.html":{},"classes/Reactions-1.html":{},"classes/ReactionsMarket.html":{},"classes/Security.html":{},"classes/Security-1.html":{},"classes/Sessions.html":{},"classes/Sessions-1.html":{},"classes/Stats.html":{},"classes/Stats-1.html":{},"classes/Suspension.html":{},"classes/Suspension-1.html":{},"classes/Transaction.html":{},"classes/Transaction-1.html":{},"classes/TransactionBuyer.html":{},"classes/TransactionBuyer-1.html":{},"injectables/UserService.html":{}}}],["authorization",{"_index":1565,"title":{},"body":{"index.html":{}}}],["authservice",{"_index":269,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"coverage.html":{},"overview.html":{}}}],["available",{"_index":933,"title":{},"body":{"classes/MarketModel.html":{},"injectables/MarketService.html":{},"classes/UserModel.html":{}}}],["avoid",{"_index":1574,"title":{},"body":{"index.html":{}}}],["await",{"_index":46,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/MarketController.html":{},"injectables/MarketService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["badgatewayexception",{"_index":377,"title":{},"body":{"injectables/AuthService.html":{}}}],["badrequestexception",{"_index":95,"title":{},"body":{"injectables/AdminService.html":{},"injectables/AuthService.html":{},"injectables/MarketService.html":{},"injectables/UserService.html":{}}}],["ban",{"_index":524,"title":{},"body":{"injectables/AuthService.html":{}}}],["ban_reason",{"_index":525,"title":{},"body":{"injectables/AuthService.html":{}}}],["bcryptjs",{"_index":385,"title":{},"body":{"injectables/AuthService.html":{},"dependencies.html":{}}}],["before",{"_index":1616,"title":{},"body":{"index.html":{}}}],["being",{"_index":1585,"title":{},"body":{"index.html":{}}}],["blockkey",{"_index":1434,"title":{},"body":{"injectables/UserService.html":{}}}],["blockkey.includes(key",{"_index":1443,"title":{},"body":{"injectables/UserService.html":{}}}],["body",{"_index":33,"title":{},"body":{"controllers/AdminController.html":{},"controllers/AuthController.html":{},"controllers/MarketController.html":{},"controllers/UserController.html":{}}}],["body('newpassword",{"_index":309,"title":{},"body":{"controllers/AuthController.html":{}}}],["body('ofid",{"_index":1329,"title":{},"body":{"controllers/UserController.html":{}}}],["body('sesionid",{"_index":317,"title":{},"body":{"controllers/AuthController.html":{}}}],["body('sessioid",{"_index":299,"title":{},"body":{"controllers/AuthController.html":{}}}],["body('sessiondevice",{"_index":301,"title":{},"body":{"controllers/AuthController.html":{}}}],["body('sessionip",{"_index":300,"title":{},"body":{"controllers/AuthController.html":{}}}],["body('toid",{"_index":1328,"title":{},"body":{"controllers/UserController.html":{}}}],["body('token",{"_index":291,"title":{},"body":{"controllers/AuthController.html":{}}}],["body('tokenpassword",{"_index":308,"title":{},"body":{"controllers/AuthController.html":{}}}],["body('userid",{"_index":290,"title":{},"body":{"controllers/AuthController.html":{}}}],["body('userip",{"_index":304,"title":{},"body":{"controllers/AuthController.html":{}}}],["boolean",{"_index":734,"title":{},"body":{"classes/Email.html":{},"classes/Email-1.html":{},"classes/Market.html":{},"classes/MarketModel.html":{},"classes/Membership.html":{},"classes/Membership-1.html":{},"classes/Notifications.html":{},"classes/Notifications-1.html":{},"classes/Online.html":{},"classes/Online-1.html":{},"classes/Password.html":{},"classes/Password-1.html":{},"classes/Rank.html":{},"classes/Rank-1.html":{},"guards/RankGuard.html":{},"classes/Reactions.html":{},"classes/Reactions-1.html":{},"classes/Security.html":{},"classes/Security-1.html":{},"classes/Sessions.html":{},"classes/Sessions-1.html":{},"classes/Stats.html":{},"classes/Stats-1.html":{},"classes/Suspension.html":{},"classes/Suspension-1.html":{},"classes/Transaction.html":{},"classes/Transaction-1.html":{},"classes/TransactionBuyer.html":{},"classes/TransactionBuyer-1.html":{},"classes/UpdateUserDto.html":{},"injectables/UserService.html":{}}}],["bootstrap",{"_index":68,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ConfigModule.html":{},"modules/MarketModule.html":{},"modules/TransactionModule.html":{},"modules/UserModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["branch",{"_index":1619,"title":{},"body":{"index.html":{}}}],["break",{"_index":1014,"title":{},"body":{"injectables/MarketService.html":{}}}],["browse",{"_index":1625,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1622,"title":{},"body":{"modules.html":{}}}],["bug",{"_index":1609,"title":{},"body":{"index.html":{}}}],["buyer",{"_index":766,"title":{},"body":{"classes/Email.html":{},"classes/Email-1.html":{},"classes/Market.html":{},"injectables/MarketService.html":{},"classes/Membership.html":{},"classes/Membership-1.html":{},"classes/Notifications.html":{},"classes/Notifications-1.html":{},"classes/Online.html":{},"classes/Online-1.html":{},"classes/Password.html":{},"classes/Password-1.html":{},"classes/Rank.html":{},"classes/Rank-1.html":{},"classes/Reactions.html":{},"classes/Reactions-1.html":{},"classes/Security.html":{},"classes/Security-1.html":{},"classes/Sessions.html":{},"classes/Sessions-1.html":{},"classes/Stats.html":{},"classes/Stats-1.html":{},"classes/Suspension.html":{},"classes/Suspension-1.html":{},"classes/Transaction.html":{},"classes/Transaction-1.html":{},"classes/TransactionBuyer.html":{},"classes/TransactionBuyer-1.html":{}}}],["buyer.device",{"_index":956,"title":{},"body":{"classes/MarketModel.html":{}}}],["buyer.ip",{"_index":957,"title":{},"body":{"classes/MarketModel.html":{}}}],["buyer.user._id",{"_index":958,"title":{},"body":{"classes/MarketModel.html":{}}}],["buyeraddmarketdto",{"_index":604,"title":{"classes/BuyerAddMarketDto.html":{}},"body":{"classes/BuyerAddMarketDto.html":{},"injectables/MarketService.html":{},"coverage.html":{}}}],["buyeraddmarketdto.device",{"_index":1027,"title":{},"body":{"injectables/MarketService.html":{}}}],["buyeraddmarketdto.ip",{"_index":1028,"title":{},"body":{"injectables/MarketService.html":{}}}],["buyeraddmarketdto.product",{"_index":1022,"title":{},"body":{"injectables/MarketService.html":{}}}],["buyeraddmarketdto.user",{"_index":1021,"title":{},"body":{"injectables/MarketService.html":{}}}],["buyermarket",{"_index":613,"title":{"classes/BuyerMarket.html":{}},"body":{"classes/BuyerMarket.html":{},"classes/CommentMarket.html":{},"classes/DiscountMarket.html":{},"classes/MarketModel.html":{},"classes/ReactionsMarket.html":{},"coverage.html":{}}}],["buyerremovemarketdto",{"_index":639,"title":{"classes/BuyerRemoveMarketDto.html":{}},"body":{"classes/BuyerRemoveMarketDto.html":{},"controllers/MarketController.html":{},"injectables/MarketService.html":{},"coverage.html":{}}}],["buyerremovemarketdto.product",{"_index":1061,"title":{},"body":{"injectables/MarketService.html":{}}}],["buyerremovemarketdto.user",{"_index":1060,"title":{},"body":{"injectables/MarketService.html":{}}}],["buyers",{"_index":934,"title":{},"body":{"classes/MarketModel.html":{},"injectables/MarketService.html":{}}}],["cache",{"_index":1501,"title":{},"body":{"dependencies.html":{}}}],["cacheinterceptor",{"_index":133,"title":{},"body":{"modules/AppModule.html":{}}}],["cachemodule",{"_index":132,"title":{},"body":{"modules/AppModule.html":{}}}],["cachemodule.register",{"_index":194,"title":{},"body":{"modules/AppModule.html":{}}}],["cambios",{"_index":54,"title":{},"body":{"controllers/AdminController.html":{}}}],["canactivate",{"_index":1107,"title":{},"body":{"guards/RankGuard.html":{}}}],["canactivate(context",{"_index":1111,"title":{},"body":{"guards/RankGuard.html":{}}}],["carried",{"_index":1568,"title":{},"body":{"index.html":{}}}],["case",{"_index":1013,"title":{},"body":{"injectables/MarketService.html":{}}}],["catch",{"_index":444,"title":{},"body":{"injectables/AuthService.html":{},"injectables/MarketService.html":{},"injectables/UserService.html":{}}}],["catch((error",{"_index":448,"title":{},"body":{"injectables/AuthService.html":{}}}],["cb",{"_index":1305,"title":{},"body":{"controllers/UserController.html":{}}}],["cb(null",{"_index":1312,"title":{},"body":{"controllers/UserController.html":{}}}],["cdentials",{"_index":473,"title":{},"body":{"injectables/AuthService.html":{}}}],["challenge",{"_index":554,"title":{},"body":{"injectables/AuthService.html":{}}}],["change",{"_index":579,"title":{},"body":{"injectables/AuthService.html":{},"classes/UserModel.html":{}}}],["changecoverphoto",{"_index":1256,"title":{},"body":{"controllers/UserController.html":{}}}],["changecoverphoto(file",{"_index":1263,"title":{},"body":{"controllers/UserController.html":{}}}],["changed",{"_index":1611,"title":{},"body":{"index.html":{}}}],["changelog",{"_index":30,"title":{},"body":{"controllers/AdminController.html":{}}}],["changelog.data.model",{"_index":662,"title":{},"body":{"classes/ChangelogModel.html":{}}}],["changelogauthor",{"_index":643,"title":{"classes/ChangelogAuthor.html":{}},"body":{"classes/ChangelogAuthor.html":{},"classes/ChangelogModel.html":{},"coverage.html":{}}}],["changelogmodel",{"_index":22,"title":{"classes/ChangelogModel.html":{}},"body":{"controllers/AdminController.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"classes/ChangelogModel.html":{},"coverage.html":{}}}],["changelogs",{"_index":665,"title":{},"body":{"classes/ChangelogModel.html":{}}}],["changepassword",{"_index":345,"title":{},"body":{"injectables/AuthService.html":{}}}],["changepassword(userid",{"_index":310,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["changeprofilephoto",{"_index":1257,"title":{},"body":{"controllers/UserController.html":{}}}],["changeprofilephoto(file",{"_index":1266,"title":{},"body":{"controllers/UserController.html":{}}}],["changes",{"_index":1030,"title":{},"body":{"injectables/MarketService.html":{},"index.html":{}}}],["changesecurity",{"_index":209,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["changesecurity(securityupdate",{"_index":218,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["changing",{"_index":592,"title":{},"body":{"injectables/AuthService.html":{}}}],["check",{"_index":573,"title":{},"body":{"injectables/AuthService.html":{}}}],["class",{"_index":42,"title":{"classes/BuyerAddMarketDto.html":{},"classes/BuyerMarket.html":{},"classes/BuyerRemoveMarketDto.html":{},"classes/ChangelogAuthor.html":{},"classes/ChangelogModel.html":{},"classes/CommentMarket.html":{},"classes/CommentMarketDto.html":{},"classes/CommentRemoveMarketDto.html":{},"classes/ConfigService.html":{},"classes/DiscountMarket.html":{},"classes/Email.html":{},"classes/Email-1.html":{},"classes/GeneralGateway.html":{},"classes/Market.html":{},"classes/MarketModel.html":{},"classes/Membership.html":{},"classes/Membership-1.html":{},"classes/Notifications.html":{},"classes/Notifications-1.html":{},"classes/Online.html":{},"classes/Online-1.html":{},"classes/Password.html":{},"classes/Password-1.html":{},"classes/Rank.html":{},"classes/Rank-1.html":{},"classes/ReactionAddMarketDto.html":{},"classes/ReactionRemoveMarketDto.html":{},"classes/Reactions.html":{},"classes/Reactions-1.html":{},"classes/ReactionsDto.html":{},"classes/ReactionsMarket.html":{},"classes/Security.html":{},"classes/Security-1.html":{},"classes/SecurityCode.html":{},"classes/SecurityDto.html":{},"classes/SecurityUpdateDto.html":{},"classes/Sessions.html":{},"classes/Sessions-1.html":{},"classes/SignInDto.html":{},"classes/Stats.html":{},"classes/Stats-1.html":{},"classes/Suspension.html":{},"classes/Suspension-1.html":{},"classes/Transaction.html":{},"classes/Transaction-1.html":{},"classes/TransactionBuyer.html":{},"classes/TransactionBuyer-1.html":{},"classes/UpdateUserDto.html":{},"classes/UserDto.html":{},"classes/UserModel.html":{}},"body":{"controllers/AdminController.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BuyerAddMarketDto.html":{},"classes/BuyerMarket.html":{},"classes/BuyerRemoveMarketDto.html":{},"classes/ChangelogAuthor.html":{},"classes/ChangelogModel.html":{},"classes/CommentMarket.html":{},"classes/CommentMarketDto.html":{},"classes/CommentRemoveMarketDto.html":{},"modules/ConfigModule.html":{},"classes/ConfigService.html":{},"classes/DiscountMarket.html":{},"classes/Email.html":{},"classes/Email-1.html":{},"classes/GeneralGateway.html":{},"injectables/JwtStrategy.html":{},"classes/Market.html":{},"controllers/MarketController.html":{},"classes/MarketModel.html":{},"modules/MarketModule.html":{},"injectables/MarketService.html":{},"classes/Membership.html":{},"classes/Membership-1.html":{},"classes/Notifications.html":{},"classes/Notifications-1.html":{},"classes/Online.html":{},"classes/Online-1.html":{},"classes/Password.html":{},"classes/Password-1.html":{},"classes/Rank.html":{},"classes/Rank-1.html":{},"guards/RankGuard.html":{},"classes/ReactionAddMarketDto.html":{},"classes/ReactionRemoveMarketDto.html":{},"classes/Reactions.html":{},"classes/Reactions-1.html":{},"classes/ReactionsDto.html":{},"classes/ReactionsMarket.html":{},"classes/Security.html":{},"classes/Security-1.html":{},"classes/SecurityCode.html":{},"classes/SecurityDto.html":{},"classes/SecurityUpdateDto.html":{},"classes/Sessions.html":{},"classes/Sessions-1.html":{},"classes/SignInDto.html":{},"classes/Stats.html":{},"classes/Stats-1.html":{},"classes/Suspension.html":{},"classes/Suspension-1.html":{},"classes/Transaction.html":{},"classes/Transaction-1.html":{},"classes/TransactionBuyer.html":{},"classes/TransactionBuyer-1.html":{},"controllers/TransactionController.html":{},"modules/TransactionModule.html":{},"injectables/TransactionService.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"classes/UserModel.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":605,"title":{},"body":{"classes/BuyerAddMarketDto.html":{},"classes/BuyerMarket.html":{},"classes/BuyerRemoveMarketDto.html":{},"classes/ChangelogAuthor.html":{},"classes/ChangelogModel.html":{},"classes/CommentMarket.html":{},"classes/CommentMarketDto.html":{},"classes/CommentRemoveMarketDto.html":{},"classes/ConfigService.html":{},"classes/DiscountMarket.html":{},"classes/Email.html":{},"classes/Email-1.html":{},"classes/GeneralGateway.html":{},"classes/Market.html":{},"classes/MarketModel.html":{},"classes/Membership.html":{},"classes/Membership-1.html":{},"classes/Notifications.html":{},"classes/Notifications-1.html":{},"classes/Online.html":{},"classes/Online-1.html":{},"classes/Password.html":{},"classes/Password-1.html":{},"classes/Rank.html":{},"classes/Rank-1.html":{},"classes/ReactionAddMarketDto.html":{},"classes/ReactionRemoveMarketDto.html":{},"classes/Reactions.html":{},"classes/Reactions-1.html":{},"classes/ReactionsDto.html":{},"classes/ReactionsMarket.html":{},"classes/Security.html":{},"classes/Security-1.html":{},"classes/SecurityCode.html":{},"classes/SecurityDto.html":{},"classes/SecurityUpdateDto.html":{},"classes/Sessions.html":{},"classes/Sessions-1.html":{},"classes/SignInDto.html":{},"classes/Stats.html":{},"classes/Stats-1.html":{},"classes/Suspension.html":{},"classes/Suspension-1.html":{},"classes/Transaction.html":{},"classes/Transaction-1.html":{},"classes/TransactionBuyer.html":{},"classes/TransactionBuyer-1.html":{},"classes/UpdateUserDto.html":{},"classes/UserDto.html":{},"classes/UserModel.html":{},"overview.html":{}}}],["client",{"_index":806,"title":{},"body":{"classes/GeneralGateway.html":{},"index.html":{}}}],["client.id",{"_index":817,"title":{},"body":{"classes/GeneralGateway.html":{}}}],["client.query.online",{"_index":812,"title":{},"body":{"classes/GeneralGateway.html":{}}}],["client.query.session",{"_index":815,"title":{},"body":{"classes/GeneralGateway.html":{}}}],["client.query.user",{"_index":814,"title":{},"body":{"classes/GeneralGateway.html":{}}}],["closed",{"_index":600,"title":{},"body":{"injectables/AuthService.html":{}}}],["cluster_adminmodule",{"_index":71,"title":{},"body":{"modules/AdminModule.html":{},"overview.html":{}}}],["cluster_adminmodule_providers",{"_index":72,"title":{},"body":{"modules/AdminModule.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":123,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":124,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":125,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":321,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":322,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_providers",{"_index":323,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_configmodule",{"_index":682,"title":{},"body":{"modules/ConfigModule.html":{},"overview.html":{}}}],["cluster_configmodule_exports",{"_index":683,"title":{},"body":{"modules/ConfigModule.html":{},"overview.html":{}}}],["cluster_marketmodule",{"_index":963,"title":{},"body":{"modules/MarketModule.html":{},"overview.html":{}}}],["cluster_marketmodule_imports",{"_index":964,"title":{},"body":{"modules/MarketModule.html":{}}}],["cluster_marketmodule_providers",{"_index":965,"title":{},"body":{"modules/MarketModule.html":{},"overview.html":{}}}],["cluster_transactionmodule",{"_index":1240,"title":{},"body":{"modules/TransactionModule.html":{},"overview.html":{}}}],["cluster_transactionmodule_providers",{"_index":1241,"title":{},"body":{"modules/TransactionModule.html":{},"overview.html":{}}}],["cluster_usermodule",{"_index":1399,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_exports",{"_index":1401,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_imports",{"_index":1400,"title":{},"body":{"modules/UserModule.html":{}}}],["cluster_usermodule_providers",{"_index":1402,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["code",{"_index":593,"title":{},"body":{"injectables/AuthService.html":{},"index.html":{}}}],["code.'important",{"_index":1604,"title":{},"body":{"index.html":{}}}],["code1",{"_index":749,"title":{},"body":{"classes/Email.html":{},"classes/Email-1.html":{},"classes/Market.html":{},"classes/Membership.html":{},"classes/Membership-1.html":{},"classes/Notifications.html":{},"classes/Notifications-1.html":{},"classes/Online.html":{},"classes/Online-1.html":{},"classes/Password.html":{},"classes/Password-1.html":{},"classes/Rank.html":{},"classes/Rank-1.html":{},"classes/Reactions.html":{},"classes/Reactions-1.html":{},"classes/Security.html":{},"classes/Security-1.html":{},"classes/SecurityCode.html":{},"classes/SecurityDto.html":{},"classes/SecurityUpdateDto.html":{},"classes/Sessions.html":{},"classes/Sessions-1.html":{},"classes/Stats.html":{},"classes/Stats-1.html":{},"classes/Suspension.html":{},"classes/Suspension-1.html":{},"classes/Transaction.html":{},"classes/Transaction-1.html":{},"classes/TransactionBuyer.html":{},"classes/TransactionBuyer-1.html":{}}}],["code2",{"_index":750,"title":{},"body":{"classes/Email.html":{},"classes/Email-1.html":{},"classes/Market.html":{},"classes/Membership.html":{},"classes/Membership-1.html":{},"classes/Notifications.html":{},"classes/Notifications-1.html":{},"classes/Online.html":{},"classes/Online-1.html":{},"classes/Password.html":{},"classes/Password-1.html":{},"classes/Rank.html":{},"classes/Rank-1.html":{},"classes/Reactions.html":{},"classes/Reactions-1.html":{},"classes/Security.html":{},"classes/Security-1.html":{},"classes/SecurityCode.html":{},"classes/SecurityDto.html":{},"classes/SecurityUpdateDto.html":{},"classes/Sessions.html":{},"classes/Sessions-1.html":{},"classes/Stats.html":{},"classes/Stats-1.html":{},"classes/Suspension.html":{},"classes/Suspension-1.html":{},"classes/Transaction.html":{},"classes/Transaction-1.html":{},"classes/TransactionBuyer.html":{},"classes/TransactionBuyer-1.html":{}}}],["code3",{"_index":751,"title":{},"body":{"classes/Email.html":{},"classes/Email-1.html":{},"classes/Market.html":{},"classes/Membership.html":{},"classes/Membership-1.html":{},"classes/Notifications.html":{},"classes/Notifications-1.html":{},"classes/Online.html":{},"classes/Online-1.html":{},"classes/Password.html":{},"classes/Password-1.html":{},"classes/Rank.html":{},"classes/Rank-1.html":{},"classes/Reactions.html":{},"classes/Reactions-1.html":{},"classes/Security.html":{},"classes/Security-1.html":{},"classes/SecurityCode.html":{},"classes/SecurityDto.html":{},"classes/SecurityUpdateDto.html":{},"classes/Sessions.html":{},"classes/Sessions-1.html":{},"classes/Stats.html":{},"classes/Stats-1.html":{},"classes/Suspension.html":{},"classes/Suspension-1.html":{},"classes/Transaction.html":{},"classes/Transaction-1.html":{},"classes/TransactionBuyer.html":{},"classes/TransactionBuyer-1.html":{}}}],["code4",{"_index":752,"title":{},"body":{"classes/Email.html":{},"classes/Email-1.html":{},"classes/Market.html":{},"classes/Membership.html":{},"classes/Membership-1.html":{},"classes/Notifications.html":{},"classes/Notifications-1.html":{},"classes/Online.html":{},"classes/Online-1.html":{},"classes/Password.html":{},"classes/Password-1.html":{},"classes/Rank.html":{},"classes/Rank-1.html":{},"classes/Reactions.html":{},"classes/Reactions-1.html":{},"classes/Security.html":{},"classes/Security-1.html":{},"classes/SecurityCode.html":{},"classes/SecurityDto.html":{},"classes/SecurityUpdateDto.html":{},"classes/Sessions.html":{},"classes/Sessions-1.html":{},"classes/Stats.html":{},"classes/Stats-1.html":{},"classes/Suspension.html":{},"classes/Suspension-1.html":{},"classes/Transaction.html":{},"classes/Transaction-1.html":{},"classes/TransactionBuyer.html":{},"classes/TransactionBuyer-1.html":{}}}],["code5",{"_index":753,"title":{},"body":{"classes/Email.html":{},"classes/Email-1.html":{},"classes/Market.html":{},"classes/Membership.html":{},"classes/Membership-1.html":{},"classes/Notifications.html":{},"classes/Notifications-1.html":{},"classes/Online.html":{},"classes/Online-1.html":{},"classes/Password.html":{},"classes/Password-1.html":{},"classes/Rank.html":{},"classes/Rank-1.html":{},"classes/Reactions.html":{},"classes/Reactions-1.html":{},"classes/Security.html":{},"classes/Security-1.html":{},"classes/SecurityCode.html":{},"classes/SecurityDto.html":{},"classes/SecurityUpdateDto.html":{},"classes/Sessions.html":{},"classes/Sessions-1.html":{},"classes/Stats.html":{},"classes/Stats-1.html":{},"classes/Suspension.html":{},"classes/Suspension-1.html":{},"classes/Transaction.html":{},"classes/Transaction-1.html":{},"classes/TransactionBuyer.html":{},"classes/TransactionBuyer-1.html":{}}}],["codes",{"_index":556,"title":{},"body":{"injectables/AuthService.html":{}}}],["collection",{"_index":955,"title":{},"body":{"classes/MarketModel.html":{}}}],["command",{"_index":1595,"title":{},"body":{"index.html":{}}}],["comment",{"_index":1033,"title":{},"body":{"injectables/MarketService.html":{}}}],["commentmarket",{"_index":631,"title":{"classes/CommentMarket.html":{}},"body":{"classes/BuyerMarket.html":{},"classes/CommentMarket.html":{},"classes/DiscountMarket.html":{},"classes/MarketModel.html":{},"classes/ReactionsMarket.html":{},"coverage.html":{}}}],["commentmarketdto",{"_index":670,"title":{"classes/CommentMarketDto.html":{}},"body":{"classes/CommentMarketDto.html":{},"controllers/MarketController.html":{},"injectables/MarketService.html":{},"coverage.html":{}}}],["commentmarketdto.content",{"_index":1040,"title":{},"body":{"injectables/MarketService.html":{}}}],["commentmarketdto.device",{"_index":1038,"title":{},"body":{"injectables/MarketService.html":{}}}],["commentmarketdto.ip",{"_index":1039,"title":{},"body":{"injectables/MarketService.html":{}}}],["commentmarketdto.product",{"_index":1035,"title":{},"body":{"injectables/MarketService.html":{}}}],["commentmarketdto.user",{"_index":1034,"title":{},"body":{"injectables/MarketService.html":{}}}],["commentremovemarketdto",{"_index":678,"title":{"classes/CommentRemoveMarketDto.html":{}},"body":{"classes/CommentRemoveMarketDto.html":{},"controllers/MarketController.html":{},"injectables/MarketService.html":{},"coverage.html":{}}}],["commentremovemarketdto.author",{"_index":1052,"title":{},"body":{"injectables/MarketService.html":{}}}],["commentremovemarketdto.product",{"_index":1053,"title":{},"body":{"injectables/MarketService.html":{}}}],["comments",{"_index":935,"title":{},"body":{"classes/MarketModel.html":{},"injectables/MarketService.html":{},"index.html":{}}}],["commit",{"_index":1606,"title":{},"body":{"index.html":{}}}],["commits",{"_index":1605,"title":{},"body":{"index.html":{}}}],["compare",{"_index":384,"title":{},"body":{"injectables/AuthService.html":{}}}],["compare(password",{"_index":476,"title":{},"body":{"injectables/AuthService.html":{}}}],["complete",{"_index":557,"title":{},"body":{"injectables/AuthService.html":{}}}],["completed",{"_index":519,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["compression",{"_index":1507,"title":{},"body":{"dependencies.html":{}}}],["con",{"_index":56,"title":{},"body":{"controllers/AdminController.html":{}}}],["config.service",{"_index":685,"title":{},"body":{"modules/ConfigModule.html":{}}}],["config/config.module",{"_index":135,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{}}}],["config/config.service",{"_index":137,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/UserController.html":{}}}],["configmodule",{"_index":127,"title":{"modules/ConfigModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ConfigModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["configservice",{"_index":136,"title":{"classes/ConfigService.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/ConfigModule.html":{},"classes/ConfigService.html":{},"injectables/JwtStrategy.html":{},"controllers/UserController.html":{},"coverage.html":{},"overview.html":{}}}],["configservice.get(configurationenum.db_host",{"_index":163,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get(configurationenum.email_from",{"_index":174,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get(configurationenum.email_host",{"_index":172,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get(configurationenum.token_secret",{"_index":338,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["configurationenum",{"_index":138,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/UserController.html":{},"miscellaneous/enumerations.html":{}}}],["configurationenum.server_host",{"_index":440,"title":{},"body":{"injectables/AuthService.html":{},"controllers/UserController.html":{}}}],["confirm_account",{"_index":438,"title":{},"body":{"injectables/AuthService.html":{}}}],["confirmation",{"_index":523,"title":{},"body":{"injectables/AuthService.html":{}}}],["confirmed",{"_index":539,"title":{},"body":{"injectables/AuthService.html":{}}}],["conflictexception",{"_index":378,"title":{},"body":{"injectables/AuthService.html":{},"injectables/MarketService.html":{},"injectables/UserService.html":{}}}],["const",{"_index":401,"title":{},"body":{"injectables/AuthService.html":{},"classes/ConfigService.html":{},"classes/GeneralGateway.html":{},"injectables/JwtStrategy.html":{},"guards/RankGuard.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["constructor",{"_index":86,"title":{},"body":{"injectables/AdminService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ConfigService.html":{},"classes/GeneralGateway.html":{},"injectables/JwtStrategy.html":{},"controllers/MarketController.html":{},"injectables/MarketService.html":{},"guards/RankGuard.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["constructor(changelogmodel",{"_index":87,"title":{},"body":{"injectables/AdminService.html":{}}}],["constructor(marketmodel",{"_index":971,"title":{},"body":{"injectables/MarketService.html":{}}}],["constructor(private",{"_index":43,"title":{},"body":{"controllers/AdminController.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"classes/GeneralGateway.html":{},"guards/RankGuard.html":{}}}],["constructor(reflector",{"_index":1108,"title":{},"body":{"guards/RankGuard.html":{}}}],["constructor(usermodel",{"_index":348,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/UserService.html":{}}}],["constructor(userservice",{"_index":797,"title":{},"body":{"classes/GeneralGateway.html":{}}}],["contact",{"_index":782,"title":{},"body":{"classes/Email-1.html":{},"classes/Membership-1.html":{},"classes/Notifications-1.html":{},"classes/Online-1.html":{},"classes/Password-1.html":{},"classes/Rank-1.html":{},"classes/Reactions-1.html":{},"classes/Security-1.html":{},"classes/Sessions-1.html":{},"classes/Stats-1.html":{},"classes/Suspension-1.html":{},"classes/Transaction-1.html":{},"classes/TransactionBuyer-1.html":{}}}],["content",{"_index":637,"title":{},"body":{"classes/BuyerMarket.html":{},"classes/CommentMarket.html":{},"classes/CommentMarketDto.html":{},"classes/DiscountMarket.html":{},"injectables/MarketService.html":{},"classes/ReactionsMarket.html":{}}}],["context",{"_index":434,"title":{},"body":{"injectables/AuthService.html":{},"guards/RankGuard.html":{}}}],["context.gethandler",{"_index":1116,"title":{},"body":{"guards/RankGuard.html":{}}}],["context.switchtohttp().getrequest",{"_index":1117,"title":{},"body":{"guards/RankGuard.html":{}}}],["controller",{"_index":0,"title":{"controllers/AdminController.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/MarketController.html":{},"controllers/TransactionController.html":{},"controllers/UserController.html":{}},"body":{"controllers/AdminController.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/MarketController.html":{},"controllers/TransactionController.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["controller('admin",{"_index":40,"title":{},"body":{"controllers/AdminController.html":{}}}],["controller('auth",{"_index":280,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('market",{"_index":916,"title":{},"body":{"controllers/MarketController.html":{}}}],["controller('transaction",{"_index":1239,"title":{},"body":{"controllers/TransactionController.html":{}}}],["controller('user",{"_index":1291,"title":{},"body":{"controllers/UserController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AdminController.html":{},"modules/AdminModule.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/MarketController.html":{},"modules/MarketModule.html":{},"controllers/TransactionController.html":{},"modules/TransactionModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["cookieresolver",{"_index":147,"title":{},"body":{"modules/AppModule.html":{}}}],["cookieresolver(['lang",{"_index":193,"title":{},"body":{"modules/AppModule.html":{}}}],["correct",{"_index":844,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["corrected",{"_index":1579,"title":{},"body":{"index.html":{}}}],["correctly",{"_index":1557,"title":{},"body":{"index.html":{}}}],["corrode",{"_index":535,"title":{},"body":{"injectables/AuthService.html":{}}}],["corrupt",{"_index":1608,"title":{},"body":{"index.html":{}}}],["cover",{"_index":111,"title":{},"body":{"injectables/AdminService.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"classes/UserModel.html":{},"injectables/UserService.html":{}}}],["coverage",{"_index":1466,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":451,"title":{},"body":{"injectables/AuthService.html":{}}}],["created",{"_index":423,"title":{},"body":{"injectables/AuthService.html":{}}}],["createdat",{"_index":510,"title":{},"body":{"injectables/AuthService.html":{},"injectables/MarketService.html":{},"injectables/UserService.html":{}}}],["createparamdecorator((key",{"_index":1632,"title":{},"body":{"miscellaneous/variables.html":{}}}],["creating",{"_index":399,"title":{},"body":{"injectables/AuthService.html":{},"injectables/MarketService.html":{}}}],["customer",{"_index":1584,"title":{},"body":{"index.html":{}}}],["customname",{"_index":664,"title":{},"body":{"classes/ChangelogModel.html":{},"classes/MarketModel.html":{},"classes/UserModel.html":{}}}],["damaging",{"_index":1587,"title":{},"body":{"index.html":{}}}],["data",{"_index":452,"title":{},"body":{"injectables/AuthService.html":{},"injectables/MarketService.html":{},"index.html":{}}}],["database",{"_index":602,"title":{},"body":{"injectables/AuthService.html":{},"injectables/MarketService.html":{}}}],["date",{"_index":630,"title":{},"body":{"classes/BuyerMarket.html":{},"classes/CommentMarket.html":{},"classes/DiscountMarket.html":{},"classes/Email.html":{},"classes/Email-1.html":{},"interfaces/IJwtPayload.html":{},"classes/Market.html":{},"classes/Membership.html":{},"classes/Membership-1.html":{},"classes/Notifications.html":{},"classes/Notifications-1.html":{},"classes/Online.html":{},"classes/Online-1.html":{},"classes/Password.html":{},"classes/Password-1.html":{},"classes/Rank.html":{},"classes/Rank-1.html":{},"classes/Reactions.html":{},"classes/Reactions-1.html":{},"classes/ReactionsMarket.html":{},"classes/Security.html":{},"classes/Security-1.html":{},"classes/Sessions.html":{},"classes/Sessions-1.html":{},"classes/Stats.html":{},"classes/Stats-1.html":{},"classes/Suspension.html":{},"classes/Suspension-1.html":{},"classes/Transaction.html":{},"classes/Transaction-1.html":{},"classes/TransactionBuyer.html":{},"classes/TransactionBuyer-1.html":{},"classes/UpdateUserDto.html":{},"injectables/UserService.html":{}}}],["date.now",{"_index":787,"title":{},"body":{"classes/Email-1.html":{},"classes/Membership-1.html":{},"classes/Notifications-1.html":{},"classes/Online-1.html":{},"classes/Password-1.html":{},"classes/Rank-1.html":{},"classes/Reactions-1.html":{},"classes/Security-1.html":{},"classes/Sessions-1.html":{},"classes/Stats-1.html":{},"classes/Suspension-1.html":{},"classes/Transaction-1.html":{},"classes/TransactionBuyer-1.html":{}}}],["db_host",{"_index":722,"title":{},"body":{"classes/ConfigService.html":{},"miscellaneous/enumerations.html":{}}}],["de",{"_index":53,"title":{},"body":{"controllers/AdminController.html":{},"injectables/UserService.html":{}}}],["declarations",{"_index":67,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ConfigModule.html":{},"modules/MarketModule.html":{},"modules/TransactionModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["decorators",{"_index":15,"title":{},"body":{"controllers/AdminController.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/BuyerMarket.html":{},"classes/ChangelogAuthor.html":{},"classes/ChangelogModel.html":{},"classes/CommentMarket.html":{},"classes/DiscountMarket.html":{},"classes/Email-1.html":{},"classes/GeneralGateway.html":{},"controllers/MarketController.html":{},"classes/MarketModel.html":{},"classes/Membership-1.html":{},"classes/Notifications-1.html":{},"classes/Online-1.html":{},"classes/Password-1.html":{},"classes/Rank-1.html":{},"classes/Reactions-1.html":{},"classes/ReactionsDto.html":{},"classes/ReactionsMarket.html":{},"classes/Security-1.html":{},"classes/SecurityCode.html":{},"classes/SecurityDto.html":{},"classes/SecurityUpdateDto.html":{},"classes/Sessions-1.html":{},"classes/SignInDto.html":{},"classes/Stats-1.html":{},"classes/Suspension-1.html":{},"classes/Transaction-1.html":{},"classes/TransactionBuyer-1.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"classes/UserModel.html":{}}}],["decorators/rank.decorator",{"_index":911,"title":{},"body":{"controllers/MarketController.html":{},"controllers/UserController.html":{}}}],["decorators/user.decorator",{"_index":279,"title":{},"body":{"controllers/AuthController.html":{},"controllers/MarketController.html":{},"controllers/UserController.html":{}}}],["default",{"_index":374,"title":{},"body":{"injectables/AuthService.html":{},"classes/ConfigService.html":{},"classes/Email-1.html":{},"classes/GeneralGateway.html":{},"injectables/MarketService.html":{},"classes/Membership-1.html":{},"classes/Notifications-1.html":{},"classes/Online-1.html":{},"classes/Password-1.html":{},"classes/Rank-1.html":{},"classes/Reactions-1.html":{},"classes/Security-1.html":{},"classes/Sessions-1.html":{},"classes/Stats-1.html":{},"classes/Suspension-1.html":{},"classes/Transaction-1.html":{},"classes/TransactionBuyer-1.html":{},"classes/UserModel.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["defaults",{"_index":173,"title":{},"body":{"modules/AppModule.html":{}}}],["defaultstrategy",{"_index":333,"title":{},"body":{"modules/AuthModule.html":{}}}],["defined",{"_index":18,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BuyerAddMarketDto.html":{},"classes/BuyerMarket.html":{},"classes/BuyerRemoveMarketDto.html":{},"classes/ChangelogAuthor.html":{},"classes/ChangelogModel.html":{},"classes/CommentMarket.html":{},"classes/CommentMarketDto.html":{},"classes/CommentRemoveMarketDto.html":{},"classes/ConfigService.html":{},"classes/DiscountMarket.html":{},"classes/Email.html":{},"classes/Email-1.html":{},"classes/GeneralGateway.html":{},"injectables/JwtStrategy.html":{},"classes/Market.html":{},"controllers/MarketController.html":{},"classes/MarketModel.html":{},"injectables/MarketService.html":{},"classes/Membership.html":{},"classes/Membership-1.html":{},"classes/Notifications.html":{},"classes/Notifications-1.html":{},"classes/Online.html":{},"classes/Online-1.html":{},"classes/Password.html":{},"classes/Password-1.html":{},"classes/Rank.html":{},"classes/Rank-1.html":{},"guards/RankGuard.html":{},"classes/ReactionAddMarketDto.html":{},"classes/ReactionRemoveMarketDto.html":{},"classes/Reactions.html":{},"classes/Reactions-1.html":{},"classes/ReactionsDto.html":{},"classes/ReactionsMarket.html":{},"classes/Security.html":{},"classes/Security-1.html":{},"classes/SecurityCode.html":{},"classes/SecurityDto.html":{},"classes/SecurityUpdateDto.html":{},"classes/Sessions.html":{},"classes/Sessions-1.html":{},"classes/SignInDto.html":{},"classes/Stats.html":{},"classes/Stats-1.html":{},"classes/Suspension.html":{},"classes/Suspension-1.html":{},"classes/Transaction.html":{},"classes/Transaction-1.html":{},"classes/TransactionBuyer.html":{},"classes/TransactionBuyer-1.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"classes/UserModel.html":{},"injectables/UserService.html":{}}}],["delete",{"_index":904,"title":{},"body":{"controllers/MarketController.html":{},"injectables/MarketService.html":{},"controllers/UserController.html":{}}}],["delete('/delete/buyer",{"_index":929,"title":{},"body":{"controllers/MarketController.html":{}}}],["delete('/delete/comment",{"_index":896,"title":{},"body":{"controllers/MarketController.html":{}}}],["delete('/delete/reaction",{"_index":900,"title":{},"body":{"controllers/MarketController.html":{}}}],["delete('/reactions/remove",{"_index":1327,"title":{},"body":{"controllers/UserController.html":{}}}],["deleted",{"_index":1068,"title":{},"body":{"injectables/MarketService.html":{},"injectables/UserService.html":{}}}],["deleteuser",{"_index":1407,"title":{},"body":{"injectables/UserService.html":{}}}],["deleteuser(id",{"_index":1414,"title":{},"body":{"injectables/UserService.html":{}}}],["deleting",{"_index":1051,"title":{},"body":{"injectables/MarketService.html":{}}}],["dependencies",{"_index":65,"title":{"dependencies.html":{}},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ConfigModule.html":{},"modules/MarketModule.html":{},"modules/TransactionModule.html":{},"modules/UserModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":649,"title":{},"body":{"classes/ChangelogModel.html":{},"classes/Email.html":{},"classes/Market.html":{},"classes/MarketModel.html":{},"injectables/MarketService.html":{},"classes/Membership.html":{},"classes/Notifications.html":{},"classes/Online.html":{},"classes/Password.html":{},"classes/Rank.html":{},"classes/Reactions.html":{},"classes/Security.html":{},"classes/Sessions.html":{},"classes/Stats.html":{},"classes/Suspension.html":{},"classes/Transaction.html":{},"classes/TransactionBuyer.html":{}}}],["destination",{"_index":1300,"title":{},"body":{"controllers/UserController.html":{}}}],["device",{"_index":461,"title":{},"body":{"injectables/AuthService.html":{},"classes/BuyerAddMarketDto.html":{},"classes/BuyerMarket.html":{},"classes/ChangelogAuthor.html":{},"classes/CommentMarket.html":{},"classes/CommentMarketDto.html":{},"classes/DiscountMarket.html":{},"classes/Email.html":{},"classes/Email-1.html":{},"classes/Market.html":{},"classes/MarketModel.html":{},"injectables/MarketService.html":{},"classes/Membership.html":{},"classes/Membership-1.html":{},"classes/Notifications.html":{},"classes/Notifications-1.html":{},"classes/Online.html":{},"classes/Online-1.html":{},"classes/Password.html":{},"classes/Password-1.html":{},"classes/Rank.html":{},"classes/Rank-1.html":{},"classes/ReactionAddMarketDto.html":{},"classes/Reactions.html":{},"classes/Reactions-1.html":{},"classes/ReactionsMarket.html":{},"classes/Security.html":{},"classes/Security-1.html":{},"classes/Sessions.html":{},"classes/Sessions-1.html":{},"classes/SignInDto.html":{},"classes/Stats.html":{},"classes/Stats-1.html":{},"classes/Suspension.html":{},"classes/Suspension-1.html":{},"classes/Transaction.html":{},"classes/Transaction-1.html":{},"classes/TransactionBuyer.html":{},"classes/TransactionBuyer-1.html":{},"classes/UserDto.html":{},"classes/UserModel.html":{},"injectables/UserService.html":{}}}],["dir",{"_index":176,"title":{},"body":{"modules/AppModule.html":{},"injectables/UserService.html":{}}}],["disconnected",{"_index":818,"title":{},"body":{"classes/GeneralGateway.html":{}}}],["discount",{"_index":739,"title":{},"body":{"classes/Email.html":{},"classes/Email-1.html":{},"classes/Market.html":{},"classes/MarketModel.html":{},"injectables/MarketService.html":{},"classes/Membership.html":{},"classes/Membership-1.html":{},"classes/Notifications.html":{},"classes/Notifications-1.html":{},"classes/Online.html":{},"classes/Online-1.html":{},"classes/Password.html":{},"classes/Password-1.html":{},"classes/Rank.html":{},"classes/Rank-1.html":{},"classes/Reactions.html":{},"classes/Reactions-1.html":{},"classes/Security.html":{},"classes/Security-1.html":{},"classes/Sessions.html":{},"classes/Sessions-1.html":{},"classes/Stats.html":{},"classes/Stats-1.html":{},"classes/Suspension.html":{},"classes/Suspension-1.html":{},"classes/Transaction.html":{},"classes/Transaction-1.html":{},"classes/TransactionBuyer.html":{},"classes/TransactionBuyer-1.html":{}}}],["discount.percentage",{"_index":1017,"title":{},"body":{"injectables/MarketService.html":{}}}],["discountmarket",{"_index":622,"title":{"classes/DiscountMarket.html":{}},"body":{"classes/BuyerMarket.html":{},"classes/CommentMarket.html":{},"classes/DiscountMarket.html":{},"classes/MarketModel.html":{},"classes/ReactionsMarket.html":{},"coverage.html":{}}}],["diskstorage",{"_index":1288,"title":{},"body":{"controllers/UserController.html":{}}}],["disposition",{"_index":518,"title":{},"body":{"injectables/AuthService.html":{}}}],["documentation",{"_index":1467,"title":{},"body":{"coverage.html":{}}}],["dont",{"_index":1376,"title":{},"body":{"classes/UserModel.html":{}}}],["dotenv",{"_index":700,"title":{},"body":{"classes/ConfigService.html":{}}}],["downvote",{"_index":1458,"title":{},"body":{"injectables/UserService.html":{}}}],["dto/buyer.add.dto",{"_index":987,"title":{},"body":{"injectables/MarketService.html":{}}}],["dto/buyer.remove.dto",{"_index":910,"title":{},"body":{"controllers/MarketController.html":{},"injectables/MarketService.html":{}}}],["dto/comment.add.dto",{"_index":908,"title":{},"body":{"controllers/MarketController.html":{},"injectables/MarketService.html":{}}}],["dto/comment.remove.dto",{"_index":909,"title":{},"body":{"controllers/MarketController.html":{},"injectables/MarketService.html":{}}}],["dto/reaction.add.dto",{"_index":914,"title":{},"body":{"controllers/MarketController.html":{},"injectables/MarketService.html":{}}}],["dto/reaction.remove.dto",{"_index":915,"title":{},"body":{"controllers/MarketController.html":{},"injectables/MarketService.html":{}}}],["dto/reactions.dto",{"_index":1290,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["dto/security.dto",{"_index":274,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["dto/security.update.dto",{"_index":275,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["dto/signin.dto",{"_index":273,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["dto/update",{"_index":1285,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["due",{"_index":471,"title":{},"body":{"injectables/AuthService.html":{},"injectables/MarketService.html":{},"injectables/UserService.html":{}}}],["easily",{"_index":1559,"title":{},"body":{"index.html":{}}}],["el",{"_index":1463,"title":{},"body":{"injectables/UserService.html":{}}}],["electronic",{"_index":534,"title":{},"body":{"injectables/AuthService.html":{}}}],["eliminating",{"_index":1064,"title":{},"body":{"injectables/MarketService.html":{}}}],["email",{"_index":285,"title":{"classes/Email.html":{},"classes/Email-1.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/Email.html":{},"classes/Email-1.html":{},"interfaces/IJwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/Market.html":{},"classes/Membership.html":{},"classes/Membership-1.html":{},"classes/Notifications.html":{},"classes/Notifications-1.html":{},"classes/Online.html":{},"classes/Online-1.html":{},"classes/Password.html":{},"classes/Password-1.html":{},"classes/Rank.html":{},"classes/Rank-1.html":{},"classes/Reactions.html":{},"classes/Reactions-1.html":{},"classes/Security.html":{},"classes/Security-1.html":{},"classes/Sessions.html":{},"classes/Sessions-1.html":{},"classes/SignInDto.html":{},"classes/Stats.html":{},"classes/Stats-1.html":{},"classes/Suspension.html":{},"classes/Suspension-1.html":{},"classes/Transaction.html":{},"classes/Transaction-1.html":{},"classes/TransactionBuyer.html":{},"classes/TransactionBuyer-1.html":{},"classes/UserDto.html":{},"classes/UserModel.html":{},"coverage.html":{}}}],["email.expiration",{"_index":1436,"title":{},"body":{"injectables/UserService.html":{}}}],["email.key",{"_index":465,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["email.status",{"_index":1435,"title":{},"body":{"injectables/UserService.html":{}}}],["email.token",{"_index":1437,"title":{},"body":{"injectables/UserService.html":{}}}],["email_from",{"_index":720,"title":{},"body":{"classes/ConfigService.html":{},"miscellaneous/enumerations.html":{}}}],["email_host",{"_index":718,"title":{},"body":{"classes/ConfigService.html":{},"miscellaneous/enumerations.html":{}}}],["en_us",{"_index":187,"title":{},"body":{"modules/AppModule.html":{}}}],["enabled",{"_index":540,"title":{},"body":{"injectables/AuthService.html":{},"classes/Email.html":{},"classes/Email-1.html":{},"classes/Market.html":{},"classes/Membership.html":{},"classes/Membership-1.html":{},"classes/Notifications.html":{},"classes/Notifications-1.html":{},"classes/Online.html":{},"classes/Online-1.html":{},"classes/Password.html":{},"classes/Password-1.html":{},"classes/Rank.html":{},"classes/Rank-1.html":{},"classes/Reactions.html":{},"classes/Reactions-1.html":{},"classes/Security.html":{},"classes/Security-1.html":{},"classes/SecurityCode.html":{},"classes/SecurityUpdateDto.html":{},"classes/Sessions.html":{},"classes/Sessions-1.html":{},"classes/Stats.html":{},"classes/Stats-1.html":{},"classes/Suspension.html":{},"classes/Suspension-1.html":{},"classes/Transaction.html":{},"classes/Transaction-1.html":{},"classes/TransactionBuyer.html":{},"classes/TransactionBuyer-1.html":{}}}],["end",{"_index":1583,"title":{},"body":{"index.html":{}}}],["enough",{"_index":1378,"title":{},"body":{"classes/UserModel.html":{}}}],["entered",{"_index":575,"title":{},"body":{"injectables/AuthService.html":{}}}],["entire",{"_index":1600,"title":{},"body":{"index.html":{}}}],["enumerations",{"_index":1534,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["env",{"_index":706,"title":{},"body":{"classes/ConfigService.html":{}}}],["envconfig",{"_index":688,"title":{},"body":{"classes/ConfigService.html":{}}}],["envfilepath",{"_index":705,"title":{},"body":{"classes/ConfigService.html":{}}}],["error",{"_index":532,"title":{},"body":{"injectables/AuthService.html":{},"injectables/MarketService.html":{},"injectables/UserService.html":{}}}],["error.code",{"_index":449,"title":{},"body":{"injectables/AuthService.html":{}}}],["events",{"_index":1566,"title":{},"body":{"index.html":{}}}],["exec",{"_index":113,"title":{},"body":{"injectables/AdminService.html":{},"injectables/MarketService.html":{},"injectables/UserService.html":{}}}],["executed",{"_index":1564,"title":{},"body":{"index.html":{}}}],["executioncontext",{"_index":1112,"title":{},"body":{"guards/RankGuard.html":{}}}],["exist",{"_index":710,"title":{},"body":{"classes/ConfigService.html":{},"injectables/JwtStrategy.html":{},"injectables/MarketService.html":{},"injectables/UserService.html":{}}}],["existpath",{"_index":707,"title":{},"body":{"classes/ConfigService.html":{}}}],["exists",{"_index":454,"title":{},"body":{"injectables/AuthService.html":{}}}],["existssync",{"_index":696,"title":{},"body":{"classes/ConfigService.html":{}}}],["existssync(envfilepath",{"_index":708,"title":{},"body":{"classes/ConfigService.html":{}}}],["exp",{"_index":629,"title":{},"body":{"classes/BuyerMarket.html":{},"classes/CommentMarket.html":{},"classes/DiscountMarket.html":{},"classes/Email.html":{},"classes/Email-1.html":{},"classes/Market.html":{},"classes/Membership.html":{},"classes/Membership-1.html":{},"classes/Notifications.html":{},"classes/Notifications-1.html":{},"classes/Online.html":{},"classes/Online-1.html":{},"classes/Password.html":{},"classes/Password-1.html":{},"classes/Rank.html":{},"classes/Rank-1.html":{},"classes/Reactions.html":{},"classes/Reactions-1.html":{},"classes/ReactionsMarket.html":{},"classes/Security.html":{},"classes/Security-1.html":{},"classes/Sessions.html":{},"classes/Sessions-1.html":{},"classes/Stats.html":{},"classes/Stats-1.html":{},"classes/Suspension.html":{},"classes/Suspension-1.html":{},"classes/Transaction.html":{},"classes/Transaction-1.html":{},"classes/TransactionBuyer.html":{},"classes/TransactionBuyer-1.html":{}}}],["expiration",{"_index":730,"title":{},"body":{"classes/Email.html":{},"classes/Email-1.html":{},"classes/Market.html":{},"classes/Membership.html":{},"classes/Membership-1.html":{},"classes/Notifications.html":{},"classes/Notifications-1.html":{},"classes/Online.html":{},"classes/Online-1.html":{},"classes/Password.html":{},"classes/Password-1.html":{},"classes/Rank.html":{},"classes/Rank-1.html":{},"classes/Reactions.html":{},"classes/Reactions-1.html":{},"classes/Security.html":{},"classes/Security-1.html":{},"classes/Sessions.html":{},"classes/Sessions-1.html":{},"classes/Stats.html":{},"classes/Stats-1.html":{},"classes/Suspension.html":{},"classes/Suspension-1.html":{},"classes/Transaction.html":{},"classes/Transaction-1.html":{},"classes/TransactionBuyer.html":{},"classes/TransactionBuyer-1.html":{}}}],["expired",{"_index":546,"title":{},"body":{"injectables/AuthService.html":{}}}],["expiresin",{"_index":340,"title":{},"body":{"modules/AuthModule.html":{}}}],["export",{"_index":41,"title":{},"body":{"controllers/AdminController.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BuyerAddMarketDto.html":{},"classes/BuyerMarket.html":{},"classes/BuyerRemoveMarketDto.html":{},"classes/ChangelogAuthor.html":{},"classes/ChangelogModel.html":{},"classes/CommentMarket.html":{},"classes/CommentMarketDto.html":{},"classes/CommentRemoveMarketDto.html":{},"modules/ConfigModule.html":{},"classes/ConfigService.html":{},"classes/DiscountMarket.html":{},"classes/Email.html":{},"classes/Email-1.html":{},"classes/GeneralGateway.html":{},"interfaces/IJwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/Market.html":{},"controllers/MarketController.html":{},"classes/MarketModel.html":{},"modules/MarketModule.html":{},"injectables/MarketService.html":{},"classes/Membership.html":{},"classes/Membership-1.html":{},"classes/Notifications.html":{},"classes/Notifications-1.html":{},"classes/Online.html":{},"classes/Online-1.html":{},"classes/Password.html":{},"classes/Password-1.html":{},"classes/Rank.html":{},"classes/Rank-1.html":{},"guards/RankGuard.html":{},"classes/ReactionAddMarketDto.html":{},"classes/ReactionRemoveMarketDto.html":{},"classes/Reactions.html":{},"classes/Reactions-1.html":{},"classes/ReactionsDto.html":{},"classes/ReactionsMarket.html":{},"classes/Security.html":{},"classes/Security-1.html":{},"classes/SecurityCode.html":{},"classes/SecurityDto.html":{},"classes/SecurityUpdateDto.html":{},"classes/Sessions.html":{},"classes/Sessions-1.html":{},"classes/SignInDto.html":{},"classes/Stats.html":{},"classes/Stats-1.html":{},"classes/Suspension.html":{},"classes/Suspension-1.html":{},"classes/Transaction.html":{},"classes/Transaction-1.html":{},"classes/TransactionBuyer.html":{},"classes/TransactionBuyer-1.html":{},"controllers/TransactionController.html":{},"modules/TransactionModule.html":{},"injectables/TransactionService.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"classes/UserModel.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["exports",{"_index":70,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ConfigModule.html":{},"modules/MarketModule.html":{},"modules/TransactionModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["express",{"_index":1283,"title":{},"body":{"controllers/UserController.html":{},"dependencies.html":{}}}],["extends",{"_index":789,"title":{},"body":{"classes/Email-1.html":{},"injectables/JwtStrategy.html":{},"classes/MarketModel.html":{},"classes/Membership-1.html":{},"classes/Notifications-1.html":{},"classes/Online-1.html":{},"classes/Password-1.html":{},"classes/Rank-1.html":{},"classes/Reactions-1.html":{},"classes/Security-1.html":{},"classes/Sessions-1.html":{},"classes/Stats-1.html":{},"classes/Suspension-1.html":{},"classes/Transaction-1.html":{},"classes/TransactionBuyer-1.html":{},"classes/UserModel.html":{}}}],["extname",{"_index":1287,"title":{},"body":{"controllers/UserController.html":{}}}],["extractjwt",{"_index":833,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":838,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["factor",{"_index":561,"title":{},"body":{"injectables/AuthService.html":{}}}],["failure",{"_index":997,"title":{},"body":{"injectables/MarketService.html":{},"index.html":{}}}],["fallbacklanguage",{"_index":186,"title":{},"body":{"modules/AppModule.html":{}}}],["false",{"_index":169,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"classes/ChangelogModel.html":{},"classes/Email.html":{},"classes/Email-1.html":{},"classes/GeneralGateway.html":{},"injectables/JwtStrategy.html":{},"classes/Market.html":{},"classes/MarketModel.html":{},"classes/Membership.html":{},"classes/Membership-1.html":{},"classes/Notifications.html":{},"classes/Notifications-1.html":{},"classes/Online.html":{},"classes/Online-1.html":{},"classes/Password.html":{},"classes/Password-1.html":{},"classes/Rank.html":{},"classes/Rank-1.html":{},"classes/Reactions.html":{},"classes/Reactions-1.html":{},"classes/Security.html":{},"classes/Security-1.html":{},"classes/Sessions.html":{},"classes/Sessions-1.html":{},"classes/Stats.html":{},"classes/Stats-1.html":{},"classes/Suspension.html":{},"classes/Suspension-1.html":{},"classes/Transaction.html":{},"classes/Transaction-1.html":{},"classes/TransactionBuyer.html":{},"classes/TransactionBuyer-1.html":{},"classes/UserModel.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AdminController.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BuyerAddMarketDto.html":{},"classes/BuyerMarket.html":{},"classes/BuyerRemoveMarketDto.html":{},"classes/ChangelogAuthor.html":{},"classes/ChangelogModel.html":{},"classes/CommentMarket.html":{},"classes/CommentMarketDto.html":{},"classes/CommentRemoveMarketDto.html":{},"modules/ConfigModule.html":{},"classes/ConfigService.html":{},"classes/DiscountMarket.html":{},"classes/Email.html":{},"classes/Email-1.html":{},"classes/GeneralGateway.html":{},"interfaces/IJwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/Market.html":{},"controllers/MarketController.html":{},"classes/MarketModel.html":{},"modules/MarketModule.html":{},"injectables/MarketService.html":{},"classes/Membership.html":{},"classes/Membership-1.html":{},"classes/Notifications.html":{},"classes/Notifications-1.html":{},"classes/Online.html":{},"classes/Online-1.html":{},"classes/Password.html":{},"classes/Password-1.html":{},"classes/Rank.html":{},"classes/Rank-1.html":{},"guards/RankGuard.html":{},"classes/ReactionAddMarketDto.html":{},"classes/ReactionRemoveMarketDto.html":{},"classes/Reactions.html":{},"classes/Reactions-1.html":{},"classes/ReactionsDto.html":{},"classes/ReactionsMarket.html":{},"classes/Security.html":{},"classes/Security-1.html":{},"classes/SecurityCode.html":{},"classes/SecurityDto.html":{},"classes/SecurityUpdateDto.html":{},"classes/Sessions.html":{},"classes/Sessions-1.html":{},"classes/SignInDto.html":{},"classes/Stats.html":{},"classes/Stats-1.html":{},"classes/Suspension.html":{},"classes/Suspension-1.html":{},"classes/Transaction.html":{},"classes/Transaction-1.html":{},"classes/TransactionBuyer.html":{},"classes/TransactionBuyer-1.html":{},"controllers/TransactionController.html":{},"modules/TransactionModule.html":{},"injectables/TransactionService.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"classes/UserModel.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"index.html":{}}}],["fileinterceptor",{"_index":1281,"title":{},"body":{"controllers/UserController.html":{}}}],["fileinterceptor('cover",{"_index":1319,"title":{},"body":{"controllers/UserController.html":{}}}],["fileinterceptor('photo",{"_index":1298,"title":{},"body":{"controllers/UserController.html":{}}}],["filename",{"_index":1303,"title":{},"body":{"controllers/UserController.html":{}}}],["filepattern",{"_index":184,"title":{},"body":{"modules/AppModule.html":{}}}],["fill(null",{"_index":1308,"title":{},"body":{"controllers/UserController.html":{}}}],["filter",{"_index":980,"title":{},"body":{"injectables/MarketService.html":{}}}],["find",{"_index":107,"title":{},"body":{"injectables/AdminService.html":{},"injectables/MarketService.html":{},"injectables/UserService.html":{}}}],["findbyid(productid",{"_index":1003,"title":{},"body":{"injectables/MarketService.html":{}}}],["findbyid(securitydto.id",{"_index":552,"title":{},"body":{"injectables/AuthService.html":{}}}],["findbyid(userid",{"_index":1429,"title":{},"body":{"injectables/UserService.html":{}}}],["findbyidandupdate(id",{"_index":1447,"title":{},"body":{"injectables/UserService.html":{}}}],["findbyidandupdate(userid",{"_index":1452,"title":{},"body":{"injectables/UserService.html":{}}}],["findoneandupdate",{"_index":1057,"title":{},"body":{"injectables/MarketService.html":{},"injectables/UserService.html":{}}}],["forbiddenexception",{"_index":381,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["format",{"_index":408,"title":{},"body":{"injectables/AuthService.html":{},"classes/GeneralGateway.html":{},"index.html":{}}}],["formatted",{"_index":1601,"title":{},"body":{"index.html":{}}}],["fs",{"_index":698,"title":{},"body":{"classes/ConfigService.html":{}}}],["function",{"_index":1481,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":1541,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["gateways/general.gateway",{"_index":153,"title":{},"body":{"modules/AppModule.html":{}}}],["general",{"_index":801,"title":{},"body":{"classes/GeneralGateway.html":{},"index.html":{}}}],["generalgateway",{"_index":152,"title":{"classes/GeneralGateway.html":{}},"body":{"modules/AppModule.html":{},"classes/GeneralGateway.html":{},"coverage.html":{}}}],["generate",{"_index":528,"title":{},"body":{"injectables/AuthService.html":{}}}],["generated",{"_index":1552,"title":{},"body":{"index.html":{}}}],["generating",{"_index":488,"title":{},"body":{"injectables/AuthService.html":{}}}],["generator",{"_index":388,"title":{},"body":{"injectables/AuthService.html":{},"dependencies.html":{}}}],["gensalt",{"_index":382,"title":{},"body":{"injectables/AuthService.html":{}}}],["gensalt(10",{"_index":405,"title":{},"body":{"injectables/AuthService.html":{}}}],["get('/find/:userid",{"_index":1271,"title":{},"body":{"controllers/UserController.html":{}}}],["get('/get/changelog",{"_index":17,"title":{},"body":{"controllers/AdminController.html":{}}}],["get('/get/product/:id",{"_index":889,"title":{},"body":{"controllers/MarketController.html":{}}}],["get('/get/products/:filter",{"_index":885,"title":{},"body":{"controllers/MarketController.html":{}}}],["get(key",{"_index":693,"title":{},"body":{"classes/ConfigService.html":{}}}],["getallproducts",{"_index":866,"title":{},"body":{"controllers/MarketController.html":{},"injectables/MarketService.html":{}}}],["getallproducts(filter",{"_index":978,"title":{},"body":{"injectables/MarketService.html":{}}}],["getallproducts(productid",{"_index":882,"title":{},"body":{"controllers/MarketController.html":{}}}],["getallusers",{"_index":1258,"title":{},"body":{"controllers/UserController.html":{}}}],["getchangelog",{"_index":13,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{}}}],["gethello",{"_index":116,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getproduct",{"_index":867,"title":{},"body":{"controllers/MarketController.html":{},"injectables/MarketService.html":{}}}],["getproduct(productid",{"_index":888,"title":{},"body":{"controllers/MarketController.html":{},"injectables/MarketService.html":{}}}],["getpublicuser",{"_index":1408,"title":{},"body":{"injectables/UserService.html":{}}}],["getpublicuser(userid",{"_index":1416,"title":{},"body":{"injectables/UserService.html":{}}}],["getting",{"_index":1543,"title":{"index.html":{}},"body":{}}],["getuser",{"_index":278,"title":{},"body":{"controllers/AuthController.html":{},"controllers/MarketController.html":{},"controllers/UserController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["getuser('id",{"_index":314,"title":{},"body":{"controllers/AuthController.html":{},"controllers/MarketController.html":{},"controllers/UserController.html":{}}}],["getuser('rank",{"_index":315,"title":{},"body":{"controllers/AuthController.html":{},"controllers/MarketController.html":{},"controllers/UserController.html":{}}}],["getuser(userid",{"_index":1270,"title":{},"body":{"controllers/UserController.html":{}}}],["getusers",{"_index":1409,"title":{},"body":{"injectables/UserService.html":{}}}],["global",{"_index":1545,"title":{},"body":{"index.html":{}}}],["google_play_app",{"_index":442,"title":{},"body":{"injectables/AuthService.html":{}}}],["guard",{"_index":1104,"title":{"guards/RankGuard.html":{}},"body":{"coverage.html":{},"overview.html":{}}}],["guards",{"_index":1105,"title":{},"body":{"guards/RankGuard.html":{}}}],["guards/rank.guard",{"_index":913,"title":{},"body":{"controllers/MarketController.html":{}}}],["handlebarsadapter",{"_index":141,"title":{},"body":{"modules/AppModule.html":{}}}],["handleconnection",{"_index":795,"title":{},"body":{"classes/GeneralGateway.html":{}}}],["handleconnection(client",{"_index":804,"title":{},"body":{"classes/GeneralGateway.html":{}}}],["handledisconnect",{"_index":796,"title":{},"body":{"classes/GeneralGateway.html":{}}}],["handledisconnect(client",{"_index":807,"title":{},"body":{"classes/GeneralGateway.html":{}}}],["handlemessage(client",{"_index":821,"title":{},"body":{"classes/GeneralGateway.html":{}}}],["hash",{"_index":383,"title":{},"body":{"injectables/AuthService.html":{},"classes/ChangelogModel.html":{}}}],["hasrole",{"_index":1118,"title":{},"body":{"guards/RankGuard.html":{}}}],["headerresolver",{"_index":146,"title":{},"body":{"modules/AppModule.html":{}}}],["hello",{"_index":204,"title":{},"body":{"injectables/AppService.html":{},"classes/GeneralGateway.html":{},"classes/UserModel.html":{}}}],["helmet",{"_index":1512,"title":{},"body":{"dependencies.html":{}}}],["high",{"_index":1580,"title":{},"body":{"index.html":{}}}],["https://akatsukiapp.com/password/reset",{"_index":584,"title":{},"body":{"injectables/AuthService.html":{}}}],["https://api.akatsukiapp.com/uploads/placeholders/cover_photo.jpg",{"_index":1366,"title":{},"body":{"classes/UserModel.html":{}}}],["https://api.akatsukiapp.com/uploads/placeholders/profile_photo.jpg",{"_index":1384,"title":{},"body":{"classes/UserModel.html":{}}}],["https://api.akatsukiapp.com:3678/v1",{"_index":725,"title":{},"body":{"classes/ConfigService.html":{}}}],["https://play.google.com/akatsukiapp_",{"_index":443,"title":{},"body":{"injectables/AuthService.html":{}}}],["httpstatus",{"_index":35,"title":{},"body":{"controllers/AdminController.html":{},"controllers/AuthController.html":{},"controllers/MarketController.html":{},"controllers/UserController.html":{}}}],["httpstatus.created",{"_index":50,"title":{},"body":{"controllers/AdminController.html":{},"controllers/AuthController.html":{},"controllers/MarketController.html":{}}}],["httpstatus.ok",{"_index":295,"title":{},"body":{"controllers/AuthController.html":{},"controllers/MarketController.html":{},"controllers/UserController.html":{}}}],["i18n",{"_index":98,"title":{},"body":{"injectables/AdminService.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/MarketController.html":{},"injectables/MarketService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["i18nlang",{"_index":271,"title":{},"body":{"controllers/AuthController.html":{},"controllers/MarketController.html":{},"controllers/UserController.html":{}}}],["i18nmodule",{"_index":144,"title":{},"body":{"modules/AppModule.html":{}}}],["i18nmodule.forroot",{"_index":182,"title":{},"body":{"modules/AppModule.html":{}}}],["i18nrequestscopeservice",{"_index":90,"title":{},"body":{"injectables/AdminService.html":{},"injectables/AuthService.html":{},"injectables/MarketService.html":{},"injectables/UserService.html":{}}}],["i18nservice",{"_index":89,"title":{},"body":{"injectables/AdminService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/MarketController.html":{},"injectables/MarketService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["id",{"_index":491,"title":{},"body":{"injectables/AuthService.html":{},"classes/Email.html":{},"classes/Email-1.html":{},"classes/GeneralGateway.html":{},"interfaces/IJwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/Market.html":{},"classes/Membership.html":{},"classes/Membership-1.html":{},"classes/Notifications.html":{},"classes/Notifications-1.html":{},"classes/Online.html":{},"classes/Online-1.html":{},"classes/Password.html":{},"classes/Password-1.html":{},"classes/Rank.html":{},"classes/Rank-1.html":{},"classes/Reactions.html":{},"classes/Reactions-1.html":{},"classes/Security.html":{},"classes/Security-1.html":{},"classes/SecurityCode.html":{},"classes/SecurityDto.html":{},"classes/SecurityUpdateDto.html":{},"classes/Sessions.html":{},"classes/Sessions-1.html":{},"classes/Stats.html":{},"classes/Stats-1.html":{},"classes/Suspension.html":{},"classes/Suspension-1.html":{},"classes/Transaction.html":{},"classes/Transaction-1.html":{},"classes/TransactionBuyer.html":{},"classes/TransactionBuyer-1.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["identifier",{"_index":1468,"title":{},"body":{"coverage.html":{}}}],["iduserrequest",{"_index":884,"title":{},"body":{"controllers/MarketController.html":{},"injectables/MarketService.html":{}}}],["ignore",{"_index":497,"title":{},"body":{"injectables/AuthService.html":{}}}],["ignoreexpiration",{"_index":839,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["ijwtpayload",{"_index":395,"title":{"interfaces/IJwtPayload.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/IJwtPayload.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["implements",{"_index":791,"title":{},"body":{"classes/GeneralGateway.html":{},"guards/RankGuard.html":{}}}],["import",{"_index":31,"title":{},"body":{"controllers/AdminController.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BuyerAddMarketDto.html":{},"classes/BuyerMarket.html":{},"classes/ChangelogAuthor.html":{},"classes/ChangelogModel.html":{},"classes/CommentMarket.html":{},"classes/CommentMarketDto.html":{},"modules/ConfigModule.html":{},"classes/ConfigService.html":{},"classes/DiscountMarket.html":{},"classes/Email-1.html":{},"classes/GeneralGateway.html":{},"injectables/JwtStrategy.html":{},"controllers/MarketController.html":{},"classes/MarketModel.html":{},"modules/MarketModule.html":{},"injectables/MarketService.html":{},"classes/Membership-1.html":{},"classes/Notifications-1.html":{},"classes/Online-1.html":{},"classes/Password-1.html":{},"classes/Rank-1.html":{},"guards/RankGuard.html":{},"classes/ReactionAddMarketDto.html":{},"classes/Reactions-1.html":{},"classes/ReactionsDto.html":{},"classes/ReactionsMarket.html":{},"classes/Security-1.html":{},"classes/SecurityCode.html":{},"classes/SecurityDto.html":{},"classes/SecurityUpdateDto.html":{},"classes/Sessions-1.html":{},"classes/SignInDto.html":{},"classes/Stats-1.html":{},"classes/Suspension-1.html":{},"classes/Transaction-1.html":{},"classes/TransactionBuyer-1.html":{},"controllers/TransactionController.html":{},"modules/TransactionModule.html":{},"injectables/TransactionService.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"classes/UserModel.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["important",{"_index":1562,"title":{},"body":{"index.html":{}}}],["imports",{"_index":81,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/MarketModule.html":{},"modules/UserModule.html":{}}}],["incorrect",{"_index":472,"title":{},"body":{"injectables/AuthService.html":{}}}],["incorrectly",{"_index":574,"title":{},"body":{"injectables/AuthService.html":{}}}],["index",{"_index":9,"title":{"index.html":{}},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BuyerAddMarketDto.html":{},"classes/BuyerMarket.html":{},"classes/BuyerRemoveMarketDto.html":{},"classes/ChangelogAuthor.html":{},"classes/ChangelogModel.html":{},"classes/CommentMarket.html":{},"classes/CommentMarketDto.html":{},"classes/CommentRemoveMarketDto.html":{},"classes/ConfigService.html":{},"classes/DiscountMarket.html":{},"classes/Email.html":{},"classes/Email-1.html":{},"classes/GeneralGateway.html":{},"interfaces/IJwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/Market.html":{},"controllers/MarketController.html":{},"classes/MarketModel.html":{},"injectables/MarketService.html":{},"classes/Membership.html":{},"classes/Membership-1.html":{},"classes/Notifications.html":{},"classes/Notifications-1.html":{},"classes/Online.html":{},"classes/Online-1.html":{},"classes/Password.html":{},"classes/Password-1.html":{},"classes/Rank.html":{},"classes/Rank-1.html":{},"guards/RankGuard.html":{},"classes/ReactionAddMarketDto.html":{},"classes/ReactionRemoveMarketDto.html":{},"classes/Reactions.html":{},"classes/Reactions-1.html":{},"classes/ReactionsDto.html":{},"classes/ReactionsMarket.html":{},"classes/Security.html":{},"classes/Security-1.html":{},"classes/SecurityCode.html":{},"classes/SecurityDto.html":{},"classes/SecurityUpdateDto.html":{},"classes/Sessions.html":{},"classes/Sessions-1.html":{},"classes/SignInDto.html":{},"classes/Stats.html":{},"classes/Stats-1.html":{},"classes/Suspension.html":{},"classes/Suspension-1.html":{},"classes/Transaction.html":{},"classes/Transaction-1.html":{},"classes/TransactionBuyer.html":{},"classes/TransactionBuyer-1.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"classes/UserModel.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AdminController.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BuyerAddMarketDto.html":{},"classes/BuyerMarket.html":{},"classes/BuyerRemoveMarketDto.html":{},"classes/ChangelogAuthor.html":{},"classes/ChangelogModel.html":{},"classes/CommentMarket.html":{},"classes/CommentMarketDto.html":{},"classes/CommentRemoveMarketDto.html":{},"modules/ConfigModule.html":{},"classes/ConfigService.html":{},"classes/DiscountMarket.html":{},"classes/Email.html":{},"classes/Email-1.html":{},"classes/GeneralGateway.html":{},"interfaces/IJwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/Market.html":{},"controllers/MarketController.html":{},"classes/MarketModel.html":{},"modules/MarketModule.html":{},"injectables/MarketService.html":{},"classes/Membership.html":{},"classes/Membership-1.html":{},"classes/Notifications.html":{},"classes/Notifications-1.html":{},"classes/Online.html":{},"classes/Online-1.html":{},"classes/Password.html":{},"classes/Password-1.html":{},"classes/Rank.html":{},"classes/Rank-1.html":{},"guards/RankGuard.html":{},"classes/ReactionAddMarketDto.html":{},"classes/ReactionRemoveMarketDto.html":{},"classes/Reactions.html":{},"classes/Reactions-1.html":{},"classes/ReactionsDto.html":{},"classes/ReactionsMarket.html":{},"classes/Security.html":{},"classes/Security-1.html":{},"classes/SecurityCode.html":{},"classes/SecurityDto.html":{},"classes/SecurityUpdateDto.html":{},"classes/Sessions.html":{},"classes/Sessions-1.html":{},"classes/SignInDto.html":{},"classes/Stats.html":{},"classes/Stats-1.html":{},"classes/Suspension.html":{},"classes/Suspension-1.html":{},"classes/Transaction.html":{},"classes/Transaction-1.html":{},"classes/TransactionBuyer.html":{},"classes/TransactionBuyer-1.html":{},"controllers/TransactionController.html":{},"modules/TransactionModule.html":{},"injectables/TransactionService.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"classes/UserModel.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["inform",{"_index":1589,"title":{},"body":{"index.html":{}}}],["information",{"_index":784,"title":{},"body":{"classes/Email-1.html":{},"classes/Membership-1.html":{},"classes/Notifications-1.html":{},"classes/Online-1.html":{},"classes/Password-1.html":{},"classes/Rank-1.html":{},"classes/Reactions-1.html":{},"classes/Security-1.html":{},"classes/Sessions-1.html":{},"classes/Stats-1.html":{},"classes/Suspension-1.html":{},"classes/Transaction-1.html":{},"classes/TransactionBuyer-1.html":{},"injectables/UserService.html":{}}}],["informed",{"_index":1569,"title":{},"body":{"index.html":{}}}],["initialized",{"_index":1596,"title":{},"body":{"index.html":{}}}],["inject",{"_index":160,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["injectable",{"_index":83,"title":{"injectables/AdminService.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/MarketService.html":{},"injectables/TransactionService.html":{},"injectables/UserService.html":{}},"body":{"injectables/AdminService.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/MarketService.html":{},"guards/RankGuard.html":{},"injectables/TransactionService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":84,"title":{},"body":{"injectables/AdminService.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/MarketService.html":{},"injectables/TransactionService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["injectmodel",{"_index":96,"title":{},"body":{"injectables/AdminService.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/MarketService.html":{},"injectables/UserService.html":{}}}],["injectmodel(changelogmodel",{"_index":99,"title":{},"body":{"injectables/AdminService.html":{}}}],["injectmodel(marketmodel",{"_index":988,"title":{},"body":{"injectables/MarketService.html":{}}}],["injectmodel(usermodel",{"_index":397,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/UserService.html":{}}}],["insufficient",{"_index":526,"title":{},"body":{"injectables/AuthService.html":{}}}],["intended",{"_index":1555,"title":{},"body":{"index.html":{}}}],["interface",{"_index":822,"title":{"interfaces/IJwtPayload.html":{}},"body":{"interfaces/IJwtPayload.html":{},"coverage.html":{},"overview.html":{}}}],["interfaces",{"_index":823,"title":{},"body":{"interfaces/IJwtPayload.html":{}}}],["invalid",{"_index":545,"title":{},"body":{"injectables/AuthService.html":{}}}],["ip",{"_index":462,"title":{},"body":{"injectables/AuthService.html":{},"classes/BuyerAddMarketDto.html":{},"classes/BuyerMarket.html":{},"classes/ChangelogAuthor.html":{},"classes/CommentMarket.html":{},"classes/CommentMarketDto.html":{},"classes/DiscountMarket.html":{},"classes/Email.html":{},"classes/Email-1.html":{},"classes/Market.html":{},"classes/MarketModel.html":{},"injectables/MarketService.html":{},"classes/Membership.html":{},"classes/Membership-1.html":{},"classes/Notifications.html":{},"classes/Notifications-1.html":{},"classes/Online.html":{},"classes/Online-1.html":{},"classes/Password.html":{},"classes/Password-1.html":{},"classes/Rank.html":{},"classes/Rank-1.html":{},"classes/ReactionAddMarketDto.html":{},"classes/Reactions.html":{},"classes/Reactions-1.html":{},"classes/ReactionsMarket.html":{},"classes/Security.html":{},"classes/Security-1.html":{},"classes/Sessions.html":{},"classes/Sessions-1.html":{},"classes/SignInDto.html":{},"classes/Stats.html":{},"classes/Stats-1.html":{},"classes/Suspension.html":{},"classes/Suspension-1.html":{},"classes/Transaction.html":{},"classes/Transaction-1.html":{},"classes/TransactionBuyer.html":{},"classes/TransactionBuyer-1.html":{},"classes/UserDto.html":{},"classes/UserModel.html":{},"injectables/UserService.html":{}}}],["isboolean",{"_index":1174,"title":{},"body":{"classes/SecurityCode.html":{},"classes/SecurityUpdateDto.html":{}}}],["isboolean()@isnotempty",{"_index":1171,"title":{},"body":{"classes/SecurityCode.html":{}}}],["isdevenv",{"_index":702,"title":{},"body":{"classes/ConfigService.html":{}}}],["isemail",{"_index":1199,"title":{},"body":{"classes/SignInDto.html":{}}}],["isnotempty",{"_index":1143,"title":{},"body":{"classes/ReactionsDto.html":{},"classes/SecurityCode.html":{},"classes/SecurityDto.html":{},"classes/SecurityUpdateDto.html":{},"classes/SignInDto.html":{},"classes/UpdateUserDto.html":{}}}],["isnotempty()@isemail",{"_index":1194,"title":{},"body":{"classes/SignInDto.html":{}}}],["isnotempty()@isstring",{"_index":1196,"title":{},"body":{"classes/SignInDto.html":{}}}],["isnumber",{"_index":1173,"title":{},"body":{"classes/SecurityCode.html":{},"classes/SecurityDto.html":{},"classes/SecurityUpdateDto.html":{}}}],["isnumber()@isnotempty",{"_index":1165,"title":{},"body":{"classes/SecurityCode.html":{},"classes/SecurityDto.html":{}}}],["ispasswordmatch",{"_index":475,"title":{},"body":{"injectables/AuthService.html":{}}}],["isstring",{"_index":1142,"title":{},"body":{"classes/ReactionsDto.html":{},"classes/SecurityCode.html":{},"classes/SecurityDto.html":{},"classes/SecurityUpdateDto.html":{},"classes/SignInDto.html":{},"classes/UpdateUserDto.html":{}}}],["isstring()@isnotempty",{"_index":1138,"title":{},"body":{"classes/ReactionsDto.html":{},"classes/SecurityDto.html":{},"classes/SecurityUpdateDto.html":{},"classes/UpdateUserDto.html":{}}}],["item",{"_index":767,"title":{},"body":{"classes/Email.html":{},"classes/Email-1.html":{},"classes/Market.html":{},"classes/Membership.html":{},"classes/Membership-1.html":{},"classes/Notifications.html":{},"classes/Notifications-1.html":{},"classes/Online.html":{},"classes/Online-1.html":{},"classes/Password.html":{},"classes/Password-1.html":{},"classes/Rank.html":{},"classes/Rank-1.html":{},"classes/Reactions.html":{},"classes/Reactions-1.html":{},"classes/Security.html":{},"classes/Security-1.html":{},"classes/Sessions.html":{},"classes/Sessions-1.html":{},"classes/Stats.html":{},"classes/Stats-1.html":{},"classes/Suspension.html":{},"classes/Suspension-1.html":{},"classes/Transaction.html":{},"classes/Transaction-1.html":{},"classes/TransactionBuyer.html":{},"classes/TransactionBuyer-1.html":{}}}],["items",{"_index":962,"title":{},"body":{"classes/MarketModel.html":{},"classes/UserModel.html":{}}}],["join",{"_index":148,"title":{},"body":{"modules/AppModule.html":{},"controllers/UserController.html":{}}}],["join(__dirname",{"_index":183,"title":{},"body":{"modules/AppModule.html":{}}}],["json",{"_index":185,"title":{},"body":{"modules/AppModule.html":{}}}],["jsonwebtoken",{"_index":1514,"title":{},"body":{"dependencies.html":{}}}],["jwt",{"_index":334,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["jwt.payload.interface",{"_index":396,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["jwtfromrequest",{"_index":837,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":329,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.registerasync",{"_index":335,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtservice",{"_index":351,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":324,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["ket",{"_index":701,"title":{},"body":{"classes/ConfigService.html":{}}}],["key",{"_index":695,"title":{},"body":{"classes/ConfigService.html":{},"classes/Email.html":{},"classes/Email-1.html":{},"classes/Market.html":{},"classes/Membership.html":{},"classes/Membership-1.html":{},"classes/Notifications.html":{},"classes/Notifications-1.html":{},"classes/Online.html":{},"classes/Online-1.html":{},"classes/Password.html":{},"classes/Password-1.html":{},"classes/Rank.html":{},"classes/Rank-1.html":{},"classes/Reactions.html":{},"classes/Reactions-1.html":{},"classes/Security.html":{},"classes/Security-1.html":{},"classes/Sessions.html":{},"classes/Sessions-1.html":{},"classes/Stats.html":{},"classes/Stats-1.html":{},"classes/Suspension.html":{},"classes/Suspension-1.html":{},"classes/Transaction.html":{},"classes/Transaction-1.html":{},"classes/TransactionBuyer.html":{},"classes/TransactionBuyer-1.html":{},"classes/UpdateUserDto.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["keys/configuration.enum",{"_index":139,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/UserController.html":{}}}],["keys/ranks.enum",{"_index":390,"title":{},"body":{"injectables/AuthService.html":{},"controllers/MarketController.html":{},"controllers/UserController.html":{}}}],["kodachi",{"_index":1549,"title":{},"body":{"index.html":{}}}],["l",{"_index":192,"title":{},"body":{"modules/AppModule.html":{}}}],["lang",{"_index":222,"title":{},"body":{"controllers/AuthController.html":{},"controllers/MarketController.html":{},"controllers/UserController.html":{}}}],["last",{"_index":761,"title":{},"body":{"classes/Email.html":{},"classes/Email-1.html":{},"classes/GeneralGateway.html":{},"classes/Market.html":{},"classes/Membership.html":{},"classes/Membership-1.html":{},"classes/Notifications.html":{},"classes/Notifications-1.html":{},"classes/Online.html":{},"classes/Online-1.html":{},"classes/Password.html":{},"classes/Password-1.html":{},"classes/Rank.html":{},"classes/Rank-1.html":{},"classes/Reactions.html":{},"classes/Reactions-1.html":{},"classes/Security.html":{},"classes/Security-1.html":{},"classes/Sessions.html":{},"classes/Sessions-1.html":{},"classes/Stats.html":{},"classes/Stats-1.html":{},"classes/Suspension.html":{},"classes/Suspension-1.html":{},"classes/Transaction.html":{},"classes/Transaction-1.html":{},"classes/TransactionBuyer.html":{},"classes/TransactionBuyer-1.html":{},"injectables/UserService.html":{}}}],["lat",{"_index":825,"title":{},"body":{"interfaces/IJwtPayload.html":{}}}],["leakage",{"_index":1576,"title":{},"body":{"index.html":{}}}],["legend",{"_index":66,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ConfigModule.html":{},"modules/MarketModule.html":{},"modules/TransactionModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["limit",{"_index":1510,"title":{},"body":{"dependencies.html":{}}}],["line",{"_index":764,"title":{},"body":{"classes/Email.html":{},"classes/Email-1.html":{},"classes/Market.html":{},"classes/Membership.html":{},"classes/Membership-1.html":{},"classes/Notifications.html":{},"classes/Notifications-1.html":{},"classes/Online.html":{},"classes/Online-1.html":{},"classes/Password.html":{},"classes/Password-1.html":{},"classes/Rank.html":{},"classes/Rank-1.html":{},"classes/Reactions.html":{},"classes/Reactions-1.html":{},"classes/Security.html":{},"classes/Security-1.html":{},"classes/Sessions.html":{},"classes/Sessions-1.html":{},"classes/Stats.html":{},"classes/Stats-1.html":{},"classes/Suspension.html":{},"classes/Suspension-1.html":{},"classes/Transaction.html":{},"classes/Transaction-1.html":{},"classes/TransactionBuyer.html":{},"classes/TransactionBuyer-1.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"classes/UserModel.html":{}}}],["list",{"_index":1431,"title":{},"body":{"injectables/UserService.html":{}}}],["literal",{"_index":690,"title":{},"body":{"classes/ConfigService.html":{},"injectables/UserService.html":{}}}],["local",{"_index":1614,"title":{},"body":{"index.html":{}}}],["locale",{"_index":191,"title":{},"body":{"modules/AppModule.html":{}}}],["locally",{"_index":1597,"title":{},"body":{"index.html":{}}}],["log",{"_index":501,"title":{},"body":{"injectables/AuthService.html":{}}}],["logged",{"_index":520,"title":{},"body":{"injectables/AuthService.html":{},"classes/GeneralGateway.html":{}}}],["logger",{"_index":344,"title":{},"body":{"injectables/AuthService.html":{},"classes/ConfigService.html":{},"classes/GeneralGateway.html":{},"injectables/MarketService.html":{},"injectables/UserService.html":{}}}],["logger('authentication",{"_index":376,"title":{},"body":{"injectables/AuthService.html":{}}}],["logger('configuration",{"_index":692,"title":{},"body":{"classes/ConfigService.html":{}}}],["logger('gateway",{"_index":800,"title":{},"body":{"classes/GeneralGateway.html":{}}}],["logger('market",{"_index":985,"title":{},"body":{"injectables/MarketService.html":{}}}],["logger('user",{"_index":1428,"title":{},"body":{"injectables/UserService.html":{}}}],["logging",{"_index":466,"title":{},"body":{"injectables/AuthService.html":{}}}],["login",{"_index":469,"title":{},"body":{"injectables/AuthService.html":{}}}],["logout",{"_index":210,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["logout(userid",{"_index":226,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["lowercase",{"_index":778,"title":{},"body":{"classes/Email-1.html":{},"classes/Membership-1.html":{},"classes/Notifications-1.html":{},"classes/Online-1.html":{},"classes/Password-1.html":{},"classes/Rank-1.html":{},"classes/Reactions-1.html":{},"classes/Security-1.html":{},"classes/Sessions-1.html":{},"classes/Stats-1.html":{},"classes/Suspension-1.html":{},"classes/Transaction-1.html":{},"classes/TransactionBuyer-1.html":{},"classes/UserModel.html":{}}}],["mailermodule",{"_index":140,"title":{},"body":{"modules/AppModule.html":{}}}],["mailermodule.forrootasync",{"_index":170,"title":{},"body":{"modules/AppModule.html":{}}}],["mailerservice",{"_index":350,"title":{},"body":{"injectables/AuthService.html":{}}}],["mailservice",{"_index":349,"title":{},"body":{"injectables/AuthService.html":{}}}],["maintain",{"_index":1602,"title":{},"body":{"index.html":{}}}],["make",{"_index":1590,"title":{},"body":{"index.html":{}}}],["manager",{"_index":1502,"title":{},"body":{"dependencies.html":{}}}],["map",{"_index":1309,"title":{},"body":{"controllers/UserController.html":{}}}],["market",{"_index":737,"title":{"classes/Market.html":{}},"body":{"classes/Email.html":{},"classes/Email-1.html":{},"classes/Market.html":{},"controllers/MarketController.html":{},"classes/MarketModel.html":{},"injectables/MarketService.html":{},"classes/Membership.html":{},"classes/Membership-1.html":{},"classes/Notifications.html":{},"classes/Notifications-1.html":{},"classes/Online.html":{},"classes/Online-1.html":{},"classes/Password.html":{},"classes/Password-1.html":{},"classes/Rank.html":{},"classes/Rank-1.html":{},"classes/Reactions.html":{},"classes/Reactions-1.html":{},"classes/Security.html":{},"classes/Security-1.html":{},"classes/Sessions.html":{},"classes/Sessions-1.html":{},"classes/Stats.html":{},"classes/Stats-1.html":{},"classes/Suspension.html":{},"classes/Suspension-1.html":{},"classes/Transaction.html":{},"classes/Transaction-1.html":{},"classes/TransactionBuyer.html":{},"classes/TransactionBuyer-1.html":{},"classes/UserDto.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["market.controller",{"_index":967,"title":{},"body":{"modules/MarketModule.html":{}}}],["market.data.model",{"_index":953,"title":{},"body":{"classes/MarketModel.html":{}}}],["market.service",{"_index":906,"title":{},"body":{"controllers/MarketController.html":{},"modules/MarketModule.html":{}}}],["marketcontroller",{"_index":861,"title":{"controllers/MarketController.html":{}},"body":{"controllers/MarketController.html":{},"modules/MarketModule.html":{},"coverage.html":{}}}],["marketmodel",{"_index":875,"title":{"classes/MarketModel.html":{}},"body":{"controllers/MarketController.html":{},"classes/MarketModel.html":{},"modules/MarketModule.html":{},"injectables/MarketService.html":{},"coverage.html":{}}}],["marketmodel.author",{"_index":993,"title":{},"body":{"injectables/MarketService.html":{}}}],["marketmodel.device",{"_index":994,"title":{},"body":{"injectables/MarketService.html":{}}}],["marketmodel.discount.percentage",{"_index":991,"title":{},"body":{"injectables/MarketService.html":{}}}],["marketmodel.ip",{"_index":995,"title":{},"body":{"injectables/MarketService.html":{}}}],["marketmodel.name",{"_index":989,"title":{},"body":{"injectables/MarketService.html":{}}}],["marketmodel.price",{"_index":990,"title":{},"body":{"injectables/MarketService.html":{}}}],["marketmodule",{"_index":128,"title":{"modules/MarketModule.html":{}},"body":{"modules/AppModule.html":{},"modules/MarketModule.html":{},"modules.html":{},"overview.html":{}}}],["marketservice",{"_index":905,"title":{"injectables/MarketService.html":{}},"body":{"controllers/MarketController.html":{},"modules/MarketModule.html":{},"injectables/MarketService.html":{},"coverage.html":{},"overview.html":{}}}],["master",{"_index":1618,"title":{},"body":{"index.html":{}}}],["matching",{"_index":60,"title":{},"body":{"controllers/AdminController.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BuyerAddMarketDto.html":{},"classes/BuyerMarket.html":{},"classes/BuyerRemoveMarketDto.html":{},"classes/ChangelogAuthor.html":{},"classes/ChangelogModel.html":{},"classes/CommentMarket.html":{},"classes/CommentMarketDto.html":{},"classes/CommentRemoveMarketDto.html":{},"modules/ConfigModule.html":{},"classes/ConfigService.html":{},"classes/DiscountMarket.html":{},"classes/Email.html":{},"classes/Email-1.html":{},"classes/GeneralGateway.html":{},"interfaces/IJwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/Market.html":{},"controllers/MarketController.html":{},"classes/MarketModel.html":{},"modules/MarketModule.html":{},"injectables/MarketService.html":{},"classes/Membership.html":{},"classes/Membership-1.html":{},"classes/Notifications.html":{},"classes/Notifications-1.html":{},"classes/Online.html":{},"classes/Online-1.html":{},"classes/Password.html":{},"classes/Password-1.html":{},"classes/Rank.html":{},"classes/Rank-1.html":{},"guards/RankGuard.html":{},"classes/ReactionAddMarketDto.html":{},"classes/ReactionRemoveMarketDto.html":{},"classes/Reactions.html":{},"classes/Reactions-1.html":{},"classes/ReactionsDto.html":{},"classes/ReactionsMarket.html":{},"classes/Security.html":{},"classes/Security-1.html":{},"classes/SecurityCode.html":{},"classes/SecurityDto.html":{},"classes/SecurityUpdateDto.html":{},"classes/Sessions.html":{},"classes/Sessions-1.html":{},"classes/SignInDto.html":{},"classes/Stats.html":{},"classes/Stats-1.html":{},"classes/Suspension.html":{},"classes/Suspension-1.html":{},"classes/Transaction.html":{},"classes/Transaction-1.html":{},"classes/TransactionBuyer.html":{},"classes/TransactionBuyer-1.html":{},"controllers/TransactionController.html":{},"modules/TransactionModule.html":{},"injectables/TransactionService.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"classes/UserModel.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["math.round(math.random",{"_index":1310,"title":{},"body":{"controllers/UserController.html":{}}}],["max",{"_index":626,"title":{},"body":{"classes/BuyerMarket.html":{},"classes/CommentMarket.html":{},"classes/DiscountMarket.html":{},"classes/Email-1.html":{},"classes/MarketModel.html":{},"classes/Membership-1.html":{},"classes/Notifications-1.html":{},"classes/Online-1.html":{},"classes/Password-1.html":{},"classes/Rank-1.html":{},"classes/Reactions-1.html":{},"classes/ReactionsMarket.html":{},"classes/Security-1.html":{},"classes/Sessions-1.html":{},"classes/Stats-1.html":{},"classes/Suspension-1.html":{},"classes/Transaction-1.html":{},"classes/TransactionBuyer-1.html":{}}}],["maxlength",{"_index":635,"title":{},"body":{"classes/BuyerMarket.html":{},"classes/ChangelogModel.html":{},"classes/CommentMarket.html":{},"classes/DiscountMarket.html":{},"classes/Email-1.html":{},"classes/MarketModel.html":{},"classes/Membership-1.html":{},"classes/Notifications-1.html":{},"classes/Online-1.html":{},"classes/Password-1.html":{},"classes/Rank-1.html":{},"classes/Reactions-1.html":{},"classes/ReactionsMarket.html":{},"classes/Security-1.html":{},"classes/Sessions-1.html":{},"classes/Stats-1.html":{},"classes/Suspension-1.html":{},"classes/Transaction-1.html":{},"classes/TransactionBuyer-1.html":{},"classes/UserModel.html":{}}}],["membership",{"_index":754,"title":{"classes/Membership.html":{},"classes/Membership-1.html":{}},"body":{"classes/Email.html":{},"classes/Email-1.html":{},"classes/Market.html":{},"classes/Membership.html":{},"classes/Membership-1.html":{},"classes/Notifications.html":{},"classes/Notifications-1.html":{},"classes/Online.html":{},"classes/Online-1.html":{},"classes/Password.html":{},"classes/Password-1.html":{},"classes/Rank.html":{},"classes/Rank-1.html":{},"classes/Reactions.html":{},"classes/Reactions-1.html":{},"classes/Security.html":{},"classes/Security-1.html":{},"classes/Sessions.html":{},"classes/Sessions-1.html":{},"classes/Stats.html":{},"classes/Stats-1.html":{},"classes/Suspension.html":{},"classes/Suspension-1.html":{},"classes/Transaction.html":{},"classes/Transaction-1.html":{},"classes/TransactionBuyer.html":{},"classes/TransactionBuyer-1.html":{},"classes/UserDto.html":{},"classes/UserModel.html":{},"coverage.html":{}}}],["message",{"_index":51,"title":{},"body":{"controllers/AdminController.html":{},"controllers/AuthController.html":{},"classes/Email.html":{},"classes/Email-1.html":{},"classes/Market.html":{},"controllers/MarketController.html":{},"classes/Membership.html":{},"classes/Membership-1.html":{},"classes/Notifications.html":{},"classes/Notifications-1.html":{},"classes/Online.html":{},"classes/Online-1.html":{},"classes/Password.html":{},"classes/Password-1.html":{},"classes/Rank.html":{},"classes/Rank-1.html":{},"classes/Reactions.html":{},"classes/Reactions-1.html":{},"classes/Security.html":{},"classes/Security-1.html":{},"classes/Sessions.html":{},"classes/Sessions-1.html":{},"classes/Stats.html":{},"classes/Stats-1.html":{},"classes/Suspension.html":{},"classes/Suspension-1.html":{},"classes/Transaction.html":{},"classes/Transaction-1.html":{},"classes/TransactionBuyer.html":{},"classes/TransactionBuyer-1.html":{},"controllers/UserController.html":{}}}],["metadata",{"_index":1526,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":10,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ConfigService.html":{},"classes/GeneralGateway.html":{},"injectables/JwtStrategy.html":{},"controllers/MarketController.html":{},"injectables/MarketService.html":{},"guards/RankGuard.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["min",{"_index":624,"title":{},"body":{"classes/BuyerMarket.html":{},"classes/CommentMarket.html":{},"classes/DiscountMarket.html":{},"classes/Email-1.html":{},"classes/MarketModel.html":{},"classes/Membership-1.html":{},"classes/Notifications-1.html":{},"classes/Online-1.html":{},"classes/Password-1.html":{},"classes/Rank-1.html":{},"classes/Reactions-1.html":{},"classes/ReactionsMarket.html":{},"classes/Security-1.html":{},"classes/Sessions-1.html":{},"classes/Stats-1.html":{},"classes/Suspension-1.html":{},"classes/Transaction-1.html":{},"classes/TransactionBuyer-1.html":{}}}],["minlength",{"_index":633,"title":{},"body":{"classes/BuyerMarket.html":{},"classes/ChangelogModel.html":{},"classes/CommentMarket.html":{},"classes/DiscountMarket.html":{},"classes/Email-1.html":{},"classes/MarketModel.html":{},"classes/Membership-1.html":{},"classes/Notifications-1.html":{},"classes/Online-1.html":{},"classes/Password-1.html":{},"classes/Rank-1.html":{},"classes/Reactions-1.html":{},"classes/ReactionsMarket.html":{},"classes/Security-1.html":{},"classes/Sessions-1.html":{},"classes/Stats-1.html":{},"classes/Suspension-1.html":{},"classes/Transaction-1.html":{},"classes/TransactionBuyer-1.html":{},"classes/UserModel.html":{}}}],["minutes",{"_index":412,"title":{},"body":{"injectables/AuthService.html":{},"classes/GeneralGateway.html":{}}}],["miscellaneous",{"_index":1533,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mod",{"_index":756,"title":{},"body":{"classes/Email.html":{},"classes/Email-1.html":{},"classes/Market.html":{},"classes/Membership.html":{},"classes/Membership-1.html":{},"classes/Notifications.html":{},"classes/Notifications-1.html":{},"classes/Online.html":{},"classes/Online-1.html":{},"classes/Password.html":{},"classes/Password-1.html":{},"classes/Rank.html":{},"classes/Rank-1.html":{},"classes/Reactions.html":{},"classes/Reactions-1.html":{},"classes/Security.html":{},"classes/Security-1.html":{},"classes/Sessions.html":{},"classes/Sessions-1.html":{},"classes/Stats.html":{},"classes/Stats-1.html":{},"classes/Suspension.html":{},"classes/Suspension-1.html":{},"classes/Transaction.html":{},"classes/Transaction-1.html":{},"classes/TransactionBuyer.html":{},"classes/TransactionBuyer-1.html":{}}}],["mode",{"_index":760,"title":{},"body":{"classes/Email.html":{},"classes/Email-1.html":{},"classes/GeneralGateway.html":{},"classes/Market.html":{},"classes/Membership.html":{},"classes/Membership-1.html":{},"classes/Notifications.html":{},"classes/Notifications-1.html":{},"classes/Online.html":{},"classes/Online-1.html":{},"classes/Password.html":{},"classes/Password-1.html":{},"classes/Rank.html":{},"classes/Rank-1.html":{},"classes/Reactions.html":{},"classes/Reactions-1.html":{},"classes/Security.html":{},"classes/Security-1.html":{},"classes/Sessions.html":{},"classes/Sessions-1.html":{},"classes/Stats.html":{},"classes/Stats-1.html":{},"classes/Suspension.html":{},"classes/Suspension-1.html":{},"classes/Transaction.html":{},"classes/Transaction-1.html":{},"classes/TransactionBuyer.html":{},"classes/TransactionBuyer-1.html":{},"injectables/UserService.html":{}}}],["modeloptions",{"_index":663,"title":{},"body":{"classes/ChangelogModel.html":{},"classes/MarketModel.html":{},"classes/UserModel.html":{}}}],["models/changelog.model",{"_index":39,"title":{},"body":{"controllers/AdminController.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{}}}],["models/market.model",{"_index":907,"title":{},"body":{"controllers/MarketController.html":{},"modules/MarketModule.html":{},"injectables/MarketService.html":{}}}],["models/user.model",{"_index":1405,"title":{},"body":{"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["moderator",{"_index":1540,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["moderators",{"_index":1573,"title":{},"body":{"index.html":{}}}],["module",{"_index":62,"title":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ConfigModule.html":{},"modules/MarketModule.html":{},"modules/TransactionModule.html":{},"modules/UserModule.html":{}},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ConfigModule.html":{},"modules/MarketModule.html":{},"modules/TransactionModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["modules",{"_index":64,"title":{"modules.html":{}},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ConfigModule.html":{},"modules/MarketModule.html":{},"modules/TransactionModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["modules/admin/admin.module",{"_index":156,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/mailer",{"_index":143,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["modules/market/market.module",{"_index":157,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/transaction/transaction.module",{"_index":158,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/user/models/user.model",{"_index":272,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BuyerAddMarketDto.html":{},"classes/ChangelogAuthor.html":{},"injectables/JwtStrategy.html":{},"classes/ReactionAddMarketDto.html":{}}}],["modules/user/user.module",{"_index":150,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/user/user.service",{"_index":811,"title":{},"body":{"classes/GeneralGateway.html":{}}}],["moment",{"_index":392,"title":{},"body":{"injectables/AuthService.html":{},"classes/GeneralGateway.html":{},"classes/UserModel.html":{},"dependencies.html":{}}}],["moments",{"_index":391,"title":{},"body":{"injectables/AuthService.html":{},"classes/GeneralGateway.html":{}}}],["moments().todate",{"_index":595,"title":{},"body":{"injectables/AuthService.html":{}}}],["moments(timezone",{"_index":410,"title":{},"body":{"injectables/AuthService.html":{},"classes/GeneralGateway.html":{}}}],["moments(timezone).todate",{"_index":467,"title":{},"body":{"injectables/AuthService.html":{}}}],["momentstz",{"_index":393,"title":{},"body":{"injectables/AuthService.html":{},"classes/GeneralGateway.html":{}}}],["mongodb://localhost:27017/akatsuki",{"_index":723,"title":{},"body":{"classes/ConfigService.html":{}}}],["mongoose",{"_index":1518,"title":{},"body":{"dependencies.html":{}}}],["more",{"_index":783,"title":{},"body":{"classes/Email-1.html":{},"classes/Membership-1.html":{},"classes/Notifications-1.html":{},"classes/Online-1.html":{},"classes/Password-1.html":{},"classes/Rank-1.html":{},"classes/Reactions-1.html":{},"classes/Security-1.html":{},"classes/Sessions-1.html":{},"classes/Stats-1.html":{},"classes/Suspension-1.html":{},"classes/Transaction-1.html":{},"classes/TransactionBuyer-1.html":{}}}],["multer",{"_index":1289,"title":{},"body":{"controllers/UserController.html":{},"dependencies.html":{}}}],["name",{"_index":27,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ConfigService.html":{},"classes/GeneralGateway.html":{},"injectables/JwtStrategy.html":{},"controllers/MarketController.html":{},"classes/MarketModel.html":{},"injectables/MarketService.html":{},"guards/RankGuard.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"classes/UserModel.html":{},"injectables/UserService.html":{}}}],["nest",{"_index":142,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs",{"_index":79,"title":{},"body":{"modules/AdminModule.html":{},"injectables/AdminService.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/MarketController.html":{},"modules/MarketModule.html":{},"injectables/MarketService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/common",{"_index":36,"title":{},"body":{"controllers/AdminController.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/ConfigModule.html":{},"classes/ConfigService.html":{},"classes/GeneralGateway.html":{},"injectables/JwtStrategy.html":{},"controllers/MarketController.html":{},"modules/MarketModule.html":{},"injectables/MarketService.html":{},"guards/RankGuard.html":{},"controllers/TransactionController.html":{},"modules/TransactionModule.html":{},"injectables/TransactionService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":155,"title":{},"body":{"modules/AppModule.html":{},"guards/RankGuard.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":330,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":277,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"controllers/MarketController.html":{},"controllers/UserController.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":1282,"title":{},"body":{"controllers/UserController.html":{},"dependencies.html":{}}}],["nestjs/websockets",{"_index":810,"title":{},"body":{"classes/GeneralGateway.html":{},"dependencies.html":{}}}],["network",{"_index":721,"title":{},"body":{"classes/ConfigService.html":{}}}],["new",{"_index":103,"title":{},"body":{"injectables/AdminService.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"modules/ConfigModule.html":{},"classes/ConfigService.html":{},"classes/Email-1.html":{},"classes/GeneralGateway.html":{},"injectables/JwtStrategy.html":{},"injectables/MarketService.html":{},"classes/Membership-1.html":{},"classes/Notifications-1.html":{},"classes/Online-1.html":{},"classes/Password-1.html":{},"classes/Rank-1.html":{},"classes/Reactions-1.html":{},"classes/Security-1.html":{},"classes/Sessions-1.html":{},"classes/Stats-1.html":{},"classes/Suspension-1.html":{},"classes/Transaction-1.html":{},"classes/TransactionBuyer-1.html":{},"classes/UserModel.html":{},"injectables/UserService.html":{},"coverage.html":{},"index.html":{}}}],["newchangelog",{"_index":14,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{}}}],["newchangelog(changelog",{"_index":21,"title":{},"body":{"controllers/AdminController.html":{}}}],["newchangelog(changelogmodel",{"_index":93,"title":{},"body":{"injectables/AdminService.html":{}}}],["newpassword",{"_index":233,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["next",{"_index":763,"title":{},"body":{"classes/Email.html":{},"classes/Email-1.html":{},"classes/Market.html":{},"classes/Membership.html":{},"classes/Membership-1.html":{},"classes/Notifications.html":{},"classes/Notifications-1.html":{},"classes/Online.html":{},"classes/Online-1.html":{},"classes/Password.html":{},"classes/Password-1.html":{},"classes/Rank.html":{},"classes/Rank-1.html":{},"classes/Reactions.html":{},"classes/Reactions-1.html":{},"classes/Security.html":{},"classes/Security-1.html":{},"classes/Sessions.html":{},"classes/Sessions-1.html":{},"classes/Stats.html":{},"classes/Stats-1.html":{},"classes/Suspension.html":{},"classes/Suspension-1.html":{},"classes/Transaction.html":{},"classes/Transaction-1.html":{},"classes/TransactionBuyer.html":{},"classes/TransactionBuyer-1.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"classes/UserModel.html":{}}}],["notes",{"_index":1563,"title":{},"body":{"index.html":{}}}],["notfoundexception",{"_index":380,"title":{},"body":{"injectables/AuthService.html":{},"injectables/MarketService.html":{},"injectables/UserService.html":{}}}],["notifications",{"_index":757,"title":{"classes/Notifications.html":{},"classes/Notifications-1.html":{}},"body":{"classes/Email.html":{},"classes/Email-1.html":{},"classes/Market.html":{},"classes/Membership.html":{},"classes/Membership-1.html":{},"classes/Notifications.html":{},"classes/Notifications-1.html":{},"classes/Online.html":{},"classes/Online-1.html":{},"classes/Password.html":{},"classes/Password-1.html":{},"classes/Rank.html":{},"classes/Rank-1.html":{},"classes/Reactions.html":{},"classes/Reactions-1.html":{},"classes/Security.html":{},"classes/Security-1.html":{},"classes/Sessions.html":{},"classes/Sessions-1.html":{},"classes/Stats.html":{},"classes/Stats-1.html":{},"classes/Suspension.html":{},"classes/Suspension-1.html":{},"classes/Transaction.html":{},"classes/Transaction-1.html":{},"classes/TransactionBuyer.html":{},"classes/TransactionBuyer-1.html":{},"classes/UserDto.html":{},"classes/UserModel.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["number",{"_index":199,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"classes/BuyerAddMarketDto.html":{},"classes/BuyerMarket.html":{},"classes/ChangelogAuthor.html":{},"classes/CommentMarket.html":{},"classes/CommentMarketDto.html":{},"classes/DiscountMarket.html":{},"classes/Email.html":{},"classes/Email-1.html":{},"classes/Market.html":{},"controllers/MarketController.html":{},"classes/MarketModel.html":{},"injectables/MarketService.html":{},"classes/Membership.html":{},"classes/Membership-1.html":{},"classes/Notifications.html":{},"classes/Notifications-1.html":{},"classes/Online.html":{},"classes/Online-1.html":{},"classes/Password.html":{},"classes/Password-1.html":{},"classes/Rank.html":{},"classes/Rank-1.html":{},"classes/ReactionAddMarketDto.html":{},"classes/Reactions.html":{},"classes/Reactions-1.html":{},"classes/ReactionsMarket.html":{},"classes/Security.html":{},"classes/Security-1.html":{},"classes/SecurityCode.html":{},"classes/SecurityDto.html":{},"classes/SecurityUpdateDto.html":{},"classes/Sessions.html":{},"classes/Sessions-1.html":{},"classes/SignInDto.html":{},"classes/Stats.html":{},"classes/Stats-1.html":{},"classes/Suspension.html":{},"classes/Suspension-1.html":{},"classes/Transaction.html":{},"classes/Transaction-1.html":{},"classes/TransactionBuyer.html":{},"classes/TransactionBuyer-1.html":{},"classes/UpdateUserDto.html":{},"classes/UserDto.html":{},"classes/UserModel.html":{},"injectables/UserService.html":{}}}],["obtaining",{"_index":999,"title":{},"body":{"injectables/MarketService.html":{},"injectables/UserService.html":{}}}],["occurred",{"_index":601,"title":{},"body":{"injectables/AuthService.html":{}}}],["offer",{"_index":1335,"title":{},"body":{"classes/UserDto.html":{},"classes/UserModel.html":{},"injectables/UserService.html":{}}}],["offers",{"_index":1377,"title":{},"body":{"classes/UserModel.html":{}}}],["ofid",{"_index":1136,"title":{},"body":{"classes/ReactionsDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["ongatewayconnection",{"_index":792,"title":{},"body":{"classes/GeneralGateway.html":{}}}],["ongatewaydisconnect",{"_index":793,"title":{},"body":{"classes/GeneralGateway.html":{}}}],["online",{"_index":759,"title":{"classes/Online.html":{},"classes/Online-1.html":{}},"body":{"classes/Email.html":{},"classes/Email-1.html":{},"classes/GeneralGateway.html":{},"classes/Market.html":{},"classes/Membership.html":{},"classes/Membership-1.html":{},"classes/Notifications.html":{},"classes/Notifications-1.html":{},"classes/Online.html":{},"classes/Online-1.html":{},"classes/Password.html":{},"classes/Password-1.html":{},"classes/Rank.html":{},"classes/Rank-1.html":{},"classes/Reactions.html":{},"classes/Reactions-1.html":{},"classes/Security.html":{},"classes/Security-1.html":{},"classes/Sessions.html":{},"classes/Sessions-1.html":{},"classes/Stats.html":{},"classes/Stats-1.html":{},"classes/Suspension.html":{},"classes/Suspension-1.html":{},"classes/Transaction.html":{},"classes/Transaction-1.html":{},"classes/TransactionBuyer.html":{},"classes/TransactionBuyer-1.html":{},"classes/UserDto.html":{},"classes/UserModel.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["online).catch",{"_index":1449,"title":{},"body":{"injectables/UserService.html":{}}}],["optional",{"_index":29,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ConfigService.html":{},"classes/Email.html":{},"classes/Email-1.html":{},"classes/GeneralGateway.html":{},"interfaces/IJwtPayload.html":{},"injectables/JwtStrategy.html":{},"controllers/MarketController.html":{},"injectables/MarketService.html":{},"classes/Password.html":{},"classes/Password-1.html":{},"guards/RankGuard.html":{},"classes/Sessions.html":{},"classes/Sessions-1.html":{},"classes/Transaction.html":{},"classes/Transaction-1.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"classes/UserModel.html":{},"injectables/UserService.html":{}}}],["options",{"_index":180,"title":{},"body":{"modules/AppModule.html":{},"classes/ChangelogModel.html":{},"classes/MarketModel.html":{},"classes/UserModel.html":{}}}],["order",{"_index":1010,"title":{},"body":{"injectables/MarketService.html":{},"index.html":{}}}],["out",{"_index":75,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ConfigModule.html":{},"modules/MarketModule.html":{},"modules/TransactionModule.html":{},"modules/UserModule.html":{},"index.html":{},"overview.html":{}}}],["overview",{"_index":1626,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":1491,"title":{"dependencies.html":{}},"body":{}}],["param",{"_index":902,"title":{},"body":{"controllers/MarketController.html":{},"controllers/UserController.html":{}}}],["param('filter",{"_index":921,"title":{},"body":{"controllers/MarketController.html":{}}}],["param('id",{"_index":919,"title":{},"body":{"controllers/MarketController.html":{},"controllers/UserController.html":{}}}],["param('userid",{"_index":1292,"title":{},"body":{"controllers/UserController.html":{}}}],["parameters",{"_index":26,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ConfigService.html":{},"classes/GeneralGateway.html":{},"injectables/JwtStrategy.html":{},"controllers/MarketController.html":{},"injectables/MarketService.html":{},"guards/RankGuard.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["parse",{"_index":699,"title":{},"body":{"classes/ConfigService.html":{}}}],["parse(readfilesync(envfilepath",{"_index":713,"title":{},"body":{"classes/ConfigService.html":{}}}],["parseintpipe",{"_index":903,"title":{},"body":{"controllers/MarketController.html":{}}}],["passport",{"_index":834,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":328,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportmodule.register",{"_index":332,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":831,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["passportstrategy(strategy",{"_index":835,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["password",{"_index":436,"title":{"classes/Password.html":{},"classes/Password-1.html":{}},"body":{"injectables/AuthService.html":{},"classes/Email.html":{},"classes/Email-1.html":{},"classes/Market.html":{},"classes/Membership.html":{},"classes/Membership-1.html":{},"classes/Notifications.html":{},"classes/Notifications-1.html":{},"classes/Online.html":{},"classes/Online-1.html":{},"classes/Password.html":{},"classes/Password-1.html":{},"classes/Rank.html":{},"classes/Rank-1.html":{},"classes/Reactions.html":{},"classes/Reactions-1.html":{},"classes/Security.html":{},"classes/Security-1.html":{},"classes/Sessions.html":{},"classes/Sessions-1.html":{},"classes/SignInDto.html":{},"classes/Stats.html":{},"classes/Stats-1.html":{},"classes/Suspension.html":{},"classes/Suspension-1.html":{},"classes/Transaction.html":{},"classes/Transaction-1.html":{},"classes/TransactionBuyer.html":{},"classes/TransactionBuyer-1.html":{},"classes/UserDto.html":{},"classes/UserModel.html":{},"coverage.html":{}}}],["password.expiration",{"_index":1439,"title":{},"body":{"injectables/UserService.html":{}}}],["password.key",{"_index":1430,"title":{},"body":{"injectables/UserService.html":{}}}],["password.status",{"_index":1438,"title":{},"body":{"injectables/UserService.html":{}}}],["password.token",{"_index":1440,"title":{},"body":{"injectables/UserService.html":{}}}],["password_reset_request",{"_index":582,"title":{},"body":{"injectables/AuthService.html":{}}}],["passwordchange",{"_index":211,"title":{},"body":{"controllers/AuthController.html":{}}}],["passwordchange(userid",{"_index":231,"title":{},"body":{"controllers/AuthController.html":{}}}],["passwordresetrequest",{"_index":212,"title":{},"body":{"controllers/AuthController.html":{}}}],["passwordresetrequest(userid",{"_index":236,"title":{},"body":{"controllers/AuthController.html":{}}}],["passwordsalt",{"_index":404,"title":{},"body":{"injectables/AuthService.html":{}}}],["patch",{"_index":266,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UserController.html":{}}}],["patch('/account/password/change",{"_index":234,"title":{},"body":{"controllers/AuthController.html":{}}}],["patch('/account/security/change",{"_index":313,"title":{},"body":{"controllers/AuthController.html":{}}}],["patch('/account/verify/email",{"_index":252,"title":{},"body":{"controllers/AuthController.html":{}}}],["patch('/update",{"_index":1277,"title":{},"body":{"controllers/UserController.html":{}}}],["path",{"_index":149,"title":{},"body":{"modules/AppModule.html":{},"controllers/UserController.html":{}}}],["payload",{"_index":490,"title":{},"body":{"injectables/AuthService.html":{},"classes/GeneralGateway.html":{},"injectables/JwtStrategy.html":{}}}],["pc",{"_index":1615,"title":{},"body":{"index.html":{}}}],["percentage",{"_index":628,"title":{},"body":{"classes/BuyerMarket.html":{},"classes/CommentMarket.html":{},"classes/DiscountMarket.html":{},"classes/ReactionsMarket.html":{}}}],["permissions",{"_index":527,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/UserService.html":{}}}],["photo",{"_index":110,"title":{},"body":{"injectables/AdminService.html":{},"injectables/MarketService.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"classes/UserModel.html":{},"injectables/UserService.html":{}}}],["picture",{"_index":1450,"title":{},"body":{"injectables/UserService.html":{}}}],["platform",{"_index":1588,"title":{},"body":{"index.html":{}}}],["please",{"_index":781,"title":{},"body":{"classes/Email-1.html":{},"injectables/JwtStrategy.html":{},"classes/Membership-1.html":{},"classes/Notifications-1.html":{},"classes/Online-1.html":{},"classes/Password-1.html":{},"classes/Rank-1.html":{},"classes/Reactions-1.html":{},"classes/Security-1.html":{},"classes/Sessions-1.html":{},"classes/Stats-1.html":{},"classes/Suspension-1.html":{},"classes/Transaction-1.html":{},"classes/TransactionBuyer-1.html":{},"index.html":{}}}],["populate('author",{"_index":1005,"title":{},"body":{"injectables/MarketService.html":{}}}],["populate('author.info",{"_index":108,"title":{},"body":{"injectables/AdminService.html":{}}}],["populate('buyers.user",{"_index":1007,"title":{},"body":{"injectables/MarketService.html":{}}}],["populate('comments.author",{"_index":1009,"title":{},"body":{"injectables/MarketService.html":{}}}],["populate('reactions.user",{"_index":1008,"title":{},"body":{"injectables/MarketService.html":{}}}],["por",{"_index":1462,"title":{},"body":{"injectables/UserService.html":{}}}],["port",{"_index":198,"title":{},"body":{"modules/AppModule.html":{}}}],["port_api",{"_index":714,"title":{},"body":{"classes/ConfigService.html":{},"miscellaneous/enumerations.html":{}}}],["post",{"_index":267,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UserController.html":{}}}],["post('/account/logout",{"_index":228,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('/account/password/reset",{"_index":238,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('/account/verify/security",{"_index":256,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('/account/verify/session",{"_index":263,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('/signin",{"_index":242,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('/upload/cover/:id",{"_index":1321,"title":{},"body":{"controllers/UserController.html":{}}}],["post('/upload/photo/:id",{"_index":1297,"title":{},"body":{"controllers/UserController.html":{}}}],["post('/upload/photo/:id')@useinterceptors(undefined",{"_index":1267,"title":{},"body":{"controllers/UserController.html":{}}}],["postman",{"_index":1553,"title":{},"body":{"index.html":{}}}],["prefix",{"_index":7,"title":{},"body":{"controllers/AdminController.html":{},"controllers/AuthController.html":{},"controllers/MarketController.html":{},"controllers/TransactionController.html":{},"controllers/UserController.html":{}}}],["premium",{"_index":1336,"title":{},"body":{"classes/UserDto.html":{},"classes/UserModel.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{}}}],["premium.status",{"_index":1006,"title":{},"body":{"injectables/MarketService.html":{}}}],["prettier",{"_index":496,"title":{},"body":{"injectables/AuthService.html":{}}}],["prevent",{"_index":1582,"title":{},"body":{"index.html":{}}}],["price",{"_index":738,"title":{},"body":{"classes/Email.html":{},"classes/Email-1.html":{},"classes/Market.html":{},"classes/MarketModel.html":{},"injectables/MarketService.html":{},"classes/Membership.html":{},"classes/Membership-1.html":{},"classes/Notifications.html":{},"classes/Notifications-1.html":{},"classes/Online.html":{},"classes/Online-1.html":{},"classes/Password.html":{},"classes/Password-1.html":{},"classes/Rank.html":{},"classes/Rank-1.html":{},"classes/Reactions.html":{},"classes/Reactions-1.html":{},"classes/Security.html":{},"classes/Security-1.html":{},"classes/Sessions.html":{},"classes/Sessions-1.html":{},"classes/Stats.html":{},"classes/Stats-1.html":{},"classes/Suspension.html":{},"classes/Suspension-1.html":{},"classes/Transaction.html":{},"classes/Transaction-1.html":{},"classes/TransactionBuyer.html":{},"classes/TransactionBuyer-1.html":{}}}],["private",{"_index":100,"title":{},"body":{"injectables/AdminService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ConfigService.html":{},"classes/GeneralGateway.html":{},"injectables/JwtStrategy.html":{},"controllers/MarketController.html":{},"injectables/MarketService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["problem",{"_index":456,"title":{},"body":{"injectables/AuthService.html":{},"index.html":{}}}],["problems",{"_index":1561,"title":{},"body":{"index.html":{}}}],["process",{"_index":591,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["process.env.node_nev",{"_index":703,"title":{},"body":{"classes/ConfigService.html":{}}}],["process.env.port",{"_index":715,"title":{},"body":{"classes/ConfigService.html":{}}}],["process.exit(0",{"_index":711,"title":{},"body":{"classes/ConfigService.html":{}}}],["processed",{"_index":559,"title":{},"body":{"injectables/AuthService.html":{},"injectables/MarketService.html":{}}}],["processing",{"_index":457,"title":{},"body":{"injectables/AuthService.html":{}}}],["product",{"_index":607,"title":{},"body":{"classes/BuyerAddMarketDto.html":{},"classes/BuyerRemoveMarketDto.html":{},"classes/CommentMarketDto.html":{},"classes/CommentRemoveMarketDto.html":{},"injectables/MarketService.html":{},"classes/ReactionAddMarketDto.html":{},"classes/ReactionRemoveMarketDto.html":{}}}],["product.buyers.push",{"_index":1026,"title":{},"body":{"injectables/MarketService.html":{}}}],["product.comments.push",{"_index":1037,"title":{},"body":{"injectables/MarketService.html":{}}}],["product.reaction.user",{"_index":1055,"title":{},"body":{"injectables/MarketService.html":{}}}],["product.reactions.push",{"_index":1046,"title":{},"body":{"injectables/MarketService.html":{}}}],["product.save().catch",{"_index":1029,"title":{},"body":{"injectables/MarketService.html":{}}}],["productid",{"_index":887,"title":{},"body":{"controllers/MarketController.html":{},"injectables/MarketService.html":{}}}],["production",{"_index":704,"title":{},"body":{"classes/ConfigService.html":{}}}],["products",{"_index":1011,"title":{},"body":{"injectables/MarketService.html":{}}}],["profile",{"_index":1375,"title":{},"body":{"classes/UserModel.html":{},"injectables/UserService.html":{}}}],["program",{"_index":1554,"title":{},"body":{"index.html":{}}}],["project",{"_index":432,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/UserService.html":{},"index.html":{}}}],["promise",{"_index":355,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["prop",{"_index":620,"title":{},"body":{"classes/BuyerMarket.html":{},"classes/ChangelogAuthor.html":{},"classes/ChangelogModel.html":{},"classes/CommentMarket.html":{},"classes/DiscountMarket.html":{},"classes/Email-1.html":{},"classes/MarketModel.html":{},"classes/Membership-1.html":{},"classes/Notifications-1.html":{},"classes/Online-1.html":{},"classes/Password-1.html":{},"classes/Rank-1.html":{},"classes/Reactions-1.html":{},"classes/ReactionsMarket.html":{},"classes/Security-1.html":{},"classes/Sessions-1.html":{},"classes/Stats-1.html":{},"classes/Suspension-1.html":{},"classes/Transaction-1.html":{},"classes/TransactionBuyer-1.html":{},"classes/UserModel.html":{}}}],["prop({default",{"_index":1223,"title":{},"body":{"classes/Transaction-1.html":{},"classes/UserModel.html":{}}}],["prop({required",{"_index":615,"title":{},"body":{"classes/BuyerMarket.html":{},"classes/ChangelogAuthor.html":{},"classes/ChangelogModel.html":{},"classes/CommentMarket.html":{},"classes/DiscountMarket.html":{},"classes/Email-1.html":{},"classes/MarketModel.html":{},"classes/Membership-1.html":{},"classes/Notifications-1.html":{},"classes/Online-1.html":{},"classes/Password-1.html":{},"classes/Rank-1.html":{},"classes/Reactions-1.html":{},"classes/ReactionsMarket.html":{},"classes/Security-1.html":{},"classes/Sessions-1.html":{},"classes/Stats-1.html":{},"classes/Suspension-1.html":{},"classes/Transaction-1.html":{},"classes/TransactionBuyer-1.html":{},"classes/UserModel.html":{}}}],["properties",{"_index":343,"title":{},"body":{"injectables/AuthService.html":{},"classes/BuyerAddMarketDto.html":{},"classes/BuyerMarket.html":{},"classes/BuyerRemoveMarketDto.html":{},"classes/ChangelogAuthor.html":{},"classes/ChangelogModel.html":{},"classes/CommentMarket.html":{},"classes/CommentMarketDto.html":{},"classes/CommentRemoveMarketDto.html":{},"classes/ConfigService.html":{},"classes/DiscountMarket.html":{},"classes/Email.html":{},"classes/Email-1.html":{},"classes/GeneralGateway.html":{},"interfaces/IJwtPayload.html":{},"classes/Market.html":{},"classes/MarketModel.html":{},"injectables/MarketService.html":{},"classes/Membership.html":{},"classes/Membership-1.html":{},"classes/Notifications.html":{},"classes/Notifications-1.html":{},"classes/Online.html":{},"classes/Online-1.html":{},"classes/Password.html":{},"classes/Password-1.html":{},"classes/Rank.html":{},"classes/Rank-1.html":{},"classes/ReactionAddMarketDto.html":{},"classes/ReactionRemoveMarketDto.html":{},"classes/Reactions.html":{},"classes/Reactions-1.html":{},"classes/ReactionsDto.html":{},"classes/ReactionsMarket.html":{},"classes/Security.html":{},"classes/Security-1.html":{},"classes/SecurityCode.html":{},"classes/SecurityDto.html":{},"classes/SecurityUpdateDto.html":{},"classes/Sessions.html":{},"classes/Sessions-1.html":{},"classes/SignInDto.html":{},"classes/Stats.html":{},"classes/Stats-1.html":{},"classes/Suspension.html":{},"classes/Suspension-1.html":{},"classes/Transaction.html":{},"classes/Transaction-1.html":{},"classes/TransactionBuyer.html":{},"classes/TransactionBuyer-1.html":{},"classes/UpdateUserDto.html":{},"classes/UserDto.html":{},"classes/UserModel.html":{},"injectables/UserService.html":{}}}],["protected",{"_index":1255,"title":{},"body":{"controllers/UserController.html":{}}}],["provide",{"_index":195,"title":{},"body":{"modules/AppModule.html":{},"modules/ConfigModule.html":{}}}],["providers",{"_index":69,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ConfigModule.html":{},"modules/MarketModule.html":{},"modules/TransactionModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["public",{"_index":11,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BuyerAddMarketDto.html":{},"classes/BuyerMarket.html":{},"classes/BuyerRemoveMarketDto.html":{},"classes/ChangelogAuthor.html":{},"classes/ChangelogModel.html":{},"classes/CommentMarket.html":{},"classes/CommentMarketDto.html":{},"classes/ConfigService.html":{},"classes/DiscountMarket.html":{},"classes/Email.html":{},"classes/Email-1.html":{},"classes/Market.html":{},"controllers/MarketController.html":{},"classes/MarketModel.html":{},"injectables/MarketService.html":{},"classes/Membership.html":{},"classes/Membership-1.html":{},"classes/Notifications.html":{},"classes/Notifications-1.html":{},"classes/Online.html":{},"classes/Online-1.html":{},"classes/Password.html":{},"classes/Password-1.html":{},"classes/Rank.html":{},"classes/Rank-1.html":{},"classes/ReactionAddMarketDto.html":{},"classes/Reactions.html":{},"classes/Reactions-1.html":{},"classes/ReactionsMarket.html":{},"classes/Security.html":{},"classes/Security-1.html":{},"classes/Sessions.html":{},"classes/Sessions-1.html":{},"classes/SignInDto.html":{},"classes/Stats.html":{},"classes/Stats-1.html":{},"classes/Suspension.html":{},"classes/Suspension-1.html":{},"classes/Transaction.html":{},"classes/Transaction-1.html":{},"classes/TransactionBuyer.html":{},"classes/TransactionBuyer-1.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"classes/UserModel.html":{},"injectables/UserService.html":{},"index.html":{}}}],["publicado",{"_index":55,"title":{},"body":{"controllers/AdminController.html":{}}}],["published",{"_index":992,"title":{},"body":{"injectables/MarketService.html":{}}}],["pull",{"_index":598,"title":{},"body":{"injectables/AuthService.html":{},"injectables/MarketService.html":{},"injectables/UserService.html":{}}}],["put",{"_index":32,"title":{},"body":{"controllers/AdminController.html":{},"controllers/AuthController.html":{},"controllers/MarketController.html":{},"controllers/UserController.html":{}}}],["put('/add/comment",{"_index":872,"title":{},"body":{"controllers/MarketController.html":{}}}],["put('/add/product",{"_index":876,"title":{},"body":{"controllers/MarketController.html":{}}}],["put('/add/reaction",{"_index":880,"title":{},"body":{"controllers/MarketController.html":{}}}],["put('/new/changelog",{"_index":24,"title":{},"body":{"controllers/AdminController.html":{}}}],["put('/reactions/add",{"_index":1261,"title":{},"body":{"controllers/UserController.html":{}}}],["put('/signup",{"_index":281,"title":{},"body":{"controllers/AuthController.html":{}}}],["put('/signup')@usepipes(new",{"_index":247,"title":{},"body":{"controllers/AuthController.html":{}}}],["queryresolver",{"_index":145,"title":{},"body":{"modules/AppModule.html":{}}}],["queryresolver(['lang",{"_index":190,"title":{},"body":{"modules/AppModule.html":{}}}],["questions",{"_index":1620,"title":{},"body":{"index.html":{}}}],["randomname",{"_index":1306,"title":{},"body":{"controllers/UserController.html":{}}}],["randomname}${extname(file.originalname",{"_index":1313,"title":{},"body":{"controllers/UserController.html":{}}}],["range",{"_index":1379,"title":{},"body":{"classes/UserModel.html":{}}}],["rank",{"_index":112,"title":{"classes/Rank.html":{},"classes/Rank-1.html":{}},"body":{"injectables/AdminService.html":{},"injectables/AuthService.html":{},"classes/Email.html":{},"classes/Email-1.html":{},"interfaces/IJwtPayload.html":{},"classes/Market.html":{},"controllers/MarketController.html":{},"injectables/MarketService.html":{},"classes/Membership.html":{},"classes/Membership-1.html":{},"classes/Notifications.html":{},"classes/Notifications-1.html":{},"classes/Online.html":{},"classes/Online-1.html":{},"classes/Password.html":{},"classes/Password-1.html":{},"classes/Rank.html":{},"classes/Rank-1.html":{},"guards/RankGuard.html":{},"classes/Reactions.html":{},"classes/Reactions-1.html":{},"classes/Security.html":{},"classes/Security-1.html":{},"classes/Sessions.html":{},"classes/Sessions-1.html":{},"classes/Stats.html":{},"classes/Stats-1.html":{},"classes/Suspension.html":{},"classes/Suspension-1.html":{},"classes/Transaction.html":{},"classes/Transaction-1.html":{},"classes/TransactionBuyer.html":{},"classes/TransactionBuyer-1.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"classes/UserModel.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["rank(ranksenum.administrator",{"_index":892,"title":{},"body":{"controllers/MarketController.html":{},"controllers/UserController.html":{}}}],["rank(ranksenum.administrator)@delete('/reactions/remove",{"_index":1274,"title":{},"body":{"controllers/UserController.html":{}}}],["rankdata",{"_index":479,"title":{},"body":{"injectables/AuthService.html":{}}}],["rankdata.push(ranksenum.administrator",{"_index":481,"title":{},"body":{"injectables/AuthService.html":{}}}],["rankdata.push(ranksenum.moderator",{"_index":483,"title":{},"body":{"injectables/AuthService.html":{}}}],["rankdata.push(ranksenum.premium",{"_index":487,"title":{},"body":{"injectables/AuthService.html":{}}}],["rankdata.push(ranksenum.seller",{"_index":485,"title":{},"body":{"injectables/AuthService.html":{}}}],["rankguard",{"_index":912,"title":{"guards/RankGuard.html":{}},"body":{"controllers/MarketController.html":{},"guards/RankGuard.html":{},"coverage.html":{}}}],["ranking",{"_index":1581,"title":{},"body":{"index.html":{}}}],["ranks",{"_index":1114,"title":{},"body":{"guards/RankGuard.html":{}}}],["ranks.includes(rank",{"_index":1120,"title":{},"body":{"guards/RankGuard.html":{}}}],["ranksenum",{"_index":389,"title":{},"body":{"injectables/AuthService.html":{},"controllers/MarketController.html":{},"injectables/MarketService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{}}}],["ranksenum.moderator",{"_index":928,"title":{},"body":{"controllers/MarketController.html":{}}}],["ranksenum.moderator)@delete('/delete/buyer",{"_index":893,"title":{},"body":{"controllers/MarketController.html":{}}}],["rankuserrequest",{"_index":883,"title":{},"body":{"controllers/MarketController.html":{},"injectables/MarketService.html":{}}}],["rankuserrequest.includes(ranksenum.administrator",{"_index":1000,"title":{},"body":{"injectables/MarketService.html":{}}}],["rankuserrequest.includes(ranksenum.moderator",{"_index":1001,"title":{},"body":{"injectables/MarketService.html":{}}}],["rate",{"_index":1509,"title":{},"body":{"dependencies.html":{}}}],["reaccion",{"_index":1461,"title":{},"body":{"injectables/UserService.html":{}}}],["reaction",{"_index":1042,"title":{},"body":{"injectables/MarketService.html":{},"injectables/UserService.html":{}}}],["reactionaddmarketdto",{"_index":879,"title":{"classes/ReactionAddMarketDto.html":{}},"body":{"controllers/MarketController.html":{},"injectables/MarketService.html":{},"classes/ReactionAddMarketDto.html":{},"coverage.html":{}}}],["reactionaddmarketdto.device",{"_index":1047,"title":{},"body":{"injectables/MarketService.html":{}}}],["reactionaddmarketdto.ip",{"_index":1048,"title":{},"body":{"injectables/MarketService.html":{}}}],["reactionaddmarketdto.product",{"_index":1044,"title":{},"body":{"injectables/MarketService.html":{}}}],["reactionaddmarketdto.type",{"_index":1049,"title":{},"body":{"injectables/MarketService.html":{}}}],["reactionaddmarketdto.user",{"_index":1043,"title":{},"body":{"injectables/MarketService.html":{}}}],["reactionremovemarketdto",{"_index":899,"title":{"classes/ReactionRemoveMarketDto.html":{}},"body":{"controllers/MarketController.html":{},"injectables/MarketService.html":{},"classes/ReactionRemoveMarketDto.html":{},"coverage.html":{}}}],["reactionremovemarketdto.product",{"_index":1066,"title":{},"body":{"injectables/MarketService.html":{}}}],["reactionremovemarketdto.user",{"_index":1065,"title":{},"body":{"injectables/MarketService.html":{}}}],["reactions",{"_index":741,"title":{"classes/Reactions.html":{},"classes/Reactions-1.html":{}},"body":{"classes/Email.html":{},"classes/Email-1.html":{},"classes/Market.html":{},"classes/MarketModel.html":{},"injectables/MarketService.html":{},"classes/Membership.html":{},"classes/Membership-1.html":{},"classes/Notifications.html":{},"classes/Notifications-1.html":{},"classes/Online.html":{},"classes/Online-1.html":{},"classes/Password.html":{},"classes/Password-1.html":{},"classes/Rank.html":{},"classes/Rank-1.html":{},"classes/Reactions.html":{},"classes/Reactions-1.html":{},"classes/Security.html":{},"classes/Security-1.html":{},"classes/Sessions.html":{},"classes/Sessions-1.html":{},"classes/Stats.html":{},"classes/Stats-1.html":{},"classes/Suspension.html":{},"classes/Suspension-1.html":{},"classes/Transaction.html":{},"classes/Transaction-1.html":{},"classes/TransactionBuyer.html":{},"classes/TransactionBuyer-1.html":{},"classes/UserDto.html":{},"classes/UserModel.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["reactions.device",{"_index":959,"title":{},"body":{"classes/MarketModel.html":{}}}],["reactions.ip",{"_index":960,"title":{},"body":{"classes/MarketModel.html":{}}}],["reactions.user._id",{"_index":961,"title":{},"body":{"classes/MarketModel.html":{}}}],["reactionsdto",{"_index":1134,"title":{"classes/ReactionsDto.html":{}},"body":{"classes/ReactionsDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["reactionsmarket",{"_index":638,"title":{"classes/ReactionsMarket.html":{}},"body":{"classes/BuyerMarket.html":{},"classes/CommentMarket.html":{},"classes/DiscountMarket.html":{},"classes/MarketModel.html":{},"classes/ReactionsMarket.html":{},"coverage.html":{}}}],["readfilesync",{"_index":697,"title":{},"body":{"classes/ConfigService.html":{}}}],["readonly",{"_index":44,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ConfigService.html":{},"classes/GeneralGateway.html":{},"injectables/JwtStrategy.html":{},"controllers/MarketController.html":{},"injectables/MarketService.html":{},"guards/RankGuard.html":{},"classes/ReactionsDto.html":{},"classes/SecurityCode.html":{},"classes/SecurityDto.html":{},"classes/SecurityUpdateDto.html":{},"classes/SignInDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["real",{"_index":1598,"title":{},"body":{"index.html":{}}}],["reason",{"_index":743,"title":{},"body":{"classes/Email.html":{},"classes/Email-1.html":{},"classes/Market.html":{},"classes/Membership.html":{},"classes/Membership-1.html":{},"classes/Notifications.html":{},"classes/Notifications-1.html":{},"classes/Online.html":{},"classes/Online-1.html":{},"classes/Password.html":{},"classes/Password-1.html":{},"classes/Rank.html":{},"classes/Rank-1.html":{},"classes/Reactions.html":{},"classes/Reactions-1.html":{},"classes/Security.html":{},"classes/Security-1.html":{},"classes/Sessions.html":{},"classes/Sessions-1.html":{},"classes/Stats.html":{},"classes/Stats-1.html":{},"classes/Suspension.html":{},"classes/Suspension-1.html":{},"classes/Transaction.html":{},"classes/Transaction-1.html":{},"classes/TransactionBuyer.html":{},"classes/TransactionBuyer-1.html":{}}}],["recommended",{"_index":1578,"title":{},"body":{"index.html":{}}}],["ref",{"_index":611,"title":{},"body":{"classes/BuyerAddMarketDto.html":{},"classes/BuyerMarket.html":{},"classes/ChangelogAuthor.html":{},"classes/CommentMarket.html":{},"classes/CommentMarketDto.html":{},"classes/DiscountMarket.html":{},"classes/MarketModel.html":{},"classes/ReactionAddMarketDto.html":{},"classes/ReactionsMarket.html":{}}}],["reflect",{"_index":1525,"title":{},"body":{"dependencies.html":{}}}],["reflector",{"_index":1109,"title":{},"body":{"guards/RankGuard.html":{}}}],["registered",{"_index":503,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["registration",{"_index":458,"title":{},"body":{"injectables/AuthService.html":{}}}],["registro",{"_index":52,"title":{},"body":{"controllers/AdminController.html":{}}}],["rejected",{"_index":470,"title":{},"body":{"injectables/AuthService.html":{}}}],["released",{"_index":1617,"title":{},"body":{"index.html":{}}}],["remove",{"_index":1062,"title":{},"body":{"injectables/MarketService.html":{},"injectables/UserService.html":{}}}],["removebuyer",{"_index":868,"title":{},"body":{"controllers/MarketController.html":{},"injectables/MarketService.html":{}}}],["removebuyer(buyerremovemarketdto",{"_index":891,"title":{},"body":{"controllers/MarketController.html":{},"injectables/MarketService.html":{}}}],["removecomment",{"_index":869,"title":{},"body":{"controllers/MarketController.html":{},"injectables/MarketService.html":{}}}],["removecomment(commentremovemarketdto",{"_index":895,"title":{},"body":{"controllers/MarketController.html":{},"injectables/MarketService.html":{}}}],["removed",{"_index":1069,"title":{},"body":{"injectables/MarketService.html":{}}}],["removereaction",{"_index":870,"title":{},"body":{"controllers/MarketController.html":{},"injectables/MarketService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["removereaction(ofid",{"_index":1419,"title":{},"body":{"injectables/UserService.html":{}}}],["removereaction(reactionremovemarketdto",{"_index":898,"title":{},"body":{"controllers/MarketController.html":{},"injectables/MarketService.html":{}}}],["removereaction(res",{"_index":1273,"title":{},"body":{"controllers/UserController.html":{}}}],["removing",{"_index":1059,"title":{},"body":{"injectables/MarketService.html":{}}}],["rep",{"_index":748,"title":{},"body":{"classes/Email.html":{},"classes/Email-1.html":{},"classes/Market.html":{},"classes/Membership.html":{},"classes/Membership-1.html":{},"classes/Notifications.html":{},"classes/Notifications-1.html":{},"classes/Online.html":{},"classes/Online-1.html":{},"classes/Password.html":{},"classes/Password-1.html":{},"classes/Rank.html":{},"classes/Rank-1.html":{},"classes/Reactions.html":{},"classes/Reactions-1.html":{},"classes/Security.html":{},"classes/Security-1.html":{},"classes/Sessions.html":{},"classes/Sessions-1.html":{},"classes/Stats.html":{},"classes/Stats-1.html":{},"classes/Suspension.html":{},"classes/Suspension-1.html":{},"classes/Transaction.html":{},"classes/Transaction-1.html":{},"classes/TransactionBuyer.html":{},"classes/TransactionBuyer-1.html":{}}}],["report",{"_index":1591,"title":{},"body":{"index.html":{}}}],["reporting",{"_index":1577,"title":{},"body":{"index.html":{}}}],["repository",{"_index":1592,"title":{},"body":{"index.html":{}}}],["req",{"_index":1633,"title":{},"body":{"miscellaneous/variables.html":{}}}],["req.user",{"_index":1635,"title":{},"body":{"miscellaneous/variables.html":{}}}],["req.user[key",{"_index":1634,"title":{},"body":{"miscellaneous/variables.html":{}}}],["request",{"_index":459,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"guards/RankGuard.html":{}}}],["requestuserrank",{"_index":1425,"title":{},"body":{"injectables/UserService.html":{}}}],["requestuserrank.includes(ranksenum.administrator",{"_index":1445,"title":{},"body":{"injectables/UserService.html":{}}}],["requestuserrank.includes(ranksenum.moderator",{"_index":1446,"title":{},"body":{"injectables/UserService.html":{}}}],["requetuserid",{"_index":1424,"title":{},"body":{"injectables/UserService.html":{}}}],["required",{"_index":623,"title":{},"body":{"classes/BuyerMarket.html":{},"classes/ChangelogAuthor.html":{},"classes/ChangelogModel.html":{},"classes/CommentMarket.html":{},"classes/DiscountMarket.html":{},"classes/Email-1.html":{},"classes/MarketModel.html":{},"classes/Membership-1.html":{},"classes/Notifications-1.html":{},"classes/Online-1.html":{},"classes/Password-1.html":{},"classes/Rank-1.html":{},"classes/Reactions-1.html":{},"classes/ReactionsMarket.html":{},"classes/Security-1.html":{},"classes/Sessions-1.html":{},"classes/Stats-1.html":{},"classes/Suspension-1.html":{},"classes/Transaction-1.html":{},"classes/TransactionBuyer-1.html":{},"classes/UserModel.html":{}}}],["res",{"_index":34,"title":{},"body":{"controllers/AdminController.html":{},"controllers/AuthController.html":{},"controllers/MarketController.html":{},"controllers/UserController.html":{}}}],["res.status(httpstatus.ok).json",{"_index":1317,"title":{},"body":{"controllers/UserController.html":{}}}],["resed",{"_index":581,"title":{},"body":{"injectables/AuthService.html":{}}}],["reset",{"_index":74,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ConfigModule.html":{},"modules/MarketModule.html":{},"modules/TransactionModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["reset_password",{"_index":583,"title":{},"body":{"injectables/AuthService.html":{}}}],["resolvers",{"_index":189,"title":{},"body":{"modules/AppModule.html":{}}}],["response",{"_index":23,"title":{},"body":{"controllers/AdminController.html":{},"controllers/AuthController.html":{},"controllers/MarketController.html":{},"controllers/UserController.html":{}}}],["response.status(httpstatus.created).json",{"_index":48,"title":{},"body":{"controllers/AdminController.html":{},"controllers/AuthController.html":{},"controllers/MarketController.html":{}}}],["response.status(httpstatus.ok).json",{"_index":294,"title":{},"body":{"controllers/AuthController.html":{},"controllers/MarketController.html":{},"controllers/UserController.html":{}}}],["rest",{"_index":1547,"title":{},"body":{"index.html":{}}}],["result",{"_index":59,"title":{},"body":{"controllers/AdminController.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BuyerAddMarketDto.html":{},"classes/BuyerMarket.html":{},"classes/BuyerRemoveMarketDto.html":{},"classes/ChangelogAuthor.html":{},"classes/ChangelogModel.html":{},"classes/CommentMarket.html":{},"classes/CommentMarketDto.html":{},"classes/CommentRemoveMarketDto.html":{},"modules/ConfigModule.html":{},"classes/ConfigService.html":{},"classes/DiscountMarket.html":{},"classes/Email.html":{},"classes/Email-1.html":{},"classes/GeneralGateway.html":{},"interfaces/IJwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/Market.html":{},"controllers/MarketController.html":{},"classes/MarketModel.html":{},"modules/MarketModule.html":{},"injectables/MarketService.html":{},"classes/Membership.html":{},"classes/Membership-1.html":{},"classes/Notifications.html":{},"classes/Notifications-1.html":{},"classes/Online.html":{},"classes/Online-1.html":{},"classes/Password.html":{},"classes/Password-1.html":{},"classes/Rank.html":{},"classes/Rank-1.html":{},"guards/RankGuard.html":{},"classes/ReactionAddMarketDto.html":{},"classes/ReactionRemoveMarketDto.html":{},"classes/Reactions.html":{},"classes/Reactions-1.html":{},"classes/ReactionsDto.html":{},"classes/ReactionsMarket.html":{},"classes/Security.html":{},"classes/Security-1.html":{},"classes/SecurityCode.html":{},"classes/SecurityDto.html":{},"classes/SecurityUpdateDto.html":{},"classes/Sessions.html":{},"classes/Sessions-1.html":{},"classes/SignInDto.html":{},"classes/Stats.html":{},"classes/Stats-1.html":{},"classes/Suspension.html":{},"classes/Suspension-1.html":{},"classes/Transaction.html":{},"classes/Transaction-1.html":{},"classes/TransactionBuyer.html":{},"classes/TransactionBuyer-1.html":{},"controllers/TransactionController.html":{},"modules/TransactionModule.html":{},"injectables/TransactionService.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"classes/UserModel.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":61,"title":{},"body":{"controllers/AdminController.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BuyerAddMarketDto.html":{},"classes/BuyerMarket.html":{},"classes/BuyerRemoveMarketDto.html":{},"classes/ChangelogAuthor.html":{},"classes/ChangelogModel.html":{},"classes/CommentMarket.html":{},"classes/CommentMarketDto.html":{},"classes/CommentRemoveMarketDto.html":{},"modules/ConfigModule.html":{},"classes/ConfigService.html":{},"classes/DiscountMarket.html":{},"classes/Email.html":{},"classes/Email-1.html":{},"classes/GeneralGateway.html":{},"interfaces/IJwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/Market.html":{},"controllers/MarketController.html":{},"classes/MarketModel.html":{},"modules/MarketModule.html":{},"injectables/MarketService.html":{},"classes/Membership.html":{},"classes/Membership-1.html":{},"classes/Notifications.html":{},"classes/Notifications-1.html":{},"classes/Online.html":{},"classes/Online-1.html":{},"classes/Password.html":{},"classes/Password-1.html":{},"classes/Rank.html":{},"classes/Rank-1.html":{},"guards/RankGuard.html":{},"classes/ReactionAddMarketDto.html":{},"classes/ReactionRemoveMarketDto.html":{},"classes/Reactions.html":{},"classes/Reactions-1.html":{},"classes/ReactionsDto.html":{},"classes/ReactionsMarket.html":{},"classes/Security.html":{},"classes/Security-1.html":{},"classes/SecurityCode.html":{},"classes/SecurityDto.html":{},"classes/SecurityUpdateDto.html":{},"classes/Sessions.html":{},"classes/Sessions-1.html":{},"classes/SignInDto.html":{},"classes/Stats.html":{},"classes/Stats-1.html":{},"classes/Suspension.html":{},"classes/Suspension-1.html":{},"classes/Transaction.html":{},"classes/Transaction-1.html":{},"classes/TransactionBuyer.html":{},"classes/TransactionBuyer-1.html":{},"controllers/TransactionController.html":{},"modules/TransactionModule.html":{},"injectables/TransactionService.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"classes/UserModel.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":45,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/ConfigService.html":{},"classes/GeneralGateway.html":{},"injectables/JwtStrategy.html":{},"controllers/MarketController.html":{},"injectables/MarketService.html":{},"guards/RankGuard.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["returnmodeltype",{"_index":88,"title":{},"body":{"injectables/AdminService.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/MarketService.html":{},"injectables/UserService.html":{}}}],["returns",{"_index":20,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ConfigService.html":{},"classes/GeneralGateway.html":{},"injectables/JwtStrategy.html":{},"controllers/MarketController.html":{},"injectables/MarketService.html":{},"guards/RankGuard.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["reviewed",{"_index":1612,"title":{},"body":{"index.html":{}}}],["rewards",{"_index":747,"title":{},"body":{"classes/Email.html":{},"classes/Email-1.html":{},"classes/Market.html":{},"classes/Membership.html":{},"classes/Membership-1.html":{},"classes/Notifications.html":{},"classes/Notifications-1.html":{},"classes/Online.html":{},"classes/Online-1.html":{},"classes/Password.html":{},"classes/Password-1.html":{},"classes/Rank.html":{},"classes/Rank-1.html":{},"classes/Reactions.html":{},"classes/Reactions-1.html":{},"classes/Security.html":{},"classes/Security-1.html":{},"classes/Sessions.html":{},"classes/Sessions-1.html":{},"classes/Stats.html":{},"classes/Stats-1.html":{},"classes/Suspension.html":{},"classes/Suspension-1.html":{},"classes/Transaction.html":{},"classes/Transaction-1.html":{},"classes/TransactionBuyer.html":{},"classes/TransactionBuyer-1.html":{}}}],["rimraf",{"_index":1528,"title":{},"body":{"dependencies.html":{}}}],["rxjs",{"_index":1530,"title":{},"body":{"dependencies.html":{}}}],["s9sdnxc9sm",{"_index":717,"title":{},"body":{"classes/ConfigService.html":{}}}],["safely",{"_index":1558,"title":{},"body":{"index.html":{}}}],["salt",{"_index":594,"title":{},"body":{"injectables/AuthService.html":{}}}],["same",{"_index":1613,"title":{},"body":{"index.html":{}}}],["saturnoxspace@outlook.com",{"_index":427,"title":{},"body":{"injectables/AuthService.html":{}}}],["save",{"_index":421,"title":{},"body":{"injectables/AuthService.html":{}}}],["saved",{"_index":1031,"title":{},"body":{"injectables/MarketService.html":{}}}],["savemissing",{"_index":188,"title":{},"body":{"modules/AppModule.html":{}}}],["sawako__",{"_index":1621,"title":{},"body":{"index.html":{}}}],["schemaoptions",{"_index":954,"title":{},"body":{"classes/MarketModel.html":{}}}],["secret",{"_index":337,"title":{},"body":{"modules/AuthModule.html":{}}}],["secretorkey",{"_index":840,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["security",{"_index":258,"title":{"classes/Security.html":{},"classes/Security-1.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/Email.html":{},"classes/Email-1.html":{},"classes/Market.html":{},"classes/Membership.html":{},"classes/Membership-1.html":{},"classes/Notifications.html":{},"classes/Notifications-1.html":{},"classes/Online.html":{},"classes/Online-1.html":{},"classes/Password.html":{},"classes/Password-1.html":{},"classes/Rank.html":{},"classes/Rank-1.html":{},"classes/Reactions.html":{},"classes/Reactions-1.html":{},"classes/Security.html":{},"classes/Security-1.html":{},"classes/SecurityCode.html":{},"classes/SecurityUpdateDto.html":{},"classes/Sessions.html":{},"classes/Sessions-1.html":{},"classes/Stats.html":{},"classes/Stats-1.html":{},"classes/Suspension.html":{},"classes/Suspension-1.html":{},"classes/Transaction.html":{},"classes/Transaction-1.html":{},"classes/TransactionBuyer.html":{},"classes/TransactionBuyer-1.html":{},"classes/UserDto.html":{},"classes/UserModel.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["securitycode",{"_index":1163,"title":{"classes/SecurityCode.html":{}},"body":{"classes/SecurityCode.html":{},"classes/SecurityUpdateDto.html":{},"coverage.html":{}}}],["securitydto",{"_index":255,"title":{"classes/SecurityDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/SecurityDto.html":{},"coverage.html":{}}}],["securitydto.code1",{"_index":563,"title":{},"body":{"injectables/AuthService.html":{}}}],["securitydto.code2",{"_index":565,"title":{},"body":{"injectables/AuthService.html":{}}}],["securitydto.code3",{"_index":567,"title":{},"body":{"injectables/AuthService.html":{}}}],["securitydto.code4",{"_index":569,"title":{},"body":{"injectables/AuthService.html":{}}}],["securitydto.code5",{"_index":571,"title":{},"body":{"injectables/AuthService.html":{}}}],["securityupdate",{"_index":225,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["securityupdatedto",{"_index":219,"title":{"classes/SecurityUpdateDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/SecurityCode.html":{},"classes/SecurityUpdateDto.html":{},"coverage.html":{}}}],["select",{"_index":1004,"title":{},"body":{"injectables/MarketService.html":{},"injectables/UserService.html":{}}}],["seller",{"_index":740,"title":{},"body":{"classes/Email.html":{},"classes/Email-1.html":{},"classes/Market.html":{},"classes/Membership.html":{},"classes/Membership-1.html":{},"classes/Notifications.html":{},"classes/Notifications-1.html":{},"classes/Online.html":{},"classes/Online-1.html":{},"classes/Password.html":{},"classes/Password-1.html":{},"classes/Rank.html":{},"classes/Rank-1.html":{},"classes/Reactions.html":{},"classes/Reactions-1.html":{},"classes/Security.html":{},"classes/Security-1.html":{},"classes/Sessions.html":{},"classes/Sessions-1.html":{},"classes/Stats.html":{},"classes/Stats-1.html":{},"classes/Suspension.html":{},"classes/Suspension-1.html":{},"classes/Transaction.html":{},"classes/Transaction-1.html":{},"classes/TransactionBuyer.html":{},"classes/TransactionBuyer-1.html":{},"miscellaneous/enumerations.html":{}}}],["send",{"_index":446,"title":{},"body":{"injectables/AuthService.html":{}}}],["sending",{"_index":578,"title":{},"body":{"injectables/AuthService.html":{}}}],["sendmail",{"_index":425,"title":{},"body":{"injectables/AuthService.html":{}}}],["sendpasswordreset",{"_index":346,"title":{},"body":{"injectables/AuthService.html":{}}}],["sendpasswordreset(userid",{"_index":361,"title":{},"body":{"injectables/AuthService.html":{}}}],["sent",{"_index":586,"title":{},"body":{"injectables/AuthService.html":{}}}],["server",{"_index":794,"title":{},"body":{"classes/GeneralGateway.html":{}}}],["server_host",{"_index":724,"title":{},"body":{"classes/ConfigService.html":{},"miscellaneous/enumerations.html":{}}}],["sesionid",{"_index":227,"title":{},"body":{"controllers/AuthController.html":{}}}],["sesionid).then",{"_index":319,"title":{},"body":{"controllers/AuthController.html":{}}}],["sessiodevice",{"_index":262,"title":{},"body":{"controllers/AuthController.html":{}}}],["sessioid",{"_index":260,"title":{},"body":{"controllers/AuthController.html":{}}}],["sessioip",{"_index":261,"title":{},"body":{"controllers/AuthController.html":{}}}],["session",{"_index":502,"title":{},"body":{"injectables/AuthService.html":{},"classes/GeneralGateway.html":{}}}],["session_id",{"_index":522,"title":{},"body":{"injectables/AuthService.html":{}}}],["sessiondevice",{"_index":371,"title":{},"body":{"injectables/AuthService.html":{}}}],["sessionid",{"_index":359,"title":{},"body":{"injectables/AuthService.html":{}}}],["sessionip",{"_index":372,"title":{},"body":{"injectables/AuthService.html":{}}}],["sessions",{"_index":599,"title":{"classes/Sessions.html":{},"classes/Sessions-1.html":{}},"body":{"injectables/AuthService.html":{},"classes/Email.html":{},"classes/Email-1.html":{},"classes/Market.html":{},"classes/Membership.html":{},"classes/Membership-1.html":{},"classes/Notifications.html":{},"classes/Notifications-1.html":{},"classes/Online.html":{},"classes/Online-1.html":{},"classes/Password.html":{},"classes/Password-1.html":{},"classes/Rank.html":{},"classes/Rank-1.html":{},"classes/Reactions.html":{},"classes/Reactions-1.html":{},"classes/Security.html":{},"classes/Security-1.html":{},"classes/Sessions.html":{},"classes/Sessions-1.html":{},"classes/Stats.html":{},"classes/Stats-1.html":{},"classes/Suspension.html":{},"classes/Suspension-1.html":{},"classes/Transaction.html":{},"classes/Transaction-1.html":{},"classes/TransactionBuyer.html":{},"classes/TransactionBuyer-1.html":{},"classes/UserDto.html":{},"classes/UserModel.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["sessions._id",{"_index":548,"title":{},"body":{"injectables/AuthService.html":{}}}],["sessions.device",{"_index":499,"title":{},"body":{"injectables/AuthService.html":{}}}],["sessions.ip",{"_index":500,"title":{},"body":{"injectables/AuthService.html":{}}}],["setmetadata('rank",{"_index":1636,"title":{},"body":{"miscellaneous/variables.html":{}}}],["signin",{"_index":213,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["signin(@body",{"_index":288,"title":{},"body":{"controllers/AuthController.html":{}}}],["signin(signindto",{"_index":363,"title":{},"body":{"injectables/AuthService.html":{}}}],["signin(user",{"_index":240,"title":{},"body":{"controllers/AuthController.html":{}}}],["signindto",{"_index":241,"title":{"classes/SignInDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/SignInDto.html":{},"coverage.html":{}}}],["signoptions",{"_index":339,"title":{},"body":{"modules/AuthModule.html":{}}}],["signup",{"_index":214,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["signup(user",{"_index":245,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["smtp://saturnoxspace@outlook.com:efhdmhtdxblafvjj@smtp.office365.com",{"_index":719,"title":{},"body":{"classes/ConfigService.html":{}}}],["social",{"_index":758,"title":{},"body":{"classes/Email.html":{},"classes/Email-1.html":{},"classes/Market.html":{},"classes/Membership.html":{},"classes/Membership-1.html":{},"classes/Notifications.html":{},"classes/Notifications-1.html":{},"classes/Online.html":{},"classes/Online-1.html":{},"classes/Password.html":{},"classes/Password-1.html":{},"classes/Rank.html":{},"classes/Rank-1.html":{},"classes/Reactions.html":{},"classes/Reactions-1.html":{},"classes/Security.html":{},"classes/Security-1.html":{},"classes/Sessions.html":{},"classes/Sessions-1.html":{},"classes/Stats.html":{},"classes/Stats-1.html":{},"classes/Suspension.html":{},"classes/Suspension-1.html":{},"classes/Transaction.html":{},"classes/Transaction-1.html":{},"classes/TransactionBuyer.html":{},"classes/TransactionBuyer-1.html":{}}}],["socket",{"_index":816,"title":{},"body":{"classes/GeneralGateway.html":{}}}],["socket.io",{"_index":1495,"title":{},"body":{"dependencies.html":{}}}],["sorry",{"_index":850,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["sort(order",{"_index":1019,"title":{},"body":{"injectables/MarketService.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AdminController.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BuyerAddMarketDto.html":{},"classes/BuyerMarket.html":{},"classes/BuyerRemoveMarketDto.html":{},"classes/ChangelogAuthor.html":{},"classes/ChangelogModel.html":{},"classes/CommentMarket.html":{},"classes/CommentMarketDto.html":{},"classes/CommentRemoveMarketDto.html":{},"modules/ConfigModule.html":{},"classes/ConfigService.html":{},"classes/DiscountMarket.html":{},"classes/Email.html":{},"classes/Email-1.html":{},"classes/GeneralGateway.html":{},"interfaces/IJwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/Market.html":{},"controllers/MarketController.html":{},"classes/MarketModel.html":{},"modules/MarketModule.html":{},"injectables/MarketService.html":{},"classes/Membership.html":{},"classes/Membership-1.html":{},"classes/Notifications.html":{},"classes/Notifications-1.html":{},"classes/Online.html":{},"classes/Online-1.html":{},"classes/Password.html":{},"classes/Password-1.html":{},"classes/Rank.html":{},"classes/Rank-1.html":{},"guards/RankGuard.html":{},"classes/ReactionAddMarketDto.html":{},"classes/ReactionRemoveMarketDto.html":{},"classes/Reactions.html":{},"classes/Reactions-1.html":{},"classes/ReactionsDto.html":{},"classes/ReactionsMarket.html":{},"classes/Security.html":{},"classes/Security-1.html":{},"classes/SecurityCode.html":{},"classes/SecurityDto.html":{},"classes/SecurityUpdateDto.html":{},"classes/Sessions.html":{},"classes/Sessions-1.html":{},"classes/SignInDto.html":{},"classes/Stats.html":{},"classes/Stats-1.html":{},"classes/Suspension.html":{},"classes/Suspension-1.html":{},"classes/Transaction.html":{},"classes/Transaction-1.html":{},"classes/TransactionBuyer.html":{},"classes/TransactionBuyer-1.html":{},"controllers/TransactionController.html":{},"modules/TransactionModule.html":{},"injectables/TransactionService.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"classes/UserModel.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["specialty",{"_index":1337,"title":{},"body":{"classes/UserDto.html":{},"classes/UserModel.html":{},"injectables/UserService.html":{}}}],["specified",{"_index":780,"title":{},"body":{"classes/Email-1.html":{},"classes/Membership-1.html":{},"classes/Notifications-1.html":{},"classes/Online-1.html":{},"classes/Password-1.html":{},"classes/Rank-1.html":{},"classes/Reactions-1.html":{},"classes/Security-1.html":{},"classes/Sessions-1.html":{},"classes/Stats-1.html":{},"classes/Suspension-1.html":{},"classes/Transaction-1.html":{},"classes/TransactionBuyer-1.html":{},"injectables/UserService.html":{}}}],["spent",{"_index":745,"title":{},"body":{"classes/Email.html":{},"classes/Email-1.html":{},"classes/Market.html":{},"classes/Membership.html":{},"classes/Membership-1.html":{},"classes/Notifications.html":{},"classes/Notifications-1.html":{},"classes/Online.html":{},"classes/Online-1.html":{},"classes/Password.html":{},"classes/Password-1.html":{},"classes/Rank.html":{},"classes/Rank-1.html":{},"classes/Reactions.html":{},"classes/Reactions-1.html":{},"classes/Security.html":{},"classes/Security-1.html":{},"classes/Sessions.html":{},"classes/Sessions-1.html":{},"classes/Stats.html":{},"classes/Stats-1.html":{},"classes/Suspension.html":{},"classes/Suspension-1.html":{},"classes/Transaction.html":{},"classes/Transaction-1.html":{},"classes/TransactionBuyer.html":{},"classes/TransactionBuyer-1.html":{}}}],["src/.../configuration.enum.ts",{"_index":1535,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../main.ts",{"_index":1542,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../rank.decorator.ts",{"_index":1631,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../ranks.enum.ts",{"_index":1536,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../user.decorator.ts",{"_index":1630,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.controller.ts",{"_index":115,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":117,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":131,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":202,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":203,"title":{},"body":{"injectables/AppService.html":{}}}],["src/auth/auth.controller.ts",{"_index":207,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:120",{"_index":239,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:140",{"_index":235,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:164",{"_index":224,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:187",{"_index":229,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:32",{"_index":249,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:52",{"_index":243,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:57",{"_index":253,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:77",{"_index":257,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:96",{"_index":264,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.module.ts",{"_index":325,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.service.ts",{"_index":342,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:122",{"_index":364,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:292",{"_index":368,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:31",{"_index":352,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:344",{"_index":373,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:374",{"_index":370,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:42",{"_index":365,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:430",{"_index":362,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:500",{"_index":354,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:564",{"_index":358,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:615",{"_index":360,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/dto/security.dto.ts",{"_index":1175,"title":{},"body":{"classes/SecurityDto.html":{},"coverage.html":{}}}],["src/auth/dto/security.dto.ts:10",{"_index":1176,"title":{},"body":{"classes/SecurityDto.html":{}}}],["src/auth/dto/security.dto.ts:14",{"_index":1177,"title":{},"body":{"classes/SecurityDto.html":{}}}],["src/auth/dto/security.dto.ts:18",{"_index":1178,"title":{},"body":{"classes/SecurityDto.html":{}}}],["src/auth/dto/security.dto.ts:22",{"_index":1179,"title":{},"body":{"classes/SecurityDto.html":{}}}],["src/auth/dto/security.dto.ts:26",{"_index":1180,"title":{},"body":{"classes/SecurityDto.html":{}}}],["src/auth/dto/security.dto.ts:6",{"_index":1181,"title":{},"body":{"classes/SecurityDto.html":{}}}],["src/auth/dto/security.update.dto.ts",{"_index":1164,"title":{},"body":{"classes/SecurityCode.html":{},"classes/SecurityUpdateDto.html":{},"coverage.html":{}}}],["src/auth/dto/security.update.dto.ts:10",{"_index":1167,"title":{},"body":{"classes/SecurityCode.html":{}}}],["src/auth/dto/security.update.dto.ts:14",{"_index":1168,"title":{},"body":{"classes/SecurityCode.html":{}}}],["src/auth/dto/security.update.dto.ts:18",{"_index":1169,"title":{},"body":{"classes/SecurityCode.html":{}}}],["src/auth/dto/security.update.dto.ts:22",{"_index":1170,"title":{},"body":{"classes/SecurityCode.html":{}}}],["src/auth/dto/security.update.dto.ts:26",{"_index":1172,"title":{},"body":{"classes/SecurityCode.html":{}}}],["src/auth/dto/security.update.dto.ts:32",{"_index":1182,"title":{},"body":{"classes/SecurityUpdateDto.html":{}}}],["src/auth/dto/security.update.dto.ts:34",{"_index":1183,"title":{},"body":{"classes/SecurityUpdateDto.html":{}}}],["src/auth/dto/security.update.dto.ts:6",{"_index":1166,"title":{},"body":{"classes/SecurityCode.html":{}}}],["src/auth/dto/signin.dto.ts",{"_index":1192,"title":{},"body":{"classes/SignInDto.html":{},"coverage.html":{}}}],["src/auth/dto/signin.dto.ts:12",{"_index":1193,"title":{},"body":{"classes/SignInDto.html":{}}}],["src/auth/dto/signin.dto.ts:16",{"_index":1197,"title":{},"body":{"classes/SignInDto.html":{}}}],["src/auth/dto/signin.dto.ts:5",{"_index":1195,"title":{},"body":{"classes/SignInDto.html":{}}}],["src/auth/dto/signin.dto.ts:9",{"_index":1198,"title":{},"body":{"classes/SignInDto.html":{}}}],["src/auth/jwt.payload.interface.ts",{"_index":824,"title":{},"body":{"interfaces/IJwtPayload.html":{},"coverage.html":{}}}],["src/auth/strategies/jwt.strategy.ts",{"_index":826,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/auth/strategies/jwt.strategy.ts:12",{"_index":828,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/strategies/jwt.strategy.ts:25",{"_index":830,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/config/config.module.ts",{"_index":684,"title":{},"body":{"modules/ConfigModule.html":{}}}],["src/config/config.service.ts",{"_index":687,"title":{},"body":{"classes/ConfigService.html":{},"coverage.html":{}}}],["src/config/config.service.ts:34",{"_index":694,"title":{},"body":{"classes/ConfigService.html":{}}}],["src/config/config.service.ts:6",{"_index":691,"title":{},"body":{"classes/ConfigService.html":{}}}],["src/config/config.service.ts:7",{"_index":689,"title":{},"body":{"classes/ConfigService.html":{}}}],["src/decorators/rank.decorator.ts",{"_index":1477,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/decorators/user.decorator.ts",{"_index":1479,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/gateways/general.gateway.ts",{"_index":790,"title":{},"body":{"classes/GeneralGateway.html":{},"coverage.html":{}}}],["src/gateways/general.gateway.ts:15",{"_index":802,"title":{},"body":{"classes/GeneralGateway.html":{}}}],["src/gateways/general.gateway.ts:17",{"_index":799,"title":{},"body":{"classes/GeneralGateway.html":{}}}],["src/gateways/general.gateway.ts:20",{"_index":808,"title":{},"body":{"classes/GeneralGateway.html":{}}}],["src/gateways/general.gateway.ts:45",{"_index":805,"title":{},"body":{"classes/GeneralGateway.html":{}}}],["src/guards/rank.guard.ts",{"_index":1106,"title":{},"body":{"guards/RankGuard.html":{},"coverage.html":{}}}],["src/guards/rank.guard.ts:5",{"_index":1110,"title":{},"body":{"guards/RankGuard.html":{}}}],["src/guards/rank.guard.ts:8",{"_index":1113,"title":{},"body":{"guards/RankGuard.html":{}}}],["src/keys/configuration.enum.ts",{"_index":1537,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/keys/ranks.enum",{"_index":986,"title":{},"body":{"injectables/MarketService.html":{},"injectables/UserService.html":{}}}],["src/keys/ranks.enum.ts",{"_index":1538,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/main.ts",{"_index":1480,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/modules/admin/admin.controller.ts",{"_index":6,"title":{},"body":{"controllers/AdminController.html":{},"coverage.html":{}}}],["src/modules/admin/admin.controller.ts:10",{"_index":25,"title":{},"body":{"controllers/AdminController.html":{}}}],["src/modules/admin/admin.controller.ts:23",{"_index":19,"title":{},"body":{"controllers/AdminController.html":{}}}],["src/modules/admin/admin.module.ts",{"_index":76,"title":{},"body":{"modules/AdminModule.html":{}}}],["src/modules/admin/admin.service.ts",{"_index":85,"title":{},"body":{"injectables/AdminService.html":{},"coverage.html":{}}}],["src/modules/admin/admin.service.ts:15",{"_index":94,"title":{},"body":{"injectables/AdminService.html":{}}}],["src/modules/admin/admin.service.ts:25",{"_index":92,"title":{},"body":{"injectables/AdminService.html":{}}}],["src/modules/admin/admin.service.ts:8",{"_index":91,"title":{},"body":{"injectables/AdminService.html":{}}}],["src/modules/admin/models/changelog.data.model.ts",{"_index":644,"title":{},"body":{"classes/ChangelogAuthor.html":{},"coverage.html":{}}}],["src/modules/admin/models/changelog.data.model.ts:12",{"_index":645,"title":{},"body":{"classes/ChangelogAuthor.html":{}}}],["src/modules/admin/models/changelog.data.model.ts:15",{"_index":647,"title":{},"body":{"classes/ChangelogAuthor.html":{}}}],["src/modules/admin/models/changelog.data.model.ts:9",{"_index":646,"title":{},"body":{"classes/ChangelogAuthor.html":{}}}],["src/modules/admin/models/changelog.model.ts",{"_index":648,"title":{},"body":{"classes/ChangelogModel.html":{},"coverage.html":{}}}],["src/modules/admin/models/changelog.model.ts:11",{"_index":659,"title":{},"body":{"classes/ChangelogModel.html":{}}}],["src/modules/admin/models/changelog.model.ts:14",{"_index":661,"title":{},"body":{"classes/ChangelogModel.html":{}}}],["src/modules/admin/models/changelog.model.ts:17",{"_index":657,"title":{},"body":{"classes/ChangelogModel.html":{}}}],["src/modules/admin/models/changelog.model.ts:20",{"_index":654,"title":{},"body":{"classes/ChangelogModel.html":{}}}],["src/modules/admin/models/changelog.model.ts:23",{"_index":652,"title":{},"body":{"classes/ChangelogModel.html":{}}}],["src/modules/market/dto/buyer.add.dto.ts",{"_index":606,"title":{},"body":{"classes/BuyerAddMarketDto.html":{},"coverage.html":{}}}],["src/modules/market/dto/buyer.add.dto.ts:10",{"_index":608,"title":{},"body":{"classes/BuyerAddMarketDto.html":{}}}],["src/modules/market/dto/buyer.add.dto.ts:12",{"_index":609,"title":{},"body":{"classes/BuyerAddMarketDto.html":{}}}],["src/modules/market/dto/buyer.add.dto.ts:6",{"_index":610,"title":{},"body":{"classes/BuyerAddMarketDto.html":{}}}],["src/modules/market/dto/buyer.add.dto.ts:8",{"_index":612,"title":{},"body":{"classes/BuyerAddMarketDto.html":{}}}],["src/modules/market/dto/buyer.remove.dto.ts",{"_index":640,"title":{},"body":{"classes/BuyerRemoveMarketDto.html":{},"coverage.html":{}}}],["src/modules/market/dto/buyer.remove.dto.ts:2",{"_index":641,"title":{},"body":{"classes/BuyerRemoveMarketDto.html":{}}}],["src/modules/market/dto/buyer.remove.dto.ts:4",{"_index":642,"title":{},"body":{"classes/BuyerRemoveMarketDto.html":{}}}],["src/modules/market/dto/comment.add.dto.ts",{"_index":671,"title":{},"body":{"classes/CommentMarketDto.html":{},"coverage.html":{}}}],["src/modules/market/dto/comment.add.dto.ts:10",{"_index":673,"title":{},"body":{"classes/CommentMarketDto.html":{}}}],["src/modules/market/dto/comment.add.dto.ts:12",{"_index":674,"title":{},"body":{"classes/CommentMarketDto.html":{}}}],["src/modules/market/dto/comment.add.dto.ts:14",{"_index":672,"title":{},"body":{"classes/CommentMarketDto.html":{}}}],["src/modules/market/dto/comment.add.dto.ts:6",{"_index":675,"title":{},"body":{"classes/CommentMarketDto.html":{}}}],["src/modules/market/dto/comment.add.dto.ts:8",{"_index":676,"title":{},"body":{"classes/CommentMarketDto.html":{}}}],["src/modules/market/dto/comment.remove.dto.ts",{"_index":679,"title":{},"body":{"classes/CommentRemoveMarketDto.html":{},"coverage.html":{}}}],["src/modules/market/dto/comment.remove.dto.ts:2",{"_index":681,"title":{},"body":{"classes/CommentRemoveMarketDto.html":{}}}],["src/modules/market/dto/comment.remove.dto.ts:4",{"_index":680,"title":{},"body":{"classes/CommentRemoveMarketDto.html":{}}}],["src/modules/market/dto/reaction.add.dto.ts",{"_index":1122,"title":{},"body":{"classes/ReactionAddMarketDto.html":{},"coverage.html":{}}}],["src/modules/market/dto/reaction.add.dto.ts:10",{"_index":1123,"title":{},"body":{"classes/ReactionAddMarketDto.html":{}}}],["src/modules/market/dto/reaction.add.dto.ts:12",{"_index":1124,"title":{},"body":{"classes/ReactionAddMarketDto.html":{}}}],["src/modules/market/dto/reaction.add.dto.ts:14",{"_index":1126,"title":{},"body":{"classes/ReactionAddMarketDto.html":{}}}],["src/modules/market/dto/reaction.add.dto.ts:6",{"_index":1125,"title":{},"body":{"classes/ReactionAddMarketDto.html":{}}}],["src/modules/market/dto/reaction.add.dto.ts:8",{"_index":1127,"title":{},"body":{"classes/ReactionAddMarketDto.html":{}}}],["src/modules/market/dto/reaction.remove.dto.ts",{"_index":1128,"title":{},"body":{"classes/ReactionRemoveMarketDto.html":{},"coverage.html":{}}}],["src/modules/market/dto/reaction.remove.dto.ts:2",{"_index":1129,"title":{},"body":{"classes/ReactionRemoveMarketDto.html":{}}}],["src/modules/market/dto/reaction.remove.dto.ts:4",{"_index":1130,"title":{},"body":{"classes/ReactionRemoveMarketDto.html":{}}}],["src/modules/market/market.controller.ts",{"_index":862,"title":{},"body":{"controllers/MarketController.html":{},"coverage.html":{}}}],["src/modules/market/market.controller.ts:100",{"_index":881,"title":{},"body":{"controllers/MarketController.html":{}}}],["src/modules/market/market.controller.ts:121",{"_index":897,"title":{},"body":{"controllers/MarketController.html":{}}}],["src/modules/market/market.controller.ts:144",{"_index":894,"title":{},"body":{"controllers/MarketController.html":{}}}],["src/modules/market/market.controller.ts:165",{"_index":901,"title":{},"body":{"controllers/MarketController.html":{}}}],["src/modules/market/market.controller.ts:36",{"_index":877,"title":{},"body":{"controllers/MarketController.html":{}}}],["src/modules/market/market.controller.ts:55",{"_index":890,"title":{},"body":{"controllers/MarketController.html":{}}}],["src/modules/market/market.controller.ts:68",{"_index":886,"title":{},"body":{"controllers/MarketController.html":{}}}],["src/modules/market/market.controller.ts:81",{"_index":873,"title":{},"body":{"controllers/MarketController.html":{}}}],["src/modules/market/market.module.ts",{"_index":966,"title":{},"body":{"modules/MarketModule.html":{}}}],["src/modules/market/market.service.ts",{"_index":969,"title":{},"body":{"injectables/MarketService.html":{},"coverage.html":{}}}],["src/modules/market/market.service.ts:146",{"_index":974,"title":{},"body":{"injectables/MarketService.html":{}}}],["src/modules/market/market.service.ts:198",{"_index":975,"title":{},"body":{"injectables/MarketService.html":{}}}],["src/modules/market/market.service.ts:22",{"_index":972,"title":{},"body":{"injectables/MarketService.html":{}}}],["src/modules/market/market.service.ts:251",{"_index":977,"title":{},"body":{"injectables/MarketService.html":{}}}],["src/modules/market/market.service.ts:30",{"_index":976,"title":{},"body":{"injectables/MarketService.html":{}}}],["src/modules/market/market.service.ts:304",{"_index":983,"title":{},"body":{"injectables/MarketService.html":{}}}],["src/modules/market/market.service.ts:377",{"_index":982,"title":{},"body":{"injectables/MarketService.html":{}}}],["src/modules/market/market.service.ts:407",{"_index":984,"title":{},"body":{"injectables/MarketService.html":{}}}],["src/modules/market/market.service.ts:48",{"_index":981,"title":{},"body":{"injectables/MarketService.html":{}}}],["src/modules/market/market.service.ts:85",{"_index":979,"title":{},"body":{"injectables/MarketService.html":{}}}],["src/modules/market/models/market.data.model.ts",{"_index":614,"title":{},"body":{"classes/BuyerMarket.html":{},"classes/CommentMarket.html":{},"classes/DiscountMarket.html":{},"classes/ReactionsMarket.html":{},"coverage.html":{}}}],["src/modules/market/models/market.data.model.ts:17",{"_index":619,"title":{},"body":{"classes/BuyerMarket.html":{}}}],["src/modules/market/models/market.data.model.ts:20",{"_index":616,"title":{},"body":{"classes/BuyerMarket.html":{}}}],["src/modules/market/models/market.data.model.ts:23",{"_index":617,"title":{},"body":{"classes/BuyerMarket.html":{}}}],["src/modules/market/models/market.data.model.ts:31",{"_index":666,"title":{},"body":{"classes/CommentMarket.html":{}}}],["src/modules/market/models/market.data.model.ts:34",{"_index":668,"title":{},"body":{"classes/CommentMarket.html":{}}}],["src/modules/market/models/market.data.model.ts:37",{"_index":669,"title":{},"body":{"classes/CommentMarket.html":{}}}],["src/modules/market/models/market.data.model.ts:40",{"_index":667,"title":{},"body":{"classes/CommentMarket.html":{}}}],["src/modules/market/models/market.data.model.ts:48",{"_index":1148,"title":{},"body":{"classes/ReactionsMarket.html":{}}}],["src/modules/market/models/market.data.model.ts:51",{"_index":1145,"title":{},"body":{"classes/ReactionsMarket.html":{}}}],["src/modules/market/models/market.data.model.ts:54",{"_index":1146,"title":{},"body":{"classes/ReactionsMarket.html":{}}}],["src/modules/market/models/market.data.model.ts:57",{"_index":1147,"title":{},"body":{"classes/ReactionsMarket.html":{}}}],["src/modules/market/models/market.data.model.ts:6",{"_index":728,"title":{},"body":{"classes/DiscountMarket.html":{}}}],["src/modules/market/models/market.data.model.ts:9",{"_index":727,"title":{},"body":{"classes/DiscountMarket.html":{}}}],["src/modules/market/models/market.model.ts",{"_index":932,"title":{},"body":{"classes/MarketModel.html":{},"coverage.html":{}}}],["src/modules/market/models/market.model.ts:38",{"_index":947,"title":{},"body":{"classes/MarketModel.html":{}}}],["src/modules/market/models/market.model.ts:41",{"_index":943,"title":{},"body":{"classes/MarketModel.html":{}}}],["src/modules/market/models/market.model.ts:44",{"_index":949,"title":{},"body":{"classes/MarketModel.html":{}}}],["src/modules/market/models/market.model.ts:47",{"_index":937,"title":{},"body":{"classes/MarketModel.html":{}}}],["src/modules/market/models/market.model.ts:50",{"_index":951,"title":{},"body":{"classes/MarketModel.html":{}}}],["src/modules/market/models/market.model.ts:53",{"_index":945,"title":{},"body":{"classes/MarketModel.html":{}}}],["src/modules/market/models/market.model.ts:56",{"_index":946,"title":{},"body":{"classes/MarketModel.html":{}}}],["src/modules/market/models/market.model.ts:59",{"_index":944,"title":{},"body":{"classes/MarketModel.html":{}}}],["src/modules/market/models/market.model.ts:62",{"_index":939,"title":{},"body":{"classes/MarketModel.html":{}}}],["src/modules/market/models/market.model.ts:65",{"_index":940,"title":{},"body":{"classes/MarketModel.html":{}}}],["src/modules/market/models/market.model.ts:68",{"_index":950,"title":{},"body":{"classes/MarketModel.html":{}}}],["src/modules/market/models/market.model.ts:74",{"_index":936,"title":{},"body":{"classes/MarketModel.html":{}}}],["src/modules/transaction/transaction.controller.ts",{"_index":1238,"title":{},"body":{"controllers/TransactionController.html":{},"coverage.html":{}}}],["src/modules/transaction/transaction.module.ts",{"_index":1243,"title":{},"body":{"modules/TransactionModule.html":{}}}],["src/modules/transaction/transaction.service.ts",{"_index":1246,"title":{},"body":{"injectables/TransactionService.html":{},"coverage.html":{}}}],["src/modules/user/dto/reactions.dto.ts",{"_index":1135,"title":{},"body":{"classes/ReactionsDto.html":{},"coverage.html":{}}}],["src/modules/user/dto/reactions.dto.ts:10",{"_index":1139,"title":{},"body":{"classes/ReactionsDto.html":{}}}],["src/modules/user/dto/reactions.dto.ts:14",{"_index":1141,"title":{},"body":{"classes/ReactionsDto.html":{}}}],["src/modules/user/dto/reactions.dto.ts:6",{"_index":1140,"title":{},"body":{"classes/ReactionsDto.html":{}}}],["src/modules/user/dto/update",{"_index":1248,"title":{},"body":{"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["src/modules/user/dto/user.dto.data.ts",{"_index":729,"title":{},"body":{"classes/Email.html":{},"classes/Market.html":{},"classes/Membership.html":{},"classes/Notifications.html":{},"classes/Online.html":{},"classes/Password.html":{},"classes/Rank.html":{},"classes/Reactions.html":{},"classes/Security.html":{},"classes/Sessions.html":{},"classes/Stats.html":{},"classes/Suspension.html":{},"classes/Transaction.html":{},"classes/TransactionBuyer.html":{},"coverage.html":{}}}],["src/modules/user/dto/user.dto.data.ts:10",{"_index":859,"title":{},"body":{"classes/Market.html":{}}}],["src/modules/user/dto/user.dto.data.ts:103",{"_index":733,"title":{},"body":{"classes/Email.html":{}}}],["src/modules/user/dto/user.dto.data.ts:105",{"_index":735,"title":{},"body":{"classes/Email.html":{}}}],["src/modules/user/dto/user.dto.data.ts:107",{"_index":736,"title":{},"body":{"classes/Email.html":{}}}],["src/modules/user/dto/user.dto.data.ts:109",{"_index":732,"title":{},"body":{"classes/Email.html":{}}}],["src/modules/user/dto/user.dto.data.ts:113",{"_index":1091,"title":{},"body":{"classes/Password.html":{}}}],["src/modules/user/dto/user.dto.data.ts:115",{"_index":1092,"title":{},"body":{"classes/Password.html":{}}}],["src/modules/user/dto/user.dto.data.ts:117",{"_index":1093,"title":{},"body":{"classes/Password.html":{}}}],["src/modules/user/dto/user.dto.data.ts:119",{"_index":1090,"title":{},"body":{"classes/Password.html":{}}}],["src/modules/user/dto/user.dto.data.ts:12",{"_index":854,"title":{},"body":{"classes/Market.html":{}}}],["src/modules/user/dto/user.dto.data.ts:123",{"_index":1232,"title":{},"body":{"classes/TransactionBuyer.html":{}}}],["src/modules/user/dto/user.dto.data.ts:125",{"_index":1233,"title":{},"body":{"classes/TransactionBuyer.html":{}}}],["src/modules/user/dto/user.dto.data.ts:127",{"_index":1231,"title":{},"body":{"classes/TransactionBuyer.html":{}}}],["src/modules/user/dto/user.dto.data.ts:131",{"_index":1214,"title":{},"body":{"classes/Transaction.html":{}}}],["src/modules/user/dto/user.dto.data.ts:133",{"_index":1220,"title":{},"body":{"classes/Transaction.html":{}}}],["src/modules/user/dto/user.dto.data.ts:135",{"_index":1215,"title":{},"body":{"classes/Transaction.html":{}}}],["src/modules/user/dto/user.dto.data.ts:137",{"_index":1217,"title":{},"body":{"classes/Transaction.html":{}}}],["src/modules/user/dto/user.dto.data.ts:139",{"_index":1221,"title":{},"body":{"classes/Transaction.html":{}}}],["src/modules/user/dto/user.dto.data.ts:14",{"_index":856,"title":{},"body":{"classes/Market.html":{}}}],["src/modules/user/dto/user.dto.data.ts:141",{"_index":1219,"title":{},"body":{"classes/Transaction.html":{}}}],["src/modules/user/dto/user.dto.data.ts:143",{"_index":1216,"title":{},"body":{"classes/Transaction.html":{}}}],["src/modules/user/dto/user.dto.data.ts:145",{"_index":1218,"title":{},"body":{"classes/Transaction.html":{}}}],["src/modules/user/dto/user.dto.data.ts:16",{"_index":857,"title":{},"body":{"classes/Market.html":{}}}],["src/modules/user/dto/user.dto.data.ts:2",{"_index":853,"title":{},"body":{"classes/Market.html":{}}}],["src/modules/user/dto/user.dto.data.ts:20",{"_index":1131,"title":{},"body":{"classes/Reactions.html":{}}}],["src/modules/user/dto/user.dto.data.ts:22",{"_index":1132,"title":{},"body":{"classes/Reactions.html":{}}}],["src/modules/user/dto/user.dto.data.ts:26",{"_index":1211,"title":{},"body":{"classes/Suspension.html":{}}}],["src/modules/user/dto/user.dto.data.ts:28",{"_index":1210,"title":{},"body":{"classes/Suspension.html":{}}}],["src/modules/user/dto/user.dto.data.ts:32",{"_index":1203,"title":{},"body":{"classes/Stats.html":{}}}],["src/modules/user/dto/user.dto.data.ts:34",{"_index":1204,"title":{},"body":{"classes/Stats.html":{}}}],["src/modules/user/dto/user.dto.data.ts:36",{"_index":1202,"title":{},"body":{"classes/Stats.html":{}}}],["src/modules/user/dto/user.dto.data.ts:38",{"_index":1201,"title":{},"body":{"classes/Stats.html":{}}}],["src/modules/user/dto/user.dto.data.ts:4",{"_index":858,"title":{},"body":{"classes/Market.html":{}}}],["src/modules/user/dto/user.dto.data.ts:40",{"_index":1200,"title":{},"body":{"classes/Stats.html":{}}}],["src/modules/user/dto/user.dto.data.ts:44",{"_index":1154,"title":{},"body":{"classes/Security.html":{}}}],["src/modules/user/dto/user.dto.data.ts:46",{"_index":1149,"title":{},"body":{"classes/Security.html":{}}}],["src/modules/user/dto/user.dto.data.ts:48",{"_index":1150,"title":{},"body":{"classes/Security.html":{}}}],["src/modules/user/dto/user.dto.data.ts:50",{"_index":1151,"title":{},"body":{"classes/Security.html":{}}}],["src/modules/user/dto/user.dto.data.ts:52",{"_index":1152,"title":{},"body":{"classes/Security.html":{}}}],["src/modules/user/dto/user.dto.data.ts:54",{"_index":1153,"title":{},"body":{"classes/Security.html":{}}}],["src/modules/user/dto/user.dto.data.ts:56",{"_index":1155,"title":{},"body":{"classes/Security.html":{}}}],["src/modules/user/dto/user.dto.data.ts:6",{"_index":860,"title":{},"body":{"classes/Market.html":{}}}],["src/modules/user/dto/user.dto.data.ts:60",{"_index":1073,"title":{},"body":{"classes/Membership.html":{}}}],["src/modules/user/dto/user.dto.data.ts:62",{"_index":1072,"title":{},"body":{"classes/Membership.html":{}}}],["src/modules/user/dto/user.dto.data.ts:64",{"_index":1074,"title":{},"body":{"classes/Membership.html":{}}}],["src/modules/user/dto/user.dto.data.ts:68",{"_index":1100,"title":{},"body":{"classes/Rank.html":{}}}],["src/modules/user/dto/user.dto.data.ts:70",{"_index":1099,"title":{},"body":{"classes/Rank.html":{}}}],["src/modules/user/dto/user.dto.data.ts:72",{"_index":1098,"title":{},"body":{"classes/Rank.html":{}}}],["src/modules/user/dto/user.dto.data.ts:76",{"_index":1080,"title":{},"body":{"classes/Notifications.html":{}}}],["src/modules/user/dto/user.dto.data.ts:78",{"_index":1078,"title":{},"body":{"classes/Notifications.html":{}}}],["src/modules/user/dto/user.dto.data.ts:8",{"_index":855,"title":{},"body":{"classes/Market.html":{}}}],["src/modules/user/dto/user.dto.data.ts:80",{"_index":1079,"title":{},"body":{"classes/Notifications.html":{}}}],["src/modules/user/dto/user.dto.data.ts:84",{"_index":1086,"title":{},"body":{"classes/Online.html":{}}}],["src/modules/user/dto/user.dto.data.ts:86",{"_index":1085,"title":{},"body":{"classes/Online.html":{}}}],["src/modules/user/dto/user.dto.data.ts:88",{"_index":1084,"title":{},"body":{"classes/Online.html":{}}}],["src/modules/user/dto/user.dto.data.ts:93",{"_index":1184,"title":{},"body":{"classes/Sessions.html":{}}}],["src/modules/user/dto/user.dto.data.ts:95",{"_index":1185,"title":{},"body":{"classes/Sessions.html":{}}}],["src/modules/user/dto/user.dto.data.ts:97",{"_index":1186,"title":{},"body":{"classes/Sessions.html":{}}}],["src/modules/user/dto/user.dto.data.ts:99",{"_index":1187,"title":{},"body":{"classes/Sessions.html":{}}}],["src/modules/user/dto/user.dto.ts",{"_index":1334,"title":{},"body":{"classes/UserDto.html":{},"coverage.html":{}}}],["src/modules/user/dto/user.dto.ts:19",{"_index":1340,"title":{},"body":{"classes/UserDto.html":{}}}],["src/modules/user/dto/user.dto.ts:21",{"_index":1346,"title":{},"body":{"classes/UserDto.html":{}}}],["src/modules/user/dto/user.dto.ts:23",{"_index":1343,"title":{},"body":{"classes/UserDto.html":{}}}],["src/modules/user/dto/user.dto.ts:25",{"_index":1362,"title":{},"body":{"classes/UserDto.html":{}}}],["src/modules/user/dto/user.dto.ts:27",{"_index":1350,"title":{},"body":{"classes/UserDto.html":{}}}],["src/modules/user/dto/user.dto.ts:29",{"_index":1348,"title":{},"body":{"classes/UserDto.html":{}}}],["src/modules/user/dto/user.dto.ts:31",{"_index":1357,"title":{},"body":{"classes/UserDto.html":{}}}],["src/modules/user/dto/user.dto.ts:33",{"_index":1351,"title":{},"body":{"classes/UserDto.html":{}}}],["src/modules/user/dto/user.dto.ts:35",{"_index":1341,"title":{},"body":{"classes/UserDto.html":{}}}],["src/modules/user/dto/user.dto.ts:37",{"_index":1344,"title":{},"body":{"classes/UserDto.html":{}}}],["src/modules/user/dto/user.dto.ts:39",{"_index":1342,"title":{},"body":{"classes/UserDto.html":{}}}],["src/modules/user/dto/user.dto.ts:41",{"_index":1360,"title":{},"body":{"classes/UserDto.html":{}}}],["src/modules/user/dto/user.dto.ts:43",{"_index":1358,"title":{},"body":{"classes/UserDto.html":{}}}],["src/modules/user/dto/user.dto.ts:45",{"_index":1355,"title":{},"body":{"classes/UserDto.html":{}}}],["src/modules/user/dto/user.dto.ts:47",{"_index":1359,"title":{},"body":{"classes/UserDto.html":{}}}],["src/modules/user/dto/user.dto.ts:49",{"_index":1352,"title":{},"body":{"classes/UserDto.html":{}}}],["src/modules/user/dto/user.dto.ts:51",{"_index":1353,"title":{},"body":{"classes/UserDto.html":{}}}],["src/modules/user/dto/user.dto.ts:53",{"_index":1347,"title":{},"body":{"classes/UserDto.html":{}}}],["src/modules/user/dto/user.dto.ts:55",{"_index":1349,"title":{},"body":{"classes/UserDto.html":{}}}],["src/modules/user/dto/user.dto.ts:57",{"_index":1361,"title":{},"body":{"classes/UserDto.html":{}}}],["src/modules/user/dto/user.dto.ts:59",{"_index":1345,"title":{},"body":{"classes/UserDto.html":{}}}],["src/modules/user/dto/user.dto.ts:61",{"_index":1354,"title":{},"body":{"classes/UserDto.html":{}}}],["src/modules/user/dto/user.dto.ts:63",{"_index":1356,"title":{},"body":{"classes/UserDto.html":{}}}],["src/modules/user/models/user.model",{"_index":621,"title":{},"body":{"classes/BuyerMarket.html":{},"classes/CommentMarket.html":{},"classes/DiscountMarket.html":{},"classes/MarketModel.html":{},"classes/ReactionsMarket.html":{}}}],["src/modules/user/models/user.model.data.ts",{"_index":769,"title":{},"body":{"classes/Email-1.html":{},"classes/Membership-1.html":{},"classes/Notifications-1.html":{},"classes/Online-1.html":{},"classes/Password-1.html":{},"classes/Rank-1.html":{},"classes/Reactions-1.html":{},"classes/Security-1.html":{},"classes/Sessions-1.html":{},"classes/Stats-1.html":{},"classes/Suspension-1.html":{},"classes/Transaction-1.html":{},"classes/TransactionBuyer-1.html":{},"coverage.html":{}}}],["src/modules/user/models/user.model.data.ts:100",{"_index":1082,"title":{},"body":{"classes/Notifications-1.html":{}}}],["src/modules/user/models/user.model.data.ts:105",{"_index":1089,"title":{},"body":{"classes/Online-1.html":{}}}],["src/modules/user/models/user.model.data.ts:108",{"_index":1088,"title":{},"body":{"classes/Online-1.html":{}}}],["src/modules/user/models/user.model.data.ts:111",{"_index":1087,"title":{},"body":{"classes/Online-1.html":{}}}],["src/modules/user/models/user.model.data.ts:117",{"_index":1188,"title":{},"body":{"classes/Sessions-1.html":{}}}],["src/modules/user/models/user.model.data.ts:120",{"_index":1189,"title":{},"body":{"classes/Sessions-1.html":{}}}],["src/modules/user/models/user.model.data.ts:123",{"_index":1190,"title":{},"body":{"classes/Sessions-1.html":{}}}],["src/modules/user/models/user.model.data.ts:126",{"_index":1191,"title":{},"body":{"classes/Sessions-1.html":{}}}],["src/modules/user/models/user.model.data.ts:13",{"_index":1133,"title":{},"body":{"classes/Reactions-1.html":{}}}],["src/modules/user/models/user.model.data.ts:131",{"_index":773,"title":{},"body":{"classes/Email-1.html":{}}}],["src/modules/user/models/user.model.data.ts:134",{"_index":774,"title":{},"body":{"classes/Email-1.html":{}}}],["src/modules/user/models/user.model.data.ts:137",{"_index":775,"title":{},"body":{"classes/Email-1.html":{}}}],["src/modules/user/models/user.model.data.ts:140",{"_index":771,"title":{},"body":{"classes/Email-1.html":{}}}],["src/modules/user/models/user.model.data.ts:145",{"_index":1095,"title":{},"body":{"classes/Password-1.html":{}}}],["src/modules/user/models/user.model.data.ts:148",{"_index":1096,"title":{},"body":{"classes/Password-1.html":{}}}],["src/modules/user/models/user.model.data.ts:151",{"_index":1097,"title":{},"body":{"classes/Password-1.html":{}}}],["src/modules/user/models/user.model.data.ts:154",{"_index":1094,"title":{},"body":{"classes/Password-1.html":{}}}],["src/modules/user/models/user.model.data.ts:159",{"_index":1235,"title":{},"body":{"classes/TransactionBuyer-1.html":{}}}],["src/modules/user/models/user.model.data.ts:162",{"_index":1236,"title":{},"body":{"classes/TransactionBuyer-1.html":{}}}],["src/modules/user/models/user.model.data.ts:165",{"_index":1234,"title":{},"body":{"classes/TransactionBuyer-1.html":{}}}],["src/modules/user/models/user.model.data.ts:170",{"_index":1222,"title":{},"body":{"classes/Transaction-1.html":{}}}],["src/modules/user/models/user.model.data.ts:173",{"_index":1229,"title":{},"body":{"classes/Transaction-1.html":{}}}],["src/modules/user/models/user.model.data.ts:176",{"_index":1224,"title":{},"body":{"classes/Transaction-1.html":{}}}],["src/modules/user/models/user.model.data.ts:179",{"_index":1226,"title":{},"body":{"classes/Transaction-1.html":{}}}],["src/modules/user/models/user.model.data.ts:18",{"_index":1213,"title":{},"body":{"classes/Suspension-1.html":{}}}],["src/modules/user/models/user.model.data.ts:182",{"_index":1230,"title":{},"body":{"classes/Transaction-1.html":{}}}],["src/modules/user/models/user.model.data.ts:185",{"_index":1228,"title":{},"body":{"classes/Transaction-1.html":{}}}],["src/modules/user/models/user.model.data.ts:188",{"_index":1225,"title":{},"body":{"classes/Transaction-1.html":{}}}],["src/modules/user/models/user.model.data.ts:191",{"_index":1227,"title":{},"body":{"classes/Transaction-1.html":{}}}],["src/modules/user/models/user.model.data.ts:27",{"_index":1212,"title":{},"body":{"classes/Suspension-1.html":{}}}],["src/modules/user/models/user.model.data.ts:32",{"_index":1208,"title":{},"body":{"classes/Stats-1.html":{}}}],["src/modules/user/models/user.model.data.ts:35",{"_index":1209,"title":{},"body":{"classes/Stats-1.html":{}}}],["src/modules/user/models/user.model.data.ts:38",{"_index":1207,"title":{},"body":{"classes/Stats-1.html":{}}}],["src/modules/user/models/user.model.data.ts:41",{"_index":1206,"title":{},"body":{"classes/Stats-1.html":{}}}],["src/modules/user/models/user.model.data.ts:44",{"_index":1205,"title":{},"body":{"classes/Stats-1.html":{}}}],["src/modules/user/models/user.model.data.ts:49",{"_index":1161,"title":{},"body":{"classes/Security-1.html":{}}}],["src/modules/user/models/user.model.data.ts:52",{"_index":1156,"title":{},"body":{"classes/Security-1.html":{}}}],["src/modules/user/models/user.model.data.ts:55",{"_index":1157,"title":{},"body":{"classes/Security-1.html":{}}}],["src/modules/user/models/user.model.data.ts:58",{"_index":1158,"title":{},"body":{"classes/Security-1.html":{}}}],["src/modules/user/models/user.model.data.ts:61",{"_index":1159,"title":{},"body":{"classes/Security-1.html":{}}}],["src/modules/user/models/user.model.data.ts:64",{"_index":1160,"title":{},"body":{"classes/Security-1.html":{}}}],["src/modules/user/models/user.model.data.ts:67",{"_index":1162,"title":{},"body":{"classes/Security-1.html":{}}}],["src/modules/user/models/user.model.data.ts:72",{"_index":1076,"title":{},"body":{"classes/Membership-1.html":{}}}],["src/modules/user/models/user.model.data.ts:75",{"_index":1075,"title":{},"body":{"classes/Membership-1.html":{}}}],["src/modules/user/models/user.model.data.ts:78",{"_index":1077,"title":{},"body":{"classes/Membership-1.html":{}}}],["src/modules/user/models/user.model.data.ts:83",{"_index":1103,"title":{},"body":{"classes/Rank-1.html":{}}}],["src/modules/user/models/user.model.data.ts:86",{"_index":1102,"title":{},"body":{"classes/Rank-1.html":{}}}],["src/modules/user/models/user.model.data.ts:89",{"_index":1101,"title":{},"body":{"classes/Rank-1.html":{}}}],["src/modules/user/models/user.model.data.ts:94",{"_index":1083,"title":{},"body":{"classes/Notifications-1.html":{}}}],["src/modules/user/models/user.model.data.ts:97",{"_index":1081,"title":{},"body":{"classes/Notifications-1.html":{}}}],["src/modules/user/models/user.model.ts",{"_index":1364,"title":{},"body":{"classes/UserModel.html":{},"coverage.html":{}}}],["src/modules/user/models/user.model.ts:102",{"_index":1382,"title":{},"body":{"classes/UserModel.html":{}}}],["src/modules/user/models/user.model.ts:105",{"_index":1395,"title":{},"body":{"classes/UserModel.html":{}}}],["src/modules/user/models/user.model.ts:108",{"_index":1388,"title":{},"body":{"classes/UserModel.html":{}}}],["src/modules/user/models/user.model.ts:111",{"_index":1390,"title":{},"body":{"classes/UserModel.html":{}}}],["src/modules/user/models/user.model.ts:22",{"_index":1365,"title":{},"body":{"classes/UserModel.html":{}}}],["src/modules/user/models/user.model.ts:29",{"_index":1372,"title":{},"body":{"classes/UserModel.html":{}}}],["src/modules/user/models/user.model.ts:32",{"_index":1369,"title":{},"body":{"classes/UserModel.html":{}}}],["src/modules/user/models/user.model.ts:41",{"_index":1397,"title":{},"body":{"classes/UserModel.html":{}}}],["src/modules/user/models/user.model.ts:44",{"_index":1383,"title":{},"body":{"classes/UserModel.html":{}}}],["src/modules/user/models/user.model.ts:52",{"_index":1381,"title":{},"body":{"classes/UserModel.html":{}}}],["src/modules/user/models/user.model.ts:59",{"_index":1391,"title":{},"body":{"classes/UserModel.html":{}}}],["src/modules/user/models/user.model.ts:66",{"_index":1385,"title":{},"body":{"classes/UserModel.html":{}}}],["src/modules/user/models/user.model.ts:72",{"_index":1367,"title":{},"body":{"classes/UserModel.html":{}}}],["src/modules/user/models/user.model.ts:75",{"_index":1371,"title":{},"body":{"classes/UserModel.html":{}}}],["src/modules/user/models/user.model.ts:78",{"_index":1368,"title":{},"body":{"classes/UserModel.html":{}}}],["src/modules/user/models/user.model.ts:81",{"_index":1394,"title":{},"body":{"classes/UserModel.html":{}}}],["src/modules/user/models/user.model.ts:84",{"_index":1392,"title":{},"body":{"classes/UserModel.html":{}}}],["src/modules/user/models/user.model.ts:87",{"_index":1389,"title":{},"body":{"classes/UserModel.html":{}}}],["src/modules/user/models/user.model.ts:90",{"_index":1393,"title":{},"body":{"classes/UserModel.html":{}}}],["src/modules/user/models/user.model.ts:93",{"_index":1386,"title":{},"body":{"classes/UserModel.html":{}}}],["src/modules/user/models/user.model.ts:96",{"_index":1387,"title":{},"body":{"classes/UserModel.html":{}}}],["src/modules/user/models/user.model.ts:99",{"_index":1373,"title":{},"body":{"classes/UserModel.html":{}}}],["src/modules/user/user.controller.ts",{"_index":1254,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{}}}],["src/modules/user/user.controller.ts:139",{"_index":1265,"title":{},"body":{"controllers/UserController.html":{}}}],["src/modules/user/user.controller.ts:174",{"_index":1262,"title":{},"body":{"controllers/UserController.html":{}}}],["src/modules/user/user.controller.ts:194",{"_index":1275,"title":{},"body":{"controllers/UserController.html":{}}}],["src/modules/user/user.controller.ts:40",{"_index":1272,"title":{},"body":{"controllers/UserController.html":{}}}],["src/modules/user/user.controller.ts:48",{"_index":1278,"title":{},"body":{"controllers/UserController.html":{}}}],["src/modules/user/user.controller.ts:69",{"_index":1269,"title":{},"body":{"controllers/UserController.html":{}}}],["src/modules/user/user.controller.ts:89",{"_index":1268,"title":{},"body":{"controllers/UserController.html":{}}}],["src/modules/user/user.module.ts",{"_index":1403,"title":{},"body":{"modules/UserModule.html":{}}}],["src/modules/user/user.service.ts",{"_index":1406,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/modules/user/user.service.ts:100",{"_index":1418,"title":{},"body":{"injectables/UserService.html":{}}}],["src/modules/user/user.service.ts:120",{"_index":1427,"title":{},"body":{"injectables/UserService.html":{}}}],["src/modules/user/user.service.ts:20",{"_index":1411,"title":{},"body":{"injectables/UserService.html":{}}}],["src/modules/user/user.service.ts:213",{"_index":1422,"title":{},"body":{"injectables/UserService.html":{}}}],["src/modules/user/user.service.ts:224",{"_index":1426,"title":{},"body":{"injectables/UserService.html":{}}}],["src/modules/user/user.service.ts:28",{"_index":1417,"title":{},"body":{"injectables/UserService.html":{}}}],["src/modules/user/user.service.ts:304",{"_index":1413,"title":{},"body":{"injectables/UserService.html":{}}}],["src/modules/user/user.service.ts:355",{"_index":1420,"title":{},"body":{"injectables/UserService.html":{}}}],["src/modules/user/user.service.ts:375",{"_index":1415,"title":{},"body":{"injectables/UserService.html":{}}}],["standard",{"_index":1603,"title":{},"body":{"index.html":{}}}],["start",{"_index":1593,"title":{},"body":{"index.html":{}}}],["start:dev_",{"_index":1599,"title":{},"body":{"index.html":{}}}],["started",{"_index":1544,"title":{"index.html":{}},"body":{}}],["statements",{"_index":1469,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":197,"title":{},"body":{"modules/AppModule.html":{}}}],["stats",{"_index":744,"title":{"classes/Stats.html":{},"classes/Stats-1.html":{}},"body":{"classes/Email.html":{},"classes/Email-1.html":{},"classes/Market.html":{},"classes/Membership.html":{},"classes/Membership-1.html":{},"classes/Notifications.html":{},"classes/Notifications-1.html":{},"classes/Online.html":{},"classes/Online-1.html":{},"classes/Password.html":{},"classes/Password-1.html":{},"classes/Rank.html":{},"classes/Rank-1.html":{},"classes/Reactions.html":{},"classes/Reactions-1.html":{},"classes/Security.html":{},"classes/Security-1.html":{},"classes/Sessions.html":{},"classes/Sessions-1.html":{},"classes/Stats.html":{},"classes/Stats-1.html":{},"classes/Suspension.html":{},"classes/Suspension-1.html":{},"classes/Transaction.html":{},"classes/Transaction-1.html":{},"classes/TransactionBuyer.html":{},"classes/TransactionBuyer-1.html":{},"classes/UserDto.html":{},"classes/UserModel.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["status",{"_index":731,"title":{},"body":{"classes/Email.html":{},"classes/Email-1.html":{},"classes/Market.html":{},"classes/MarketModel.html":{},"injectables/MarketService.html":{},"classes/Membership.html":{},"classes/Membership-1.html":{},"classes/Notifications.html":{},"classes/Notifications-1.html":{},"classes/Online.html":{},"classes/Online-1.html":{},"classes/Password.html":{},"classes/Password-1.html":{},"classes/Rank.html":{},"classes/Rank-1.html":{},"classes/Reactions.html":{},"classes/Reactions-1.html":{},"classes/Security.html":{},"classes/Security-1.html":{},"classes/Sessions.html":{},"classes/Sessions-1.html":{},"classes/Stats.html":{},"classes/Stats-1.html":{},"classes/Suspension.html":{},"classes/Suspension-1.html":{},"classes/Transaction.html":{},"classes/Transaction-1.html":{},"classes/TransactionBuyer.html":{},"classes/TransactionBuyer-1.html":{}}}],["statuscode",{"_index":49,"title":{},"body":{"controllers/AdminController.html":{},"controllers/AuthController.html":{},"controllers/MarketController.html":{},"controllers/UserController.html":{}}}],["storage",{"_index":1299,"title":{},"body":{"controllers/UserController.html":{}}}],["strategies/jwt.strategy",{"_index":327,"title":{},"body":{"modules/AuthModule.html":{}}}],["strategy",{"_index":832,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["strict",{"_index":181,"title":{},"body":{"modules/AppModule.html":{}}}],["string",{"_index":118,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BuyerAddMarketDto.html":{},"classes/BuyerMarket.html":{},"classes/BuyerRemoveMarketDto.html":{},"classes/ChangelogAuthor.html":{},"classes/ChangelogModel.html":{},"classes/CommentMarket.html":{},"classes/CommentMarketDto.html":{},"classes/CommentRemoveMarketDto.html":{},"classes/ConfigService.html":{},"classes/DiscountMarket.html":{},"classes/Email.html":{},"classes/Email-1.html":{},"classes/GeneralGateway.html":{},"interfaces/IJwtPayload.html":{},"classes/Market.html":{},"controllers/MarketController.html":{},"classes/MarketModel.html":{},"injectables/MarketService.html":{},"classes/Membership.html":{},"classes/Membership-1.html":{},"classes/Notifications.html":{},"classes/Notifications-1.html":{},"classes/Online.html":{},"classes/Online-1.html":{},"classes/Password.html":{},"classes/Password-1.html":{},"classes/Rank.html":{},"classes/Rank-1.html":{},"guards/RankGuard.html":{},"classes/ReactionAddMarketDto.html":{},"classes/ReactionRemoveMarketDto.html":{},"classes/Reactions.html":{},"classes/Reactions-1.html":{},"classes/ReactionsDto.html":{},"classes/ReactionsMarket.html":{},"classes/Security.html":{},"classes/Security-1.html":{},"classes/SecurityCode.html":{},"classes/SecurityDto.html":{},"classes/SecurityUpdateDto.html":{},"classes/Sessions.html":{},"classes/Sessions-1.html":{},"classes/SignInDto.html":{},"classes/Stats.html":{},"classes/Stats-1.html":{},"classes/Suspension.html":{},"classes/Suspension-1.html":{},"classes/Transaction.html":{},"classes/Transaction-1.html":{},"classes/TransactionBuyer.html":{},"classes/TransactionBuyer-1.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"classes/UserModel.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["structure",{"_index":1610,"title":{},"body":{"index.html":{}}}],["subject",{"_index":428,"title":{},"body":{"injectables/AuthService.html":{}}}],["submission",{"_index":577,"title":{},"body":{"injectables/AuthService.html":{}}}],["subscribemessage('message",{"_index":820,"title":{},"body":{"classes/GeneralGateway.html":{}}}],["successfully",{"_index":422,"title":{},"body":{"injectables/AuthService.html":{}}}],["sufficient",{"_index":851,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/UserService.html":{}}}],["super",{"_index":836,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["support",{"_index":1623,"title":{},"body":{"modules.html":{}}}],["suspension",{"_index":742,"title":{"classes/Suspension.html":{},"classes/Suspension-1.html":{}},"body":{"classes/Email.html":{},"classes/Email-1.html":{},"classes/Market.html":{},"classes/Membership.html":{},"classes/Membership-1.html":{},"classes/Notifications.html":{},"classes/Notifications-1.html":{},"classes/Online.html":{},"classes/Online-1.html":{},"classes/Password.html":{},"classes/Password-1.html":{},"classes/Rank.html":{},"classes/Rank-1.html":{},"classes/Reactions.html":{},"classes/Reactions-1.html":{},"classes/Security.html":{},"classes/Security-1.html":{},"classes/Sessions.html":{},"classes/Sessions-1.html":{},"classes/Stats.html":{},"classes/Stats-1.html":{},"classes/Suspension.html":{},"classes/Suspension-1.html":{},"classes/Transaction.html":{},"classes/Transaction-1.html":{},"classes/TransactionBuyer.html":{},"classes/TransactionBuyer-1.html":{},"classes/UserDto.html":{},"classes/UserModel.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["svg",{"_index":1624,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":1012,"title":{},"body":{"injectables/MarketService.html":{}}}],["system",{"_index":779,"title":{},"body":{"classes/Email-1.html":{},"injectables/MarketService.html":{},"classes/Membership-1.html":{},"classes/Notifications-1.html":{},"classes/Online-1.html":{},"classes/Password-1.html":{},"classes/Rank-1.html":{},"classes/Reactions-1.html":{},"classes/Security-1.html":{},"classes/Sessions-1.html":{},"classes/Stats-1.html":{},"classes/Suspension-1.html":{},"classes/Transaction-1.html":{},"classes/TransactionBuyer-1.html":{},"injectables/UserService.html":{}}}],["table",{"_index":1490,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1489,"title":{},"body":{"coverage.html":{}}}],["tachi",{"_index":1338,"title":{},"body":{"classes/UserDto.html":{},"classes/UserModel.html":{},"injectables/UserService.html":{}}}],["team",{"_index":1550,"title":{},"body":{"index.html":{}}}],["template",{"_index":175,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{}}}],["test",{"_index":1548,"title":{},"body":{"index.html":{}}}],["tested",{"_index":1570,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1551,"title":{},"body":{"index.html":{}}}],["this.adminservice.getchangelog",{"_index":58,"title":{},"body":{"controllers/AdminController.html":{}}}],["this.adminservice.newchangelog(changelog).then",{"_index":47,"title":{},"body":{"controllers/AdminController.html":{}}}],["this.appservice.gethello",{"_index":121,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice",{"_index":302,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.logout(userid",{"_index":318,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.sendpasswordreset(userid",{"_index":305,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.signin(user",{"_index":289,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.signup(user",{"_index":283,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.verifyemail(userid",{"_index":292,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.verifysecurity(security).then",{"_index":297,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.changelogmodel",{"_index":106,"title":{},"body":{"injectables/AdminService.html":{}}}],["this.changelogmodel.create(changelogmodel).catch",{"_index":101,"title":{},"body":{"injectables/AdminService.html":{}}}],["this.configservice.get",{"_index":439,"title":{},"body":{"injectables/AuthService.html":{},"controllers/UserController.html":{}}}],["this.configservice.get(configurationenum.port_api",{"_index":201,"title":{},"body":{"modules/AppModule.html":{}}}],["this.envconfig",{"_index":712,"title":{},"body":{"classes/ConfigService.html":{}}}],["this.envconfig[key",{"_index":726,"title":{},"body":{"classes/ConfigService.html":{}}}],["this.i18nservice.translate",{"_index":104,"title":{},"body":{"injectables/AdminService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/MarketController.html":{},"injectables/MarketService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["this.i18nservice.translate('translations.auth.service.error_signup",{"_index":460,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.i18nservice.translate('translations.auth.service.no_permission",{"_index":513,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.i18nservice.translate('translations.auth.service.session_invalid",{"_index":549,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.i18nservice.translate('translations.auth.service.user_not_found",{"_index":533,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["this.i18nservice.translate('translations.general.process_failed",{"_index":596,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["this.i18nservice.translate('translations.general.saved",{"_index":1295,"title":{},"body":{"controllers/UserController.html":{}}}],["this.i18nservice.translate('translations.user.service.type_photo",{"_index":1451,"title":{},"body":{"injectables/UserService.html":{}}}],["this.jwtservice.sign(payload",{"_index":517,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.logger.error",{"_index":445,"title":{},"body":{"injectables/AuthService.html":{},"injectables/MarketService.html":{},"injectables/UserService.html":{}}}],["this.logger.error('.env",{"_index":709,"title":{},"body":{"classes/ConfigService.html":{}}}],["this.logger.error(`eliminando",{"_index":1460,"title":{},"body":{"injectables/UserService.html":{}}}],["this.logger.log",{"_index":398,"title":{},"body":{"injectables/AuthService.html":{},"classes/GeneralGateway.html":{},"injectables/MarketService.html":{},"injectables/UserService.html":{}}}],["this.logger.log(`verifying",{"_index":536,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.mailservice",{"_index":424,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.marketmodel",{"_index":1002,"title":{},"body":{"injectables/MarketService.html":{}}}],["this.marketmodel.create(marketmodel).catch",{"_index":996,"title":{},"body":{"injectables/MarketService.html":{}}}],["this.marketmodel.findbyid",{"_index":1067,"title":{},"body":{"injectables/MarketService.html":{}}}],["this.marketmodel.findbyid(buyeraddmarketdto.product",{"_index":1023,"title":{},"body":{"injectables/MarketService.html":{}}}],["this.marketmodel.findbyid(commentmarketdto.product",{"_index":1036,"title":{},"body":{"injectables/MarketService.html":{}}}],["this.marketmodel.findbyid(commentremovemarketdto.product",{"_index":1054,"title":{},"body":{"injectables/MarketService.html":{}}}],["this.marketmodel.findbyid(reactionaddmarketdto.product",{"_index":1045,"title":{},"body":{"injectables/MarketService.html":{}}}],["this.marketservice",{"_index":925,"title":{},"body":{"controllers/MarketController.html":{}}}],["this.marketservice.addcomment(commentmarketdto).then",{"_index":923,"title":{},"body":{"controllers/MarketController.html":{}}}],["this.marketservice.addproduct(marketmodel).then",{"_index":917,"title":{},"body":{"controllers/MarketController.html":{}}}],["this.marketservice.getallproducts",{"_index":922,"title":{},"body":{"controllers/MarketController.html":{}}}],["this.marketservice.getproduct",{"_index":920,"title":{},"body":{"controllers/MarketController.html":{}}}],["this.reflector.get",{"_index":1115,"title":{},"body":{"guards/RankGuard.html":{}}}],["this.server.emit(`user:${client.query.user}:online",{"_index":813,"title":{},"body":{"classes/GeneralGateway.html":{}}}],["this.usermodel",{"_index":551,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["this.usermodel(user",{"_index":403,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usermodel.findbyid(id",{"_index":842,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/UserService.html":{}}}],["this.usermodel.findbyid(toid",{"_index":1453,"title":{},"body":{"injectables/UserService.html":{}}}],["this.usermodel.findbyid(userid",{"_index":531,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["this.usermodel.findbyidanddelete(id).catch",{"_index":1465,"title":{},"body":{"injectables/UserService.html":{}}}],["this.usermodel.findbyidandupdate(id",{"_index":1448,"title":{},"body":{"injectables/UserService.html":{}}}],["this.usermodel.findone",{"_index":464,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usermodel.findoneandupdate",{"_index":597,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.userservice",{"_index":1314,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.addreaction(reactionsdto).then",{"_index":1325,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.getpublicuser(userid",{"_index":1293,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.getusers",{"_index":1296,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.removereaction(ofid",{"_index":1330,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.updateonlineuser(client.query.user",{"_index":819,"title":{},"body":{"classes/GeneralGateway.html":{}}}],["this.userservice.updateuser",{"_index":1294,"title":{},"body":{"controllers/UserController.html":{}}}],["throw",{"_index":102,"title":{},"body":{"injectables/AdminService.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/MarketService.html":{},"injectables/UserService.html":{}}}],["time",{"_index":409,"title":{},"body":{"injectables/AuthService.html":{},"classes/GeneralGateway.html":{},"index.html":{}}}],["timestamps",{"_index":776,"title":{},"body":{"classes/Email-1.html":{},"classes/MarketModel.html":{},"classes/Membership-1.html":{},"classes/Notifications-1.html":{},"classes/Online-1.html":{},"classes/Password-1.html":{},"classes/Rank-1.html":{},"classes/Reactions-1.html":{},"classes/Security-1.html":{},"classes/Sessions-1.html":{},"classes/Stats-1.html":{},"classes/Suspension-1.html":{},"classes/Transaction-1.html":{},"classes/TransactionBuyer-1.html":{},"classes/UserModel.html":{}}}],["timezone",{"_index":394,"title":{},"body":{"injectables/AuthService.html":{},"classes/GeneralGateway.html":{},"dependencies.html":{}}}],["title",{"_index":650,"title":{},"body":{"classes/ChangelogModel.html":{}}}],["todate",{"_index":413,"title":{},"body":{"injectables/AuthService.html":{},"classes/GeneralGateway.html":{}}}],["toid",{"_index":1137,"title":{},"body":{"classes/ReactionsDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["toid).then",{"_index":1331,"title":{},"body":{"controllers/UserController.html":{}}}],["token",{"_index":251,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/Email.html":{},"classes/Email-1.html":{},"classes/Market.html":{},"classes/Membership.html":{},"classes/Membership-1.html":{},"classes/Notifications.html":{},"classes/Notifications-1.html":{},"classes/Online.html":{},"classes/Online-1.html":{},"classes/Password.html":{},"classes/Password-1.html":{},"classes/Rank.html":{},"classes/Rank-1.html":{},"classes/Reactions.html":{},"classes/Reactions-1.html":{},"classes/Security.html":{},"classes/Security-1.html":{},"classes/Sessions.html":{},"classes/Sessions-1.html":{},"classes/Stats.html":{},"classes/Stats-1.html":{},"classes/Suspension.html":{},"classes/Suspension-1.html":{},"classes/Transaction.html":{},"classes/Transaction-1.html":{},"classes/TransactionBuyer.html":{},"classes/TransactionBuyer-1.html":{},"dependencies.html":{}}}],["token).then",{"_index":293,"title":{},"body":{"controllers/AuthController.html":{}}}],["token_secret",{"_index":716,"title":{},"body":{"classes/ConfigService.html":{},"miscellaneous/enumerations.html":{}}}],["tokenemail",{"_index":367,"title":{},"body":{"injectables/AuthService.html":{}}}],["tokengenerator",{"_index":386,"title":{},"body":{"injectables/AuthService.html":{}}}],["tokengenerator().generate",{"_index":415,"title":{},"body":{"injectables/AuthService.html":{}}}],["tokenpassword",{"_index":232,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["tokenpasword",{"_index":353,"title":{},"body":{"injectables/AuthService.html":{}}}],["tokenuser",{"_index":516,"title":{},"body":{"injectables/AuthService.html":{}}}],["transaction",{"_index":755,"title":{"classes/Transaction.html":{},"classes/Transaction-1.html":{}},"body":{"classes/Email.html":{},"classes/Email-1.html":{},"classes/Market.html":{},"classes/Membership.html":{},"classes/Membership-1.html":{},"classes/Notifications.html":{},"classes/Notifications-1.html":{},"classes/Online.html":{},"classes/Online-1.html":{},"classes/Password.html":{},"classes/Password-1.html":{},"classes/Rank.html":{},"classes/Rank-1.html":{},"classes/Reactions.html":{},"classes/Reactions-1.html":{},"classes/Security.html":{},"classes/Security-1.html":{},"classes/Sessions.html":{},"classes/Sessions-1.html":{},"classes/Stats.html":{},"classes/Stats-1.html":{},"classes/Suspension.html":{},"classes/Suspension-1.html":{},"classes/Transaction.html":{},"classes/Transaction-1.html":{},"classes/TransactionBuyer.html":{},"classes/TransactionBuyer-1.html":{},"controllers/TransactionController.html":{},"classes/UserDto.html":{},"classes/UserModel.html":{},"coverage.html":{}}}],["transaction.controller",{"_index":1244,"title":{},"body":{"modules/TransactionModule.html":{}}}],["transaction.service",{"_index":1245,"title":{},"body":{"modules/TransactionModule.html":{}}}],["transactionbuyer",{"_index":765,"title":{"classes/TransactionBuyer.html":{},"classes/TransactionBuyer-1.html":{}},"body":{"classes/Email.html":{},"classes/Email-1.html":{},"classes/Market.html":{},"classes/Membership.html":{},"classes/Membership-1.html":{},"classes/Notifications.html":{},"classes/Notifications-1.html":{},"classes/Online.html":{},"classes/Online-1.html":{},"classes/Password.html":{},"classes/Password-1.html":{},"classes/Rank.html":{},"classes/Rank-1.html":{},"classes/Reactions.html":{},"classes/Reactions-1.html":{},"classes/Security.html":{},"classes/Security-1.html":{},"classes/Sessions.html":{},"classes/Sessions-1.html":{},"classes/Stats.html":{},"classes/Stats-1.html":{},"classes/Suspension.html":{},"classes/Suspension-1.html":{},"classes/Transaction.html":{},"classes/Transaction-1.html":{},"classes/TransactionBuyer.html":{},"classes/TransactionBuyer-1.html":{},"coverage.html":{}}}],["transactioncontroller",{"_index":1237,"title":{"controllers/TransactionController.html":{}},"body":{"controllers/TransactionController.html":{},"modules/TransactionModule.html":{},"coverage.html":{}}}],["transactionmodule",{"_index":129,"title":{"modules/TransactionModule.html":{}},"body":{"modules/AppModule.html":{},"modules/TransactionModule.html":{},"modules.html":{},"overview.html":{}}}],["transactions",{"_index":1339,"title":{},"body":{"classes/UserDto.html":{},"classes/UserModel.html":{},"injectables/UserService.html":{}}}],["transactionservice",{"_index":1242,"title":{"injectables/TransactionService.html":{}},"body":{"modules/TransactionModule.html":{},"injectables/TransactionService.html":{},"coverage.html":{},"overview.html":{}}}],["transformer",{"_index":1504,"title":{},"body":{"dependencies.html":{}}}],["translations.admin.service.changelog_error_add",{"_index":105,"title":{},"body":{"injectables/AdminService.html":{}}}],["translations.auth.controller.account_confirmation",{"_index":296,"title":{},"body":{"controllers/AuthController.html":{}}}],["translations.auth.controller.change_password",{"_index":311,"title":{},"body":{"controllers/AuthController.html":{}}}],["translations.auth.controller.password_reset",{"_index":307,"title":{},"body":{"controllers/AuthController.html":{}}}],["translations.auth.controller.security_challenge_completed",{"_index":298,"title":{},"body":{"controllers/AuthController.html":{}}}],["translations.auth.controller.security_updated",{"_index":316,"title":{},"body":{"controllers/AuthController.html":{}}}],["translations.auth.controller.session_confirmation",{"_index":303,"title":{},"body":{"controllers/AuthController.html":{}}}],["translations.auth.controller.session_logout",{"_index":320,"title":{},"body":{"controllers/AuthController.html":{}}}],["translations.auth.controller.user_created",{"_index":287,"title":{},"body":{"controllers/AuthController.html":{}}}],["translations.auth.service.confirmation_error_token",{"_index":547,"title":{},"body":{"injectables/AuthService.html":{}}}],["translations.auth.service.duplicate_user",{"_index":455,"title":{},"body":{"injectables/AuthService.html":{}}}],["translations.auth.service.invalid_credentials",{"_index":474,"title":{},"body":{"injectables/AuthService.html":{}}}],["translations.auth.service.password_error_reset_email",{"_index":590,"title":{},"body":{"injectables/AuthService.html":{}}}],["translations.auth.service.security_code_failed",{"_index":576,"title":{},"body":{"injectables/AuthService.html":{}}}],["translations.auth.service.security_no_enabled",{"_index":562,"title":{},"body":{"injectables/AuthService.html":{}}}],["translations.auth.service.send_email",{"_index":447,"title":{},"body":{"injectables/AuthService.html":{}}}],["translations.auth.service.session_already_exists",{"_index":504,"title":{},"body":{"injectables/AuthService.html":{}}}],["translations.auth.service.session_not_exists",{"_index":550,"title":{},"body":{"injectables/AuthService.html":{}}}],["translations.auth.service.user_not_found",{"_index":553,"title":{},"body":{"injectables/AuthService.html":{}}}],["translations.auth.service.user_session_error",{"_index":603,"title":{},"body":{"injectables/AuthService.html":{}}}],["translations.general.account_no_permission",{"_index":1444,"title":{},"body":{"injectables/UserService.html":{}}}],["translations.market.controller.buyer_deleted",{"_index":930,"title":{},"body":{"controllers/MarketController.html":{}}}],["translations.market.controller.comment_added",{"_index":924,"title":{},"body":{"controllers/MarketController.html":{}}}],["translations.market.controller.comment_deleted",{"_index":927,"title":{},"body":{"controllers/MarketController.html":{}}}],["translations.market.controller.product_added",{"_index":918,"title":{},"body":{"controllers/MarketController.html":{}}}],["translations.market.controller.reaction_added",{"_index":926,"title":{},"body":{"controllers/MarketController.html":{}}}],["translations.market.controller.reaction_deleted",{"_index":931,"title":{},"body":{"controllers/MarketController.html":{}}}],["translations.market.service.buyer_error_added",{"_index":1032,"title":{},"body":{"injectables/MarketService.html":{}}}],["translations.market.service.buyer_error_deleted",{"_index":1063,"title":{},"body":{"injectables/MarketService.html":{}}}],["translations.market.service.comment_error_added",{"_index":1041,"title":{},"body":{"injectables/MarketService.html":{}}}],["translations.market.service.comment_error_deleted",{"_index":1058,"title":{},"body":{"injectables/MarketService.html":{}}}],["translations.market.service.comment_only_delete_owned",{"_index":1056,"title":{},"body":{"injectables/MarketService.html":{}}}],["translations.market.service.product_error_added",{"_index":998,"title":{},"body":{"injectables/MarketService.html":{}}}],["translations.market.service.product_not_found",{"_index":1025,"title":{},"body":{"injectables/MarketService.html":{}}}],["translations.market.service.reaction_error_added",{"_index":1050,"title":{},"body":{"injectables/MarketService.html":{}}}],["translations.market.service.reaction_error_deleted",{"_index":1071,"title":{},"body":{"injectables/MarketService.html":{}}}],["translations.market.service.reaction_only_delete_owned",{"_index":1070,"title":{},"body":{"injectables/MarketService.html":{}}}],["translations.user.controller.cover_photo_updated",{"_index":1323,"title":{},"body":{"controllers/UserController.html":{}}}],["translations.user.controller.profile_photo_updated",{"_index":1318,"title":{},"body":{"controllers/UserController.html":{}}}],["translations.user.controller.reaction_added",{"_index":1326,"title":{},"body":{"controllers/UserController.html":{}}}],["translations.user.controller.reactions_deleted",{"_index":1332,"title":{},"body":{"controllers/UserController.html":{}}}],["transport",{"_index":171,"title":{},"body":{"modules/AppModule.html":{}}}],["trim",{"_index":772,"title":{},"body":{"classes/Email-1.html":{},"classes/Membership-1.html":{},"classes/Notifications-1.html":{},"classes/Online-1.html":{},"classes/Password-1.html":{},"classes/Rank-1.html":{},"classes/Reactions-1.html":{},"classes/Security-1.html":{},"classes/Sessions-1.html":{},"classes/Stats-1.html":{},"classes/Suspension-1.html":{},"classes/Transaction-1.html":{},"classes/TransactionBuyer-1.html":{},"classes/UserModel.html":{}}}],["true",{"_index":165,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"classes/BuyerMarket.html":{},"classes/ChangelogAuthor.html":{},"classes/ChangelogModel.html":{},"classes/CommentMarket.html":{},"classes/DiscountMarket.html":{},"classes/Email-1.html":{},"classes/GeneralGateway.html":{},"classes/MarketModel.html":{},"injectables/MarketService.html":{},"classes/Membership-1.html":{},"classes/Notifications-1.html":{},"classes/Online-1.html":{},"classes/Password-1.html":{},"classes/Rank-1.html":{},"guards/RankGuard.html":{},"classes/Reactions-1.html":{},"classes/ReactionsMarket.html":{},"classes/Security-1.html":{},"classes/Sessions-1.html":{},"classes/Stats-1.html":{},"classes/Suspension-1.html":{},"classes/Transaction-1.html":{},"classes/TransactionBuyer-1.html":{},"classes/UserModel.html":{},"injectables/UserService.html":{}}}],["try",{"_index":530,"title":{},"body":{"injectables/AuthService.html":{},"injectables/MarketService.html":{},"injectables/UserService.html":{}}}],["ts",{"_index":387,"title":{},"body":{"injectables/AuthService.html":{},"dependencies.html":{}}}],["tslint:disable",{"_index":762,"title":{},"body":{"classes/Email.html":{},"classes/Email-1.html":{},"classes/Market.html":{},"classes/Membership.html":{},"classes/Membership-1.html":{},"classes/Notifications.html":{},"classes/Notifications-1.html":{},"classes/Online.html":{},"classes/Online-1.html":{},"classes/Password.html":{},"classes/Password-1.html":{},"classes/Rank.html":{},"classes/Rank-1.html":{},"classes/Reactions.html":{},"classes/Reactions-1.html":{},"classes/Security.html":{},"classes/Security-1.html":{},"classes/Sessions.html":{},"classes/Sessions-1.html":{},"classes/Stats.html":{},"classes/Stats-1.html":{},"classes/Suspension.html":{},"classes/Suspension-1.html":{},"classes/Transaction.html":{},"classes/Transaction-1.html":{},"classes/TransactionBuyer.html":{},"classes/TransactionBuyer-1.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"classes/UserModel.html":{}}}],["two",{"_index":560,"title":{},"body":{"injectables/AuthService.html":{}}}],["twofactor",{"_index":509,"title":{},"body":{"injectables/AuthService.html":{},"classes/Email.html":{},"classes/Email-1.html":{},"classes/Market.html":{},"classes/Membership.html":{},"classes/Membership-1.html":{},"classes/Notifications.html":{},"classes/Notifications-1.html":{},"classes/Online.html":{},"classes/Online-1.html":{},"classes/Password.html":{},"classes/Password-1.html":{},"classes/Rank.html":{},"classes/Rank-1.html":{},"classes/Reactions.html":{},"classes/Reactions-1.html":{},"classes/Security.html":{},"classes/Security-1.html":{},"classes/Sessions.html":{},"classes/Sessions-1.html":{},"classes/Stats.html":{},"classes/Stats-1.html":{},"classes/Suspension.html":{},"classes/Suspension-1.html":{},"classes/Transaction.html":{},"classes/Transaction-1.html":{},"classes/TransactionBuyer.html":{},"classes/TransactionBuyer-1.html":{}}}],["type",{"_index":28,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BuyerAddMarketDto.html":{},"classes/BuyerMarket.html":{},"classes/BuyerRemoveMarketDto.html":{},"classes/ChangelogAuthor.html":{},"classes/ChangelogModel.html":{},"classes/CommentMarket.html":{},"classes/CommentMarketDto.html":{},"classes/CommentRemoveMarketDto.html":{},"classes/ConfigService.html":{},"classes/DiscountMarket.html":{},"classes/Email.html":{},"classes/Email-1.html":{},"classes/GeneralGateway.html":{},"interfaces/IJwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/Market.html":{},"controllers/MarketController.html":{},"classes/MarketModel.html":{},"injectables/MarketService.html":{},"classes/Membership.html":{},"classes/Membership-1.html":{},"classes/Notifications.html":{},"classes/Notifications-1.html":{},"classes/Online.html":{},"classes/Online-1.html":{},"classes/Password.html":{},"classes/Password-1.html":{},"classes/Rank.html":{},"classes/Rank-1.html":{},"guards/RankGuard.html":{},"classes/ReactionAddMarketDto.html":{},"classes/ReactionRemoveMarketDto.html":{},"classes/Reactions.html":{},"classes/Reactions-1.html":{},"classes/ReactionsDto.html":{},"classes/ReactionsMarket.html":{},"classes/Security.html":{},"classes/Security-1.html":{},"classes/SecurityCode.html":{},"classes/SecurityDto.html":{},"classes/SecurityUpdateDto.html":{},"classes/Sessions.html":{},"classes/Sessions-1.html":{},"classes/SignInDto.html":{},"classes/Stats.html":{},"classes/Stats-1.html":{},"classes/Suspension.html":{},"classes/Suspension-1.html":{},"classes/Transaction.html":{},"classes/Transaction-1.html":{},"classes/TransactionBuyer.html":{},"classes/TransactionBuyer-1.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"classes/UserModel.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["typegoose",{"_index":80,"title":{},"body":{"modules/AdminModule.html":{},"injectables/AdminService.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"modules/MarketModule.html":{},"injectables/MarketService.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["typegoose/typegoose",{"_index":97,"title":{},"body":{"injectables/AdminService.html":{},"injectables/AuthService.html":{},"classes/BuyerAddMarketDto.html":{},"classes/BuyerMarket.html":{},"classes/ChangelogAuthor.html":{},"classes/ChangelogModel.html":{},"classes/CommentMarket.html":{},"classes/CommentMarketDto.html":{},"classes/DiscountMarket.html":{},"classes/Email-1.html":{},"injectables/JwtStrategy.html":{},"classes/MarketModel.html":{},"injectables/MarketService.html":{},"classes/Membership-1.html":{},"classes/Notifications-1.html":{},"classes/Online-1.html":{},"classes/Password-1.html":{},"classes/Rank-1.html":{},"classes/ReactionAddMarketDto.html":{},"classes/Reactions-1.html":{},"classes/ReactionsMarket.html":{},"classes/Security-1.html":{},"classes/Sessions-1.html":{},"classes/Stats-1.html":{},"classes/Suspension-1.html":{},"classes/Transaction-1.html":{},"classes/TransactionBuyer-1.html":{},"classes/UserModel.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["typegoose/typegoose/lib/defaultclasses",{"_index":777,"title":{},"body":{"classes/Email-1.html":{},"classes/MarketModel.html":{},"classes/Membership-1.html":{},"classes/Notifications-1.html":{},"classes/Online-1.html":{},"classes/Password-1.html":{},"classes/Rank-1.html":{},"classes/Reactions-1.html":{},"classes/Security-1.html":{},"classes/Sessions-1.html":{},"classes/Stats-1.html":{},"classes/Suspension-1.html":{},"classes/Transaction-1.html":{},"classes/TransactionBuyer-1.html":{},"classes/UserModel.html":{}}}],["typegoosemodule",{"_index":78,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/MarketModule.html":{},"modules/UserModule.html":{}}}],["typegoosemodule.forfeature([changelogmodel",{"_index":82,"title":{},"body":{"modules/AdminModule.html":{}}}],["typegoosemodule.forfeature([marketmodel",{"_index":968,"title":{},"body":{"modules/MarketModule.html":{}}}],["typegoosemodule.forfeature([usermodel",{"_index":331,"title":{},"body":{"modules/AuthModule.html":{},"modules/UserModule.html":{}}}],["typegoosemodule.forrootasync",{"_index":159,"title":{},"body":{"modules/AppModule.html":{}}}],["types/moment",{"_index":1498,"title":{},"body":{"dependencies.html":{}}}],["tz('america/new_york",{"_index":406,"title":{},"body":{"injectables/AuthService.html":{},"classes/GeneralGateway.html":{}}}],["unauthorizedexception",{"_index":379,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/UserService.html":{}}}],["undefined",{"_index":770,"title":{},"body":{"classes/Email-1.html":{},"classes/Membership-1.html":{},"classes/Online-1.html":{},"classes/Password-1.html":{},"classes/Transaction-1.html":{},"classes/UserModel.html":{}}}],["unique",{"_index":788,"title":{},"body":{"classes/Email-1.html":{},"classes/MarketModel.html":{},"classes/Membership-1.html":{},"classes/Notifications-1.html":{},"classes/Online-1.html":{},"classes/Password-1.html":{},"classes/Rank-1.html":{},"classes/Reactions-1.html":{},"classes/Security-1.html":{},"classes/Sessions-1.html":{},"classes/Stats-1.html":{},"classes/Suspension-1.html":{},"classes/Transaction-1.html":{},"classes/TransactionBuyer-1.html":{},"classes/UserModel.html":{}}}],["unwanted",{"_index":1575,"title":{},"body":{"index.html":{}}}],["update",{"_index":1442,"title":{},"body":{"injectables/UserService.html":{}}}],["updatedat",{"_index":511,"title":{},"body":{"injectables/AuthService.html":{},"injectables/MarketService.html":{},"injectables/UserService.html":{}}}],["updateonlineuser",{"_index":1410,"title":{},"body":{"injectables/UserService.html":{}}}],["updateonlineuser(id",{"_index":1421,"title":{},"body":{"injectables/UserService.html":{}}}],["updatephoto",{"_index":1315,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["updatephoto(userid",{"_index":1423,"title":{},"body":{"injectables/UserService.html":{}}}],["updateuser",{"_index":1259,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["updateuser(updateuserdto",{"_index":1276,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["updateuserdto",{"_index":1247,"title":{"classes/UpdateUserDto.html":{}},"body":{"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["updateuserdto.id",{"_index":1433,"title":{},"body":{"injectables/UserService.html":{}}}],["updating",{"_index":1432,"title":{},"body":{"injectables/UserService.html":{}}}],["uploadedfile",{"_index":1280,"title":{},"body":{"controllers/UserController.html":{}}}],["uploads/${id}/cover_photo/${file.filename",{"_index":1322,"title":{},"body":{"controllers/UserController.html":{}}}],["uploads/cover_photo",{"_index":1320,"title":{},"body":{"controllers/UserController.html":{}}}],["uploads/cover_photo/${file.filename",{"_index":1324,"title":{},"body":{"controllers/UserController.html":{}}}],["uploads/profile_photo",{"_index":1301,"title":{},"body":{"controllers/UserController.html":{}}}],["uploads/profile_photo/${file.filename",{"_index":1316,"title":{},"body":{"controllers/UserController.html":{}}}],["upvote",{"_index":1454,"title":{},"body":{"injectables/UserService.html":{}}}],["uri",{"_index":162,"title":{},"body":{"modules/AppModule.html":{}}}],["use",{"_index":852,"title":{},"body":{"injectables/JwtStrategy.html":{},"index.html":{}}}],["useclass",{"_index":196,"title":{},"body":{"modules/AppModule.html":{}}}],["usecreateindex",{"_index":167,"title":{},"body":{"modules/AppModule.html":{}}}],["usefactory",{"_index":161,"title":{},"body":{"modules/AppModule.html":{}}}],["usefactory(configservice",{"_index":336,"title":{},"body":{"modules/AuthModule.html":{}}}],["usefindandmodify",{"_index":168,"title":{},"body":{"modules/AppModule.html":{}}}],["useguards",{"_index":268,"title":{},"body":{"controllers/AuthController.html":{},"controllers/MarketController.html":{},"controllers/UserController.html":{}}}],["useguards(authguard",{"_index":312,"title":{},"body":{"controllers/AuthController.html":{},"controllers/MarketController.html":{},"controllers/UserController.html":{}}}],["useguards(undefined)@patch('/account/security/change",{"_index":223,"title":{},"body":{"controllers/AuthController.html":{}}}],["useinterceptors",{"_index":1279,"title":{},"body":{"controllers/UserController.html":{}}}],["useinterceptors(undefined)@post('/upload/cover/:id",{"_index":1264,"title":{},"body":{"controllers/UserController.html":{}}}],["usenewurlparser",{"_index":164,"title":{},"body":{"modules/AppModule.html":{}}}],["usepipes",{"_index":265,"title":{},"body":{"controllers/AuthController.html":{}}}],["usepipes(new",{"_index":282,"title":{},"body":{"controllers/AuthController.html":{}}}],["user",{"_index":244,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BuyerAddMarketDto.html":{},"classes/BuyerMarket.html":{},"classes/BuyerRemoveMarketDto.html":{},"classes/CommentMarket.html":{},"classes/CommentMarketDto.html":{},"classes/DiscountMarket.html":{},"classes/GeneralGateway.html":{},"injectables/JwtStrategy.html":{},"injectables/MarketService.html":{},"guards/RankGuard.html":{},"classes/ReactionAddMarketDto.html":{},"classes/ReactionRemoveMarketDto.html":{},"classes/ReactionsMarket.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["user.controller",{"_index":1404,"title":{},"body":{"modules/UserModule.html":{}}}],["user.dto",{"_index":1286,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["user.dto.data",{"_index":1363,"title":{},"body":{"classes/UserDto.html":{}}}],["user.dto.ts",{"_index":1249,"title":{},"body":{"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["user.dto.ts:10",{"_index":1251,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["user.dto.ts:13",{"_index":1252,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["user.dto.ts:6",{"_index":1250,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["user.email",{"_index":286,"title":{},"body":{"controllers/AuthController.html":{}}}],["user.email.expiration",{"_index":542,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.email.key",{"_index":400,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.email.status",{"_index":541,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.email.token",{"_index":538,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.ip",{"_index":420,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.model.data",{"_index":1398,"title":{},"body":{"classes/UserModel.html":{}}}],["user.name",{"_index":585,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.password.expiration",{"_index":588,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.password.key",{"_index":437,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.password.status",{"_index":587,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.password.token",{"_index":589,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.rank",{"_index":1121,"title":{},"body":{"guards/RankGuard.html":{}}}],["user.rank.some((rank",{"_index":1119,"title":{},"body":{"guards/RankGuard.html":{}}}],["user.reactions.push",{"_index":1455,"title":{},"body":{"injectables/UserService.html":{}}}],["user.save",{"_index":543,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.save().catch",{"_index":1459,"title":{},"body":{"injectables/UserService.html":{}}}],["user.save().catch(error",{"_index":1456,"title":{},"body":{"injectables/UserService.html":{}}}],["user.security.code1",{"_index":564,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.security.code2",{"_index":566,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.security.code3",{"_index":568,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.security.code4",{"_index":570,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.security.code5",{"_index":572,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.security.enabled",{"_index":558,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.service",{"_index":1284,"title":{},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{}}}],["user.username",{"_index":284,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["user/models/user.model",{"_index":677,"title":{},"body":{"classes/CommentMarketDto.html":{}}}],["user_id",{"_index":521,"title":{},"body":{"injectables/AuthService.html":{}}}],["usercontroller",{"_index":1253,"title":{"controllers/UserController.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["usercreated",{"_index":402,"title":{},"body":{"injectables/AuthService.html":{}}}],["usercreated.email.expiration",{"_index":416,"title":{},"body":{"injectables/AuthService.html":{}}}],["usercreated.email.key",{"_index":426,"title":{},"body":{"injectables/AuthService.html":{}}}],["usercreated.email.token",{"_index":414,"title":{},"body":{"injectables/AuthService.html":{}}}],["usercreated.ip",{"_index":419,"title":{},"body":{"injectables/AuthService.html":{}}}],["usercreated.name",{"_index":435,"title":{},"body":{"injectables/AuthService.html":{}}}],["usercreated.password.key",{"_index":417,"title":{},"body":{"injectables/AuthService.html":{}}}],["usercreated.password.token",{"_index":418,"title":{},"body":{"injectables/AuthService.html":{}}}],["userdto",{"_index":1333,"title":{"classes/UserDto.html":{}},"body":{"classes/UserDto.html":{},"coverage.html":{}}}],["userexists",{"_index":841,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["userexists.email.key",{"_index":846,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["userexists.email.status",{"_index":847,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["userexists.password.status",{"_index":848,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["userexists.suspension.status",{"_index":849,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["userexists.username",{"_index":845,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["userid",{"_index":230,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["useridrequest",{"_index":220,"title":{},"body":{"controllers/AuthController.html":{}}}],["userip",{"_index":237,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["userip).then",{"_index":306,"title":{},"body":{"controllers/AuthController.html":{}}}],["usermodel",{"_index":246,"title":{"classes/UserModel.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BuyerAddMarketDto.html":{},"classes/BuyerMarket.html":{},"classes/ChangelogAuthor.html":{},"classes/CommentMarket.html":{},"classes/CommentMarketDto.html":{},"classes/DiscountMarket.html":{},"injectables/JwtStrategy.html":{},"classes/MarketModel.html":{},"classes/ReactionAddMarketDto.html":{},"classes/ReactionsMarket.html":{},"classes/UserModel.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["usermodule",{"_index":130,"title":{"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["username",{"_index":109,"title":{},"body":{"injectables/AdminService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/IJwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/UserDto.html":{},"classes/UserModel.html":{},"injectables/UserService.html":{}}}],["userrankrequest",{"_index":221,"title":{},"body":{"controllers/AuthController.html":{}}}],["userrequestid",{"_index":356,"title":{},"body":{"injectables/AuthService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["userrequestrank",{"_index":357,"title":{},"body":{"injectables/AuthService.html":{},"controllers/UserController.html":{}}}],["users",{"_index":618,"title":{},"body":{"classes/BuyerMarket.html":{},"classes/ChangelogAuthor.html":{},"classes/CommentMarket.html":{},"classes/DiscountMarket.html":{},"classes/MarketModel.html":{},"classes/ReactionsMarket.html":{},"classes/UserModel.html":{},"injectables/UserService.html":{}}}],["userservice",{"_index":798,"title":{"injectables/UserService.html":{}},"body":{"classes/GeneralGateway.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["usersessiondexists",{"_index":495,"title":{},"body":{"injectables/AuthService.html":{}}}],["usersessionsdoc",{"_index":494,"title":{},"body":{"injectables/AuthService.html":{}}}],["usersessionsdoc.save",{"_index":512,"title":{},"body":{"injectables/AuthService.html":{}}}],["usersessionsdoc.sessions.push",{"_index":508,"title":{},"body":{"injectables/AuthService.html":{}}}],["usersessionsdoc.sessions[usersessionsdoc.sessions.length",{"_index":514,"title":{},"body":{"injectables/AuthService.html":{}}}],["usersignin",{"_index":463,"title":{},"body":{"injectables/AuthService.html":{}}}],["usersignin._id",{"_index":492,"title":{},"body":{"injectables/AuthService.html":{}}}],["usersignin.email.key",{"_index":493,"title":{},"body":{"injectables/AuthService.html":{}}}],["usersignin.email.status",{"_index":505,"title":{},"body":{"injectables/AuthService.html":{}}}],["usersignin.password.key",{"_index":477,"title":{},"body":{"injectables/AuthService.html":{}}}],["usersignin.password.status",{"_index":506,"title":{},"body":{"injectables/AuthService.html":{}}}],["usersignin.premium.status",{"_index":486,"title":{},"body":{"injectables/AuthService.html":{}}}],["usersignin.rank.admin",{"_index":480,"title":{},"body":{"injectables/AuthService.html":{}}}],["usersignin.rank.mod",{"_index":482,"title":{},"body":{"injectables/AuthService.html":{}}}],["usersignin.rank.seller",{"_index":484,"title":{},"body":{"injectables/AuthService.html":{}}}],["usersignin.suspension.reason",{"_index":529,"title":{},"body":{"injectables/AuthService.html":{}}}],["usersignin.suspension.status",{"_index":507,"title":{},"body":{"injectables/AuthService.html":{}}}],["usersignin.username",{"_index":478,"title":{},"body":{"injectables/AuthService.html":{}}}],["useunifiedtopology",{"_index":166,"title":{},"body":{"modules/AppModule.html":{}}}],["usevalue",{"_index":686,"title":{},"body":{"modules/ConfigModule.html":{}}}],["usuario",{"_index":1464,"title":{},"body":{"injectables/UserService.html":{}}}],["utc",{"_index":407,"title":{},"body":{"injectables/AuthService.html":{},"classes/GeneralGateway.html":{}}}],["validate",{"_index":827,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validate(payload",{"_index":829,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validationpipe",{"_index":248,"title":{},"body":{"controllers/AuthController.html":{}}}],["validator",{"_index":1144,"title":{},"body":{"classes/ReactionsDto.html":{},"classes/SecurityCode.html":{},"classes/SecurityDto.html":{},"classes/SecurityUpdateDto.html":{},"classes/SignInDto.html":{},"classes/UpdateUserDto.html":{},"dependencies.html":{}}}],["value",{"_index":375,"title":{},"body":{"injectables/AuthService.html":{},"classes/ConfigService.html":{},"classes/GeneralGateway.html":{},"injectables/MarketService.html":{},"classes/UpdateUserDto.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":1302,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{}}}],["variables",{"_index":1629,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["verification",{"_index":429,"title":{},"body":{"injectables/AuthService.html":{}}}],["verify",{"_index":843,"title":{},"body":{"injectables/JwtStrategy.html":{},"index.html":{}}}],["verify_email_request",{"_index":433,"title":{},"body":{"injectables/AuthService.html":{}}}],["verifyaccount",{"_index":215,"title":{},"body":{"controllers/AuthController.html":{}}}],["verifyaccount(userid",{"_index":250,"title":{},"body":{"controllers/AuthController.html":{}}}],["verifyemail",{"_index":347,"title":{},"body":{"injectables/AuthService.html":{}}}],["verifyemail(userid",{"_index":366,"title":{},"body":{"injectables/AuthService.html":{}}}],["verifying",{"_index":555,"title":{},"body":{"injectables/AuthService.html":{}}}],["verifysecurity",{"_index":216,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["verifysecurity(security",{"_index":254,"title":{},"body":{"controllers/AuthController.html":{}}}],["verifysecurity(securitydto",{"_index":369,"title":{},"body":{"injectables/AuthService.html":{}}}],["verifysession",{"_index":217,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["verifysession(userid",{"_index":259,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["version",{"_index":651,"title":{},"body":{"classes/ChangelogModel.html":{}}}],["views/email",{"_index":178,"title":{},"body":{"modules/AppModule.html":{}}}],["websocketgateway",{"_index":809,"title":{},"body":{"classes/GeneralGateway.html":{}}}],["websocketserver",{"_index":803,"title":{},"body":{"classes/GeneralGateway.html":{}}}],["welcome",{"_index":1374,"title":{},"body":{"classes/UserModel.html":{}}}],["without",{"_index":1560,"title":{},"body":{"index.html":{}}}],["won",{"_index":746,"title":{},"body":{"classes/Email.html":{},"classes/Email-1.html":{},"classes/Market.html":{},"classes/Membership.html":{},"classes/Membership-1.html":{},"classes/Notifications.html":{},"classes/Notifications-1.html":{},"classes/Online.html":{},"classes/Online-1.html":{},"classes/Password.html":{},"classes/Password-1.html":{},"classes/Rank.html":{},"classes/Rank-1.html":{},"classes/Reactions.html":{},"classes/Reactions-1.html":{},"classes/Security.html":{},"classes/Security-1.html":{},"classes/Sessions.html":{},"classes/Sessions-1.html":{},"classes/Stats.html":{},"classes/Stats-1.html":{},"classes/Suspension.html":{},"classes/Suspension-1.html":{},"classes/Transaction.html":{},"classes/Transaction-1.html":{},"classes/TransactionBuyer.html":{},"classes/TransactionBuyer-1.html":{}}}],["works",{"_index":1556,"title":{},"body":{"index.html":{}}}],["world",{"_index":205,"title":{},"body":{"injectables/AppService.html":{},"classes/GeneralGateway.html":{}}}],["xito",{"_index":57,"title":{},"body":{"controllers/AdminController.html":{}}}],["yarn",{"_index":1594,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":73,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ConfigModule.html":{},"modules/MarketModule.html":{},"modules/TransactionModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AdminController.html":{"url":"controllers/AdminController.html","title":"controller - AdminController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AdminController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/admin/admin.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                admin\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                GetChangelog\n                            \n                            \n                                    Public\n                                    Async\n                                NewChangelog\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            GetChangelog\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    GetChangelog()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/get/changelog')\n                \n            \n\n            \n                \n                    Defined in src/modules/admin/admin.controller.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            NewChangelog\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    NewChangelog(changelog: ChangelogModel, response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put('/new/changelog')\n                \n            \n\n            \n                \n                    Defined in src/modules/admin/admin.controller.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changelog\n                                    \n                                                ChangelogModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    response\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Put, Body, Res, HttpStatus, Get } from '@nestjs/common';\nimport { AdminService } from './admin.service';\nimport { ChangelogModel } from './models/changelog.model';\n\n@Controller('admin')\nexport class AdminController {\n  constructor(private readonly adminService: AdminService) {}\n\n  @Put('/new/changelog')\n  public async NewChangelog(\n    @Body() changelog: ChangelogModel,\n    @Res() response,\n  ) {\n    return await this.adminService.NewChangelog(changelog).then(() => {\n      response.status(HttpStatus.CREATED).json({\n        statusCode: HttpStatus.CREATED,\n        message: 'Registro de cambios publicado con éxito.',\n      });\n    });\n  }\n\n  @Get('/get/changelog')\n  public async GetChangelog() {\n    return await this.adminService.GetChangelog();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AdminModule.html":{"url":"modules/AdminModule.html","title":"module - AdminModule","body":"\n                   \n\n\n\n\n    Modules\n    AdminModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AdminModule\n\n\n\ncluster_AdminModule_providers\n\n\n\n\nAdminService\n\nAdminService\n\n\n\nAdminModule\n\nAdminModule\n\nAdminModule -->\n\nAdminService->AdminModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/admin/admin.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AdminService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AdminController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AdminController } from './admin.controller';\nimport { AdminService } from './admin.service';\nimport { TypegooseModule } from 'nestjs-typegoose';\nimport { ChangelogModel } from './models/changelog.model';\n\n@Module({\n  imports: [TypegooseModule.forFeature([ChangelogModel])],\n  controllers: [AdminController],\n  providers: [AdminService],\n})\nexport class AdminModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AdminService.html":{"url":"injectables/AdminService.html","title":"injectable - AdminService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AdminService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/admin/admin.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                GetChangelog\n                            \n                            \n                                    Public\n                                    Async\n                                NewChangelog\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(changelogModel: ReturnModelType<>, i18nService: I18nRequestScopeService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/admin/admin.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        changelogModel\n                                                  \n                                                        \n                                                                    ReturnModelType<>\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        i18nService\n                                                  \n                                                        \n                                                                    I18nRequestScopeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            GetChangelog\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    GetChangelog()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/admin/admin.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            NewChangelog\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    NewChangelog(changelogModel: ChangelogModel)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/admin/admin.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changelogModel\n                                    \n                                                ChangelogModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, BadRequestException } from '@nestjs/common';\nimport { ChangelogModel } from './models/changelog.model';\nimport { InjectModel } from 'nestjs-typegoose';\nimport { ReturnModelType } from '@typegoose/typegoose';\nimport { I18nRequestScopeService } from 'nestjs-i18n';\n\n@Injectable()\nexport class AdminService {\n  constructor(\n    @InjectModel(ChangelogModel)\n    private readonly changelogModel: ReturnModelType,\n    private readonly i18nService: I18nRequestScopeService,\n  ) {}\n\n  public async NewChangelog(changelogModel: ChangelogModel) {\n    return this.changelogModel.create(changelogModel).catch(() => {\n      throw new BadRequestException(\n        this.i18nService.translate(\n          'translations.admin.service.changelog_error_add',\n        ),\n      );\n    });\n  }\n\n  public async GetChangelog() {\n    return await this.changelogModel\n      .find()\n      .populate('author.info', 'username name photo cover rank')\n      .exec();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHello\n                        \n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAdminModule\n\nAdminModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAdminModule->AppModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nConfigModule\n\nConfigModule\n\nAppModule -->\n\nConfigModule->AppModule\n\n\n\n\n\nMarketModule\n\nMarketModule\n\nAppModule -->\n\nMarketModule->AppModule\n\n\n\n\n\nTransactionModule\n\nTransactionModule\n\nAppModule -->\n\nTransactionModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AdminModule\n                        \n                        \n                            AuthModule\n                        \n                        \n                            ConfigModule\n                        \n                        \n                            MarketModule\n                        \n                        \n                            TransactionModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module, CacheModule, CacheInterceptor } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { ConfigModule } from './config/config.module';\nimport { ConfigService } from './config/config.service';\nimport { ConfigurationEnum } from './keys/configuration.enum';\nimport { TypegooseModule } from 'nestjs-typegoose';\nimport { MailerModule, HandlebarsAdapter } from '@nest-modules/mailer';\nimport {\n  I18nModule,\n  QueryResolver,\n  HeaderResolver,\n  CookieResolver,\n} from 'nestjs-i18n';\nimport { join } from 'path';\nimport { UserModule } from './modules/user/user.module';\nimport { AuthModule } from './auth/auth.module';\nimport { GeneralGateway } from './gateways/general.gateway';\nimport { APP_INTERCEPTOR } from '@nestjs/core';\nimport { AdminModule } from './modules/admin/admin.module';\nimport { MarketModule } from './modules/market/market.module';\nimport { TransactionModule } from './modules/transaction/transaction.module';\n\n@Module({\n  imports: [\n    TypegooseModule.forRootAsync({\n      imports: [ConfigModule],\n      inject: [ConfigService],\n      useFactory: async (configService: ConfigService) => ({\n        uri: configService.get(ConfigurationEnum.DB_HOST),\n        useNewUrlParser: true,\n        useUnifiedTopology: true,\n        useCreateIndex: true,\n        useFindAndModify: false,\n      }),\n    }),\n    MailerModule.forRootAsync({\n      imports: [ConfigModule],\n      inject: [ConfigService],\n      useFactory: async (configService: ConfigService) => ({\n        transport: configService.get(ConfigurationEnum.EMAIL_HOST),\n        defaults: {\n          from: configService.get(ConfigurationEnum.EMAIL_FROM),\n        },\n        template: {\n          dir: __dirname + '/views/email/',\n          adapter: new HandlebarsAdapter(),\n          options: {\n            strict: true,\n          },\n        },\n      }),\n    }),\n    I18nModule.forRoot({\n      path: join(__dirname, '/i18n'),\n      filePattern: '*.json',\n      fallbackLanguage: 'en_US',\n      saveMissing: false,\n      resolvers: [\n        new QueryResolver(['lang', 'locale', 'l']),\n        new HeaderResolver(),\n        new CookieResolver(['lang', 'locale', 'l']),\n      ],\n    }),\n    ConfigModule,\n    UserModule,\n    AuthModule,\n    CacheModule.register(),\n    AdminModule,\n    MarketModule,\n    TransactionModule,\n  ],\n  controllers: [AppController],\n  providers: [\n    AppService,\n    GeneralGateway,\n    {\n      provide: APP_INTERCEPTOR,\n      useClass: CacheInterceptor,\n    },\n  ],\n})\nexport class AppModule {\n  static port: number | string;\n  constructor(private readonly configService: ConfigService) {\n    AppModule.port = this.configService.get(ConfigurationEnum.PORT_API);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHello\n                        \n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                ChangeSecurity\n                            \n                            \n                                    Public\n                                    Async\n                                LogOut\n                            \n                            \n                                    Public\n                                    Async\n                                PasswordChange\n                            \n                            \n                                    Public\n                                    Async\n                                PasswordResetRequest\n                            \n                            \n                                    Public\n                                    Async\n                                SignIn\n                            \n                            \n                                    Public\n                                    Async\n                                SignUp\n                            \n                            \n                                    Public\n                                    Async\n                                VerifyAccount\n                            \n                            \n                                    Public\n                                    Async\n                                VerifySecurity\n                            \n                            \n                                    Public\n                                    Async\n                                VerifySession\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            ChangeSecurity\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ChangeSecurity(securityUpdate: SecurityUpdateDto, userIdRequest: string, userRankRequest: string[], lang: string, response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(undefined)@Patch('/account/security/change')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:164\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    securityUpdate\n                                    \n                                                SecurityUpdateDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userIdRequest\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userRankRequest\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    lang\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    response\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            LogOut\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    LogOut(userId: string, sesionId: string, lang: string, response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/account/logout')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:187\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    sesionId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    lang\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    response\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            PasswordChange\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    PasswordChange(userId: string, tokenPassword: string, newPassword: string, lang: string, response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch('/account/password/change')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:140\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    tokenPassword\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    newPassword\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    lang\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    response\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            PasswordResetRequest\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    PasswordResetRequest(userId: string, userIp: string, lang: string, response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/account/password/reset')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:120\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userIp\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    lang\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    response\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            SignIn\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    SignIn(user: SignInDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/signin')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                SignInDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            SignUp\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    SignUp(user: UserModel, response, lang: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put('/signup')@UsePipes(new ValidationPipe())\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                UserModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    response\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    lang\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            VerifyAccount\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    VerifyAccount(userId: string, token: string, lang: string, response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch('/account/verify/email')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    lang\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    response\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            VerifySecurity\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    VerifySecurity(security: SecurityDto, lang: string, response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/account/verify/security')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    security\n                                    \n                                                SecurityDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    lang\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    response\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            VerifySession\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    VerifySession(userId: string, sessioId: string, sessioIp: string, sessioDevice: string, lang: string, response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/account/verify/session')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:96\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    sessioId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    sessioIp\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    sessioDevice\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    lang\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    response\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Put,\n  UsePipes,\n  ValidationPipe,\n  Body,\n  Res,\n  HttpStatus,\n  Get,\n  Patch,\n  Post,\n  UseGuards,\n} from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { I18nService, I18nLang } from 'nestjs-i18n';\nimport { UserModel } from '../modules/user/models/user.model';\nimport { SignInDto } from './dto/signin.dto';\nimport { SecurityDto } from './dto/security.dto';\nimport { SecurityUpdateDto } from './dto/security.update.dto';\nimport { AuthGuard } from '@nestjs/passport';\nimport { GetUser } from '../decorators/user.decorator';\n\n@Controller('auth')\nexport class AuthController {\n  constructor(\n    private readonly authService: AuthService,\n    private readonly i18nService: I18nService,\n  ) {}\n\n  @Put('/signup')\n  @UsePipes(new ValidationPipe())\n  public async SignUp(\n    @Body() user: UserModel,\n    @Res() response,\n    @I18nLang() lang: string,\n  ) {\n    await this.authService.SignUp(user);\n    response.status(HttpStatus.CREATED).json({\n      statusCode: HttpStatus.CREATED,\n      username: user.username,\n      email: user.email,\n      message: this.i18nService.translate(\n        'translations.auth.controller.user_created',\n        {\n          lang,\n        },\n      ),\n    });\n  }\n\n  @Post('/signin')\n  public async SignIn(@Body() user: SignInDto) {\n    return await this.authService.SignIn(user);\n  }\n\n  @Patch('/account/verify/email')\n  public async VerifyAccount(\n    @Body('userId') userId: string,\n    @Body('token') token: string,\n    @I18nLang() lang: string,\n    @Res() response,\n  ) {\n    return await this.authService.VerifyEmail(userId, token).then(() => {\n      response.status(HttpStatus.OK).json({\n        statusCode: HttpStatus.OK,\n        message: this.i18nService.translate(\n          'translations.auth.controller.account_confirmation',\n          {\n            lang,\n          },\n        ),\n      });\n    });\n  }\n\n  @Post('/account/verify/security')\n  public async VerifySecurity(\n    @Body() security: SecurityDto,\n    @I18nLang() lang: string,\n    @Res() response,\n  ) {\n    return await this.authService.VerifySecurity(security).then(() => {\n      response.status(HttpStatus.OK).json({\n        statusCode: HttpStatus.OK,\n        message: this.i18nService.translate(\n          'translations.auth.controller.security_challenge_completed',\n          {\n            lang,\n          },\n        ),\n      });\n    });\n  }\n\n  @Post('/account/verify/session')\n  public async VerifySession(\n    @Body('userId') userId: string,\n    @Body('sessioId') sessioId: string,\n    @Body('sessionIp') sessioIp: string,\n    @Body('sessionDevice') sessioDevice: string,\n    @I18nLang() lang: string,\n    @Res() response,\n  ) {\n    return await this.authService\n      .VerifySession(userId, sessioDevice, sessioIp, sessioId)\n      .then(() => {\n        response.status(HttpStatus.OK).json({\n          statusCode: HttpStatus.OK,\n          message: this.i18nService.translate(\n            'translations.auth.controller.session_confirmation',\n            {\n              lang,\n            },\n          ),\n        });\n      });\n  }\n\n  @Post('/account/password/reset')\n  public async PasswordResetRequest(\n    @Body('userId') userId: string,\n    @Body('userIp') userIp: string,\n    @I18nLang() lang: string,\n    @Res() response,\n  ) {\n    return await this.authService.SendPasswordReset(userId, userIp).then(() => {\n      response.status(HttpStatus.OK).json({\n        statusCode: HttpStatus.OK,\n        message: this.i18nService.translate(\n          'translations.auth.controller.password_reset',\n          {\n            lang,\n          },\n        ),\n      });\n    });\n  }\n\n  @Patch('/account/password/change')\n  public async PasswordChange(\n    @Body('userId') userId: string,\n    @Body('tokenPassword') tokenPassword: string,\n    @Body('newPassword') newPassword: string,\n    @I18nLang() lang: string,\n    @Res() response,\n  ) {\n    return await this.authService\n      .ChangePassword(userId, tokenPassword, newPassword)\n      .then(() => {\n        response.status(HttpStatus.OK).json({\n          statusCode: HttpStatus.OK,\n          message: this.i18nService.translate(\n            'translations.auth.controller.change_password',\n            {\n              lang,\n            },\n          ),\n        });\n      });\n  }\n\n  @UseGuards(AuthGuard())\n  @Patch('/account/security/change')\n  public async ChangeSecurity(\n    @Body() securityUpdate: SecurityUpdateDto,\n    @GetUser('id') userIdRequest: string,\n    @GetUser('rank') userRankRequest: string[],\n    @I18nLang() lang: string,\n    @Res() response,\n  ) {\n    return await this.authService\n      .ChangeSecurity(securityUpdate, userIdRequest, userRankRequest)\n      .then(() => {\n        response.status(HttpStatus.OK).json({\n          statusCode: HttpStatus.OK,\n          message: this.i18nService.translate(\n            'translations.auth.controller.security_updated',\n            {\n              lang,\n            },\n          ),\n        });\n      });\n  }\n\n  @Post('/account/logout')\n  public async LogOut(\n    @Body('userId') userId: string,\n    @Body('sesionId') sesionId: string,\n    @I18nLang() lang: string,\n    @Res() response,\n  ) {\n    return await this.authService.LogOut(userId, sesionId).then(() => {\n      response.status(HttpStatus.OK).json({\n        statusCode: HttpStatus.OK,\n        message: this.i18nService.translate(\n          'translations.auth.controller.session_logout',\n          {\n            lang,\n          },\n        ),\n      });\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nJwtStrategy \n\nJwtStrategy \n\n\n\nAuthModule\n\nAuthModule\n\nJwtStrategy  -->\n\nAuthModule->JwtStrategy \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            JwtStrategy\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { AuthController } from './auth.controller';\nimport { TypegooseModule } from 'nestjs-typegoose';\nimport { UserModel } from '../modules/user/models/user.model';\nimport { ConfigService } from '../config/config.service';\nimport { JwtStrategy } from './strategies/jwt.strategy';\nimport { PassportModule } from '@nestjs/passport';\nimport { ConfigModule } from '../config/config.module';\nimport { JwtModule } from '@nestjs/jwt';\nimport { ConfigurationEnum } from '../keys/configuration.enum';\n\n@Module({\n  imports: [\n    TypegooseModule.forFeature([UserModel]),\n    PassportModule.register({\n      defaultStrategy: 'jwt',\n    }),\n    JwtModule.registerAsync({\n      imports: [ConfigModule],\n      inject: [ConfigService],\n      useFactory(configService: ConfigService) {\n        return {\n          secret: configService.get(ConfigurationEnum.TOKEN_SECRET),\n          signOptions: {\n            expiresIn: '15d',\n          },\n        };\n      },\n    }),\n  ],\n  providers: [AuthService, ConfigService, JwtStrategy],\n  controllers: [AuthController],\n  exports: [JwtStrategy, PassportModule],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                ChangePassword\n                            \n                            \n                                    Public\n                                    Async\n                                ChangeSecurity\n                            \n                            \n                                    Public\n                                    Async\n                                LogOut\n                            \n                            \n                                    Public\n                                    Async\n                                SendPasswordReset\n                            \n                            \n                                    Public\n                                    Async\n                                SignIn\n                            \n                            \n                                    Public\n                                    Async\n                                SignUp\n                            \n                            \n                                    Public\n                                    Async\n                                VerifyEmail\n                            \n                            \n                                    Public\n                                    Async\n                                VerifySecurity\n                            \n                            \n                                    Public\n                                    Async\n                                VerifySession\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userModel: ReturnModelType<>, mailService: MailerService, configService: ConfigService, jwtService: JwtService, i18nService: I18nRequestScopeService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userModel\n                                                  \n                                                        \n                                                                    ReturnModelType<>\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mailService\n                                                  \n                                                        \n                                                                    MailerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        i18nService\n                                                  \n                                                        \n                                                                    I18nRequestScopeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            ChangePassword\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ChangePassword(userId: string, tokenPasword: string, newPassword: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:500\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    tokenPasword\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    newPassword\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            ChangeSecurity\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ChangeSecurity(securityUpdate: SecurityUpdateDto, userRequestId: string, userRequestRank: string[])\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:564\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    securityUpdate\n                                    \n                                                SecurityUpdateDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userRequestId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userRequestRank\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            LogOut\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    LogOut(userId: string, sessionId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:615\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    sessionId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            SendPasswordReset\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    SendPasswordReset(userId: string, userIp: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:430\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userIp\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            SignIn\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    SignIn(signInDto: SignInDto)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:122\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    signInDto\n                                    \n                                                SignInDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            SignUp\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    SignUp(user: UserModel)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                UserModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            VerifyEmail\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    VerifyEmail(userId: string, tokenEmail: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:292\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    tokenEmail\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            VerifySecurity\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    VerifySecurity(securityDto: SecurityDto)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:374\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    securityDto\n                                    \n                                                SecurityDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            VerifySession\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    VerifySession(userId: string, sessionDevice: string, sessionIp: string, sessionId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:344\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    sessionDevice\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    sessionIp\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    sessionId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            logger\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Logger\n\n                        \n                    \n                    \n                        \n                            Default value : new Logger('Authentication')\n                        \n                    \n                        \n                            \n                                    Defined in src/auth/auth.service.ts:31\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {\n  Injectable,\n  Logger,\n  BadGatewayException,\n  ConflictException,\n  BadRequestException,\n  UnauthorizedException,\n  NotFoundException,\n  ForbiddenException,\n} from '@nestjs/common';\nimport { InjectModel } from 'nestjs-typegoose';\nimport { JwtService } from '@nestjs/jwt';\nimport { UserModel } from '../modules/user/models/user.model';\nimport { ReturnModelType } from '@typegoose/typegoose';\nimport { genSalt, hash, compare } from 'bcryptjs';\nimport { TokenGenerator } from 'ts-token-generator';\nimport { MailerService } from '@nest-modules/mailer';\nimport { ConfigService } from '../config/config.service';\nimport { RanksEnum } from '../keys/ranks.enum';\nimport { I18nRequestScopeService } from 'nestjs-i18n';\nimport * as moments from 'moment';\nimport * as momentstz from 'moment-timezone';\nimport { SignInDto } from './dto/signin.dto';\nimport { SecurityDto } from './dto/security.dto';\nimport { ConfigurationEnum } from '../keys/configuration.enum';\nimport { IJwtPayload } from './jwt.payload.interface';\nimport { SecurityUpdateDto } from './dto/security.update.dto';\n\n@Injectable()\nexport class AuthService {\n  private readonly logger: Logger = new Logger('Authentication');\n\n  constructor(\n    @InjectModel(UserModel)\n    private readonly userModel: ReturnModelType,\n    private readonly mailService: MailerService,\n    private readonly configService: ConfigService,\n    private readonly jwtService: JwtService,\n    private readonly i18nService: I18nRequestScopeService,\n  ) {}\n\n  public async SignUp(user: UserModel): Promise {\n    this.logger.log(\n      `Creating a new user with username ${user.username} and with email ${user.email.key}.`,\n    );\n    const userCreated = new this.userModel(user);\n    const passwordSalt = await genSalt(10);\n\n    const timezone = momentstz()\n      .tz('America/New_York')\n      .utc()\n      .format();\n\n    const time = moments(timezone)\n      .add(15, 'minutes')\n      .toDate();\n\n    userCreated.email.token = new TokenGenerator().generate();\n    userCreated.email.expiration = time;\n    userCreated.password.key = await hash(\n      userCreated.password.key,\n      passwordSalt,\n    );\n    userCreated.password.token = new TokenGenerator().generate();\n    userCreated.ip = user.ip;\n    await userCreated\n      .save()\n      .then(() => {\n        this.logger.log(\n          `User successfully created with username ${user.username}`,\n        );\n        this.mailService\n          .sendMail({\n            to: userCreated.email.key,\n            from: 'saturnoxspace@outlook.com',\n            subject: 'Verification account | Akatsuki Project',\n            template: 'verify_email_request',\n            context: {\n              name: userCreated.name,\n              username: user.username,\n              password: user.password.key,\n              confirm_account: `${this.configService.get(\n                ConfigurationEnum.SERVER_HOST,\n              )}auth/email/verification/${userCreated._id}/${\n                userCreated.email.token\n              }`,\n              google_play_app: 'https://play.google.com/akatsukiapp_',\n            },\n          })\n          .catch(() => {\n            this.logger.error(\n              `Could not send email to user ${user.username} with email ${user.email.key}.`,\n            );\n            throw new BadGatewayException(\n              this.i18nService.translate(\n                'translations.auth.service.send_email',\n              ),\n            );\n          });\n      })\n      .catch((error: any) => {\n        if (error.code === 11000) {\n          this.logger.error(\n            `Could not create user ${user.username} because a user with this data already exists.`,\n          );\n          throw new ConflictException(\n            this.i18nService.translate(\n              'translations.auth.service.duplicate_user',\n            ),\n          );\n        }\n\n        this.logger.error(\n          `There was a problem processing the user registration request for ${user.username}.`,\n        );\n        throw new BadRequestException(\n          this.i18nService.translate('translations.auth.service.error_signup'),\n        );\n      });\n  }\n\n  public async SignIn(\n    signInDto: SignInDto,\n  ): Promise {\n    const { email, password, device, ip } = signInDto;\n    const userSignIn = await this.userModel.findOne({\n      'email.key': email,\n    });\n    this.logger.log(\n      `Logging into the account on the device $ {device} with IP ${ip}.`,\n    );\n    const timezone = momentstz()\n      .tz('America/New_York')\n      .utc()\n      .format();\n\n    const time = moments(timezone).toDate();\n\n    if (!userSignIn) {\n      this.logger.error(\n        `The attempt to login to the account on the device ${device} with IP $ {ip} was rejected due to incorrect cdentials.`,\n      );\n\n      throw new UnauthorizedException(\n        this.i18nService.translate(\n          'translations.auth.service.invalid_credentials',\n        ),\n      );\n    }\n\n    const isPasswordMatch = await compare(password, userSignIn.password.key);\n    if (!isPasswordMatch) {\n      this.logger.error(\n        `The attempt to login to the account ${userSignIn.username} on the device ${device} with IP ${ip} was rejected due to incorrect cdentials.`,\n      );\n\n      throw new UnauthorizedException(\n        this.i18nService.translate(\n          'translations.auth.service.invalid_credentials',\n        ),\n      );\n    }\n\n    const rankData: string[] = [];\n    if (userSignIn.rank.admin) {\n      rankData.push(RanksEnum.ADMINISTRATOR);\n    }\n\n    if (userSignIn.rank.mod) {\n      rankData.push(RanksEnum.MODERATOR);\n    }\n\n    if (userSignIn.rank.seller) {\n      rankData.push(RanksEnum.SELLER);\n    }\n\n    if (userSignIn.premium.status) {\n      rankData.push(RanksEnum.PREMIUM);\n    }\n\n    this.logger.log(\n      `Generating ${userSignIn.username} access token for device ${device} with IP ${ip}.`,\n    );\n\n    const payload: IJwtPayload = {\n      id: userSignIn._id,\n      email: userSignIn.email.key,\n      username: userSignIn.username,\n      rank: rankData,\n    };\n\n    const userSessionsDoc = await this.userModel.findOne({\n      'email.key': email,\n    });\n\n    if (!userSessionsDoc) {\n      this.logger.error(\n        `The attempt to login to the account ${userSignIn.username} on the device ${device} with IP ${ip} was rejected due to incorrect cdentials.`,\n      );\n\n      throw new UnauthorizedException(\n        this.i18nService.translate(\n          'translations.auth.service.invalid_credentials',\n        ),\n      );\n    }\n\n    const userSessiondExists = await this.userModel.findOne({\n      // prettier-ignore\n      '_id': userSignIn._id,\n      'sessions.device': device,\n      'sessions.ip': ip,\n    });\n\n    if (userSessiondExists) {\n      this.logger.error(\n        `The attempt to log on to the account ${userSignIn.username} on the device ${device} with IP ${ip} was rejected because there is already a session registered on that device.`,\n      );\n\n      throw new UnauthorizedException(\n        this.i18nService.translate(\n          'translations.auth.service.session_already_exists',\n        ),\n      );\n    } else {\n      if (\n        userSignIn.email.status &&\n        userSignIn.password.status &&\n        !userSignIn.suspension.status\n      ) {\n        userSessionsDoc.sessions.push({\n          device,\n          ip,\n          twofactor: false,\n          createdAt: time,\n          updatedAt: time,\n        });\n        await userSessionsDoc.save();\n      } else {\n        throw new UnauthorizedException(\n          this.i18nService.translate('translations.auth.service.no_permission'),\n        );\n      }\n    }\n\n    const sessionId =\n      userSessionsDoc.sessions[userSessionsDoc.sessions.length - 1]._id;\n    const tokenUser = this.jwtService.sign(payload);\n    if (\n      tokenUser &&\n      userSignIn.email.status &&\n      userSignIn.password.status &&\n      !userSignIn.suspension.status &&\n      sessionId\n    ) {\n      this.logger.log(\n        `The attempt to log in to the account ${userSignIn.username} in the disposition ${device} with IP ${ip} was successfully completed and the session was logged into the account.`,\n      );\n      return {\n        user_id: userSignIn._id,\n        session_id: sessionId,\n        confirmation: userSignIn.email.status,\n        password: userSignIn.password.status,\n        ban: userSignIn.suspension.status,\n        ban_reason: '',\n        token: tokenUser,\n      };\n    } else {\n      this.logger.error(\n        `The attempt to log in to the account ${userSignIn.username} in the disposition ${device} with IP ${ip} was rejected because the account has insufficient permissions to generate an access token and a session.`,\n      );\n      return {\n        user_id: userSignIn._id,\n        session_id: '',\n        confirmation: userSignIn.email.status,\n        password: userSignIn.password.status,\n        ban: userSignIn.suspension.status,\n        ban_reason: userSignIn.suspension.reason,\n        token: '',\n      };\n    }\n  }\n\n  public async VerifyEmail(userId: string, tokenEmail: string): Promise {\n    let user;\n    try {\n      user = await this.userModel.findById(userId);\n    } catch (error) {\n      throw new ConflictException(\n        this.i18nService.translate('translations.auth.service.user_not_found'),\n      );\n    }\n\n    if (!user) {\n      this.logger.error(\n        `The request for confirmation of electronic corrode could not be completed because there is no user with this data.`,\n      );\n\n      throw new NotFoundException(\n        this.i18nService.translate('translations.auth.service.user_not_found'),\n      );\n    }\n\n    this.logger.log(`Verifying email address for account ${user.username}.`);\n\n    const timezone = momentstz()\n      .tz('America/New_York')\n      .utc()\n      .format();\n\n    const time = moments(timezone)\n      .add(15, 'minutes')\n      .toDate();\n\n    if (tokenEmail === user.email.token) {\n      this.logger.log(\n        `Email address for the account ${user.username} has been successfully confirmed and the account login was enabled.`,\n      );\n\n      user.email.status = true;\n      user.email.expiration = time;\n      user.email.token = new TokenGenerator().generate();\n      user.save();\n    } else {\n      this.logger.error(\n        `The email activation of ${user.username} could not be completed because the Token is invalid or has expired.`,\n      );\n      throw new BadRequestException(\n        this.i18nService.translate(\n          'translations.auth.service.confirmation_error_token',\n        ),\n      );\n    }\n  }\n\n  public async VerifySession(\n    userId: string,\n    sessionDevice: string,\n    sessionIp: string,\n    sessionId: string,\n  ): Promise {\n    let userSessiondExists;\n    try {\n      userSessiondExists = await this.userModel.findOne({\n        // prettier-ignore\n        '_id': userId,\n        'sessions._id': sessionId,\n        'sessions.device': sessionDevice,\n        'sessions.ip': sessionIp,\n      });\n    } catch (error) {\n      throw new BadRequestException(\n        this.i18nService.translate('translations.auth.service.session_invalid'),\n      );\n    }\n\n    if (!userSessiondExists) {\n      throw new UnauthorizedException(\n        this.i18nService.translate(\n          'translations.auth.service.session_not_exists',\n        ),\n      );\n    }\n  }\n\n  public async VerifySecurity(securityDto: SecurityDto) {\n    const user: UserModel = await this.userModel\n      .findById(securityDto.id)\n      .catch(() => {\n        throw new ConflictException(\n          this.i18nService.translate(\n            'translations.auth.service.user_not_found',\n          ),\n        );\n      });\n\n    if (!user) {\n      this.logger.error(\n        `The security challenge could not be completed because there is no account with this data.`,\n      );\n\n      throw new NotFoundException(\n        this.i18nService.translate('translations.auth.service.user_not_found'),\n      );\n    }\n\n    this.logger.log(\n      `Verifying security codes to be able to complete the login in the account ${user.username}.`,\n    );\n\n    if (!user.security.enabled) {\n      this.logger.error(\n        `The security challenge could not be processed because the ${user.username} account does not have two-factor security enabled.`,\n      );\n\n      throw new ConflictException(\n        this.i18nService.translate(\n          'translations.auth.service.security_no_enabled',\n        ),\n      );\n    }\n\n    if (\n      securityDto.code1 !== user.security.code1 ||\n      securityDto.code2 !== user.security.code2 ||\n      securityDto.code3 !== user.security.code3 ||\n      securityDto.code4 !== user.security.code4 ||\n      securityDto.code5 !== user.security.code5\n    ) {\n      this.logger.error(\n        `Security check for account ${user.username} rejected due to incorrectly entered codes.`,\n      );\n\n      throw new UnauthorizedException(\n        this.i18nService.translate(\n          'translations.auth.service.security_code_failed',\n        ),\n      );\n    }\n  }\n\n  public async SendPasswordReset(userId: string, userIp: string) {\n    let user;\n    try {\n      user = await this.userModel.findById(userId);\n    } catch (error) {\n      throw new ConflictException(\n        this.i18nService.translate('translations.auth.service.user_not_found'),\n      );\n    }\n    const tokenPassword = new TokenGenerator().generate();\n\n    if (!user) {\n      this.logger.error(\n        `The request for password submission could not be completed because there is no account with this data.`,\n      );\n\n      throw new NotFoundException(\n        this.i18nService.translate('translations.auth.service.user_not_found'),\n      );\n    }\n\n    const timezone = momentstz()\n      .tz('America/New_York')\n      .utc()\n      .format();\n\n    const time = moments(timezone)\n      .add(15, 'minutes')\n      .toDate();\n\n    this.logger.log(\n      `Sending password change confirmation email to the associated email in the ${user.username} account.`,\n    );\n\n    await this.mailService\n      .sendMail({\n        to: user.email.key,\n        from: 'saturnoxspace@outlook.com',\n        subject: 'Resed password | Akatsuki Project',\n        template: 'password_reset_request',\n        context: {\n          reset_password: 'https://akatsukiapp.com/password/reset',\n          name: user.name,\n          ip: userIp,\n          token: tokenPassword,\n        },\n      })\n      .then(() => {\n        this.logger.log(\n          `A password change confirmation email was successfully sent to ${user.username}.`,\n        );\n\n        user.password.status = false;\n        user.password.expiration = time;\n        user.password.token = tokenPassword;\n        user.save();\n      })\n      .catch(() => {\n        this.logger.error(\n          `There was a problem sending the password change confirmation email to ${user.username}.`,\n        );\n\n        throw new BadRequestException(\n          this.i18nService.translate(\n            'translations.auth.service.password_error_reset_email',\n          ),\n        );\n      });\n  }\n\n  public async ChangePassword(\n    userId: string,\n    tokenPasword: string,\n    newPassword: string,\n  ): Promise {\n    let user;\n    try {\n      user = await this.userModel.findById(userId);\n    } catch (error) {\n      throw new ConflictException(\n        this.i18nService.translate('translations.auth.service.user_not_found'),\n      );\n    }\n\n    if (!user) {\n      this.logger.error(\n        `The password change process could not be completed because there is no account with this data.`,\n      );\n\n      throw new NotFoundException(\n        this.i18nService.translate('translations.auth.service.user_not_found'),\n      );\n    }\n\n    this.logger.log(\n      `Changing the account password ${user.username} with code Token ${tokenPasword}.`,\n    );\n\n    const salt = await genSalt(10);\n    const timezone = momentstz()\n      .tz('America/New_York')\n      .utc()\n      .format();\n\n    const time = moments(timezone)\n      .add(15, 'minutes')\n      .toDate();\n\n    if (\n      moments().toDate()  {\n        throw new BadRequestException(\n          this.i18nService.translate('translations.general.process_failed'),\n        );\n      });\n  }\n\n  public async LogOut(userId: string, sessionId: string) {\n    this.logger.log(\n      `Logging off the user with Id ${userId} and with session Id ${sessionId}.`,\n    );\n\n    try {\n      await this.userModel.findOneAndUpdate(\n        { _id: userId },\n        { $pull: { sessions: { _id: sessionId } } },\n      );\n    } catch (error) {\n      this.logger.error(\n        `The session could not be closed with Id ${sessionId} for the user with Id ${userId} because there is no session with that Id or a problem has occurred in the database.`,\n      );\n\n      throw new BadRequestException(\n        this.i18nService.translate(\n          'translations.auth.service.user_session_error',\n        ),\n      );\n    }\n\n    this.logger.log(\n      `Successfully closed session for the account with Id ${userId} and with session number ${sessionId}.`,\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BuyerAddMarketDto.html":{"url":"classes/BuyerAddMarketDto.html","title":"class - BuyerAddMarketDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BuyerAddMarketDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/market/dto/buyer.add.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                device\n                            \n                            \n                                    Public\n                                ip\n                            \n                            \n                                    Public\n                                product\n                            \n                            \n                                    Public\n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            device\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string | number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/market/dto/buyer.add.dto.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ip\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/market/dto/buyer.add.dto.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            product\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/market/dto/buyer.add.dto.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/market/dto/buyer.add.dto.ts:8\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Ref } from '@typegoose/typegoose';\n\nimport { UserModel } from '../../../modules/user/models/user.model';\n\nexport class BuyerAddMarketDto {\n  public product: string;\n\n  public user: Ref;\n\n  public device: string | number;\n\n  public ip: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BuyerMarket.html":{"url":"classes/BuyerMarket.html","title":"class - BuyerMarket","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BuyerMarket\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/market/models/market.data.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                device\n                            \n                            \n                                    Public\n                                ip\n                            \n                            \n                                    Public\n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            device\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string | number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/market/models/market.data.model.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ip\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/market/models/market.data.model.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, ref: 'Users'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/market/models/market.data.model.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { prop, Ref } from '@typegoose/typegoose';\nimport { UserModel } from 'src/modules/user/models/user.model';\n\nexport class DiscountMarket {\n  @prop({ required: true, min: 0, max: 99 })\n  public percentage: number;\n\n  @prop({ required: true })\n  public exp: Date;\n}\n\nexport class BuyerMarket {\n  @prop({\n    required: true,\n    ref: 'Users',\n  })\n  public user: Ref;\n\n  @prop({ required: true })\n  public device: string | number;\n\n  @prop({ required: true })\n  public ip: string;\n}\n\nexport class CommentMarket {\n  @prop({\n    required: true,\n    ref: 'Users',\n  })\n  public author: Ref;\n\n  @prop({ required: true })\n  public device: string | number;\n\n  @prop({ required: true })\n  public ip: string;\n\n  @prop({ required: true, minlength: 50, maxlength: 500 })\n  public content: string;\n}\n\nexport class ReactionsMarket {\n  @prop({\n    required: true,\n    ref: 'Users',\n  })\n  public user: Ref;\n\n  @prop({ required: true })\n  public device: string | number;\n\n  @prop({ required: true })\n  public ip: string;\n\n  @prop({ required: true })\n  public type: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BuyerRemoveMarketDto.html":{"url":"classes/BuyerRemoveMarketDto.html","title":"class - BuyerRemoveMarketDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BuyerRemoveMarketDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/market/dto/buyer.remove.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                product\n                            \n                            \n                                    Public\n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            product\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/market/dto/buyer.remove.dto.ts:2\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/market/dto/buyer.remove.dto.ts:4\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class BuyerRemoveMarketDto {\n  public product: string;\n\n  public user: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ChangelogAuthor.html":{"url":"classes/ChangelogAuthor.html","title":"class - ChangelogAuthor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ChangelogAuthor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/admin/models/changelog.data.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                device\n                            \n                            \n                                    Public\n                                info\n                            \n                            \n                                    Public\n                                ip\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            device\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string | number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/admin/models/changelog.data.model.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            info\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, ref: 'Users'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/admin/models/changelog.data.model.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ip\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/admin/models/changelog.data.model.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { prop, Ref } from '@typegoose/typegoose';\nimport { UserModel } from '../../../modules/user/models/user.model';\n\nexport class ChangelogAuthor {\n  @prop({\n    required: true,\n    ref: 'Users',\n  })\n  public info: Ref;\n\n  @prop({ required: true })\n  public device: string | number;\n\n  @prop({ required: true })\n  public ip: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ChangelogModel.html":{"url":"classes/ChangelogModel.html","title":"class - ChangelogModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ChangelogModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/admin/models/changelog.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                author\n                            \n                            \n                                    Public\n                                description\n                            \n                            \n                                    Public\n                                hash\n                            \n                            \n                                    Public\n                                title\n                            \n                            \n                                    Public\n                                version\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            author\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ChangelogAuthor\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, _id: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/admin/models/changelog.model.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, minlength: 50, maxlength: 3000})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/admin/models/changelog.model.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hash\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, minlength: 10, maxlength: 30})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/admin/models/changelog.model.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, minlength: 10, maxlength: 250})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/admin/models/changelog.model.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            version\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, minlength: 5, maxlength: 30})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/admin/models/changelog.model.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ChangelogAuthor } from './changelog.data.model';\nimport { prop, modelOptions } from '@typegoose/typegoose';\n\n@modelOptions({\n  options: {\n    customName: 'Changelogs',\n  },\n})\nexport class ChangelogModel {\n  @prop({ required: true, minlength: 10, maxlength: 250 })\n  public title: string;\n\n  @prop({ required: true, minlength: 5, maxlength: 30 })\n  public version: string;\n\n  @prop({ required: true, minlength: 10, maxlength: 30 })\n  public hash: string;\n\n  @prop({ required: true, minlength: 50, maxlength: 3000 })\n  public description: string;\n\n  @prop({ required: true, _id: false })\n  public author: ChangelogAuthor;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CommentMarket.html":{"url":"classes/CommentMarket.html","title":"class - CommentMarket","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CommentMarket\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/market/models/market.data.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                author\n                            \n                            \n                                    Public\n                                content\n                            \n                            \n                                    Public\n                                device\n                            \n                            \n                                    Public\n                                ip\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            author\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, ref: 'Users'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/market/models/market.data.model.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            content\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, minlength: 50, maxlength: 500})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/market/models/market.data.model.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            device\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string | number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/market/models/market.data.model.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ip\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/market/models/market.data.model.ts:37\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { prop, Ref } from '@typegoose/typegoose';\nimport { UserModel } from 'src/modules/user/models/user.model';\n\nexport class DiscountMarket {\n  @prop({ required: true, min: 0, max: 99 })\n  public percentage: number;\n\n  @prop({ required: true })\n  public exp: Date;\n}\n\nexport class BuyerMarket {\n  @prop({\n    required: true,\n    ref: 'Users',\n  })\n  public user: Ref;\n\n  @prop({ required: true })\n  public device: string | number;\n\n  @prop({ required: true })\n  public ip: string;\n}\n\nexport class CommentMarket {\n  @prop({\n    required: true,\n    ref: 'Users',\n  })\n  public author: Ref;\n\n  @prop({ required: true })\n  public device: string | number;\n\n  @prop({ required: true })\n  public ip: string;\n\n  @prop({ required: true, minlength: 50, maxlength: 500 })\n  public content: string;\n}\n\nexport class ReactionsMarket {\n  @prop({\n    required: true,\n    ref: 'Users',\n  })\n  public user: Ref;\n\n  @prop({ required: true })\n  public device: string | number;\n\n  @prop({ required: true })\n  public ip: string;\n\n  @prop({ required: true })\n  public type: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CommentMarketDto.html":{"url":"classes/CommentMarketDto.html","title":"class - CommentMarketDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CommentMarketDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/market/dto/comment.add.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                content\n                            \n                            \n                                    Public\n                                device\n                            \n                            \n                                    Public\n                                ip\n                            \n                            \n                                    Public\n                                product\n                            \n                            \n                                    Public\n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            content\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/market/dto/comment.add.dto.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            device\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string | number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/market/dto/comment.add.dto.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ip\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/market/dto/comment.add.dto.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            product\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/market/dto/comment.add.dto.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/market/dto/comment.add.dto.ts:8\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Ref } from '@typegoose/typegoose';\n\nimport { UserModel } from '../../user/models/user.model';\n\nexport class CommentMarketDto {\n  public product: string;\n\n  public user: Ref;\n\n  public device: string | number;\n\n  public ip: string;\n\n  public content: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CommentRemoveMarketDto.html":{"url":"classes/CommentRemoveMarketDto.html","title":"class - CommentRemoveMarketDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CommentRemoveMarketDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/market/dto/comment.remove.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                author\n                            \n                            \n                                product\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            author\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/market/dto/comment.remove.dto.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            product\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/market/dto/comment.remove.dto.ts:2\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CommentRemoveMarketDto {\n  product: string;\n\n  author: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ConfigModule.html":{"url":"modules/ConfigModule.html","title":"module - ConfigModule","body":"\n                   \n\n\n\n\n    Modules\n    ConfigModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ConfigModule\n\n\n\ncluster_ConfigModule_exports\n\n\n\n\nConfigService \n\nConfigService \n\n\n\nConfigModule\n\nConfigModule\n\nConfigService  -->\n\nConfigModule->ConfigService \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/config/config.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Exports\n                    \n                        \n                            ConfigService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ConfigService } from './config.service';\n\n@Module({\n  providers: [\n    {\n      provide: ConfigService,\n      useValue: new ConfigService(),\n    },\n  ],\n  exports: [ConfigService],\n})\nexport class ConfigModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ConfigService.html":{"url":"classes/ConfigService.html","title":"class - ConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/config/config.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                envConfig\n                            \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                get\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/config/config.service.ts:7\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            envConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/config/config.service.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            logger\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Logger\n\n                        \n                    \n                    \n                        \n                            Default value : new Logger('Configuration')\n                        \n                    \n                        \n                            \n                                    Defined in src/config/config.service.ts:7\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            get\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    get(key: string)\n                \n            \n\n\n            \n                \n                    Defined in src/config/config.service.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { existsSync, readFileSync } from 'fs';\nimport { Logger } from '@nestjs/common';\nimport { parse } from 'dotenv';\n\nexport class ConfigService {\n  readonly envConfig: { [ket: string]: string };\n  private readonly logger: Logger = new Logger('Configuration');\n\n  constructor() {\n    const isDevEnv = process.env.NODE_NEV !== 'production';\n    if (isDevEnv) {\n      const envFilePath = __dirname + '/../../.env';\n      const existPath = existsSync(envFilePath);\n\n      if (!existPath) {\n        this.logger.error('.env file does not exist.');\n        process.exit(0);\n      }\n\n      this.envConfig = parse(readFileSync(envFilePath));\n    } else {\n      this.envConfig = {\n        PORT_API: process.env.PORT,\n        TOKEN_SECRET: 'S9SDNXC9SM',\n        EMAIL_HOST:\n          'smtp://saturnoxspace@outlook.com:efhdmhtdxblafvjj@smtp.office365.com',\n        EMAIL_FROM: '\"Akatsuki Network\" ',\n        DB_HOST: 'mongodb://localhost:27017/akatsuki',\n        SERVER_HOST: 'https://api.akatsukiapp.com:3678/v1',\n      };\n    }\n  }\n\n  public get(key: string): string {\n    return this.envConfig[key];\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DiscountMarket.html":{"url":"classes/DiscountMarket.html","title":"class - DiscountMarket","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DiscountMarket\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/market/models/market.data.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                exp\n                            \n                            \n                                    Public\n                                percentage\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            exp\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/market/models/market.data.model.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            percentage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, min: 0, max: 99})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/market/models/market.data.model.ts:6\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { prop, Ref } from '@typegoose/typegoose';\nimport { UserModel } from 'src/modules/user/models/user.model';\n\nexport class DiscountMarket {\n  @prop({ required: true, min: 0, max: 99 })\n  public percentage: number;\n\n  @prop({ required: true })\n  public exp: Date;\n}\n\nexport class BuyerMarket {\n  @prop({\n    required: true,\n    ref: 'Users',\n  })\n  public user: Ref;\n\n  @prop({ required: true })\n  public device: string | number;\n\n  @prop({ required: true })\n  public ip: string;\n}\n\nexport class CommentMarket {\n  @prop({\n    required: true,\n    ref: 'Users',\n  })\n  public author: Ref;\n\n  @prop({ required: true })\n  public device: string | number;\n\n  @prop({ required: true })\n  public ip: string;\n\n  @prop({ required: true, minlength: 50, maxlength: 500 })\n  public content: string;\n}\n\nexport class ReactionsMarket {\n  @prop({\n    required: true,\n    ref: 'Users',\n  })\n  public user: Ref;\n\n  @prop({ required: true })\n  public device: string | number;\n\n  @prop({ required: true })\n  public ip: string;\n\n  @prop({ required: true })\n  public type: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Email.html":{"url":"classes/Email.html","title":"class - Email","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Email\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/dto/user.dto.data.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                expiration\n                            \n                            \n                                    Public\n                                key\n                            \n                            \n                                    Public\n                                status\n                            \n                            \n                                    Public\n                                token\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            expiration\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/dto/user.dto.data.ts:109\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            key\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/dto/user.dto.data.ts:103\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/dto/user.dto.data.ts:105\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/dto/user.dto.data.ts:107\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Market {\n  public description: string;\n\n  public price: number;\n\n  public type: number;\n\n  public discount: number;\n\n  public seller: string;\n\n  public device: number;\n\n  public ip: string;\n\n  public market: number;\n}\n\nexport class Reactions {\n  public author: string;\n\n  public type: number;\n}\n\nexport class Suspension {\n  public status: boolean;\n\n  public reason: string;\n}\n\nexport class Stats {\n  public spent: number;\n\n  public won: number;\n\n  public rewards: number;\n\n  public rep: number;\n\n  public exp: number;\n}\n\nexport class Security {\n  public enabled: boolean;\n\n  public code1: number;\n\n  public code2: number;\n\n  public code3: number;\n\n  public code4: number;\n\n  public code5: number;\n\n  public twofactor: number;\n}\n\nexport class Membership {\n  public status: false;\n\n  public expiration: Date;\n\n  public transaction: Date;\n}\n\nexport class Rank {\n  public seller: boolean;\n\n  public mod: boolean;\n\n  public admin: boolean;\n}\n\nexport class Notifications {\n  public social: boolean;\n\n  public market: boolean;\n\n  public message: boolean;\n}\n\nexport class Online {\n  public online: boolean;\n\n  public mode: number;\n\n  public last: Date;\n}\n\nexport class Sessions {\n  // tslint:disable-next-line\n  public _id?: string;\n\n  public device: string | number;\n\n  public ip: string;\n\n  public twofactor: boolean;\n}\n\nexport class Email {\n  public key: string;\n\n  public status: boolean;\n\n  public token: string;\n\n  public expiration?: Date;\n}\n\nexport class Password {\n  public key: string;\n\n  public status?: boolean;\n\n  public token?: string;\n\n  public expiration?: Date;\n}\n\nexport class TransactionBuyer {\n  public id: string;\n\n  public ip: string;\n\n  public device: string;\n}\nexport class Transaction {\n  // tslint:disable-next-line\n  public _id?: string;\n\n  public seller: string;\n\n  public buyer: TransactionBuyer;\n\n  public item: string;\n\n  public type: number;\n\n  public price: number;\n\n  public discount: number;\n\n  public market: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Email-1.html":{"url":"classes/Email-1.html","title":"class - Email-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Email\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/models/user.model.data.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                expiration\n                            \n                            \n                                    Public\n                                key\n                            \n                            \n                                    Public\n                                status\n                            \n                            \n                                    Public\n                                token\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            expiration\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/models/user.model.data.ts:140\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            key\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, trim: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/models/user.model.data.ts:131\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/models/user.model.data.ts:134\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/models/user.model.data.ts:137\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { prop, index } from '@typegoose/typegoose';\nimport { TimeStamps } from '@typegoose/typegoose/lib/defaultClasses';\n\nexport class Reactions {\n  /*@prop({\n    required: true,\n    lowercase: true,\n    trim: true,\n  })\n  public author: string;*/\n\n  @prop({ required: true, min: 0, max: 1 })\n  public type: number;\n}\n\nexport class Suspension {\n  @prop({ required: true, default: false })\n  public status: boolean;\n\n  @prop({\n    required: true,\n    default:\n      '[System]: The reason for suspension has not been specified. Please contact us for more information.',\n    minlength: 90,\n    maxlength: 200,\n  })\n  public reason: string;\n}\n\nexport class Stats {\n  @prop({ required: true, default: 0 })\n  public spent: number;\n\n  @prop({ required: true, default: 0 })\n  public won: number;\n\n  @prop({ required: true, default: 0 })\n  public rewards: number;\n\n  @prop({ required: true, default: 0 })\n  public rep: number;\n\n  @prop({ required: true, default: 0 })\n  public exp: number;\n}\n\nexport class Security {\n  @prop({ required: true, default: false })\n  public enabled: boolean;\n\n  @prop({ required: true, default: 0 })\n  public code1: number;\n\n  @prop({ required: true, default: 0 })\n  public code2: number;\n\n  @prop({ required: true, default: 0 })\n  public code3: number;\n\n  @prop({ required: true, default: 0 })\n  public code4: number;\n\n  @prop({ required: true, default: 0 })\n  public code5: number;\n\n  @prop({ required: true, default: 0 })\n  public twofactor: number;\n}\n\nexport class Membership {\n  @prop({ required: true, default: false })\n  public status: false;\n\n  @prop({ required: true, default: Date.now() })\n  public expiration: Date;\n\n  @prop({ required: true, default: Date.now() })\n  public transaction: Date;\n}\n\nexport class Rank {\n  @prop({ required: true, default: false })\n  public seller: boolean;\n\n  @prop({ required: true, default: false })\n  public mod: boolean;\n\n  @prop({ required: true, default: false })\n  public admin: boolean;\n}\n\nexport class Notifications {\n  @prop({ required: true, default: false })\n  public social: boolean;\n\n  @prop({ required: true, default: false })\n  public market: boolean;\n\n  @prop({ required: true, default: false })\n  public message: boolean;\n}\n\nexport class Online {\n  @prop({ required: true, default: false })\n  public online: boolean;\n\n  @prop({ required: true, default: 0 })\n  public mode: number;\n\n  @prop({ required: true, default: Date.now() })\n  public last: Date;\n}\n\n@index({ device: 1, ip: 1 }, { unique: true })\nexport class Sessions extends TimeStamps {\n  // tslint:disable-next-line\n  public _id?: string;\n\n  @prop({ required: true })\n  public device: string | number;\n\n  @prop({ required: true })\n  public ip: string;\n\n  @prop({ required: true, default: false })\n  public twofactor: boolean;\n}\n\nexport class Email {\n  @prop({ required: true, trim: true })\n  public key: string;\n\n  @prop({ required: true, default: false })\n  public status: boolean;\n\n  @prop({ required: true })\n  public token: string;\n\n  @prop({ required: true, default: Date.now() })\n  public expiration?: Date;\n}\n\nexport class Password {\n  @prop({ required: true, trim: true })\n  public key: string;\n\n  @prop({ required: true, default: true })\n  public status?: boolean;\n\n  @prop({ required: true })\n  public token?: string;\n\n  @prop({ required: true, default: Date.now() })\n  public expiration?: Date;\n}\n\nexport class TransactionBuyer {\n  @prop({ required: true })\n  public id: string;\n\n  @prop({ required: true })\n  public ip: string;\n\n  @prop({ required: true })\n  public device: string;\n}\n\nexport class Transaction extends TimeStamps {\n  // tslint:disable-next-line\n  public _id?: string;\n\n  @prop({ required: true })\n  public seller: string;\n\n  @prop({ default: new TransactionBuyer(), _id: false })\n  public buyer: TransactionBuyer;\n\n  @prop({ required: true })\n  public item: string;\n\n  @prop({ required: true })\n  public type: number;\n\n  @prop({ required: true })\n  public price: number;\n\n  @prop({ required: true })\n  public discount: number;\n\n  @prop({ required: true })\n  public market: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GeneralGateway.html":{"url":"classes/GeneralGateway.html","title":"class - GeneralGateway","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GeneralGateway\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/gateways/general.gateway.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        OnGatewayConnection\n                        OnGatewayDisconnect\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                            \n                                    Private\n                                    Readonly\n                                server\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleConnection\n                            \n                            \n                                handleDisconnect\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/gateways/general.gateway.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            logger\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Logger\n\n                        \n                    \n                    \n                        \n                            Default value : new Logger('Gateway: General')\n                        \n                    \n                        \n                            \n                                    Defined in src/gateways/general.gateway.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            server\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @WebSocketServer()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/gateways/general.gateway.ts:17\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleConnection\n                        \n                        \n                    \n                \n            \n            \n                \nhandleConnection(client: any)\n                \n            \n\n\n            \n                \n                    Defined in src/gateways/general.gateway.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    client\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleDisconnect\n                        \n                        \n                    \n                \n            \n            \n                \nhandleDisconnect(client: any)\n                \n            \n\n\n            \n                \n                    Defined in src/gateways/general.gateway.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    client\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  WebSocketGateway,\n  OnGatewayConnection,\n  OnGatewayDisconnect,\n  WebSocketServer,\n} from '@nestjs/websockets';\nimport { Logger } from '@nestjs/common';\nimport { UserService } from '../modules/user/user.service';\nimport * as moments from 'moment';\nimport * as momentstz from 'moment-timezone';\n\n@WebSocketGateway()\nexport class GeneralGateway\n  implements OnGatewayConnection, OnGatewayDisconnect {\n  private readonly logger: Logger = new Logger('Gateway: General');\n\n  @WebSocketServer() private readonly server: any;\n  constructor(private readonly userService: UserService) {}\n\n  handleDisconnect(client: any) {\n    const timezone = momentstz()\n      .tz('America/New_York')\n      .utc()\n      .format();\n\n    const time = moments(timezone)\n      .add(15, 'minutes')\n      .toDate();\n\n    if (client.query.online === 1) {\n      this.server.emit(`USER:${client.query.USER}:ONLINE`, { online: false });\n      this.logger.log(\n        `User ${client.query.user} with session ID ${client.query.session} and with Socket Id ${client.id} has been disconnected.`,\n      );\n      return this.userService.updateOnlineUser(client.query.user, {\n        online: {\n          online: false,\n          mode: 1,\n          last: time,\n        },\n      });\n    }\n  }\n\n  handleConnection(client: any) {\n    const timezone = momentstz()\n      .tz('America/New_York')\n      .utc()\n      .format();\n\n    const time = moments(timezone)\n      .add(15, 'minutes')\n      .toDate();\n\n    if (client.query.online === 1) {\n      this.server.emit(`USER:${client.query.USER}:ONLINE`, { online: true });\n      this.logger.log(\n        `User ${client.query.user} has been logged in with session ID ${client.query.session} and with Socket Id ${client.id}.`,\n      );\n      return this.userService.updateOnlineUser(client.query.user, {\n        online: {\n          online: true,\n          mode: 1,\n          last: time,\n        },\n      });\n    }\n  }\n\n  /*@SubscribeMessage('message')\n  handleMessage(client: any, payload: any): string {\n    return 'Hello world!';\n  }*/\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IJwtPayload.html":{"url":"interfaces/IJwtPayload.html","title":"interface - IJwtPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IJwtPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/jwt.payload.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        email\n                                \n                                \n                                        id\n                                \n                                \n                                            Optional\n                                        lat\n                                \n                                \n                                        rank\n                                \n                                \n                                        username\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lat\n                                    \n                                \n                                \n                                    \n                                        lat:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rank\n                                    \n                                \n                                \n                                    \n                                        rank:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IJwtPayload {\n  id: string;\n  email: string;\n  username: string;\n  rank: string[];\n  lat?: Date;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/strategies/jwt.strategy.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userModel: ReturnModelType<>, configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/strategies/jwt.strategy.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userModel\n                                                  \n                                                        \n                                                                    ReturnModelType<>\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload: IJwtPayload)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/strategies/jwt.strategy.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                IJwtPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { PassportStrategy } from '@nestjs/passport';\nimport { Strategy, ExtractJwt } from 'passport-jwt';\nimport { InjectModel } from 'nestjs-typegoose';\nimport { UserModel } from '../../modules/user/models/user.model';\nimport { ReturnModelType } from '@typegoose/typegoose';\nimport { ConfigService } from '../../config/config.service';\nimport { ConfigurationEnum } from '../../keys/configuration.enum';\nimport { UnauthorizedException, Injectable } from '@nestjs/common';\nimport { IJwtPayload } from '../jwt.payload.interface';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  constructor(\n    @InjectModel(UserModel)\n    private readonly userModel: ReturnModelType,\n    readonly configService: ConfigService,\n  ) {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ignoreExpiration: false,\n      secretOrKey: configService.get(ConfigurationEnum.TOKEN_SECRET),\n    });\n  }\n\n  async validate(payload: IJwtPayload) {\n    const { id, username, email } = payload;\n    const userExists = await this.userModel.findById(id);\n\n    if (!userExists) {\n      throw new UnauthorizedException(\n        'This user does not exist. Please verify that the request is correct.',\n      );\n    }\n\n    if (userExists.username !== username) {\n      throw new UnauthorizedException();\n    }\n\n    if (userExists.email.key !== email && !userExists.email.status) {\n      throw new UnauthorizedException();\n    }\n\n    if (!userExists.password.status) {\n      throw new UnauthorizedException();\n    }\n\n    if (userExists.suspension.status) {\n      throw new UnauthorizedException(\n        'We are sorry but this account does not have sufficient permissions to use Akatsuki Project.',\n      );\n    }\n\n    return payload;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Market.html":{"url":"classes/Market.html","title":"class - Market","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Market\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/dto/user.dto.data.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                description\n                            \n                            \n                                    Public\n                                device\n                            \n                            \n                                    Public\n                                discount\n                            \n                            \n                                    Public\n                                ip\n                            \n                            \n                                    Public\n                                market\n                            \n                            \n                                    Public\n                                price\n                            \n                            \n                                    Public\n                                seller\n                            \n                            \n                                    Public\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/dto/user.dto.data.ts:2\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            device\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/dto/user.dto.data.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            discount\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/dto/user.dto.data.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ip\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/dto/user.dto.data.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            market\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/dto/user.dto.data.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            price\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/dto/user.dto.data.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            seller\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/dto/user.dto.data.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/dto/user.dto.data.ts:6\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Market {\n  public description: string;\n\n  public price: number;\n\n  public type: number;\n\n  public discount: number;\n\n  public seller: string;\n\n  public device: number;\n\n  public ip: string;\n\n  public market: number;\n}\n\nexport class Reactions {\n  public author: string;\n\n  public type: number;\n}\n\nexport class Suspension {\n  public status: boolean;\n\n  public reason: string;\n}\n\nexport class Stats {\n  public spent: number;\n\n  public won: number;\n\n  public rewards: number;\n\n  public rep: number;\n\n  public exp: number;\n}\n\nexport class Security {\n  public enabled: boolean;\n\n  public code1: number;\n\n  public code2: number;\n\n  public code3: number;\n\n  public code4: number;\n\n  public code5: number;\n\n  public twofactor: number;\n}\n\nexport class Membership {\n  public status: false;\n\n  public expiration: Date;\n\n  public transaction: Date;\n}\n\nexport class Rank {\n  public seller: boolean;\n\n  public mod: boolean;\n\n  public admin: boolean;\n}\n\nexport class Notifications {\n  public social: boolean;\n\n  public market: boolean;\n\n  public message: boolean;\n}\n\nexport class Online {\n  public online: boolean;\n\n  public mode: number;\n\n  public last: Date;\n}\n\nexport class Sessions {\n  // tslint:disable-next-line\n  public _id?: string;\n\n  public device: string | number;\n\n  public ip: string;\n\n  public twofactor: boolean;\n}\n\nexport class Email {\n  public key: string;\n\n  public status: boolean;\n\n  public token: string;\n\n  public expiration?: Date;\n}\n\nexport class Password {\n  public key: string;\n\n  public status?: boolean;\n\n  public token?: string;\n\n  public expiration?: Date;\n}\n\nexport class TransactionBuyer {\n  public id: string;\n\n  public ip: string;\n\n  public device: string;\n}\nexport class Transaction {\n  // tslint:disable-next-line\n  public _id?: string;\n\n  public seller: string;\n\n  public buyer: TransactionBuyer;\n\n  public item: string;\n\n  public type: number;\n\n  public price: number;\n\n  public discount: number;\n\n  public market: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/MarketController.html":{"url":"controllers/MarketController.html","title":"controller - MarketController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  MarketController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/market/market.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                market\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                AddComment\n                            \n                            \n                                    Public\n                                    Async\n                                AddProduct\n                            \n                            \n                                    Public\n                                    Async\n                                AddReaction\n                            \n                            \n                                    Public\n                                    Async\n                                GetAllProducts\n                            \n                            \n                                    Public\n                                    Async\n                                GetProduct\n                            \n                            \n                                    Public\n                                    Async\n                                RemoveBuyer\n                            \n                            \n                                    Public\n                                    Async\n                                RemoveComment\n                            \n                            \n                                    Public\n                                    Async\n                                RemoveReaction\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            AddComment\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    AddComment(commentMarketDto: CommentMarketDto, response, lang: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put('/add/comment')\n                \n            \n\n            \n                \n                    Defined in src/modules/market/market.controller.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    commentMarketDto\n                                    \n                                                CommentMarketDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    response\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    lang\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            AddProduct\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    AddProduct(marketModel: MarketModel, response, lang: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put('/add/product')\n                \n            \n\n            \n                \n                    Defined in src/modules/market/market.controller.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    marketModel\n                                    \n                                                MarketModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    response\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    lang\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            AddReaction\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    AddReaction(reactionAddMarketDto: ReactionAddMarketDto, response, lang: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put('/add/reaction')\n                \n            \n\n            \n                \n                    Defined in src/modules/market/market.controller.ts:100\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    reactionAddMarketDto\n                                    \n                                                ReactionAddMarketDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    response\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    lang\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            GetAllProducts\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    GetAllProducts(productId: number, rankUserRequest: string[], idUserRequest: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/get/products/:filter')\n                \n            \n\n            \n                \n                    Defined in src/modules/market/market.controller.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    productId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    rankUserRequest\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    idUserRequest\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            GetProduct\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    GetProduct(productId: string, rankUserRequest: string[], idUserRequest: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/get/product/:id')\n                \n            \n\n            \n                \n                    Defined in src/modules/market/market.controller.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    productId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    rankUserRequest\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    idUserRequest\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            RemoveBuyer\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    RemoveBuyer(buyerRemoveMarketDto: BuyerRemoveMarketDto, response, lang: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Rank(RanksEnum.ADMINISTRATOR, RanksEnum.MODERATOR)@Delete('/delete/buyer')\n                \n            \n\n            \n                \n                    Defined in src/modules/market/market.controller.ts:144\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    buyerRemoveMarketDto\n                                    \n                                                BuyerRemoveMarketDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    response\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    lang\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            RemoveComment\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    RemoveComment(commentRemoveMarketDto: CommentRemoveMarketDto, response, idUserRequest: string, lang: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('/delete/comment')\n                \n            \n\n            \n                \n                    Defined in src/modules/market/market.controller.ts:121\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    commentRemoveMarketDto\n                                    \n                                                CommentRemoveMarketDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    response\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    idUserRequest\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    lang\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            RemoveReaction\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    RemoveReaction(reactionRemoveMarketDto: ReactionRemoveMarketDto, response, idUserRequest: string, lang: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('/delete/reaction')\n                \n            \n\n            \n                \n                    Defined in src/modules/market/market.controller.ts:165\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    reactionRemoveMarketDto\n                                    \n                                                ReactionRemoveMarketDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    response\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    idUserRequest\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    lang\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Put,\n  Body,\n  Res,\n  HttpStatus,\n  UseGuards,\n  Get,\n  Param,\n  ParseIntPipe,\n  Delete,\n} from '@nestjs/common';\nimport { MarketService } from './market.service';\nimport { MarketModel } from './models/market.model';\nimport { AuthGuard } from '@nestjs/passport';\nimport { GetUser } from '../../decorators/user.decorator';\nimport { CommentMarketDto } from './dto/comment.add.dto';\nimport { CommentRemoveMarketDto } from './dto/comment.remove.dto';\nimport { BuyerRemoveMarketDto } from './dto/buyer.remove.dto';\nimport { Rank } from '../../decorators/rank.decorator';\nimport { RanksEnum } from '../../keys/ranks.enum';\nimport { RankGuard } from '../../guards/rank.guard';\nimport { ReactionAddMarketDto } from './dto/reaction.add.dto';\nimport { ReactionRemoveMarketDto } from './dto/reaction.remove.dto';\nimport { I18nService, I18nLang } from 'nestjs-i18n';\n\n@UseGuards(AuthGuard(), RankGuard)\n@Controller('market')\nexport class MarketController {\n  constructor(\n    private readonly marketService: MarketService,\n    private readonly i18nService: I18nService,\n  ) {}\n\n  @Put('/add/product')\n  public async AddProduct(\n    @Body() marketModel: MarketModel,\n    @Res() response,\n    @I18nLang() lang: string,\n  ) {\n    return await this.marketService.AddProduct(marketModel).then(() => {\n      response.status(HttpStatus.CREATED).json({\n        statusCode: HttpStatus.CREATED,\n        message: this.i18nService.translate(\n          'translations.market.controller.product_added',\n          {\n            lang,\n          },\n        ),\n      });\n    });\n  }\n\n  @Get('/get/product/:id')\n  public async GetProduct(\n    @Param('id') productId: string,\n    @GetUser('rank') rankUserRequest: string[],\n    @GetUser('id') idUserRequest: string,\n  ) {\n    return await this.marketService.GetProduct(\n      productId,\n      rankUserRequest,\n      idUserRequest,\n    );\n  }\n\n  @Get('/get/products/:filter')\n  public async GetAllProducts(\n    @Param('filter', ParseIntPipe) productId: number,\n    @GetUser('rank') rankUserRequest: string[],\n    @GetUser('id') idUserRequest: string,\n  ) {\n    return await this.marketService.GetAllProducts(\n      productId,\n      rankUserRequest,\n      idUserRequest,\n    );\n  }\n\n  @Put('/add/comment')\n  public async AddComment(\n    @Body() commentMarketDto: CommentMarketDto,\n    @Res() response,\n    @I18nLang() lang: string,\n  ) {\n    return await this.marketService.AddComment(commentMarketDto).then(() => {\n      response.status(HttpStatus.OK).json({\n        statusCode: HttpStatus.OK,\n        message: this.i18nService.translate(\n          'translations.market.controller.comment_added',\n          {\n            lang,\n          },\n        ),\n      });\n    });\n  }\n\n  @Put('/add/reaction')\n  public async AddReaction(\n    @Body() reactionAddMarketDto: ReactionAddMarketDto,\n    @Res() response,\n    @I18nLang() lang: string,\n  ) {\n    return await this.marketService\n      .AddReaction(reactionAddMarketDto)\n      .then(() => {\n        response.status(HttpStatus.OK).json({\n          statusCode: HttpStatus.OK,\n          message: this.i18nService.translate(\n            'translations.market.controller.reaction_added',\n            {\n              lang,\n            },\n          ),\n        });\n      });\n  }\n\n  @Delete('/delete/comment')\n  public async RemoveComment(\n    @Body() commentRemoveMarketDto: CommentRemoveMarketDto,\n    @Res() response,\n    @GetUser('id') idUserRequest: string,\n    @I18nLang() lang: string,\n  ) {\n    return await this.marketService\n      .RemoveComment(commentRemoveMarketDto, idUserRequest)\n      .then(() => {\n        response.status(HttpStatus.OK).json({\n          statusCode: HttpStatus.OK,\n          message: this.i18nService.translate(\n            'translations.market.controller.comment_deleted',\n            {\n              lang,\n            },\n          ),\n        });\n      });\n  }\n\n  @Rank(RanksEnum.ADMINISTRATOR, RanksEnum.MODERATOR)\n  @Delete('/delete/buyer')\n  public async RemoveBuyer(\n    @Body() buyerRemoveMarketDto: BuyerRemoveMarketDto,\n    @Res() response,\n    @I18nLang() lang: string,\n  ) {\n    return await this.marketService\n      .RemoveBuyer(buyerRemoveMarketDto)\n      .then(() => {\n        response.status(HttpStatus.OK).json({\n          statusCode: HttpStatus.OK,\n          message: this.i18nService.translate(\n            'translations.market.controller.buyer_deleted',\n            {\n              lang,\n            },\n          ),\n        });\n      });\n  }\n\n  @Delete('/delete/reaction')\n  public async RemoveReaction(\n    @Body() reactionRemoveMarketDto: ReactionRemoveMarketDto,\n    @Res() response,\n    @GetUser('id') idUserRequest: string,\n    @I18nLang() lang: string,\n  ) {\n    return await this.marketService\n      .RemoveReaction(reactionRemoveMarketDto, idUserRequest)\n      .then(() => {\n        response.status(HttpStatus.OK).json({\n          statusCode: HttpStatus.OK,\n          message: this.i18nService.translate(\n            'translations.market.controller.reaction_deleted',\n            {\n              lang,\n            },\n          ),\n        });\n      });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MarketModel.html":{"url":"classes/MarketModel.html","title":"class - MarketModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MarketModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/market/models/market.model.ts\n        \n\n\n            \n                Extends\n            \n            \n                    TimeStamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                author\n                            \n                            \n                                    Public\n                                available\n                            \n                            \n                                    Public\n                                buyers\n                            \n                            \n                                    Public\n                                comments\n                            \n                            \n                                    Public\n                                description\n                            \n                            \n                                    Public\n                                device\n                            \n                            \n                                    Public\n                                discount\n                            \n                            \n                                    Public\n                                ip\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                price\n                            \n                            \n                                    Public\n                                reactions\n                            \n                            \n                                    Public\n                                status\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            author\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, ref: 'Users'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/market/models/market.model.ts:74\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            available\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/market/models/market.model.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            buyers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     BuyerMarket[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @arrayProp({items: BuyerMarket})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/market/models/market.model.ts:62\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            comments\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     CommentMarket[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @arrayProp({items: CommentMarket})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/market/models/market.model.ts:65\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, minlength: 100, maxlength: 1000})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/market/models/market.model.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            device\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string | number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/market/models/market.model.ts:59\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            discount\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         DiscountMarket\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, _id: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/market/models/market.model.ts:53\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ip\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/market/models/market.model.ts:56\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, minlength: 10, maxlength: 30})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/market/models/market.model.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            price\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, min: 1, max: 9999})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/market/models/market.model.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            reactions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ReactionsMarket[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @arrayProp({items: ReactionsMarket})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/market/models/market.model.ts:68\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/market/models/market.model.ts:50\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  modelOptions,\n  prop,\n  Ref,\n  arrayProp,\n  index,\n} from '@typegoose/typegoose';\nimport { TimeStamps } from '@typegoose/typegoose/lib/defaultClasses';\nimport { UserModel } from 'src/modules/user/models/user.model';\nimport {\n  DiscountMarket,\n  BuyerMarket,\n  CommentMarket,\n  ReactionsMarket,\n} from './market.data.model';\n\n@modelOptions({\n  options: {\n    customName: 'Market',\n  },\n  schemaOptions: {\n    collection: 'market',\n  },\n})\n@index(\n  {\n    'buyer.device': 1,\n    'buyer.ip': 1,\n    'buyer.user._id': 1,\n    'reactions.device': 1,\n    'reactions.ip': 1,\n    'reactions.user._id': 1,\n  },\n  { unique: true },\n)\nexport class MarketModel extends TimeStamps {\n  @prop({ required: true, minlength: 10, maxlength: 30 })\n  public name: string;\n\n  @prop({ required: true, minlength: 100, maxlength: 1000 })\n  public description: string;\n\n  @prop({ required: true, min: 1, max: 9999 })\n  public price: number;\n\n  @prop({ required: true })\n  public available: boolean;\n\n  @prop({ required: true })\n  public status: boolean;\n\n  @prop({ required: true, _id: false })\n  public discount: DiscountMarket;\n\n  @prop({ required: true })\n  public ip: string;\n\n  @prop({ required: true })\n  public device: string | number;\n\n  @arrayProp({ items: BuyerMarket })\n  public buyers: BuyerMarket[];\n\n  @arrayProp({ items: CommentMarket })\n  public comments: CommentMarket[];\n\n  @arrayProp({ items: ReactionsMarket })\n  public reactions: ReactionsMarket[];\n\n  @prop({\n    required: true,\n    ref: 'Users',\n  })\n  public author: Ref;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MarketModule.html":{"url":"modules/MarketModule.html","title":"module - MarketModule","body":"\n                   \n\n\n\n\n    Modules\n    MarketModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MarketModule\n\n\n\ncluster_MarketModule_imports\n\n\n\ncluster_MarketModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nMarketModule\n\nMarketModule\n\nMarketModule -->\n\nAuthModule->MarketModule\n\n\n\n\n\nMarketService\n\nMarketService\n\nMarketModule -->\n\nMarketService->MarketModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/market/market.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            MarketService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            MarketController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MarketController } from './market.controller';\nimport { MarketService } from './market.service';\nimport { MarketModel } from './models/market.model';\nimport { TypegooseModule } from 'nestjs-typegoose';\nimport { AuthModule } from '../../auth/auth.module';\n\n@Module({\n  imports: [TypegooseModule.forFeature([MarketModel]), AuthModule],\n  controllers: [MarketController],\n  providers: [MarketService],\n})\nexport class MarketModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MarketService.html":{"url":"injectables/MarketService.html","title":"injectable - MarketService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MarketService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/market/market.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                AddBuyerToProduct\n                            \n                            \n                                    Public\n                                    Async\n                                AddComment\n                            \n                            \n                                    Public\n                                    Async\n                                AddProduct\n                            \n                            \n                                    Public\n                                    Async\n                                AddReaction\n                            \n                            \n                                    Public\n                                    Async\n                                GetAllProducts\n                            \n                            \n                                    Public\n                                    Async\n                                GetProduct\n                            \n                            \n                                    Public\n                                    Async\n                                RemoveBuyer\n                            \n                            \n                                    Public\n                                    Async\n                                RemoveComment\n                            \n                            \n                                    Public\n                                    Async\n                                RemoveReaction\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(marketModel: ReturnModelType<>, i18nService: I18nRequestScopeService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/market/market.service.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        marketModel\n                                                  \n                                                        \n                                                                    ReturnModelType<>\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        i18nService\n                                                  \n                                                        \n                                                                    I18nRequestScopeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            AddBuyerToProduct\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    AddBuyerToProduct(buyerAddMarketDto: BuyerAddMarketDto)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/market/market.service.ts:146\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    buyerAddMarketDto\n                                    \n                                                BuyerAddMarketDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            AddComment\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    AddComment(commentMarketDto: CommentMarketDto)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/market/market.service.ts:198\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    commentMarketDto\n                                    \n                                                CommentMarketDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            AddProduct\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    AddProduct(marketModel: MarketModel)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/market/market.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    marketModel\n                                    \n                                                MarketModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            AddReaction\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    AddReaction(reactionAddMarketDto: ReactionAddMarketDto)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/market/market.service.ts:251\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    reactionAddMarketDto\n                                    \n                                                ReactionAddMarketDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            GetAllProducts\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    GetAllProducts(filter: number, rankUserRequest: string[], idUserRequest: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/market/market.service.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    rankUserRequest\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    idUserRequest\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            GetProduct\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    GetProduct(productId: string, rankUserRequest: string[], idUserRequest: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/market/market.service.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    productId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    rankUserRequest\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    idUserRequest\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            RemoveBuyer\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    RemoveBuyer(buyerRemoveMarketDto: BuyerRemoveMarketDto)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/market/market.service.ts:377\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    buyerRemoveMarketDto\n                                    \n                                                BuyerRemoveMarketDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            RemoveComment\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    RemoveComment(commentRemoveMarketDto: CommentRemoveMarketDto, idUserRequest: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/market/market.service.ts:304\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    commentRemoveMarketDto\n                                    \n                                                CommentRemoveMarketDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    idUserRequest\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            RemoveReaction\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    RemoveReaction(reactionRemoveMarketDto: ReactionRemoveMarketDto, idUserRequest: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/market/market.service.ts:407\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    reactionRemoveMarketDto\n                                    \n                                                ReactionRemoveMarketDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    idUserRequest\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            logger\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Logger\n\n                        \n                    \n                    \n                        \n                            Default value : new Logger('Market')\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/market/market.service.ts:22\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {\n  Injectable,\n  BadRequestException,\n  ConflictException,\n  NotFoundException,\n  Logger,\n} from '@nestjs/common';\nimport { InjectModel } from 'nestjs-typegoose';\nimport { MarketModel } from './models/market.model';\nimport { ReturnModelType } from '@typegoose/typegoose';\nimport { RanksEnum } from 'src/keys/ranks.enum';\nimport { CommentMarketDto } from './dto/comment.add.dto';\nimport { CommentRemoveMarketDto } from './dto/comment.remove.dto';\nimport { BuyerAddMarketDto } from './dto/buyer.add.dto';\nimport { BuyerRemoveMarketDto } from './dto/buyer.remove.dto';\nimport { ReactionAddMarketDto } from './dto/reaction.add.dto';\nimport { ReactionRemoveMarketDto } from './dto/reaction.remove.dto';\nimport { I18nRequestScopeService } from 'nestjs-i18n';\n\n@Injectable()\nexport class MarketService {\n  private readonly logger: Logger = new Logger('Market');\n\n  constructor(\n    @InjectModel(MarketModel)\n    private readonly marketModel: ReturnModelType,\n    private readonly i18nService: I18nRequestScopeService,\n  ) {}\n\n  public async AddProduct(marketModel: MarketModel) {\n    this.logger.log(\n      `Creating a new product for the market with the name of $ {marketModel.name} with a value of ${marketModel.price} and with a discount of ${marketModel.discount.percentage}%. This product is published by ${marketModel.author} on the device ${marketModel.device} with IP ${marketModel.ip}.`,\n    );\n\n    return await this.marketModel.create(marketModel).catch(() => {\n      this.logger.error(\n        `The product with name ${marketModel.name} could not be processed by user ${marketModel.author} due to a database failure.`,\n      );\n\n      throw new BadRequestException(\n        this.i18nService.translate(\n          'translations.market.service.product_error_added',\n        ),\n      );\n    });\n  }\n\n  public async GetProduct(\n    productId: string,\n    rankUserRequest: string[],\n    idUserRequest: string,\n  ) {\n    this.logger.log(\n      `Obtaining product data ${productId} by user ${idUserRequest}.`,\n    );\n\n    if (\n      !rankUserRequest.includes(RanksEnum.ADMINISTRATOR) &&\n      !rankUserRequest.includes(RanksEnum.MODERATOR)\n    ) {\n      return await this.marketModel\n        .findById(productId)\n        .select([\n          'name',\n          'description',\n          'price',\n          'available',\n          'status',\n          'discount',\n          'author',\n          'buyers',\n          'reactions',\n          'comments',\n          'createdAt',\n          'updatedAt',\n        ])\n        .populate('author', 'name photo rank premium.status')\n        .populate('buyers.user', 'name photo rank premium.status')\n        .populate('reactions.user', 'name photo rank premium.status')\n        .populate('comments.author', 'name photo rank premium.status')\n        .exec();\n    }\n  }\n\n  public async GetAllProducts(\n    filter: number,\n    rankUserRequest: string[],\n    idUserRequest: string,\n  ) {\n    let order = '-createdAt';\n\n    this.logger.log(\n      `Obtaining data of all products with the filter ${filter} by the user ${idUserRequest}.`,\n    );\n\n    if (\n      !rankUserRequest.includes(RanksEnum.ADMINISTRATOR) &&\n      !rankUserRequest.includes(RanksEnum.MODERATOR)\n    ) {\n      switch (filter) {\n        case 1:\n          order = '-createdAt';\n          break;\n        case 2:\n          order = '-price';\n          break;\n        case 3:\n          order = '-discount.percentage';\n          break;\n        case 3:\n          order = 'createdAt';\n          break;\n        case 4:\n          order = 'price';\n          break;\n        case 5:\n          order = 'discount.percentage';\n          break;\n      }\n\n      return await this.marketModel\n        .find({})\n        .sort(order)\n        .select([\n          'name',\n          'description',\n          'price',\n          'available',\n          'status',\n          'discount',\n          'author',\n          'buyers',\n          'reactions',\n          'comments',\n          'createdAt',\n          'updatedAt',\n        ])\n        .populate('author', 'name photo rank premium.status')\n        .populate('buyers.user', 'name photo rank premium.status')\n        .populate('reactions.user', 'name photo rank premium.status')\n        .populate('comments.author', 'name photo rank premium.status')\n        .exec();\n    }\n  }\n\n  public async AddBuyerToProduct(buyerAddMarketDto: BuyerAddMarketDto) {\n    let product;\n\n    this.logger.log(\n      `Adding the user ${buyerAddMarketDto.user} as a new buyer of the product ${buyerAddMarketDto.product}.`,\n    );\n\n    try {\n      product = await this.marketModel.findById(buyerAddMarketDto.product);\n    } catch (error) {\n      this.logger.error(\n        `The user ${buyerAddMarketDto.user} could not be added as a new buyer of the product ${buyerAddMarketDto.product} due to an error in the database.`,\n      );\n\n      throw new NotFoundException(\n        this.i18nService.translate(\n          'translations.market.service.product_not_found',\n        ),\n      );\n    }\n\n    if (!product) {\n      this.logger.error(\n        `The user ${buyerAddMarketDto.user} could not be added as a new buyer of the product ${buyerAddMarketDto.product} because the product does not exist.`,\n      );\n\n      throw new NotFoundException(\n        this.i18nService.translate(\n          'translations.market.service.product_not_found',\n        ),\n      );\n    }\n\n    product.buyers.push({\n      user: buyerAddMarketDto.user,\n      device: buyerAddMarketDto.device,\n      ip: buyerAddMarketDto.ip,\n    });\n\n    return await product.save().catch(() => {\n      this.logger.error(\n        `The user ${buyerAddMarketDto.user} could not be added as a new buyer of the product ${buyerAddMarketDto.product} because the changes could not be saved.`,\n      );\n\n      throw new BadRequestException(\n        this.i18nService.translate(\n          'translations.market.service.buyer_error_added',\n        ),\n      );\n    });\n  }\n\n  public async AddComment(commentMarketDto: CommentMarketDto) {\n    let product;\n\n    this.logger.log(\n      `Adding a new comment for ${commentMarketDto.user} to the product ${commentMarketDto.product}.`,\n    );\n\n    try {\n      product = await this.marketModel.findById(commentMarketDto.product);\n    } catch (error) {\n      this.logger.error(\n        `A new comment for ${commentMarketDto.user} could not be added to the product ${commentMarketDto.product} due to a system error.`,\n      );\n\n      throw new NotFoundException(\n        this.i18nService.translate(\n          'translations.market.service.product_not_found',\n        ),\n      );\n    }\n\n    if (!product) {\n      this.logger.error(\n        `A new comment for ${commentMarketDto.user} could not be added to the product ${commentMarketDto.product} because the product does not exist.`,\n      );\n\n      throw new NotFoundException(\n        this.i18nService.translate(\n          'translations.market.service.product_not_found',\n        ),\n      );\n    }\n\n    product.comments.push({\n      author: commentMarketDto.user,\n      device: commentMarketDto.device,\n      ip: commentMarketDto.ip,\n      content: commentMarketDto.content,\n    });\n\n    return await product.save().catch(() => {\n      this.logger.error(\n        `A new comment for ${commentMarketDto.user} could not be added to the product ${commentMarketDto.product} because the changes could not be saved.`,\n      );\n\n      throw new BadRequestException(\n        this.i18nService.translate(\n          'translations.market.service.comment_error_added',\n        ),\n      );\n    });\n  }\n\n  public async AddReaction(reactionAddMarketDto: ReactionAddMarketDto) {\n    let product;\n\n    this.logger.log(\n      `Adding a new reaction for ${reactionAddMarketDto.user} to the product ${reactionAddMarketDto.product}.`,\n    );\n\n    try {\n      product = await this.marketModel.findById(reactionAddMarketDto.product);\n    } catch (error) {\n      this.logger.error(\n        `A new reaction for ${reactionAddMarketDto.user} could not be added to the product ${reactionAddMarketDto.product} due to an error in the database.`,\n      );\n\n      throw new NotFoundException(\n        this.i18nService.translate(\n          'translations.market.service.product_not_found',\n        ),\n      );\n    }\n\n    if (!product) {\n      this.logger.error(\n        `A new reaction for ${reactionAddMarketDto.user} could not be added to the product ${reactionAddMarketDto.product} because the product does not exist.`,\n      );\n\n      throw new NotFoundException(\n        this.i18nService.translate(\n          'translations.market.service.product_not_found',\n        ),\n      );\n    }\n\n    product.reactions.push({\n      user: reactionAddMarketDto.user,\n      device: reactionAddMarketDto.device,\n      ip: reactionAddMarketDto.ip,\n      type: reactionAddMarketDto.type,\n    });\n\n    return await product.save().catch(() => {\n      this.logger.error(\n        `A new reaction for ${reactionAddMarketDto.user} could not be added to the product ${reactionAddMarketDto.product} because the changes could not be saved.`,\n      );\n\n      throw new BadRequestException(\n        this.i18nService.translate(\n          'translations.market.service.reaction_error_added',\n        ),\n      );\n    });\n  }\n\n  public async RemoveComment(\n    commentRemoveMarketDto: CommentRemoveMarketDto,\n    idUserRequest: string,\n  ) {\n    let product;\n\n    this.logger.log(\n      `Deleting comment by ${commentRemoveMarketDto.author} in the product ${commentRemoveMarketDto.product}.`,\n    );\n\n    try {\n      product = await this.marketModel.findById(commentRemoveMarketDto.product);\n    } catch (error) {\n      this.logger.error(\n        `Could not delete comment for ${commentRemoveMarketDto.author} in product ${commentRemoveMarketDto.product} due to an error in the database.`,\n      );\n\n      throw new NotFoundException(\n        this.i18nService.translate(\n          'translations.market.service.product_not_found',\n        ),\n      );\n    }\n\n    if (!product) {\n      this.logger.error(\n        `Could not delete comment for ${commentRemoveMarketDto.author} in product ${commentRemoveMarketDto.product} because the product does not exist.`,\n      );\n\n      throw new NotFoundException(\n        this.i18nService.translate(\n          'translations.market.service.product_not_found',\n        ),\n      );\n    }\n\n    if (idUserRequest !== product.reaction.user) {\n      this.logger.error(\n        `Could not delete comment for ${commentRemoveMarketDto.author} on product ${commentRemoveMarketDto.product} because user ${idUserRequest} is not the author of the comment.`,\n      );\n\n      throw new ConflictException(\n        this.i18nService.translate(\n          'translations.market.service.comment_only_delete_owned',\n        ),\n      );\n    }\n\n    return await this.marketModel\n      .findOneAndUpdate(\n        commentRemoveMarketDto.product,\n        {\n          $pull: {\n            comments: {\n              author: commentRemoveMarketDto.author,\n            },\n          },\n        },\n        { new: true },\n      )\n      .catch(() => {\n        this.logger.error(\n          `Could not delete comment for ${commentRemoveMarketDto.author} in product ${commentRemoveMarketDto.product} because the changes could not be saved.`,\n        );\n\n        throw new BadRequestException(\n          this.i18nService.translate(\n            'translations.market.service.comment_error_deleted',\n          ),\n        );\n      });\n  }\n\n  public async RemoveBuyer(buyerRemoveMarketDto: BuyerRemoveMarketDto) {\n    this.logger.log(\n      `Removing buyer ${buyerRemoveMarketDto.user} from product ${buyerRemoveMarketDto.product}.`,\n    );\n\n    return await this.marketModel\n      .findOneAndUpdate(\n        buyerRemoveMarketDto.product,\n        {\n          $pull: {\n            buyers: {\n              user: buyerRemoveMarketDto.user,\n            },\n          },\n        },\n        { new: true },\n      )\n      .catch(() => {\n        this.logger.error(\n          `Could not remove buyer ${buyerRemoveMarketDto.user} from product ${buyerRemoveMarketDto.product} because the changes could not be saved.`,\n        );\n\n        throw new BadRequestException(\n          this.i18nService.translate(\n            'translations.market.service.buyer_error_deleted',\n          ),\n        );\n      });\n  }\n\n  public async RemoveReaction(\n    reactionRemoveMarketDto: ReactionRemoveMarketDto,\n    idUserRequest: string,\n  ) {\n    let product;\n\n    this.logger.log(\n      `Eliminating reaction for ${reactionRemoveMarketDto.user} in the product ${reactionRemoveMarketDto.product}.`,\n    );\n\n    try {\n      product = await this.marketModel.findById(\n        reactionRemoveMarketDto.product,\n      );\n    } catch (error) {\n      this.logger.error(\n        `The reaction could not be deleted for ${reactionRemoveMarketDto.user} in product ${reactionRemoveMarketDto.product} due to a database failure.`,\n      );\n\n      throw new NotFoundException(\n        this.i18nService.translate(\n          'translations.market.service.product_not_found',\n        ),\n      );\n    }\n\n    if (!product) {\n      this.logger.error(\n        `The reaction could not be removed for ${reactionRemoveMarketDto.user} in the product ${reactionRemoveMarketDto.product} because the product does not exist.`,\n      );\n\n      throw new NotFoundException(\n        this.i18nService.translate(\n          'translations.market.service.product_not_found',\n        ),\n      );\n    }\n\n    if (idUserRequest !== product.reaction.user) {\n      this.logger.error(\n        `The reaction could not be deleted for ${reactionRemoveMarketDto.user} in the product ${reactionRemoveMarketDto.product} because the user ${idUserRequest} is not the author of the reaction.`,\n      );\n\n      throw new ConflictException(\n        this.i18nService.translate(\n          'translations.market.service.reaction_only_delete_owned',\n        ),\n      );\n    }\n\n    return await this.marketModel\n      .findOneAndUpdate(\n        reactionRemoveMarketDto.product,\n        {\n          $pull: {\n            reactions: {\n              user: reactionRemoveMarketDto.user,\n            },\n          },\n        },\n        { new: true },\n      )\n      .catch(() => {\n        this.logger.error(\n          `The reaction could not be deleted for ${reactionRemoveMarketDto.user} in the product ${reactionRemoveMarketDto.product} because the changes could not be saved.`,\n        );\n\n        throw new BadRequestException(\n          this.i18nService.translate(\n            'translations.market.service.reaction_error_deleted',\n          ),\n        );\n      });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Membership.html":{"url":"classes/Membership.html","title":"class - Membership","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Membership\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/dto/user.dto.data.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                expiration\n                            \n                            \n                                    Public\n                                status\n                            \n                            \n                                    Public\n                                transaction\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            expiration\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/dto/user.dto.data.ts:62\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            status\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/modules/user/dto/user.dto.data.ts:60\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            transaction\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/dto/user.dto.data.ts:64\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Market {\n  public description: string;\n\n  public price: number;\n\n  public type: number;\n\n  public discount: number;\n\n  public seller: string;\n\n  public device: number;\n\n  public ip: string;\n\n  public market: number;\n}\n\nexport class Reactions {\n  public author: string;\n\n  public type: number;\n}\n\nexport class Suspension {\n  public status: boolean;\n\n  public reason: string;\n}\n\nexport class Stats {\n  public spent: number;\n\n  public won: number;\n\n  public rewards: number;\n\n  public rep: number;\n\n  public exp: number;\n}\n\nexport class Security {\n  public enabled: boolean;\n\n  public code1: number;\n\n  public code2: number;\n\n  public code3: number;\n\n  public code4: number;\n\n  public code5: number;\n\n  public twofactor: number;\n}\n\nexport class Membership {\n  public status: false;\n\n  public expiration: Date;\n\n  public transaction: Date;\n}\n\nexport class Rank {\n  public seller: boolean;\n\n  public mod: boolean;\n\n  public admin: boolean;\n}\n\nexport class Notifications {\n  public social: boolean;\n\n  public market: boolean;\n\n  public message: boolean;\n}\n\nexport class Online {\n  public online: boolean;\n\n  public mode: number;\n\n  public last: Date;\n}\n\nexport class Sessions {\n  // tslint:disable-next-line\n  public _id?: string;\n\n  public device: string | number;\n\n  public ip: string;\n\n  public twofactor: boolean;\n}\n\nexport class Email {\n  public key: string;\n\n  public status: boolean;\n\n  public token: string;\n\n  public expiration?: Date;\n}\n\nexport class Password {\n  public key: string;\n\n  public status?: boolean;\n\n  public token?: string;\n\n  public expiration?: Date;\n}\n\nexport class TransactionBuyer {\n  public id: string;\n\n  public ip: string;\n\n  public device: string;\n}\nexport class Transaction {\n  // tslint:disable-next-line\n  public _id?: string;\n\n  public seller: string;\n\n  public buyer: TransactionBuyer;\n\n  public item: string;\n\n  public type: number;\n\n  public price: number;\n\n  public discount: number;\n\n  public market: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Membership-1.html":{"url":"classes/Membership-1.html","title":"class - Membership-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Membership\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/models/user.model.data.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                expiration\n                            \n                            \n                                    Public\n                                status\n                            \n                            \n                                    Public\n                                transaction\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            expiration\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/models/user.model.data.ts:75\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/models/user.model.data.ts:72\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            transaction\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/models/user.model.data.ts:78\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { prop, index } from '@typegoose/typegoose';\nimport { TimeStamps } from '@typegoose/typegoose/lib/defaultClasses';\n\nexport class Reactions {\n  /*@prop({\n    required: true,\n    lowercase: true,\n    trim: true,\n  })\n  public author: string;*/\n\n  @prop({ required: true, min: 0, max: 1 })\n  public type: number;\n}\n\nexport class Suspension {\n  @prop({ required: true, default: false })\n  public status: boolean;\n\n  @prop({\n    required: true,\n    default:\n      '[System]: The reason for suspension has not been specified. Please contact us for more information.',\n    minlength: 90,\n    maxlength: 200,\n  })\n  public reason: string;\n}\n\nexport class Stats {\n  @prop({ required: true, default: 0 })\n  public spent: number;\n\n  @prop({ required: true, default: 0 })\n  public won: number;\n\n  @prop({ required: true, default: 0 })\n  public rewards: number;\n\n  @prop({ required: true, default: 0 })\n  public rep: number;\n\n  @prop({ required: true, default: 0 })\n  public exp: number;\n}\n\nexport class Security {\n  @prop({ required: true, default: false })\n  public enabled: boolean;\n\n  @prop({ required: true, default: 0 })\n  public code1: number;\n\n  @prop({ required: true, default: 0 })\n  public code2: number;\n\n  @prop({ required: true, default: 0 })\n  public code3: number;\n\n  @prop({ required: true, default: 0 })\n  public code4: number;\n\n  @prop({ required: true, default: 0 })\n  public code5: number;\n\n  @prop({ required: true, default: 0 })\n  public twofactor: number;\n}\n\nexport class Membership {\n  @prop({ required: true, default: false })\n  public status: false;\n\n  @prop({ required: true, default: Date.now() })\n  public expiration: Date;\n\n  @prop({ required: true, default: Date.now() })\n  public transaction: Date;\n}\n\nexport class Rank {\n  @prop({ required: true, default: false })\n  public seller: boolean;\n\n  @prop({ required: true, default: false })\n  public mod: boolean;\n\n  @prop({ required: true, default: false })\n  public admin: boolean;\n}\n\nexport class Notifications {\n  @prop({ required: true, default: false })\n  public social: boolean;\n\n  @prop({ required: true, default: false })\n  public market: boolean;\n\n  @prop({ required: true, default: false })\n  public message: boolean;\n}\n\nexport class Online {\n  @prop({ required: true, default: false })\n  public online: boolean;\n\n  @prop({ required: true, default: 0 })\n  public mode: number;\n\n  @prop({ required: true, default: Date.now() })\n  public last: Date;\n}\n\n@index({ device: 1, ip: 1 }, { unique: true })\nexport class Sessions extends TimeStamps {\n  // tslint:disable-next-line\n  public _id?: string;\n\n  @prop({ required: true })\n  public device: string | number;\n\n  @prop({ required: true })\n  public ip: string;\n\n  @prop({ required: true, default: false })\n  public twofactor: boolean;\n}\n\nexport class Email {\n  @prop({ required: true, trim: true })\n  public key: string;\n\n  @prop({ required: true, default: false })\n  public status: boolean;\n\n  @prop({ required: true })\n  public token: string;\n\n  @prop({ required: true, default: Date.now() })\n  public expiration?: Date;\n}\n\nexport class Password {\n  @prop({ required: true, trim: true })\n  public key: string;\n\n  @prop({ required: true, default: true })\n  public status?: boolean;\n\n  @prop({ required: true })\n  public token?: string;\n\n  @prop({ required: true, default: Date.now() })\n  public expiration?: Date;\n}\n\nexport class TransactionBuyer {\n  @prop({ required: true })\n  public id: string;\n\n  @prop({ required: true })\n  public ip: string;\n\n  @prop({ required: true })\n  public device: string;\n}\n\nexport class Transaction extends TimeStamps {\n  // tslint:disable-next-line\n  public _id?: string;\n\n  @prop({ required: true })\n  public seller: string;\n\n  @prop({ default: new TransactionBuyer(), _id: false })\n  public buyer: TransactionBuyer;\n\n  @prop({ required: true })\n  public item: string;\n\n  @prop({ required: true })\n  public type: number;\n\n  @prop({ required: true })\n  public price: number;\n\n  @prop({ required: true })\n  public discount: number;\n\n  @prop({ required: true })\n  public market: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Notifications.html":{"url":"classes/Notifications.html","title":"class - Notifications","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Notifications\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/dto/user.dto.data.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                market\n                            \n                            \n                                    Public\n                                message\n                            \n                            \n                                    Public\n                                social\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            market\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/dto/user.dto.data.ts:78\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            message\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/dto/user.dto.data.ts:80\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            social\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/dto/user.dto.data.ts:76\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Market {\n  public description: string;\n\n  public price: number;\n\n  public type: number;\n\n  public discount: number;\n\n  public seller: string;\n\n  public device: number;\n\n  public ip: string;\n\n  public market: number;\n}\n\nexport class Reactions {\n  public author: string;\n\n  public type: number;\n}\n\nexport class Suspension {\n  public status: boolean;\n\n  public reason: string;\n}\n\nexport class Stats {\n  public spent: number;\n\n  public won: number;\n\n  public rewards: number;\n\n  public rep: number;\n\n  public exp: number;\n}\n\nexport class Security {\n  public enabled: boolean;\n\n  public code1: number;\n\n  public code2: number;\n\n  public code3: number;\n\n  public code4: number;\n\n  public code5: number;\n\n  public twofactor: number;\n}\n\nexport class Membership {\n  public status: false;\n\n  public expiration: Date;\n\n  public transaction: Date;\n}\n\nexport class Rank {\n  public seller: boolean;\n\n  public mod: boolean;\n\n  public admin: boolean;\n}\n\nexport class Notifications {\n  public social: boolean;\n\n  public market: boolean;\n\n  public message: boolean;\n}\n\nexport class Online {\n  public online: boolean;\n\n  public mode: number;\n\n  public last: Date;\n}\n\nexport class Sessions {\n  // tslint:disable-next-line\n  public _id?: string;\n\n  public device: string | number;\n\n  public ip: string;\n\n  public twofactor: boolean;\n}\n\nexport class Email {\n  public key: string;\n\n  public status: boolean;\n\n  public token: string;\n\n  public expiration?: Date;\n}\n\nexport class Password {\n  public key: string;\n\n  public status?: boolean;\n\n  public token?: string;\n\n  public expiration?: Date;\n}\n\nexport class TransactionBuyer {\n  public id: string;\n\n  public ip: string;\n\n  public device: string;\n}\nexport class Transaction {\n  // tslint:disable-next-line\n  public _id?: string;\n\n  public seller: string;\n\n  public buyer: TransactionBuyer;\n\n  public item: string;\n\n  public type: number;\n\n  public price: number;\n\n  public discount: number;\n\n  public market: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Notifications-1.html":{"url":"classes/Notifications-1.html","title":"class - Notifications-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Notifications\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/models/user.model.data.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                market\n                            \n                            \n                                    Public\n                                message\n                            \n                            \n                                    Public\n                                social\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            market\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/models/user.model.data.ts:97\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            message\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/models/user.model.data.ts:100\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            social\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/models/user.model.data.ts:94\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { prop, index } from '@typegoose/typegoose';\nimport { TimeStamps } from '@typegoose/typegoose/lib/defaultClasses';\n\nexport class Reactions {\n  /*@prop({\n    required: true,\n    lowercase: true,\n    trim: true,\n  })\n  public author: string;*/\n\n  @prop({ required: true, min: 0, max: 1 })\n  public type: number;\n}\n\nexport class Suspension {\n  @prop({ required: true, default: false })\n  public status: boolean;\n\n  @prop({\n    required: true,\n    default:\n      '[System]: The reason for suspension has not been specified. Please contact us for more information.',\n    minlength: 90,\n    maxlength: 200,\n  })\n  public reason: string;\n}\n\nexport class Stats {\n  @prop({ required: true, default: 0 })\n  public spent: number;\n\n  @prop({ required: true, default: 0 })\n  public won: number;\n\n  @prop({ required: true, default: 0 })\n  public rewards: number;\n\n  @prop({ required: true, default: 0 })\n  public rep: number;\n\n  @prop({ required: true, default: 0 })\n  public exp: number;\n}\n\nexport class Security {\n  @prop({ required: true, default: false })\n  public enabled: boolean;\n\n  @prop({ required: true, default: 0 })\n  public code1: number;\n\n  @prop({ required: true, default: 0 })\n  public code2: number;\n\n  @prop({ required: true, default: 0 })\n  public code3: number;\n\n  @prop({ required: true, default: 0 })\n  public code4: number;\n\n  @prop({ required: true, default: 0 })\n  public code5: number;\n\n  @prop({ required: true, default: 0 })\n  public twofactor: number;\n}\n\nexport class Membership {\n  @prop({ required: true, default: false })\n  public status: false;\n\n  @prop({ required: true, default: Date.now() })\n  public expiration: Date;\n\n  @prop({ required: true, default: Date.now() })\n  public transaction: Date;\n}\n\nexport class Rank {\n  @prop({ required: true, default: false })\n  public seller: boolean;\n\n  @prop({ required: true, default: false })\n  public mod: boolean;\n\n  @prop({ required: true, default: false })\n  public admin: boolean;\n}\n\nexport class Notifications {\n  @prop({ required: true, default: false })\n  public social: boolean;\n\n  @prop({ required: true, default: false })\n  public market: boolean;\n\n  @prop({ required: true, default: false })\n  public message: boolean;\n}\n\nexport class Online {\n  @prop({ required: true, default: false })\n  public online: boolean;\n\n  @prop({ required: true, default: 0 })\n  public mode: number;\n\n  @prop({ required: true, default: Date.now() })\n  public last: Date;\n}\n\n@index({ device: 1, ip: 1 }, { unique: true })\nexport class Sessions extends TimeStamps {\n  // tslint:disable-next-line\n  public _id?: string;\n\n  @prop({ required: true })\n  public device: string | number;\n\n  @prop({ required: true })\n  public ip: string;\n\n  @prop({ required: true, default: false })\n  public twofactor: boolean;\n}\n\nexport class Email {\n  @prop({ required: true, trim: true })\n  public key: string;\n\n  @prop({ required: true, default: false })\n  public status: boolean;\n\n  @prop({ required: true })\n  public token: string;\n\n  @prop({ required: true, default: Date.now() })\n  public expiration?: Date;\n}\n\nexport class Password {\n  @prop({ required: true, trim: true })\n  public key: string;\n\n  @prop({ required: true, default: true })\n  public status?: boolean;\n\n  @prop({ required: true })\n  public token?: string;\n\n  @prop({ required: true, default: Date.now() })\n  public expiration?: Date;\n}\n\nexport class TransactionBuyer {\n  @prop({ required: true })\n  public id: string;\n\n  @prop({ required: true })\n  public ip: string;\n\n  @prop({ required: true })\n  public device: string;\n}\n\nexport class Transaction extends TimeStamps {\n  // tslint:disable-next-line\n  public _id?: string;\n\n  @prop({ required: true })\n  public seller: string;\n\n  @prop({ default: new TransactionBuyer(), _id: false })\n  public buyer: TransactionBuyer;\n\n  @prop({ required: true })\n  public item: string;\n\n  @prop({ required: true })\n  public type: number;\n\n  @prop({ required: true })\n  public price: number;\n\n  @prop({ required: true })\n  public discount: number;\n\n  @prop({ required: true })\n  public market: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Online.html":{"url":"classes/Online.html","title":"class - Online","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Online\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/dto/user.dto.data.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                last\n                            \n                            \n                                    Public\n                                mode\n                            \n                            \n                                    Public\n                                online\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            last\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/dto/user.dto.data.ts:88\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            mode\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/dto/user.dto.data.ts:86\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            online\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/dto/user.dto.data.ts:84\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Market {\n  public description: string;\n\n  public price: number;\n\n  public type: number;\n\n  public discount: number;\n\n  public seller: string;\n\n  public device: number;\n\n  public ip: string;\n\n  public market: number;\n}\n\nexport class Reactions {\n  public author: string;\n\n  public type: number;\n}\n\nexport class Suspension {\n  public status: boolean;\n\n  public reason: string;\n}\n\nexport class Stats {\n  public spent: number;\n\n  public won: number;\n\n  public rewards: number;\n\n  public rep: number;\n\n  public exp: number;\n}\n\nexport class Security {\n  public enabled: boolean;\n\n  public code1: number;\n\n  public code2: number;\n\n  public code3: number;\n\n  public code4: number;\n\n  public code5: number;\n\n  public twofactor: number;\n}\n\nexport class Membership {\n  public status: false;\n\n  public expiration: Date;\n\n  public transaction: Date;\n}\n\nexport class Rank {\n  public seller: boolean;\n\n  public mod: boolean;\n\n  public admin: boolean;\n}\n\nexport class Notifications {\n  public social: boolean;\n\n  public market: boolean;\n\n  public message: boolean;\n}\n\nexport class Online {\n  public online: boolean;\n\n  public mode: number;\n\n  public last: Date;\n}\n\nexport class Sessions {\n  // tslint:disable-next-line\n  public _id?: string;\n\n  public device: string | number;\n\n  public ip: string;\n\n  public twofactor: boolean;\n}\n\nexport class Email {\n  public key: string;\n\n  public status: boolean;\n\n  public token: string;\n\n  public expiration?: Date;\n}\n\nexport class Password {\n  public key: string;\n\n  public status?: boolean;\n\n  public token?: string;\n\n  public expiration?: Date;\n}\n\nexport class TransactionBuyer {\n  public id: string;\n\n  public ip: string;\n\n  public device: string;\n}\nexport class Transaction {\n  // tslint:disable-next-line\n  public _id?: string;\n\n  public seller: string;\n\n  public buyer: TransactionBuyer;\n\n  public item: string;\n\n  public type: number;\n\n  public price: number;\n\n  public discount: number;\n\n  public market: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Online-1.html":{"url":"classes/Online-1.html","title":"class - Online-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Online\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/models/user.model.data.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                last\n                            \n                            \n                                    Public\n                                mode\n                            \n                            \n                                    Public\n                                online\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            last\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/models/user.model.data.ts:111\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            mode\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: 0})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/models/user.model.data.ts:108\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            online\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/models/user.model.data.ts:105\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { prop, index } from '@typegoose/typegoose';\nimport { TimeStamps } from '@typegoose/typegoose/lib/defaultClasses';\n\nexport class Reactions {\n  /*@prop({\n    required: true,\n    lowercase: true,\n    trim: true,\n  })\n  public author: string;*/\n\n  @prop({ required: true, min: 0, max: 1 })\n  public type: number;\n}\n\nexport class Suspension {\n  @prop({ required: true, default: false })\n  public status: boolean;\n\n  @prop({\n    required: true,\n    default:\n      '[System]: The reason for suspension has not been specified. Please contact us for more information.',\n    minlength: 90,\n    maxlength: 200,\n  })\n  public reason: string;\n}\n\nexport class Stats {\n  @prop({ required: true, default: 0 })\n  public spent: number;\n\n  @prop({ required: true, default: 0 })\n  public won: number;\n\n  @prop({ required: true, default: 0 })\n  public rewards: number;\n\n  @prop({ required: true, default: 0 })\n  public rep: number;\n\n  @prop({ required: true, default: 0 })\n  public exp: number;\n}\n\nexport class Security {\n  @prop({ required: true, default: false })\n  public enabled: boolean;\n\n  @prop({ required: true, default: 0 })\n  public code1: number;\n\n  @prop({ required: true, default: 0 })\n  public code2: number;\n\n  @prop({ required: true, default: 0 })\n  public code3: number;\n\n  @prop({ required: true, default: 0 })\n  public code4: number;\n\n  @prop({ required: true, default: 0 })\n  public code5: number;\n\n  @prop({ required: true, default: 0 })\n  public twofactor: number;\n}\n\nexport class Membership {\n  @prop({ required: true, default: false })\n  public status: false;\n\n  @prop({ required: true, default: Date.now() })\n  public expiration: Date;\n\n  @prop({ required: true, default: Date.now() })\n  public transaction: Date;\n}\n\nexport class Rank {\n  @prop({ required: true, default: false })\n  public seller: boolean;\n\n  @prop({ required: true, default: false })\n  public mod: boolean;\n\n  @prop({ required: true, default: false })\n  public admin: boolean;\n}\n\nexport class Notifications {\n  @prop({ required: true, default: false })\n  public social: boolean;\n\n  @prop({ required: true, default: false })\n  public market: boolean;\n\n  @prop({ required: true, default: false })\n  public message: boolean;\n}\n\nexport class Online {\n  @prop({ required: true, default: false })\n  public online: boolean;\n\n  @prop({ required: true, default: 0 })\n  public mode: number;\n\n  @prop({ required: true, default: Date.now() })\n  public last: Date;\n}\n\n@index({ device: 1, ip: 1 }, { unique: true })\nexport class Sessions extends TimeStamps {\n  // tslint:disable-next-line\n  public _id?: string;\n\n  @prop({ required: true })\n  public device: string | number;\n\n  @prop({ required: true })\n  public ip: string;\n\n  @prop({ required: true, default: false })\n  public twofactor: boolean;\n}\n\nexport class Email {\n  @prop({ required: true, trim: true })\n  public key: string;\n\n  @prop({ required: true, default: false })\n  public status: boolean;\n\n  @prop({ required: true })\n  public token: string;\n\n  @prop({ required: true, default: Date.now() })\n  public expiration?: Date;\n}\n\nexport class Password {\n  @prop({ required: true, trim: true })\n  public key: string;\n\n  @prop({ required: true, default: true })\n  public status?: boolean;\n\n  @prop({ required: true })\n  public token?: string;\n\n  @prop({ required: true, default: Date.now() })\n  public expiration?: Date;\n}\n\nexport class TransactionBuyer {\n  @prop({ required: true })\n  public id: string;\n\n  @prop({ required: true })\n  public ip: string;\n\n  @prop({ required: true })\n  public device: string;\n}\n\nexport class Transaction extends TimeStamps {\n  // tslint:disable-next-line\n  public _id?: string;\n\n  @prop({ required: true })\n  public seller: string;\n\n  @prop({ default: new TransactionBuyer(), _id: false })\n  public buyer: TransactionBuyer;\n\n  @prop({ required: true })\n  public item: string;\n\n  @prop({ required: true })\n  public type: number;\n\n  @prop({ required: true })\n  public price: number;\n\n  @prop({ required: true })\n  public discount: number;\n\n  @prop({ required: true })\n  public market: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Password.html":{"url":"classes/Password.html","title":"class - Password","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Password\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/dto/user.dto.data.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                expiration\n                            \n                            \n                                    Public\n                                key\n                            \n                            \n                                    Public\n                                    Optional\n                                status\n                            \n                            \n                                    Public\n                                    Optional\n                                token\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            expiration\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/dto/user.dto.data.ts:119\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            key\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/dto/user.dto.data.ts:113\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/dto/user.dto.data.ts:115\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/dto/user.dto.data.ts:117\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Market {\n  public description: string;\n\n  public price: number;\n\n  public type: number;\n\n  public discount: number;\n\n  public seller: string;\n\n  public device: number;\n\n  public ip: string;\n\n  public market: number;\n}\n\nexport class Reactions {\n  public author: string;\n\n  public type: number;\n}\n\nexport class Suspension {\n  public status: boolean;\n\n  public reason: string;\n}\n\nexport class Stats {\n  public spent: number;\n\n  public won: number;\n\n  public rewards: number;\n\n  public rep: number;\n\n  public exp: number;\n}\n\nexport class Security {\n  public enabled: boolean;\n\n  public code1: number;\n\n  public code2: number;\n\n  public code3: number;\n\n  public code4: number;\n\n  public code5: number;\n\n  public twofactor: number;\n}\n\nexport class Membership {\n  public status: false;\n\n  public expiration: Date;\n\n  public transaction: Date;\n}\n\nexport class Rank {\n  public seller: boolean;\n\n  public mod: boolean;\n\n  public admin: boolean;\n}\n\nexport class Notifications {\n  public social: boolean;\n\n  public market: boolean;\n\n  public message: boolean;\n}\n\nexport class Online {\n  public online: boolean;\n\n  public mode: number;\n\n  public last: Date;\n}\n\nexport class Sessions {\n  // tslint:disable-next-line\n  public _id?: string;\n\n  public device: string | number;\n\n  public ip: string;\n\n  public twofactor: boolean;\n}\n\nexport class Email {\n  public key: string;\n\n  public status: boolean;\n\n  public token: string;\n\n  public expiration?: Date;\n}\n\nexport class Password {\n  public key: string;\n\n  public status?: boolean;\n\n  public token?: string;\n\n  public expiration?: Date;\n}\n\nexport class TransactionBuyer {\n  public id: string;\n\n  public ip: string;\n\n  public device: string;\n}\nexport class Transaction {\n  // tslint:disable-next-line\n  public _id?: string;\n\n  public seller: string;\n\n  public buyer: TransactionBuyer;\n\n  public item: string;\n\n  public type: number;\n\n  public price: number;\n\n  public discount: number;\n\n  public market: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Password-1.html":{"url":"classes/Password-1.html","title":"class - Password-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Password\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/models/user.model.data.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                expiration\n                            \n                            \n                                    Public\n                                key\n                            \n                            \n                                    Public\n                                    Optional\n                                status\n                            \n                            \n                                    Public\n                                    Optional\n                                token\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            expiration\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/models/user.model.data.ts:154\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            key\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, trim: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/models/user.model.data.ts:145\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/models/user.model.data.ts:148\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/models/user.model.data.ts:151\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { prop, index } from '@typegoose/typegoose';\nimport { TimeStamps } from '@typegoose/typegoose/lib/defaultClasses';\n\nexport class Reactions {\n  /*@prop({\n    required: true,\n    lowercase: true,\n    trim: true,\n  })\n  public author: string;*/\n\n  @prop({ required: true, min: 0, max: 1 })\n  public type: number;\n}\n\nexport class Suspension {\n  @prop({ required: true, default: false })\n  public status: boolean;\n\n  @prop({\n    required: true,\n    default:\n      '[System]: The reason for suspension has not been specified. Please contact us for more information.',\n    minlength: 90,\n    maxlength: 200,\n  })\n  public reason: string;\n}\n\nexport class Stats {\n  @prop({ required: true, default: 0 })\n  public spent: number;\n\n  @prop({ required: true, default: 0 })\n  public won: number;\n\n  @prop({ required: true, default: 0 })\n  public rewards: number;\n\n  @prop({ required: true, default: 0 })\n  public rep: number;\n\n  @prop({ required: true, default: 0 })\n  public exp: number;\n}\n\nexport class Security {\n  @prop({ required: true, default: false })\n  public enabled: boolean;\n\n  @prop({ required: true, default: 0 })\n  public code1: number;\n\n  @prop({ required: true, default: 0 })\n  public code2: number;\n\n  @prop({ required: true, default: 0 })\n  public code3: number;\n\n  @prop({ required: true, default: 0 })\n  public code4: number;\n\n  @prop({ required: true, default: 0 })\n  public code5: number;\n\n  @prop({ required: true, default: 0 })\n  public twofactor: number;\n}\n\nexport class Membership {\n  @prop({ required: true, default: false })\n  public status: false;\n\n  @prop({ required: true, default: Date.now() })\n  public expiration: Date;\n\n  @prop({ required: true, default: Date.now() })\n  public transaction: Date;\n}\n\nexport class Rank {\n  @prop({ required: true, default: false })\n  public seller: boolean;\n\n  @prop({ required: true, default: false })\n  public mod: boolean;\n\n  @prop({ required: true, default: false })\n  public admin: boolean;\n}\n\nexport class Notifications {\n  @prop({ required: true, default: false })\n  public social: boolean;\n\n  @prop({ required: true, default: false })\n  public market: boolean;\n\n  @prop({ required: true, default: false })\n  public message: boolean;\n}\n\nexport class Online {\n  @prop({ required: true, default: false })\n  public online: boolean;\n\n  @prop({ required: true, default: 0 })\n  public mode: number;\n\n  @prop({ required: true, default: Date.now() })\n  public last: Date;\n}\n\n@index({ device: 1, ip: 1 }, { unique: true })\nexport class Sessions extends TimeStamps {\n  // tslint:disable-next-line\n  public _id?: string;\n\n  @prop({ required: true })\n  public device: string | number;\n\n  @prop({ required: true })\n  public ip: string;\n\n  @prop({ required: true, default: false })\n  public twofactor: boolean;\n}\n\nexport class Email {\n  @prop({ required: true, trim: true })\n  public key: string;\n\n  @prop({ required: true, default: false })\n  public status: boolean;\n\n  @prop({ required: true })\n  public token: string;\n\n  @prop({ required: true, default: Date.now() })\n  public expiration?: Date;\n}\n\nexport class Password {\n  @prop({ required: true, trim: true })\n  public key: string;\n\n  @prop({ required: true, default: true })\n  public status?: boolean;\n\n  @prop({ required: true })\n  public token?: string;\n\n  @prop({ required: true, default: Date.now() })\n  public expiration?: Date;\n}\n\nexport class TransactionBuyer {\n  @prop({ required: true })\n  public id: string;\n\n  @prop({ required: true })\n  public ip: string;\n\n  @prop({ required: true })\n  public device: string;\n}\n\nexport class Transaction extends TimeStamps {\n  // tslint:disable-next-line\n  public _id?: string;\n\n  @prop({ required: true })\n  public seller: string;\n\n  @prop({ default: new TransactionBuyer(), _id: false })\n  public buyer: TransactionBuyer;\n\n  @prop({ required: true })\n  public item: string;\n\n  @prop({ required: true })\n  public type: number;\n\n  @prop({ required: true })\n  public price: number;\n\n  @prop({ required: true })\n  public discount: number;\n\n  @prop({ required: true })\n  public market: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Rank.html":{"url":"classes/Rank.html","title":"class - Rank","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Rank\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/dto/user.dto.data.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                admin\n                            \n                            \n                                    Public\n                                mod\n                            \n                            \n                                    Public\n                                seller\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            admin\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/dto/user.dto.data.ts:72\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            mod\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/dto/user.dto.data.ts:70\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            seller\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/dto/user.dto.data.ts:68\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Market {\n  public description: string;\n\n  public price: number;\n\n  public type: number;\n\n  public discount: number;\n\n  public seller: string;\n\n  public device: number;\n\n  public ip: string;\n\n  public market: number;\n}\n\nexport class Reactions {\n  public author: string;\n\n  public type: number;\n}\n\nexport class Suspension {\n  public status: boolean;\n\n  public reason: string;\n}\n\nexport class Stats {\n  public spent: number;\n\n  public won: number;\n\n  public rewards: number;\n\n  public rep: number;\n\n  public exp: number;\n}\n\nexport class Security {\n  public enabled: boolean;\n\n  public code1: number;\n\n  public code2: number;\n\n  public code3: number;\n\n  public code4: number;\n\n  public code5: number;\n\n  public twofactor: number;\n}\n\nexport class Membership {\n  public status: false;\n\n  public expiration: Date;\n\n  public transaction: Date;\n}\n\nexport class Rank {\n  public seller: boolean;\n\n  public mod: boolean;\n\n  public admin: boolean;\n}\n\nexport class Notifications {\n  public social: boolean;\n\n  public market: boolean;\n\n  public message: boolean;\n}\n\nexport class Online {\n  public online: boolean;\n\n  public mode: number;\n\n  public last: Date;\n}\n\nexport class Sessions {\n  // tslint:disable-next-line\n  public _id?: string;\n\n  public device: string | number;\n\n  public ip: string;\n\n  public twofactor: boolean;\n}\n\nexport class Email {\n  public key: string;\n\n  public status: boolean;\n\n  public token: string;\n\n  public expiration?: Date;\n}\n\nexport class Password {\n  public key: string;\n\n  public status?: boolean;\n\n  public token?: string;\n\n  public expiration?: Date;\n}\n\nexport class TransactionBuyer {\n  public id: string;\n\n  public ip: string;\n\n  public device: string;\n}\nexport class Transaction {\n  // tslint:disable-next-line\n  public _id?: string;\n\n  public seller: string;\n\n  public buyer: TransactionBuyer;\n\n  public item: string;\n\n  public type: number;\n\n  public price: number;\n\n  public discount: number;\n\n  public market: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Rank-1.html":{"url":"classes/Rank-1.html","title":"class - Rank-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Rank\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/models/user.model.data.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                admin\n                            \n                            \n                                    Public\n                                mod\n                            \n                            \n                                    Public\n                                seller\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            admin\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/models/user.model.data.ts:89\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            mod\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/models/user.model.data.ts:86\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            seller\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/models/user.model.data.ts:83\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { prop, index } from '@typegoose/typegoose';\nimport { TimeStamps } from '@typegoose/typegoose/lib/defaultClasses';\n\nexport class Reactions {\n  /*@prop({\n    required: true,\n    lowercase: true,\n    trim: true,\n  })\n  public author: string;*/\n\n  @prop({ required: true, min: 0, max: 1 })\n  public type: number;\n}\n\nexport class Suspension {\n  @prop({ required: true, default: false })\n  public status: boolean;\n\n  @prop({\n    required: true,\n    default:\n      '[System]: The reason for suspension has not been specified. Please contact us for more information.',\n    minlength: 90,\n    maxlength: 200,\n  })\n  public reason: string;\n}\n\nexport class Stats {\n  @prop({ required: true, default: 0 })\n  public spent: number;\n\n  @prop({ required: true, default: 0 })\n  public won: number;\n\n  @prop({ required: true, default: 0 })\n  public rewards: number;\n\n  @prop({ required: true, default: 0 })\n  public rep: number;\n\n  @prop({ required: true, default: 0 })\n  public exp: number;\n}\n\nexport class Security {\n  @prop({ required: true, default: false })\n  public enabled: boolean;\n\n  @prop({ required: true, default: 0 })\n  public code1: number;\n\n  @prop({ required: true, default: 0 })\n  public code2: number;\n\n  @prop({ required: true, default: 0 })\n  public code3: number;\n\n  @prop({ required: true, default: 0 })\n  public code4: number;\n\n  @prop({ required: true, default: 0 })\n  public code5: number;\n\n  @prop({ required: true, default: 0 })\n  public twofactor: number;\n}\n\nexport class Membership {\n  @prop({ required: true, default: false })\n  public status: false;\n\n  @prop({ required: true, default: Date.now() })\n  public expiration: Date;\n\n  @prop({ required: true, default: Date.now() })\n  public transaction: Date;\n}\n\nexport class Rank {\n  @prop({ required: true, default: false })\n  public seller: boolean;\n\n  @prop({ required: true, default: false })\n  public mod: boolean;\n\n  @prop({ required: true, default: false })\n  public admin: boolean;\n}\n\nexport class Notifications {\n  @prop({ required: true, default: false })\n  public social: boolean;\n\n  @prop({ required: true, default: false })\n  public market: boolean;\n\n  @prop({ required: true, default: false })\n  public message: boolean;\n}\n\nexport class Online {\n  @prop({ required: true, default: false })\n  public online: boolean;\n\n  @prop({ required: true, default: 0 })\n  public mode: number;\n\n  @prop({ required: true, default: Date.now() })\n  public last: Date;\n}\n\n@index({ device: 1, ip: 1 }, { unique: true })\nexport class Sessions extends TimeStamps {\n  // tslint:disable-next-line\n  public _id?: string;\n\n  @prop({ required: true })\n  public device: string | number;\n\n  @prop({ required: true })\n  public ip: string;\n\n  @prop({ required: true, default: false })\n  public twofactor: boolean;\n}\n\nexport class Email {\n  @prop({ required: true, trim: true })\n  public key: string;\n\n  @prop({ required: true, default: false })\n  public status: boolean;\n\n  @prop({ required: true })\n  public token: string;\n\n  @prop({ required: true, default: Date.now() })\n  public expiration?: Date;\n}\n\nexport class Password {\n  @prop({ required: true, trim: true })\n  public key: string;\n\n  @prop({ required: true, default: true })\n  public status?: boolean;\n\n  @prop({ required: true })\n  public token?: string;\n\n  @prop({ required: true, default: Date.now() })\n  public expiration?: Date;\n}\n\nexport class TransactionBuyer {\n  @prop({ required: true })\n  public id: string;\n\n  @prop({ required: true })\n  public ip: string;\n\n  @prop({ required: true })\n  public device: string;\n}\n\nexport class Transaction extends TimeStamps {\n  // tslint:disable-next-line\n  public _id?: string;\n\n  @prop({ required: true })\n  public seller: string;\n\n  @prop({ default: new TransactionBuyer(), _id: false })\n  public buyer: TransactionBuyer;\n\n  @prop({ required: true })\n  public item: string;\n\n  @prop({ required: true })\n  public type: number;\n\n  @prop({ required: true })\n  public price: number;\n\n  @prop({ required: true })\n  public discount: number;\n\n  @prop({ required: true })\n  public market: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/RankGuard.html":{"url":"guards/RankGuard.html","title":"guard - RankGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    RankGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/guards/rank.guard.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector)\n                    \n                \n                        \n                            \n                                Defined in src/guards/rank.guard.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/guards/rank.guard.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { CanActivate, ExecutionContext, Injectable } from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\n\n@Injectable()\nexport class RankGuard implements CanActivate {\n  constructor(private readonly reflector: Reflector) {}\n\n  canActivate(context: ExecutionContext): boolean {\n    const ranks: string[] = this.reflector.get(\n      'rank',\n      context.getHandler(),\n    );\n\n    if (!ranks) {\n      return true;\n    }\n\n    const request = context.switchToHttp().getRequest();\n    const { user } = request;\n\n    const hasRole = () =>\n      user.rank.some((rank: string) => ranks.includes(rank));\n\n    return user && user.rank && hasRole();\n  }\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ReactionAddMarketDto.html":{"url":"classes/ReactionAddMarketDto.html","title":"class - ReactionAddMarketDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ReactionAddMarketDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/market/dto/reaction.add.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                device\n                            \n                            \n                                    Public\n                                ip\n                            \n                            \n                                    Public\n                                product\n                            \n                            \n                                    Public\n                                type\n                            \n                            \n                                    Public\n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            device\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string | number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/market/dto/reaction.add.dto.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ip\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/market/dto/reaction.add.dto.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            product\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/market/dto/reaction.add.dto.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/market/dto/reaction.add.dto.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/market/dto/reaction.add.dto.ts:8\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Ref } from '@typegoose/typegoose';\n\nimport { UserModel } from '../../../modules/user/models/user.model';\n\nexport class ReactionAddMarketDto {\n  public product: string;\n\n  public user: Ref;\n\n  public device: string | number;\n\n  public ip: string;\n\n  public type: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ReactionRemoveMarketDto.html":{"url":"classes/ReactionRemoveMarketDto.html","title":"class - ReactionRemoveMarketDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ReactionRemoveMarketDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/market/dto/reaction.remove.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                product\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            product\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/market/dto/reaction.remove.dto.ts:2\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/market/dto/reaction.remove.dto.ts:4\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class ReactionRemoveMarketDto {\n    product: string;\n\n    user: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Reactions.html":{"url":"classes/Reactions.html","title":"class - Reactions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Reactions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/dto/user.dto.data.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                author\n                            \n                            \n                                    Public\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            author\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/dto/user.dto.data.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/dto/user.dto.data.ts:22\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Market {\n  public description: string;\n\n  public price: number;\n\n  public type: number;\n\n  public discount: number;\n\n  public seller: string;\n\n  public device: number;\n\n  public ip: string;\n\n  public market: number;\n}\n\nexport class Reactions {\n  public author: string;\n\n  public type: number;\n}\n\nexport class Suspension {\n  public status: boolean;\n\n  public reason: string;\n}\n\nexport class Stats {\n  public spent: number;\n\n  public won: number;\n\n  public rewards: number;\n\n  public rep: number;\n\n  public exp: number;\n}\n\nexport class Security {\n  public enabled: boolean;\n\n  public code1: number;\n\n  public code2: number;\n\n  public code3: number;\n\n  public code4: number;\n\n  public code5: number;\n\n  public twofactor: number;\n}\n\nexport class Membership {\n  public status: false;\n\n  public expiration: Date;\n\n  public transaction: Date;\n}\n\nexport class Rank {\n  public seller: boolean;\n\n  public mod: boolean;\n\n  public admin: boolean;\n}\n\nexport class Notifications {\n  public social: boolean;\n\n  public market: boolean;\n\n  public message: boolean;\n}\n\nexport class Online {\n  public online: boolean;\n\n  public mode: number;\n\n  public last: Date;\n}\n\nexport class Sessions {\n  // tslint:disable-next-line\n  public _id?: string;\n\n  public device: string | number;\n\n  public ip: string;\n\n  public twofactor: boolean;\n}\n\nexport class Email {\n  public key: string;\n\n  public status: boolean;\n\n  public token: string;\n\n  public expiration?: Date;\n}\n\nexport class Password {\n  public key: string;\n\n  public status?: boolean;\n\n  public token?: string;\n\n  public expiration?: Date;\n}\n\nexport class TransactionBuyer {\n  public id: string;\n\n  public ip: string;\n\n  public device: string;\n}\nexport class Transaction {\n  // tslint:disable-next-line\n  public _id?: string;\n\n  public seller: string;\n\n  public buyer: TransactionBuyer;\n\n  public item: string;\n\n  public type: number;\n\n  public price: number;\n\n  public discount: number;\n\n  public market: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Reactions-1.html":{"url":"classes/Reactions-1.html","title":"class - Reactions-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Reactions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/models/user.model.data.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, min: 0, max: 1})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/models/user.model.data.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { prop, index } from '@typegoose/typegoose';\nimport { TimeStamps } from '@typegoose/typegoose/lib/defaultClasses';\n\nexport class Reactions {\n  /*@prop({\n    required: true,\n    lowercase: true,\n    trim: true,\n  })\n  public author: string;*/\n\n  @prop({ required: true, min: 0, max: 1 })\n  public type: number;\n}\n\nexport class Suspension {\n  @prop({ required: true, default: false })\n  public status: boolean;\n\n  @prop({\n    required: true,\n    default:\n      '[System]: The reason for suspension has not been specified. Please contact us for more information.',\n    minlength: 90,\n    maxlength: 200,\n  })\n  public reason: string;\n}\n\nexport class Stats {\n  @prop({ required: true, default: 0 })\n  public spent: number;\n\n  @prop({ required: true, default: 0 })\n  public won: number;\n\n  @prop({ required: true, default: 0 })\n  public rewards: number;\n\n  @prop({ required: true, default: 0 })\n  public rep: number;\n\n  @prop({ required: true, default: 0 })\n  public exp: number;\n}\n\nexport class Security {\n  @prop({ required: true, default: false })\n  public enabled: boolean;\n\n  @prop({ required: true, default: 0 })\n  public code1: number;\n\n  @prop({ required: true, default: 0 })\n  public code2: number;\n\n  @prop({ required: true, default: 0 })\n  public code3: number;\n\n  @prop({ required: true, default: 0 })\n  public code4: number;\n\n  @prop({ required: true, default: 0 })\n  public code5: number;\n\n  @prop({ required: true, default: 0 })\n  public twofactor: number;\n}\n\nexport class Membership {\n  @prop({ required: true, default: false })\n  public status: false;\n\n  @prop({ required: true, default: Date.now() })\n  public expiration: Date;\n\n  @prop({ required: true, default: Date.now() })\n  public transaction: Date;\n}\n\nexport class Rank {\n  @prop({ required: true, default: false })\n  public seller: boolean;\n\n  @prop({ required: true, default: false })\n  public mod: boolean;\n\n  @prop({ required: true, default: false })\n  public admin: boolean;\n}\n\nexport class Notifications {\n  @prop({ required: true, default: false })\n  public social: boolean;\n\n  @prop({ required: true, default: false })\n  public market: boolean;\n\n  @prop({ required: true, default: false })\n  public message: boolean;\n}\n\nexport class Online {\n  @prop({ required: true, default: false })\n  public online: boolean;\n\n  @prop({ required: true, default: 0 })\n  public mode: number;\n\n  @prop({ required: true, default: Date.now() })\n  public last: Date;\n}\n\n@index({ device: 1, ip: 1 }, { unique: true })\nexport class Sessions extends TimeStamps {\n  // tslint:disable-next-line\n  public _id?: string;\n\n  @prop({ required: true })\n  public device: string | number;\n\n  @prop({ required: true })\n  public ip: string;\n\n  @prop({ required: true, default: false })\n  public twofactor: boolean;\n}\n\nexport class Email {\n  @prop({ required: true, trim: true })\n  public key: string;\n\n  @prop({ required: true, default: false })\n  public status: boolean;\n\n  @prop({ required: true })\n  public token: string;\n\n  @prop({ required: true, default: Date.now() })\n  public expiration?: Date;\n}\n\nexport class Password {\n  @prop({ required: true, trim: true })\n  public key: string;\n\n  @prop({ required: true, default: true })\n  public status?: boolean;\n\n  @prop({ required: true })\n  public token?: string;\n\n  @prop({ required: true, default: Date.now() })\n  public expiration?: Date;\n}\n\nexport class TransactionBuyer {\n  @prop({ required: true })\n  public id: string;\n\n  @prop({ required: true })\n  public ip: string;\n\n  @prop({ required: true })\n  public device: string;\n}\n\nexport class Transaction extends TimeStamps {\n  // tslint:disable-next-line\n  public _id?: string;\n\n  @prop({ required: true })\n  public seller: string;\n\n  @prop({ default: new TransactionBuyer(), _id: false })\n  public buyer: TransactionBuyer;\n\n  @prop({ required: true })\n  public item: string;\n\n  @prop({ required: true })\n  public type: number;\n\n  @prop({ required: true })\n  public price: number;\n\n  @prop({ required: true })\n  public discount: number;\n\n  @prop({ required: true })\n  public market: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ReactionsDto.html":{"url":"classes/ReactionsDto.html","title":"class - ReactionsDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ReactionsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/dto/reactions.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                ofId\n                            \n                            \n                                    Readonly\n                                toId\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            ofId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsString()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/dto/reactions.dto.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            toId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsString()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/dto/reactions.dto.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsString()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/dto/reactions.dto.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsString, IsNotEmpty } from 'class-validator';\n\nexport class ReactionsDto {\n  @IsString()\n  @IsNotEmpty()\n  readonly toId: string;\n\n  @IsString()\n  @IsNotEmpty()\n  readonly ofId: string;\n\n  @IsString()\n  @IsNotEmpty()\n  readonly type: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ReactionsMarket.html":{"url":"classes/ReactionsMarket.html","title":"class - ReactionsMarket","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ReactionsMarket\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/market/models/market.data.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                device\n                            \n                            \n                                    Public\n                                ip\n                            \n                            \n                                    Public\n                                type\n                            \n                            \n                                    Public\n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            device\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string | number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/market/models/market.data.model.ts:51\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ip\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/market/models/market.data.model.ts:54\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/market/models/market.data.model.ts:57\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, ref: 'Users'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/market/models/market.data.model.ts:48\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { prop, Ref } from '@typegoose/typegoose';\nimport { UserModel } from 'src/modules/user/models/user.model';\n\nexport class DiscountMarket {\n  @prop({ required: true, min: 0, max: 99 })\n  public percentage: number;\n\n  @prop({ required: true })\n  public exp: Date;\n}\n\nexport class BuyerMarket {\n  @prop({\n    required: true,\n    ref: 'Users',\n  })\n  public user: Ref;\n\n  @prop({ required: true })\n  public device: string | number;\n\n  @prop({ required: true })\n  public ip: string;\n}\n\nexport class CommentMarket {\n  @prop({\n    required: true,\n    ref: 'Users',\n  })\n  public author: Ref;\n\n  @prop({ required: true })\n  public device: string | number;\n\n  @prop({ required: true })\n  public ip: string;\n\n  @prop({ required: true, minlength: 50, maxlength: 500 })\n  public content: string;\n}\n\nexport class ReactionsMarket {\n  @prop({\n    required: true,\n    ref: 'Users',\n  })\n  public user: Ref;\n\n  @prop({ required: true })\n  public device: string | number;\n\n  @prop({ required: true })\n  public ip: string;\n\n  @prop({ required: true })\n  public type: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Security.html":{"url":"classes/Security.html","title":"class - Security","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Security\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/dto/user.dto.data.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                code1\n                            \n                            \n                                    Public\n                                code2\n                            \n                            \n                                    Public\n                                code3\n                            \n                            \n                                    Public\n                                code4\n                            \n                            \n                                    Public\n                                code5\n                            \n                            \n                                    Public\n                                enabled\n                            \n                            \n                                    Public\n                                twofactor\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            code1\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/dto/user.dto.data.ts:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            code2\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/dto/user.dto.data.ts:48\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            code3\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/dto/user.dto.data.ts:50\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            code4\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/dto/user.dto.data.ts:52\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            code5\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/dto/user.dto.data.ts:54\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            enabled\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/dto/user.dto.data.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            twofactor\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/dto/user.dto.data.ts:56\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Market {\n  public description: string;\n\n  public price: number;\n\n  public type: number;\n\n  public discount: number;\n\n  public seller: string;\n\n  public device: number;\n\n  public ip: string;\n\n  public market: number;\n}\n\nexport class Reactions {\n  public author: string;\n\n  public type: number;\n}\n\nexport class Suspension {\n  public status: boolean;\n\n  public reason: string;\n}\n\nexport class Stats {\n  public spent: number;\n\n  public won: number;\n\n  public rewards: number;\n\n  public rep: number;\n\n  public exp: number;\n}\n\nexport class Security {\n  public enabled: boolean;\n\n  public code1: number;\n\n  public code2: number;\n\n  public code3: number;\n\n  public code4: number;\n\n  public code5: number;\n\n  public twofactor: number;\n}\n\nexport class Membership {\n  public status: false;\n\n  public expiration: Date;\n\n  public transaction: Date;\n}\n\nexport class Rank {\n  public seller: boolean;\n\n  public mod: boolean;\n\n  public admin: boolean;\n}\n\nexport class Notifications {\n  public social: boolean;\n\n  public market: boolean;\n\n  public message: boolean;\n}\n\nexport class Online {\n  public online: boolean;\n\n  public mode: number;\n\n  public last: Date;\n}\n\nexport class Sessions {\n  // tslint:disable-next-line\n  public _id?: string;\n\n  public device: string | number;\n\n  public ip: string;\n\n  public twofactor: boolean;\n}\n\nexport class Email {\n  public key: string;\n\n  public status: boolean;\n\n  public token: string;\n\n  public expiration?: Date;\n}\n\nexport class Password {\n  public key: string;\n\n  public status?: boolean;\n\n  public token?: string;\n\n  public expiration?: Date;\n}\n\nexport class TransactionBuyer {\n  public id: string;\n\n  public ip: string;\n\n  public device: string;\n}\nexport class Transaction {\n  // tslint:disable-next-line\n  public _id?: string;\n\n  public seller: string;\n\n  public buyer: TransactionBuyer;\n\n  public item: string;\n\n  public type: number;\n\n  public price: number;\n\n  public discount: number;\n\n  public market: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Security-1.html":{"url":"classes/Security-1.html","title":"class - Security-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Security\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/models/user.model.data.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                code1\n                            \n                            \n                                    Public\n                                code2\n                            \n                            \n                                    Public\n                                code3\n                            \n                            \n                                    Public\n                                code4\n                            \n                            \n                                    Public\n                                code5\n                            \n                            \n                                    Public\n                                enabled\n                            \n                            \n                                    Public\n                                twofactor\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            code1\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: 0})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/models/user.model.data.ts:52\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            code2\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: 0})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/models/user.model.data.ts:55\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            code3\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: 0})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/models/user.model.data.ts:58\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            code4\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: 0})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/models/user.model.data.ts:61\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            code5\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: 0})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/models/user.model.data.ts:64\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            enabled\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/models/user.model.data.ts:49\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            twofactor\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: 0})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/models/user.model.data.ts:67\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { prop, index } from '@typegoose/typegoose';\nimport { TimeStamps } from '@typegoose/typegoose/lib/defaultClasses';\n\nexport class Reactions {\n  /*@prop({\n    required: true,\n    lowercase: true,\n    trim: true,\n  })\n  public author: string;*/\n\n  @prop({ required: true, min: 0, max: 1 })\n  public type: number;\n}\n\nexport class Suspension {\n  @prop({ required: true, default: false })\n  public status: boolean;\n\n  @prop({\n    required: true,\n    default:\n      '[System]: The reason for suspension has not been specified. Please contact us for more information.',\n    minlength: 90,\n    maxlength: 200,\n  })\n  public reason: string;\n}\n\nexport class Stats {\n  @prop({ required: true, default: 0 })\n  public spent: number;\n\n  @prop({ required: true, default: 0 })\n  public won: number;\n\n  @prop({ required: true, default: 0 })\n  public rewards: number;\n\n  @prop({ required: true, default: 0 })\n  public rep: number;\n\n  @prop({ required: true, default: 0 })\n  public exp: number;\n}\n\nexport class Security {\n  @prop({ required: true, default: false })\n  public enabled: boolean;\n\n  @prop({ required: true, default: 0 })\n  public code1: number;\n\n  @prop({ required: true, default: 0 })\n  public code2: number;\n\n  @prop({ required: true, default: 0 })\n  public code3: number;\n\n  @prop({ required: true, default: 0 })\n  public code4: number;\n\n  @prop({ required: true, default: 0 })\n  public code5: number;\n\n  @prop({ required: true, default: 0 })\n  public twofactor: number;\n}\n\nexport class Membership {\n  @prop({ required: true, default: false })\n  public status: false;\n\n  @prop({ required: true, default: Date.now() })\n  public expiration: Date;\n\n  @prop({ required: true, default: Date.now() })\n  public transaction: Date;\n}\n\nexport class Rank {\n  @prop({ required: true, default: false })\n  public seller: boolean;\n\n  @prop({ required: true, default: false })\n  public mod: boolean;\n\n  @prop({ required: true, default: false })\n  public admin: boolean;\n}\n\nexport class Notifications {\n  @prop({ required: true, default: false })\n  public social: boolean;\n\n  @prop({ required: true, default: false })\n  public market: boolean;\n\n  @prop({ required: true, default: false })\n  public message: boolean;\n}\n\nexport class Online {\n  @prop({ required: true, default: false })\n  public online: boolean;\n\n  @prop({ required: true, default: 0 })\n  public mode: number;\n\n  @prop({ required: true, default: Date.now() })\n  public last: Date;\n}\n\n@index({ device: 1, ip: 1 }, { unique: true })\nexport class Sessions extends TimeStamps {\n  // tslint:disable-next-line\n  public _id?: string;\n\n  @prop({ required: true })\n  public device: string | number;\n\n  @prop({ required: true })\n  public ip: string;\n\n  @prop({ required: true, default: false })\n  public twofactor: boolean;\n}\n\nexport class Email {\n  @prop({ required: true, trim: true })\n  public key: string;\n\n  @prop({ required: true, default: false })\n  public status: boolean;\n\n  @prop({ required: true })\n  public token: string;\n\n  @prop({ required: true, default: Date.now() })\n  public expiration?: Date;\n}\n\nexport class Password {\n  @prop({ required: true, trim: true })\n  public key: string;\n\n  @prop({ required: true, default: true })\n  public status?: boolean;\n\n  @prop({ required: true })\n  public token?: string;\n\n  @prop({ required: true, default: Date.now() })\n  public expiration?: Date;\n}\n\nexport class TransactionBuyer {\n  @prop({ required: true })\n  public id: string;\n\n  @prop({ required: true })\n  public ip: string;\n\n  @prop({ required: true })\n  public device: string;\n}\n\nexport class Transaction extends TimeStamps {\n  // tslint:disable-next-line\n  public _id?: string;\n\n  @prop({ required: true })\n  public seller: string;\n\n  @prop({ default: new TransactionBuyer(), _id: false })\n  public buyer: TransactionBuyer;\n\n  @prop({ required: true })\n  public item: string;\n\n  @prop({ required: true })\n  public type: number;\n\n  @prop({ required: true })\n  public price: number;\n\n  @prop({ required: true })\n  public discount: number;\n\n  @prop({ required: true })\n  public market: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SecurityCode.html":{"url":"classes/SecurityCode.html","title":"class - SecurityCode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SecurityCode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/security.update.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                code1\n                            \n                            \n                                    Readonly\n                                code2\n                            \n                            \n                                    Readonly\n                                code3\n                            \n                            \n                                    Readonly\n                                code4\n                            \n                            \n                                    Readonly\n                                code5\n                            \n                            \n                                    Readonly\n                                enabled\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            code1\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNumber()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auth/dto/security.update.dto.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            code2\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNumber()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auth/dto/security.update.dto.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            code3\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNumber()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auth/dto/security.update.dto.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            code4\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNumber()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auth/dto/security.update.dto.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            code5\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNumber()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auth/dto/security.update.dto.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            enabled\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsBoolean()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auth/dto/security.update.dto.ts:26\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsString, IsNotEmpty, IsNumber, IsBoolean } from 'class-validator';\n\nexport class SecurityCode {\n  @IsNumber()\n  @IsNotEmpty()\n  readonly code1: number;\n\n  @IsNumber()\n  @IsNotEmpty()\n  readonly code2: number;\n\n  @IsNumber()\n  @IsNotEmpty()\n  readonly code3: number;\n\n  @IsNumber()\n  @IsNotEmpty()\n  readonly code4: number;\n\n  @IsNumber()\n  @IsNotEmpty()\n  readonly code5: number;\n\n  @IsBoolean()\n  @IsNotEmpty()\n  readonly enabled: string;\n}\n\nexport class SecurityUpdateDto {\n  @IsString()\n  @IsNotEmpty()\n  id: string;\n\n  security: SecurityCode;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SecurityDto.html":{"url":"classes/SecurityDto.html","title":"class - SecurityDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SecurityDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/security.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                code1\n                            \n                            \n                                    Readonly\n                                code2\n                            \n                            \n                                    Readonly\n                                code3\n                            \n                            \n                                    Readonly\n                                code4\n                            \n                            \n                                    Readonly\n                                code5\n                            \n                            \n                                    Readonly\n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            code1\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNumber()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auth/dto/security.dto.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            code2\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNumber()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auth/dto/security.dto.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            code3\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNumber()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auth/dto/security.dto.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            code4\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNumber()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auth/dto/security.dto.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            code5\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNumber()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auth/dto/security.dto.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsString()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auth/dto/security.dto.ts:6\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNumber, IsString, IsNotEmpty } from 'class-validator';\n\nexport class SecurityDto {\n  @IsString()\n  @IsNotEmpty()\n  readonly id: string;\n\n  @IsNumber()\n  @IsNotEmpty()\n  readonly code1: number;\n\n  @IsNumber()\n  @IsNotEmpty()\n  readonly code2: number;\n\n  @IsNumber()\n  @IsNotEmpty()\n  readonly code3: number;\n\n  @IsNumber()\n  @IsNotEmpty()\n  readonly code4: number;\n\n  @IsNumber()\n  @IsNotEmpty()\n  readonly code5: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SecurityUpdateDto.html":{"url":"classes/SecurityUpdateDto.html","title":"class - SecurityUpdateDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SecurityUpdateDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/security.update.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                security\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsString()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auth/dto/security.update.dto.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            security\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SecurityCode\n\n                        \n                    \n                        \n                            \n                                    Defined in src/auth/dto/security.update.dto.ts:34\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsString, IsNotEmpty, IsNumber, IsBoolean } from 'class-validator';\n\nexport class SecurityCode {\n  @IsNumber()\n  @IsNotEmpty()\n  readonly code1: number;\n\n  @IsNumber()\n  @IsNotEmpty()\n  readonly code2: number;\n\n  @IsNumber()\n  @IsNotEmpty()\n  readonly code3: number;\n\n  @IsNumber()\n  @IsNotEmpty()\n  readonly code4: number;\n\n  @IsNumber()\n  @IsNotEmpty()\n  readonly code5: number;\n\n  @IsBoolean()\n  @IsNotEmpty()\n  readonly enabled: string;\n}\n\nexport class SecurityUpdateDto {\n  @IsString()\n  @IsNotEmpty()\n  id: string;\n\n  security: SecurityCode;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Sessions.html":{"url":"classes/Sessions.html","title":"class - Sessions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Sessions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/dto/user.dto.data.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                _id\n                            \n                            \n                                    Public\n                                device\n                            \n                            \n                                    Public\n                                ip\n                            \n                            \n                                    Public\n                                twofactor\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/dto/user.dto.data.ts:93\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            device\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string | number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/dto/user.dto.data.ts:95\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ip\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/dto/user.dto.data.ts:97\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            twofactor\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/dto/user.dto.data.ts:99\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Market {\n  public description: string;\n\n  public price: number;\n\n  public type: number;\n\n  public discount: number;\n\n  public seller: string;\n\n  public device: number;\n\n  public ip: string;\n\n  public market: number;\n}\n\nexport class Reactions {\n  public author: string;\n\n  public type: number;\n}\n\nexport class Suspension {\n  public status: boolean;\n\n  public reason: string;\n}\n\nexport class Stats {\n  public spent: number;\n\n  public won: number;\n\n  public rewards: number;\n\n  public rep: number;\n\n  public exp: number;\n}\n\nexport class Security {\n  public enabled: boolean;\n\n  public code1: number;\n\n  public code2: number;\n\n  public code3: number;\n\n  public code4: number;\n\n  public code5: number;\n\n  public twofactor: number;\n}\n\nexport class Membership {\n  public status: false;\n\n  public expiration: Date;\n\n  public transaction: Date;\n}\n\nexport class Rank {\n  public seller: boolean;\n\n  public mod: boolean;\n\n  public admin: boolean;\n}\n\nexport class Notifications {\n  public social: boolean;\n\n  public market: boolean;\n\n  public message: boolean;\n}\n\nexport class Online {\n  public online: boolean;\n\n  public mode: number;\n\n  public last: Date;\n}\n\nexport class Sessions {\n  // tslint:disable-next-line\n  public _id?: string;\n\n  public device: string | number;\n\n  public ip: string;\n\n  public twofactor: boolean;\n}\n\nexport class Email {\n  public key: string;\n\n  public status: boolean;\n\n  public token: string;\n\n  public expiration?: Date;\n}\n\nexport class Password {\n  public key: string;\n\n  public status?: boolean;\n\n  public token?: string;\n\n  public expiration?: Date;\n}\n\nexport class TransactionBuyer {\n  public id: string;\n\n  public ip: string;\n\n  public device: string;\n}\nexport class Transaction {\n  // tslint:disable-next-line\n  public _id?: string;\n\n  public seller: string;\n\n  public buyer: TransactionBuyer;\n\n  public item: string;\n\n  public type: number;\n\n  public price: number;\n\n  public discount: number;\n\n  public market: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Sessions-1.html":{"url":"classes/Sessions-1.html","title":"class - Sessions-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Sessions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/models/user.model.data.ts\n        \n\n\n            \n                Extends\n            \n            \n                    TimeStamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                _id\n                            \n                            \n                                    Public\n                                device\n                            \n                            \n                                    Public\n                                ip\n                            \n                            \n                                    Public\n                                twofactor\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/models/user.model.data.ts:117\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            device\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string | number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/models/user.model.data.ts:120\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ip\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/models/user.model.data.ts:123\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            twofactor\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/models/user.model.data.ts:126\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { prop, index } from '@typegoose/typegoose';\nimport { TimeStamps } from '@typegoose/typegoose/lib/defaultClasses';\n\nexport class Reactions {\n  /*@prop({\n    required: true,\n    lowercase: true,\n    trim: true,\n  })\n  public author: string;*/\n\n  @prop({ required: true, min: 0, max: 1 })\n  public type: number;\n}\n\nexport class Suspension {\n  @prop({ required: true, default: false })\n  public status: boolean;\n\n  @prop({\n    required: true,\n    default:\n      '[System]: The reason for suspension has not been specified. Please contact us for more information.',\n    minlength: 90,\n    maxlength: 200,\n  })\n  public reason: string;\n}\n\nexport class Stats {\n  @prop({ required: true, default: 0 })\n  public spent: number;\n\n  @prop({ required: true, default: 0 })\n  public won: number;\n\n  @prop({ required: true, default: 0 })\n  public rewards: number;\n\n  @prop({ required: true, default: 0 })\n  public rep: number;\n\n  @prop({ required: true, default: 0 })\n  public exp: number;\n}\n\nexport class Security {\n  @prop({ required: true, default: false })\n  public enabled: boolean;\n\n  @prop({ required: true, default: 0 })\n  public code1: number;\n\n  @prop({ required: true, default: 0 })\n  public code2: number;\n\n  @prop({ required: true, default: 0 })\n  public code3: number;\n\n  @prop({ required: true, default: 0 })\n  public code4: number;\n\n  @prop({ required: true, default: 0 })\n  public code5: number;\n\n  @prop({ required: true, default: 0 })\n  public twofactor: number;\n}\n\nexport class Membership {\n  @prop({ required: true, default: false })\n  public status: false;\n\n  @prop({ required: true, default: Date.now() })\n  public expiration: Date;\n\n  @prop({ required: true, default: Date.now() })\n  public transaction: Date;\n}\n\nexport class Rank {\n  @prop({ required: true, default: false })\n  public seller: boolean;\n\n  @prop({ required: true, default: false })\n  public mod: boolean;\n\n  @prop({ required: true, default: false })\n  public admin: boolean;\n}\n\nexport class Notifications {\n  @prop({ required: true, default: false })\n  public social: boolean;\n\n  @prop({ required: true, default: false })\n  public market: boolean;\n\n  @prop({ required: true, default: false })\n  public message: boolean;\n}\n\nexport class Online {\n  @prop({ required: true, default: false })\n  public online: boolean;\n\n  @prop({ required: true, default: 0 })\n  public mode: number;\n\n  @prop({ required: true, default: Date.now() })\n  public last: Date;\n}\n\n@index({ device: 1, ip: 1 }, { unique: true })\nexport class Sessions extends TimeStamps {\n  // tslint:disable-next-line\n  public _id?: string;\n\n  @prop({ required: true })\n  public device: string | number;\n\n  @prop({ required: true })\n  public ip: string;\n\n  @prop({ required: true, default: false })\n  public twofactor: boolean;\n}\n\nexport class Email {\n  @prop({ required: true, trim: true })\n  public key: string;\n\n  @prop({ required: true, default: false })\n  public status: boolean;\n\n  @prop({ required: true })\n  public token: string;\n\n  @prop({ required: true, default: Date.now() })\n  public expiration?: Date;\n}\n\nexport class Password {\n  @prop({ required: true, trim: true })\n  public key: string;\n\n  @prop({ required: true, default: true })\n  public status?: boolean;\n\n  @prop({ required: true })\n  public token?: string;\n\n  @prop({ required: true, default: Date.now() })\n  public expiration?: Date;\n}\n\nexport class TransactionBuyer {\n  @prop({ required: true })\n  public id: string;\n\n  @prop({ required: true })\n  public ip: string;\n\n  @prop({ required: true })\n  public device: string;\n}\n\nexport class Transaction extends TimeStamps {\n  // tslint:disable-next-line\n  public _id?: string;\n\n  @prop({ required: true })\n  public seller: string;\n\n  @prop({ default: new TransactionBuyer(), _id: false })\n  public buyer: TransactionBuyer;\n\n  @prop({ required: true })\n  public item: string;\n\n  @prop({ required: true })\n  public type: number;\n\n  @prop({ required: true })\n  public price: number;\n\n  @prop({ required: true })\n  public discount: number;\n\n  @prop({ required: true })\n  public market: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SignInDto.html":{"url":"classes/SignInDto.html","title":"class - SignInDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SignInDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/signin.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                device\n                            \n                            \n                                    Readonly\n                                email\n                            \n                            \n                                    Public\n                                ip\n                            \n                            \n                                    Readonly\n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            device\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string | number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auth/dto/signin.dto.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()@IsEmail()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auth/dto/signin.dto.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ip\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auth/dto/signin.dto.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auth/dto/signin.dto.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsString, IsEmail } from 'class-validator';\nexport class SignInDto {\n  @IsNotEmpty()\n  @IsEmail()\n  readonly email: string;\n\n  @IsNotEmpty()\n  @IsString()\n  readonly password: string;\n\n  @IsNotEmpty()\n  public device: string | number;\n\n  @IsNotEmpty()\n  @IsString()\n  public ip: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Stats.html":{"url":"classes/Stats.html","title":"class - Stats","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Stats\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/dto/user.dto.data.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                exp\n                            \n                            \n                                    Public\n                                rep\n                            \n                            \n                                    Public\n                                rewards\n                            \n                            \n                                    Public\n                                spent\n                            \n                            \n                                    Public\n                                won\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            exp\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/dto/user.dto.data.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            rep\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/dto/user.dto.data.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            rewards\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/dto/user.dto.data.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            spent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/dto/user.dto.data.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            won\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/dto/user.dto.data.ts:34\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Market {\n  public description: string;\n\n  public price: number;\n\n  public type: number;\n\n  public discount: number;\n\n  public seller: string;\n\n  public device: number;\n\n  public ip: string;\n\n  public market: number;\n}\n\nexport class Reactions {\n  public author: string;\n\n  public type: number;\n}\n\nexport class Suspension {\n  public status: boolean;\n\n  public reason: string;\n}\n\nexport class Stats {\n  public spent: number;\n\n  public won: number;\n\n  public rewards: number;\n\n  public rep: number;\n\n  public exp: number;\n}\n\nexport class Security {\n  public enabled: boolean;\n\n  public code1: number;\n\n  public code2: number;\n\n  public code3: number;\n\n  public code4: number;\n\n  public code5: number;\n\n  public twofactor: number;\n}\n\nexport class Membership {\n  public status: false;\n\n  public expiration: Date;\n\n  public transaction: Date;\n}\n\nexport class Rank {\n  public seller: boolean;\n\n  public mod: boolean;\n\n  public admin: boolean;\n}\n\nexport class Notifications {\n  public social: boolean;\n\n  public market: boolean;\n\n  public message: boolean;\n}\n\nexport class Online {\n  public online: boolean;\n\n  public mode: number;\n\n  public last: Date;\n}\n\nexport class Sessions {\n  // tslint:disable-next-line\n  public _id?: string;\n\n  public device: string | number;\n\n  public ip: string;\n\n  public twofactor: boolean;\n}\n\nexport class Email {\n  public key: string;\n\n  public status: boolean;\n\n  public token: string;\n\n  public expiration?: Date;\n}\n\nexport class Password {\n  public key: string;\n\n  public status?: boolean;\n\n  public token?: string;\n\n  public expiration?: Date;\n}\n\nexport class TransactionBuyer {\n  public id: string;\n\n  public ip: string;\n\n  public device: string;\n}\nexport class Transaction {\n  // tslint:disable-next-line\n  public _id?: string;\n\n  public seller: string;\n\n  public buyer: TransactionBuyer;\n\n  public item: string;\n\n  public type: number;\n\n  public price: number;\n\n  public discount: number;\n\n  public market: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Stats-1.html":{"url":"classes/Stats-1.html","title":"class - Stats-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Stats\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/models/user.model.data.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                exp\n                            \n                            \n                                    Public\n                                rep\n                            \n                            \n                                    Public\n                                rewards\n                            \n                            \n                                    Public\n                                spent\n                            \n                            \n                                    Public\n                                won\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            exp\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: 0})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/models/user.model.data.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            rep\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: 0})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/models/user.model.data.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            rewards\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: 0})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/models/user.model.data.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            spent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: 0})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/models/user.model.data.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            won\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: 0})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/models/user.model.data.ts:35\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { prop, index } from '@typegoose/typegoose';\nimport { TimeStamps } from '@typegoose/typegoose/lib/defaultClasses';\n\nexport class Reactions {\n  /*@prop({\n    required: true,\n    lowercase: true,\n    trim: true,\n  })\n  public author: string;*/\n\n  @prop({ required: true, min: 0, max: 1 })\n  public type: number;\n}\n\nexport class Suspension {\n  @prop({ required: true, default: false })\n  public status: boolean;\n\n  @prop({\n    required: true,\n    default:\n      '[System]: The reason for suspension has not been specified. Please contact us for more information.',\n    minlength: 90,\n    maxlength: 200,\n  })\n  public reason: string;\n}\n\nexport class Stats {\n  @prop({ required: true, default: 0 })\n  public spent: number;\n\n  @prop({ required: true, default: 0 })\n  public won: number;\n\n  @prop({ required: true, default: 0 })\n  public rewards: number;\n\n  @prop({ required: true, default: 0 })\n  public rep: number;\n\n  @prop({ required: true, default: 0 })\n  public exp: number;\n}\n\nexport class Security {\n  @prop({ required: true, default: false })\n  public enabled: boolean;\n\n  @prop({ required: true, default: 0 })\n  public code1: number;\n\n  @prop({ required: true, default: 0 })\n  public code2: number;\n\n  @prop({ required: true, default: 0 })\n  public code3: number;\n\n  @prop({ required: true, default: 0 })\n  public code4: number;\n\n  @prop({ required: true, default: 0 })\n  public code5: number;\n\n  @prop({ required: true, default: 0 })\n  public twofactor: number;\n}\n\nexport class Membership {\n  @prop({ required: true, default: false })\n  public status: false;\n\n  @prop({ required: true, default: Date.now() })\n  public expiration: Date;\n\n  @prop({ required: true, default: Date.now() })\n  public transaction: Date;\n}\n\nexport class Rank {\n  @prop({ required: true, default: false })\n  public seller: boolean;\n\n  @prop({ required: true, default: false })\n  public mod: boolean;\n\n  @prop({ required: true, default: false })\n  public admin: boolean;\n}\n\nexport class Notifications {\n  @prop({ required: true, default: false })\n  public social: boolean;\n\n  @prop({ required: true, default: false })\n  public market: boolean;\n\n  @prop({ required: true, default: false })\n  public message: boolean;\n}\n\nexport class Online {\n  @prop({ required: true, default: false })\n  public online: boolean;\n\n  @prop({ required: true, default: 0 })\n  public mode: number;\n\n  @prop({ required: true, default: Date.now() })\n  public last: Date;\n}\n\n@index({ device: 1, ip: 1 }, { unique: true })\nexport class Sessions extends TimeStamps {\n  // tslint:disable-next-line\n  public _id?: string;\n\n  @prop({ required: true })\n  public device: string | number;\n\n  @prop({ required: true })\n  public ip: string;\n\n  @prop({ required: true, default: false })\n  public twofactor: boolean;\n}\n\nexport class Email {\n  @prop({ required: true, trim: true })\n  public key: string;\n\n  @prop({ required: true, default: false })\n  public status: boolean;\n\n  @prop({ required: true })\n  public token: string;\n\n  @prop({ required: true, default: Date.now() })\n  public expiration?: Date;\n}\n\nexport class Password {\n  @prop({ required: true, trim: true })\n  public key: string;\n\n  @prop({ required: true, default: true })\n  public status?: boolean;\n\n  @prop({ required: true })\n  public token?: string;\n\n  @prop({ required: true, default: Date.now() })\n  public expiration?: Date;\n}\n\nexport class TransactionBuyer {\n  @prop({ required: true })\n  public id: string;\n\n  @prop({ required: true })\n  public ip: string;\n\n  @prop({ required: true })\n  public device: string;\n}\n\nexport class Transaction extends TimeStamps {\n  // tslint:disable-next-line\n  public _id?: string;\n\n  @prop({ required: true })\n  public seller: string;\n\n  @prop({ default: new TransactionBuyer(), _id: false })\n  public buyer: TransactionBuyer;\n\n  @prop({ required: true })\n  public item: string;\n\n  @prop({ required: true })\n  public type: number;\n\n  @prop({ required: true })\n  public price: number;\n\n  @prop({ required: true })\n  public discount: number;\n\n  @prop({ required: true })\n  public market: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Suspension.html":{"url":"classes/Suspension.html","title":"class - Suspension","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Suspension\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/dto/user.dto.data.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                reason\n                            \n                            \n                                    Public\n                                status\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            reason\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/dto/user.dto.data.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/dto/user.dto.data.ts:26\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Market {\n  public description: string;\n\n  public price: number;\n\n  public type: number;\n\n  public discount: number;\n\n  public seller: string;\n\n  public device: number;\n\n  public ip: string;\n\n  public market: number;\n}\n\nexport class Reactions {\n  public author: string;\n\n  public type: number;\n}\n\nexport class Suspension {\n  public status: boolean;\n\n  public reason: string;\n}\n\nexport class Stats {\n  public spent: number;\n\n  public won: number;\n\n  public rewards: number;\n\n  public rep: number;\n\n  public exp: number;\n}\n\nexport class Security {\n  public enabled: boolean;\n\n  public code1: number;\n\n  public code2: number;\n\n  public code3: number;\n\n  public code4: number;\n\n  public code5: number;\n\n  public twofactor: number;\n}\n\nexport class Membership {\n  public status: false;\n\n  public expiration: Date;\n\n  public transaction: Date;\n}\n\nexport class Rank {\n  public seller: boolean;\n\n  public mod: boolean;\n\n  public admin: boolean;\n}\n\nexport class Notifications {\n  public social: boolean;\n\n  public market: boolean;\n\n  public message: boolean;\n}\n\nexport class Online {\n  public online: boolean;\n\n  public mode: number;\n\n  public last: Date;\n}\n\nexport class Sessions {\n  // tslint:disable-next-line\n  public _id?: string;\n\n  public device: string | number;\n\n  public ip: string;\n\n  public twofactor: boolean;\n}\n\nexport class Email {\n  public key: string;\n\n  public status: boolean;\n\n  public token: string;\n\n  public expiration?: Date;\n}\n\nexport class Password {\n  public key: string;\n\n  public status?: boolean;\n\n  public token?: string;\n\n  public expiration?: Date;\n}\n\nexport class TransactionBuyer {\n  public id: string;\n\n  public ip: string;\n\n  public device: string;\n}\nexport class Transaction {\n  // tslint:disable-next-line\n  public _id?: string;\n\n  public seller: string;\n\n  public buyer: TransactionBuyer;\n\n  public item: string;\n\n  public type: number;\n\n  public price: number;\n\n  public discount: number;\n\n  public market: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Suspension-1.html":{"url":"classes/Suspension-1.html","title":"class - Suspension-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Suspension\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/models/user.model.data.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                reason\n                            \n                            \n                                    Public\n                                status\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            reason\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: '[System]: The reason for suspension has not been specified. Please contact us for more information.', minlength: 90, maxlength: 200})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/models/user.model.data.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/models/user.model.data.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { prop, index } from '@typegoose/typegoose';\nimport { TimeStamps } from '@typegoose/typegoose/lib/defaultClasses';\n\nexport class Reactions {\n  /*@prop({\n    required: true,\n    lowercase: true,\n    trim: true,\n  })\n  public author: string;*/\n\n  @prop({ required: true, min: 0, max: 1 })\n  public type: number;\n}\n\nexport class Suspension {\n  @prop({ required: true, default: false })\n  public status: boolean;\n\n  @prop({\n    required: true,\n    default:\n      '[System]: The reason for suspension has not been specified. Please contact us for more information.',\n    minlength: 90,\n    maxlength: 200,\n  })\n  public reason: string;\n}\n\nexport class Stats {\n  @prop({ required: true, default: 0 })\n  public spent: number;\n\n  @prop({ required: true, default: 0 })\n  public won: number;\n\n  @prop({ required: true, default: 0 })\n  public rewards: number;\n\n  @prop({ required: true, default: 0 })\n  public rep: number;\n\n  @prop({ required: true, default: 0 })\n  public exp: number;\n}\n\nexport class Security {\n  @prop({ required: true, default: false })\n  public enabled: boolean;\n\n  @prop({ required: true, default: 0 })\n  public code1: number;\n\n  @prop({ required: true, default: 0 })\n  public code2: number;\n\n  @prop({ required: true, default: 0 })\n  public code3: number;\n\n  @prop({ required: true, default: 0 })\n  public code4: number;\n\n  @prop({ required: true, default: 0 })\n  public code5: number;\n\n  @prop({ required: true, default: 0 })\n  public twofactor: number;\n}\n\nexport class Membership {\n  @prop({ required: true, default: false })\n  public status: false;\n\n  @prop({ required: true, default: Date.now() })\n  public expiration: Date;\n\n  @prop({ required: true, default: Date.now() })\n  public transaction: Date;\n}\n\nexport class Rank {\n  @prop({ required: true, default: false })\n  public seller: boolean;\n\n  @prop({ required: true, default: false })\n  public mod: boolean;\n\n  @prop({ required: true, default: false })\n  public admin: boolean;\n}\n\nexport class Notifications {\n  @prop({ required: true, default: false })\n  public social: boolean;\n\n  @prop({ required: true, default: false })\n  public market: boolean;\n\n  @prop({ required: true, default: false })\n  public message: boolean;\n}\n\nexport class Online {\n  @prop({ required: true, default: false })\n  public online: boolean;\n\n  @prop({ required: true, default: 0 })\n  public mode: number;\n\n  @prop({ required: true, default: Date.now() })\n  public last: Date;\n}\n\n@index({ device: 1, ip: 1 }, { unique: true })\nexport class Sessions extends TimeStamps {\n  // tslint:disable-next-line\n  public _id?: string;\n\n  @prop({ required: true })\n  public device: string | number;\n\n  @prop({ required: true })\n  public ip: string;\n\n  @prop({ required: true, default: false })\n  public twofactor: boolean;\n}\n\nexport class Email {\n  @prop({ required: true, trim: true })\n  public key: string;\n\n  @prop({ required: true, default: false })\n  public status: boolean;\n\n  @prop({ required: true })\n  public token: string;\n\n  @prop({ required: true, default: Date.now() })\n  public expiration?: Date;\n}\n\nexport class Password {\n  @prop({ required: true, trim: true })\n  public key: string;\n\n  @prop({ required: true, default: true })\n  public status?: boolean;\n\n  @prop({ required: true })\n  public token?: string;\n\n  @prop({ required: true, default: Date.now() })\n  public expiration?: Date;\n}\n\nexport class TransactionBuyer {\n  @prop({ required: true })\n  public id: string;\n\n  @prop({ required: true })\n  public ip: string;\n\n  @prop({ required: true })\n  public device: string;\n}\n\nexport class Transaction extends TimeStamps {\n  // tslint:disable-next-line\n  public _id?: string;\n\n  @prop({ required: true })\n  public seller: string;\n\n  @prop({ default: new TransactionBuyer(), _id: false })\n  public buyer: TransactionBuyer;\n\n  @prop({ required: true })\n  public item: string;\n\n  @prop({ required: true })\n  public type: number;\n\n  @prop({ required: true })\n  public price: number;\n\n  @prop({ required: true })\n  public discount: number;\n\n  @prop({ required: true })\n  public market: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Transaction.html":{"url":"classes/Transaction.html","title":"class - Transaction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Transaction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/dto/user.dto.data.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                _id\n                            \n                            \n                                    Public\n                                buyer\n                            \n                            \n                                    Public\n                                discount\n                            \n                            \n                                    Public\n                                item\n                            \n                            \n                                    Public\n                                market\n                            \n                            \n                                    Public\n                                price\n                            \n                            \n                                    Public\n                                seller\n                            \n                            \n                                    Public\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/dto/user.dto.data.ts:131\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            buyer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TransactionBuyer\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/dto/user.dto.data.ts:135\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            discount\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/dto/user.dto.data.ts:143\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            item\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/dto/user.dto.data.ts:137\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            market\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/dto/user.dto.data.ts:145\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            price\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/dto/user.dto.data.ts:141\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            seller\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/dto/user.dto.data.ts:133\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/dto/user.dto.data.ts:139\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Market {\n  public description: string;\n\n  public price: number;\n\n  public type: number;\n\n  public discount: number;\n\n  public seller: string;\n\n  public device: number;\n\n  public ip: string;\n\n  public market: number;\n}\n\nexport class Reactions {\n  public author: string;\n\n  public type: number;\n}\n\nexport class Suspension {\n  public status: boolean;\n\n  public reason: string;\n}\n\nexport class Stats {\n  public spent: number;\n\n  public won: number;\n\n  public rewards: number;\n\n  public rep: number;\n\n  public exp: number;\n}\n\nexport class Security {\n  public enabled: boolean;\n\n  public code1: number;\n\n  public code2: number;\n\n  public code3: number;\n\n  public code4: number;\n\n  public code5: number;\n\n  public twofactor: number;\n}\n\nexport class Membership {\n  public status: false;\n\n  public expiration: Date;\n\n  public transaction: Date;\n}\n\nexport class Rank {\n  public seller: boolean;\n\n  public mod: boolean;\n\n  public admin: boolean;\n}\n\nexport class Notifications {\n  public social: boolean;\n\n  public market: boolean;\n\n  public message: boolean;\n}\n\nexport class Online {\n  public online: boolean;\n\n  public mode: number;\n\n  public last: Date;\n}\n\nexport class Sessions {\n  // tslint:disable-next-line\n  public _id?: string;\n\n  public device: string | number;\n\n  public ip: string;\n\n  public twofactor: boolean;\n}\n\nexport class Email {\n  public key: string;\n\n  public status: boolean;\n\n  public token: string;\n\n  public expiration?: Date;\n}\n\nexport class Password {\n  public key: string;\n\n  public status?: boolean;\n\n  public token?: string;\n\n  public expiration?: Date;\n}\n\nexport class TransactionBuyer {\n  public id: string;\n\n  public ip: string;\n\n  public device: string;\n}\nexport class Transaction {\n  // tslint:disable-next-line\n  public _id?: string;\n\n  public seller: string;\n\n  public buyer: TransactionBuyer;\n\n  public item: string;\n\n  public type: number;\n\n  public price: number;\n\n  public discount: number;\n\n  public market: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Transaction-1.html":{"url":"classes/Transaction-1.html","title":"class - Transaction-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Transaction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/models/user.model.data.ts\n        \n\n\n            \n                Extends\n            \n            \n                    TimeStamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                _id\n                            \n                            \n                                    Public\n                                buyer\n                            \n                            \n                                    Public\n                                discount\n                            \n                            \n                                    Public\n                                item\n                            \n                            \n                                    Public\n                                market\n                            \n                            \n                                    Public\n                                price\n                            \n                            \n                                    Public\n                                seller\n                            \n                            \n                                    Public\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/models/user.model.data.ts:170\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            buyer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TransactionBuyer\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, _id: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/models/user.model.data.ts:176\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            discount\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/models/user.model.data.ts:188\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            item\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/models/user.model.data.ts:179\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            market\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/models/user.model.data.ts:191\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            price\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/models/user.model.data.ts:185\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            seller\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/models/user.model.data.ts:173\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/models/user.model.data.ts:182\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { prop, index } from '@typegoose/typegoose';\nimport { TimeStamps } from '@typegoose/typegoose/lib/defaultClasses';\n\nexport class Reactions {\n  /*@prop({\n    required: true,\n    lowercase: true,\n    trim: true,\n  })\n  public author: string;*/\n\n  @prop({ required: true, min: 0, max: 1 })\n  public type: number;\n}\n\nexport class Suspension {\n  @prop({ required: true, default: false })\n  public status: boolean;\n\n  @prop({\n    required: true,\n    default:\n      '[System]: The reason for suspension has not been specified. Please contact us for more information.',\n    minlength: 90,\n    maxlength: 200,\n  })\n  public reason: string;\n}\n\nexport class Stats {\n  @prop({ required: true, default: 0 })\n  public spent: number;\n\n  @prop({ required: true, default: 0 })\n  public won: number;\n\n  @prop({ required: true, default: 0 })\n  public rewards: number;\n\n  @prop({ required: true, default: 0 })\n  public rep: number;\n\n  @prop({ required: true, default: 0 })\n  public exp: number;\n}\n\nexport class Security {\n  @prop({ required: true, default: false })\n  public enabled: boolean;\n\n  @prop({ required: true, default: 0 })\n  public code1: number;\n\n  @prop({ required: true, default: 0 })\n  public code2: number;\n\n  @prop({ required: true, default: 0 })\n  public code3: number;\n\n  @prop({ required: true, default: 0 })\n  public code4: number;\n\n  @prop({ required: true, default: 0 })\n  public code5: number;\n\n  @prop({ required: true, default: 0 })\n  public twofactor: number;\n}\n\nexport class Membership {\n  @prop({ required: true, default: false })\n  public status: false;\n\n  @prop({ required: true, default: Date.now() })\n  public expiration: Date;\n\n  @prop({ required: true, default: Date.now() })\n  public transaction: Date;\n}\n\nexport class Rank {\n  @prop({ required: true, default: false })\n  public seller: boolean;\n\n  @prop({ required: true, default: false })\n  public mod: boolean;\n\n  @prop({ required: true, default: false })\n  public admin: boolean;\n}\n\nexport class Notifications {\n  @prop({ required: true, default: false })\n  public social: boolean;\n\n  @prop({ required: true, default: false })\n  public market: boolean;\n\n  @prop({ required: true, default: false })\n  public message: boolean;\n}\n\nexport class Online {\n  @prop({ required: true, default: false })\n  public online: boolean;\n\n  @prop({ required: true, default: 0 })\n  public mode: number;\n\n  @prop({ required: true, default: Date.now() })\n  public last: Date;\n}\n\n@index({ device: 1, ip: 1 }, { unique: true })\nexport class Sessions extends TimeStamps {\n  // tslint:disable-next-line\n  public _id?: string;\n\n  @prop({ required: true })\n  public device: string | number;\n\n  @prop({ required: true })\n  public ip: string;\n\n  @prop({ required: true, default: false })\n  public twofactor: boolean;\n}\n\nexport class Email {\n  @prop({ required: true, trim: true })\n  public key: string;\n\n  @prop({ required: true, default: false })\n  public status: boolean;\n\n  @prop({ required: true })\n  public token: string;\n\n  @prop({ required: true, default: Date.now() })\n  public expiration?: Date;\n}\n\nexport class Password {\n  @prop({ required: true, trim: true })\n  public key: string;\n\n  @prop({ required: true, default: true })\n  public status?: boolean;\n\n  @prop({ required: true })\n  public token?: string;\n\n  @prop({ required: true, default: Date.now() })\n  public expiration?: Date;\n}\n\nexport class TransactionBuyer {\n  @prop({ required: true })\n  public id: string;\n\n  @prop({ required: true })\n  public ip: string;\n\n  @prop({ required: true })\n  public device: string;\n}\n\nexport class Transaction extends TimeStamps {\n  // tslint:disable-next-line\n  public _id?: string;\n\n  @prop({ required: true })\n  public seller: string;\n\n  @prop({ default: new TransactionBuyer(), _id: false })\n  public buyer: TransactionBuyer;\n\n  @prop({ required: true })\n  public item: string;\n\n  @prop({ required: true })\n  public type: number;\n\n  @prop({ required: true })\n  public price: number;\n\n  @prop({ required: true })\n  public discount: number;\n\n  @prop({ required: true })\n  public market: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TransactionBuyer.html":{"url":"classes/TransactionBuyer.html","title":"class - TransactionBuyer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TransactionBuyer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/dto/user.dto.data.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                device\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                ip\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            device\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/dto/user.dto.data.ts:127\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/dto/user.dto.data.ts:123\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ip\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/dto/user.dto.data.ts:125\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Market {\n  public description: string;\n\n  public price: number;\n\n  public type: number;\n\n  public discount: number;\n\n  public seller: string;\n\n  public device: number;\n\n  public ip: string;\n\n  public market: number;\n}\n\nexport class Reactions {\n  public author: string;\n\n  public type: number;\n}\n\nexport class Suspension {\n  public status: boolean;\n\n  public reason: string;\n}\n\nexport class Stats {\n  public spent: number;\n\n  public won: number;\n\n  public rewards: number;\n\n  public rep: number;\n\n  public exp: number;\n}\n\nexport class Security {\n  public enabled: boolean;\n\n  public code1: number;\n\n  public code2: number;\n\n  public code3: number;\n\n  public code4: number;\n\n  public code5: number;\n\n  public twofactor: number;\n}\n\nexport class Membership {\n  public status: false;\n\n  public expiration: Date;\n\n  public transaction: Date;\n}\n\nexport class Rank {\n  public seller: boolean;\n\n  public mod: boolean;\n\n  public admin: boolean;\n}\n\nexport class Notifications {\n  public social: boolean;\n\n  public market: boolean;\n\n  public message: boolean;\n}\n\nexport class Online {\n  public online: boolean;\n\n  public mode: number;\n\n  public last: Date;\n}\n\nexport class Sessions {\n  // tslint:disable-next-line\n  public _id?: string;\n\n  public device: string | number;\n\n  public ip: string;\n\n  public twofactor: boolean;\n}\n\nexport class Email {\n  public key: string;\n\n  public status: boolean;\n\n  public token: string;\n\n  public expiration?: Date;\n}\n\nexport class Password {\n  public key: string;\n\n  public status?: boolean;\n\n  public token?: string;\n\n  public expiration?: Date;\n}\n\nexport class TransactionBuyer {\n  public id: string;\n\n  public ip: string;\n\n  public device: string;\n}\nexport class Transaction {\n  // tslint:disable-next-line\n  public _id?: string;\n\n  public seller: string;\n\n  public buyer: TransactionBuyer;\n\n  public item: string;\n\n  public type: number;\n\n  public price: number;\n\n  public discount: number;\n\n  public market: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TransactionBuyer-1.html":{"url":"classes/TransactionBuyer-1.html","title":"class - TransactionBuyer-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TransactionBuyer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/models/user.model.data.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                device\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                ip\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            device\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/models/user.model.data.ts:165\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/models/user.model.data.ts:159\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ip\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/models/user.model.data.ts:162\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { prop, index } from '@typegoose/typegoose';\nimport { TimeStamps } from '@typegoose/typegoose/lib/defaultClasses';\n\nexport class Reactions {\n  /*@prop({\n    required: true,\n    lowercase: true,\n    trim: true,\n  })\n  public author: string;*/\n\n  @prop({ required: true, min: 0, max: 1 })\n  public type: number;\n}\n\nexport class Suspension {\n  @prop({ required: true, default: false })\n  public status: boolean;\n\n  @prop({\n    required: true,\n    default:\n      '[System]: The reason for suspension has not been specified. Please contact us for more information.',\n    minlength: 90,\n    maxlength: 200,\n  })\n  public reason: string;\n}\n\nexport class Stats {\n  @prop({ required: true, default: 0 })\n  public spent: number;\n\n  @prop({ required: true, default: 0 })\n  public won: number;\n\n  @prop({ required: true, default: 0 })\n  public rewards: number;\n\n  @prop({ required: true, default: 0 })\n  public rep: number;\n\n  @prop({ required: true, default: 0 })\n  public exp: number;\n}\n\nexport class Security {\n  @prop({ required: true, default: false })\n  public enabled: boolean;\n\n  @prop({ required: true, default: 0 })\n  public code1: number;\n\n  @prop({ required: true, default: 0 })\n  public code2: number;\n\n  @prop({ required: true, default: 0 })\n  public code3: number;\n\n  @prop({ required: true, default: 0 })\n  public code4: number;\n\n  @prop({ required: true, default: 0 })\n  public code5: number;\n\n  @prop({ required: true, default: 0 })\n  public twofactor: number;\n}\n\nexport class Membership {\n  @prop({ required: true, default: false })\n  public status: false;\n\n  @prop({ required: true, default: Date.now() })\n  public expiration: Date;\n\n  @prop({ required: true, default: Date.now() })\n  public transaction: Date;\n}\n\nexport class Rank {\n  @prop({ required: true, default: false })\n  public seller: boolean;\n\n  @prop({ required: true, default: false })\n  public mod: boolean;\n\n  @prop({ required: true, default: false })\n  public admin: boolean;\n}\n\nexport class Notifications {\n  @prop({ required: true, default: false })\n  public social: boolean;\n\n  @prop({ required: true, default: false })\n  public market: boolean;\n\n  @prop({ required: true, default: false })\n  public message: boolean;\n}\n\nexport class Online {\n  @prop({ required: true, default: false })\n  public online: boolean;\n\n  @prop({ required: true, default: 0 })\n  public mode: number;\n\n  @prop({ required: true, default: Date.now() })\n  public last: Date;\n}\n\n@index({ device: 1, ip: 1 }, { unique: true })\nexport class Sessions extends TimeStamps {\n  // tslint:disable-next-line\n  public _id?: string;\n\n  @prop({ required: true })\n  public device: string | number;\n\n  @prop({ required: true })\n  public ip: string;\n\n  @prop({ required: true, default: false })\n  public twofactor: boolean;\n}\n\nexport class Email {\n  @prop({ required: true, trim: true })\n  public key: string;\n\n  @prop({ required: true, default: false })\n  public status: boolean;\n\n  @prop({ required: true })\n  public token: string;\n\n  @prop({ required: true, default: Date.now() })\n  public expiration?: Date;\n}\n\nexport class Password {\n  @prop({ required: true, trim: true })\n  public key: string;\n\n  @prop({ required: true, default: true })\n  public status?: boolean;\n\n  @prop({ required: true })\n  public token?: string;\n\n  @prop({ required: true, default: Date.now() })\n  public expiration?: Date;\n}\n\nexport class TransactionBuyer {\n  @prop({ required: true })\n  public id: string;\n\n  @prop({ required: true })\n  public ip: string;\n\n  @prop({ required: true })\n  public device: string;\n}\n\nexport class Transaction extends TimeStamps {\n  // tslint:disable-next-line\n  public _id?: string;\n\n  @prop({ required: true })\n  public seller: string;\n\n  @prop({ default: new TransactionBuyer(), _id: false })\n  public buyer: TransactionBuyer;\n\n  @prop({ required: true })\n  public item: string;\n\n  @prop({ required: true })\n  public type: number;\n\n  @prop({ required: true })\n  public price: number;\n\n  @prop({ required: true })\n  public discount: number;\n\n  @prop({ required: true })\n  public market: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/TransactionController.html":{"url":"controllers/TransactionController.html","title":"controller - TransactionController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  TransactionController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/transaction/transaction.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                transaction\n            \n\n\n\n\n\n\n    \n\n\n    \n        import { Controller } from '@nestjs/common';\n\n@Controller('transaction')\nexport class TransactionController {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TransactionModule.html":{"url":"modules/TransactionModule.html","title":"module - TransactionModule","body":"\n                   \n\n\n\n\n    Modules\n    TransactionModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TransactionModule\n\n\n\ncluster_TransactionModule_providers\n\n\n\n\nTransactionService\n\nTransactionService\n\n\n\nTransactionModule\n\nTransactionModule\n\nTransactionModule -->\n\nTransactionService->TransactionModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/transaction/transaction.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            TransactionService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            TransactionController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TransactionController } from './transaction.controller';\nimport { TransactionService } from './transaction.service';\n\n@Module({\n  controllers: [TransactionController],\n  providers: [TransactionService]\n})\nexport class TransactionModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TransactionService.html":{"url":"injectables/TransactionService.html","title":"injectable - TransactionService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TransactionService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/transaction/transaction.service.ts\n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class TransactionService {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserDto.html":{"url":"classes/UpdateUserDto.html","title":"class - UpdateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/dto/update-user.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                id\n                            \n                            \n                                    Readonly\n                                key\n                            \n                            \n                                    Readonly\n                                value\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsString()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/dto/update-user.dto.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            key\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsString()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/dto/update-user.dto.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            value\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string | number | Date | boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/dto/update-user.dto.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsString, IsNotEmpty } from 'class-validator';\n\nexport class UpdateUserDto {\n  @IsString()\n  @IsNotEmpty()\n  readonly id: string;\n\n  @IsString()\n  @IsNotEmpty()\n  readonly key: string;\n\n  @IsNotEmpty()\n  readonly value: string | number | Date | boolean;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserController.html":{"url":"controllers/UserController.html","title":"controller - UserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/user.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                user\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Async\n                                addReaction\n                            \n                            \n                                    Protected\n                                    Async\n                                changeCoverPhoto\n                            \n                            \n                                    Protected\n                                    Async\n                                changeProfilePhoto\n                            \n                            \n                                    Protected\n                                    Async\n                                getAllUsers\n                            \n                            \n                                    Public\n                                getUser\n                            \n                            \n                                    Protected\n                                    Async\n                                removeReaction\n                            \n                            \n                                    Public\n                                    Async\n                                updateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Async\n                            addReaction\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addReaction(res, reactionsDto: ReactionsDto, lang: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put('/reactions/add')\n                \n            \n\n            \n                \n                    Defined in src/modules/user/user.controller.ts:174\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    res\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    reactionsDto\n                                    \n                                                ReactionsDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    lang\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Async\n                            changeCoverPhoto\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    changeCoverPhoto(file, id: string, res, lang: string, userRequestId: string, userRequestRank: string[])\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseInterceptors(undefined)@Post('/upload/cover/:id')\n                \n            \n\n            \n                \n                    Defined in src/modules/user/user.controller.ts:139\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    file\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    lang\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userRequestId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userRequestRank\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Async\n                            changeProfilePhoto\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    changeProfilePhoto(file, id: string, res, lang: string, userRequestId: string, userRequestRank: string[])\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/upload/photo/:id')@UseInterceptors(undefined)\n                \n            \n\n            \n                \n                    Defined in src/modules/user/user.controller.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    file\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    lang\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userRequestId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userRequestRank\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Async\n                            getAllUsers\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllUsers()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/modules/user/user.controller.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUser(userId: string, userRequestId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/find/:userId')\n                \n            \n\n            \n                \n                    Defined in src/modules/user/user.controller.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userRequestId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Async\n                            removeReaction\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    removeReaction(res, toId: string, ofId: string, lang: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Rank(RanksEnum.ADMINISTRATOR)@Delete('/reactions/remove')\n                \n            \n\n            \n                \n                    Defined in src/modules/user/user.controller.ts:194\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    res\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    toId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    ofId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    lang\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            updateUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateUser(updateUserDto: UpdateUserDto, response, lang: string, userRequestId: string, userRequestRank: string[])\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch('/update')\n                \n            \n\n            \n                \n                    Defined in src/modules/user/user.controller.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    updateUserDto\n                                    \n                                                UpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    response\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    lang\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userRequestId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userRequestRank\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Param,\n  Body,\n  Res,\n  HttpStatus,\n  Patch,\n  Delete,\n  Post,\n  UseInterceptors,\n  UploadedFile,\n  Put,\n  UseGuards,\n} from '@nestjs/common';\nimport { FileInterceptor } from '@nestjs/platform-express';\nimport { UserService } from './user.service';\nimport { UpdateUserDto } from './dto/update-user.dto';\nimport { Rank } from '../../decorators/rank.decorator';\nimport { extname } from 'path';\nimport { diskStorage } from 'multer';\nimport { ConfigurationEnum } from '../../keys/configuration.enum';\nimport { ConfigService } from '../../config/config.service';\nimport { ReactionsDto } from './dto/reactions.dto';\nimport { I18nService, I18nLang } from 'nestjs-i18n';\nimport { AuthGuard } from '@nestjs/passport';\nimport { RanksEnum } from '../../keys/ranks.enum';\nimport { GetUser } from '../../decorators/user.decorator';\n\n@UseGuards(AuthGuard())\n@Controller('user')\nexport class UserController {\n  constructor(\n    private readonly userService: UserService,\n    private readonly configService: ConfigService,\n    private readonly i18nService: I18nService,\n  ) {}\n\n  @Get('/find/:userId')\n  public getUser(\n    @Param('userId') userId: string,\n    @GetUser('id') userRequestId: string,\n  ) {\n    return this.userService.getPublicUser(userId, userRequestId);\n  }\n\n  @Patch('/update')\n  public async updateUser(\n    @Body() updateUserDto: UpdateUserDto,\n    @Res() response,\n    @I18nLang() lang: string,\n    @GetUser('id') userRequestId: string,\n    @GetUser('rank') userRequestRank: string[],\n  ) {\n    await this.userService.updateUser(\n      updateUserDto,\n      userRequestId,\n      userRequestRank,\n    );\n    response.status(HttpStatus.OK).json({\n      statusCode: HttpStatus.OK,\n      message: this.i18nService.translate('translations.general.saved', {\n        lang,\n      }),\n    });\n  }\n\n  @Get()\n  protected async getAllUsers() {\n    return await this.userService.getUsers();\n  }\n\n  @Post('/upload/photo/:id')\n  @UseInterceptors(\n    FileInterceptor('photo', {\n      storage: diskStorage({\n        destination: './uploads/profile_photo',\n        // tslint:disable-next-line: variable-name\n        filename: (_req, file, cb) => {\n          const randomName = Array(32)\n            .fill(null)\n            .map(() => Math.round(Math.random() * 16).toString(16))\n            .join('');\n          return cb(null, `${randomName}${extname(file.originalname)}`);\n        },\n      }),\n    }),\n  )\n  protected async changeProfilePhoto(\n    @UploadedFile() file,\n    @Param('id') id: string,\n    @Res() res,\n    @I18nLang() lang: string,\n    @GetUser('id') userRequestId: string,\n    @GetUser('rank') userRequestRank: string[],\n  ) {\n    return await this.userService\n      .updatePhoto(\n        id,\n        `${this.configService.get(\n          ConfigurationEnum.SERVER_HOST,\n        )}/uploads/profile_photo/${file.filename}`,\n        'photo',\n        userRequestId,\n        userRequestRank,\n      )\n      .then(() => {\n        res.status(HttpStatus.OK).json({\n          statusCode: HttpStatus.OK,\n          message: this.i18nService.translate(\n            'translations.user.controller.profile_photo_updated',\n            {\n              lang,\n            },\n          ),\n          path: `${this.configService.get(\n            ConfigurationEnum.SERVER_HOST,\n          )}/uploads/profile_photo/${file.filename}`,\n        });\n      });\n  }\n\n  @UseInterceptors(\n    FileInterceptor('cover', {\n      storage: diskStorage({\n        destination: './uploads/cover_photo',\n        // tslint:disable-next-line: variable-name\n        filename: (_req, file, cb) => {\n          const randomName = Array(32)\n            .fill(null)\n            .map(() => Math.round(Math.random() * 16).toString(16))\n            .join('');\n          return cb(null, `${randomName}${extname(file.originalname)}`);\n        },\n      }),\n    }),\n  )\n  @Post('/upload/cover/:id')\n  protected async changeCoverPhoto(\n    @UploadedFile() file,\n    @Param('id') id: string,\n    @Res() res,\n    @I18nLang() lang: string,\n    @GetUser('id') userRequestId: string,\n    @GetUser('rank') userRequestRank: string[],\n  ) {\n    return await this.userService\n      .updatePhoto(\n        id,\n        `${this.configService.get(\n          ConfigurationEnum.SERVER_HOST,\n        )}/uploads/${id}/cover_photo/${file.filename}`,\n        'cover',\n        userRequestId,\n        userRequestRank,\n      )\n      .then(() => {\n        res.status(HttpStatus.OK).json({\n          statusCode: HttpStatus.OK,\n          message: this.i18nService.translate(\n            'translations.user.controller.cover_photo_updated',\n            {\n              lang,\n            },\n          ),\n          path: `${this.configService.get(\n            ConfigurationEnum.SERVER_HOST,\n          )}/uploads/cover_photo/${file.filename}`,\n        });\n      });\n  }\n\n  @Put('/reactions/add')\n  protected async addReaction(\n    @Res() res,\n    @Body() reactionsDto: ReactionsDto,\n    @I18nLang() lang: string,\n  ) {\n    return await this.userService.addReaction(reactionsDto).then(() => {\n      res.status(HttpStatus.OK).json({\n        statusCode: HttpStatus.OK,\n        message: this.i18nService.translate(\n          'translations.user.controller.reaction_added',\n          {\n            lang,\n          },\n        ),\n      });\n    });\n  }\n\n  @Rank(RanksEnum.ADMINISTRATOR)\n  @Delete('/reactions/remove')\n  protected async removeReaction(\n    @Res() res,\n    @Body('toId') toId: string,\n    @Body('ofId') ofId: string,\n    @I18nLang() lang: string,\n  ) {\n    return await this.userService.removeReaction(ofId, toId).then(() => {\n      res.status(HttpStatus.OK).json({\n        statusCode: HttpStatus.OK,\n        message: this.i18nService.translate(\n          'translations.user.controller.reactions_deleted',\n          {\n            lang,\n          },\n        ),\n      });\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserDto.html":{"url":"classes/UserDto.html","title":"class - UserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/dto/user.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                _id\n                            \n                            \n                                    Public\n                                cover\n                            \n                            \n                                    Public\n                                device\n                            \n                            \n                                    Public\n                                email\n                            \n                            \n                                    Public\n                                ip\n                            \n                            \n                                    Public\n                                market\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                notifications\n                            \n                            \n                                    Public\n                                offer\n                            \n                            \n                                    Public\n                                online\n                            \n                            \n                                    Public\n                                password\n                            \n                            \n                                    Public\n                                photo\n                            \n                            \n                                    Public\n                                premium\n                            \n                            \n                                    Public\n                                rank\n                            \n                            \n                                    Public\n                                reactions\n                            \n                            \n                                    Public\n                                security\n                            \n                            \n                                    Public\n                                sessions\n                            \n                            \n                                    Public\n                                specialty\n                            \n                            \n                                    Public\n                                stats\n                            \n                            \n                                    Public\n                                suspension\n                            \n                            \n                                    Public\n                                tachi\n                            \n                            \n                                    Public\n                                transactions\n                            \n                            \n                                    Public\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/dto/user.dto.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            cover\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/dto/user.dto.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            device\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/dto/user.dto.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Email\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/dto/user.dto.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ip\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/dto/user.dto.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            market\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Market[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/dto/user.dto.ts:59\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/dto/user.dto.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            notifications\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Notifications\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/dto/user.dto.ts:53\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            offer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/dto/user.dto.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            online\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Online\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/dto/user.dto.ts:55\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Password\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/dto/user.dto.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            photo\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/dto/user.dto.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            premium\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Membership\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/dto/user.dto.ts:49\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            rank\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Rank\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/dto/user.dto.ts:51\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            reactions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Reactions[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/dto/user.dto.ts:61\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            security\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Security\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/dto/user.dto.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            sessions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Sessions[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/dto/user.dto.ts:63\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            specialty\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/dto/user.dto.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            stats\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Stats\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/dto/user.dto.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            suspension\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Suspension\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/dto/user.dto.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            tachi\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/dto/user.dto.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            transactions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Transaction[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/dto/user.dto.ts:57\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/dto/user.dto.ts:25\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Email,\n  Password,\n  Security,\n  Suspension,\n  Membership,\n  Rank,\n  Notifications,\n  Online,\n  Market,\n  Reactions,\n  Sessions,\n  Stats,\n  Transaction,\n} from './user.dto.data';\n\nexport class UserDto {\n  // tslint:disable-next-line\n  public _id?: string;\n\n  public name: string;\n\n  public email: Email;\n\n  public username: string;\n\n  public password: Password;\n\n  public offer: string;\n\n  public specialty: string;\n\n  public photo: string;\n\n  public cover: string;\n\n  public ip: string;\n\n  public device: string;\n\n  public tachi: number;\n\n  public stats: Stats;\n\n  public security: Security;\n\n  public suspension: Suspension;\n\n  public premium: Membership;\n\n  public rank: Rank;\n\n  public notifications: Notifications;\n\n  public online: Online;\n\n  public transactions: Transaction[];\n\n  public market: Market[];\n\n  public reactions: Reactions[];\n\n  public sessions: Sessions[];\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserModel.html":{"url":"classes/UserModel.html","title":"class - UserModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/models/user.model.ts\n        \n\n\n            \n                Extends\n            \n            \n                    TimeStamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                _id\n                            \n                            \n                                    Public\n                                cover\n                            \n                            \n                                    Public\n                                device\n                            \n                            \n                                    Public\n                                email\n                            \n                            \n                                    Public\n                                ip\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                notifications\n                            \n                            \n                                    Public\n                                offer\n                            \n                            \n                                    Public\n                                online\n                            \n                            \n                                    Public\n                                password\n                            \n                            \n                                    Public\n                                photo\n                            \n                            \n                                    Public\n                                premium\n                            \n                            \n                                    Public\n                                rank\n                            \n                            \n                                    Public\n                                reactions\n                            \n                            \n                                    Public\n                                security\n                            \n                            \n                                    Public\n                                sessions\n                            \n                            \n                                    Public\n                                specialty\n                            \n                            \n                                    Public\n                                stats\n                            \n                            \n                                    Public\n                                suspension\n                            \n                            \n                                    Public\n                                tachi\n                            \n                            \n                                    Public\n                                transactions\n                            \n                            \n                                    Public\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/models/user.model.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            cover\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: 'https://api.akatsukiapp.com/uploads/placeholders/cover_photo.jpg', trim: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/models/user.model.ts:72\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            device\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, trim: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/models/user.model.ts:78\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Email\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, _id: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/models/user.model.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ip\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: '127.0.0.1', trim: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/models/user.model.ts:75\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, minlength: 5, maxlength: 30})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/models/user.model.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            notifications\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Notifications\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, _id: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/models/user.model.ts:99\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            offer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: 'Hello, welcome to my profile! At the moment I dont have offers available to offer to the public, or I dont have enough range to change this. :)', minlength: 140, maxlength: 1000})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/models/user.model.ts:52\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            online\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Online\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, _id: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/models/user.model.ts:102\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Password\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, _id: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/models/user.model.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            photo\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: 'https://api.akatsukiapp.com/uploads/placeholders/profile_photo.jpg', trim: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/models/user.model.ts:66\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            premium\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Membership\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, _id: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/models/user.model.ts:93\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            rank\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Rank\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, _id: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/models/user.model.ts:96\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            reactions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Reactions[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @arrayProp({items: Reactions})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/models/user.model.ts:108\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            security\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Security\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, _id: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/models/user.model.ts:87\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            sessions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Sessions[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @arrayProp({items: Sessions})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/models/user.model.ts:111\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            specialty\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, minlength: 10, maxlength: 100})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/models/user.model.ts:59\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            stats\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Stats\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, _id: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/models/user.model.ts:84\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            suspension\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Suspension\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, _id: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/models/user.model.ts:90\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            tachi\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: 0})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/models/user.model.ts:81\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            transactions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Transaction[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @arrayProp({items: Transaction})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/models/user.model.ts:105\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, lowercase: true, trim: true, minlength: 5, maxlength: 15})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/models/user.model.ts:41\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { prop, modelOptions, arrayProp, index } from '@typegoose/typegoose';\nimport { TimeStamps } from '@typegoose/typegoose/lib/defaultClasses';\nimport {\n  Suspension,\n  Stats,\n  Security,\n  Membership,\n  Rank,\n  Notifications,\n  Reactions,\n  Sessions,\n  Password,\n  Email,\n  Online,\n  Transaction,\n} from './user.model.data';\n\n@modelOptions({ options: { customName: 'Users' } })\n@index({ email: 1, username: 1, device: 1, ip: 1 }, { unique: true })\nexport class UserModel extends TimeStamps {\n  // tslint:disable-next-line\n  public _id?: string;\n\n  @prop({\n    required: true,\n    minlength: 5,\n    maxlength: 30,\n  })\n  public name: string;\n\n  @prop({ default: new Email(), _id: false })\n  public email: Email;\n\n  @prop({\n    required: true,\n    lowercase: true,\n    trim: true,\n    minlength: 5,\n    maxlength: 15,\n  })\n  public username: string;\n\n  @prop({ default: new Password(), _id: false })\n  public password: Password;\n\n  @prop({\n    default:\n      'Hello, welcome to my profile! At the moment I dont have offers available to offer to the public, or I dont have enough range to change this. :)',\n    minlength: 140,\n    maxlength: 1000,\n  })\n  public offer: string;\n\n  @prop({\n    required: true,\n    minlength: 10,\n    maxlength: 100,\n  })\n  public specialty: string;\n\n  @prop({\n    default:\n      'https://api.akatsukiapp.com/uploads/placeholders/profile_photo.jpg',\n    trim: true,\n  })\n  public photo: string;\n\n  @prop({\n    default: 'https://api.akatsukiapp.com/uploads/placeholders/cover_photo.jpg',\n    trim: true,\n  })\n  public cover: string;\n\n  @prop({ default: '127.0.0.1', trim: true })\n  public ip: string;\n\n  @prop({ required: true, trim: true })\n  public device: string;\n\n  @prop({ required: true, default: 0 })\n  public tachi: number;\n\n  @prop({ default: new Stats(), _id: false })\n  public stats: Stats;\n\n  @prop({ default: new Security(), _id: false })\n  public security: Security;\n\n  @prop({ default: new Suspension(), _id: false })\n  public suspension: Suspension;\n\n  @prop({ default: new Membership(), _id: false })\n  public premium: Membership;\n\n  @prop({ default: new Rank(), _id: false })\n  public rank: Rank;\n\n  @prop({ default: new Notifications(), _id: false })\n  public notifications: Notifications;\n\n  @prop({ default: new Online(), _id: false })\n  public online: Online;\n\n  @arrayProp({ items: Transaction })\n  public transactions: Transaction[];\n\n  @arrayProp({ items: Reactions })\n  public reactions: Reactions[];\n\n  @arrayProp({ items: Sessions })\n  public sessions: Sessions[];\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UserModule\n\n\n\ncluster_UserModule_imports\n\n\n\ncluster_UserModule_exports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nAuthModule->UserModule\n\n\n\n\n\nConfigModule\n\nConfigModule\n\nUserModule -->\n\nConfigModule->UserModule\n\n\n\n\n\nUserService \n\nUserService \n\nUserService  -->\n\nUserModule->UserService \n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/user/user.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UserController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            ConfigModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UserService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UserService } from './user.service';\nimport { UserController } from './user.controller';\nimport { TypegooseModule } from 'nestjs-typegoose';\nimport { UserModel } from './models/user.model';\nimport { AuthModule } from '../../auth/auth.module';\nimport { ConfigModule } from '../../config/config.module';\n\n@Module({\n  imports: [TypegooseModule.forFeature([UserModel]), AuthModule, ConfigModule],\n  providers: [UserService],\n  controllers: [UserController],\n  exports: [UserService],\n})\nexport class UserModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/user.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                addReaction\n                            \n                            \n                                    Public\n                                    Async\n                                deleteUser\n                            \n                            \n                                    Public\n                                    Async\n                                getPublicUser\n                            \n                            \n                                    Public\n                                    Async\n                                getUsers\n                            \n                            \n                                    Public\n                                    Async\n                                removeReaction\n                            \n                            \n                                    Public\n                                    Async\n                                updateOnlineUser\n                            \n                            \n                                    Public\n                                    Async\n                                updatePhoto\n                            \n                            \n                                    Public\n                                    Async\n                                updateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userModel: ReturnModelType<>, i18nService: I18nRequestScopeService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/user/user.service.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userModel\n                                                  \n                                                        \n                                                                    ReturnModelType<>\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        i18nService\n                                                  \n                                                        \n                                                                    I18nRequestScopeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            addReaction\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addReaction(reactionsDto: ReactionsDto)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/user/user.service.ts:304\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    reactionsDto\n                                    \n                                                ReactionsDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            deleteUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteUser(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/user/user.service.ts:375\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            getPublicUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getPublicUser(userId: string, userRequestId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/user/user.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userRequestId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            getUsers\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUsers()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/user/user.service.ts:100\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            removeReaction\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    removeReaction(ofId: string, toId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/user/user.service.ts:355\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ofId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    toId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            updateOnlineUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateOnlineUser(id: string, online: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/user/user.service.ts:213\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    online\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            updatePhoto\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updatePhoto(userId: string, dir: string, type: string, requetUserId: string, requestUserRank: string[])\n                \n            \n\n\n            \n                \n                    Defined in src/modules/user/user.service.ts:224\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dir\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    requetUserId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    requestUserRank\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            updateUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateUser(updateUserDto: UpdateUserDto, requetUserId: string, requestUserRank: string[])\n                \n            \n\n\n            \n                \n                    Defined in src/modules/user/user.service.ts:120\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    updateUserDto\n                                    \n                                                UpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    requetUserId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    requestUserRank\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            logger\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Logger\n\n                        \n                    \n                    \n                        \n                            Default value : new Logger('User')\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/user.service.ts:20\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {\n  ConflictException,\n  UnauthorizedException,\n  ForbiddenException,\n  BadRequestException,\n  Injectable,\n  NotFoundException,\n  Logger,\n} from '@nestjs/common';\nimport { InjectModel } from 'nestjs-typegoose';\nimport { UserModel } from './models/user.model';\nimport { ReturnModelType } from '@typegoose/typegoose';\nimport { I18nRequestScopeService } from 'nestjs-i18n';\nimport { UpdateUserDto } from './dto/update-user.dto';\nimport { ReactionsDto } from './dto/reactions.dto';\nimport { RanksEnum } from 'src/keys/ranks.enum';\n\n@Injectable()\nexport class UserService {\n  private readonly logger: Logger = new Logger('User');\n\n  constructor(\n    @InjectModel(UserModel)\n    private readonly userModel: ReturnModelType,\n    private readonly i18nService: I18nRequestScopeService,\n  ) {}\n\n  public async getPublicUser(\n    userId: string,\n    userRequestId: string,\n  ): Promise {\n    let user: UserModel;\n    try {\n      if (userRequestId === userId) {\n        this.logger.log(\n          `Obtaining private information from the user ${userId} by the user ${userRequestId}.`,\n        );\n        user = await this.userModel\n          .findById(userId)\n          .select([\n            'email.key',\n            'password.key',\n            'offer',\n            'photo',\n            'cover',\n            'stats',\n            'online',\n            'name',\n            'username',\n            'specialty',\n            'reactions',\n            'tachi',\n            'security',\n            'premium',\n            'notifications',\n            'transactions',\n            'market',\n            'sessions',\n            'rank',\n          ]);\n      } else {\n        this.logger.log(\n          `Obtaining public information of the user ${userId} by the user ${userRequestId}.`,\n        );\n        user = await this.userModel\n          .findById(userId)\n          .select([\n            'offer',\n            'photo',\n            'cover',\n            'stats',\n            'online',\n            'name',\n            'username',\n            'specialty',\n            'reactions',\n            'rank',\n          ]);\n      }\n    } catch (error) {\n      this.logger.error(\n        `Could not get user information ${userId} by user ${userRequestId} because the user does not exist.`,\n      );\n      throw new ConflictException(\n        this.i18nService.translate('translations.auth.service.user_not_found'),\n      );\n    }\n\n    if (!user) {\n      this.logger.error(\n        `Could not get user information ${userId} by user ${userRequestId} because the user does not exist.`,\n      );\n      throw new UnauthorizedException(\n        this.i18nService.translate('translations.auth.service.user_not_found'),\n      );\n    }\n    return user;\n  }\n\n  public async getUsers() {\n    this.logger.log(\n      'Obtaining list of all users registered in Akatsuki Project.',\n    );\n    return await this.userModel\n      .find()\n      .select([\n        'offer',\n        'photo',\n        'cover',\n        'stats',\n        'online',\n        'name',\n        'username',\n        'specialty',\n        'reactions',\n      ])\n      .exec();\n  }\n\n  public async updateUser(\n    updateUserDto: UpdateUserDto,\n    requetUserId: string,\n    requestUserRank: string[],\n  ): Promise {\n    this.logger.log(\n      `Updating the user ${updateUserDto.id} by the user ${requetUserId}.`,\n    );\n    let user: UserModel;\n    const { id, key, value } = updateUserDto;\n    const blockKey: string[] = [\n      'email.status',\n      'email.expiration',\n      'email.token',\n      'password.status',\n      'password.expiration',\n      'password.token',\n      'ip',\n      'tachi',\n      'stats',\n      'suspension',\n      'premium',\n      'rank',\n      'transactions',\n      'market',\n      'device',\n      'reactions',\n      'sessions',\n      'createdAt',\n      'updatedAt',\n      '__v',\n    ];\n    try {\n      user = await this.userModel.findById(id);\n    } catch (error) {\n      this.logger.error(\n        `Could not update user ${id} by user ${requetUserId} because the user does not exist.`,\n      );\n      throw new ConflictException(\n        this.i18nService.translate('translations.auth.service.user_not_found'),\n      );\n    }\n\n    if (!user) {\n      this.logger.error(\n        `Could not update user ${id} by user ${requetUserId} because the user does not exist.`,\n      );\n      throw new UnauthorizedException(\n        this.i18nService.translate('translations.auth.service.user_not_found'),\n      );\n    }\n\n    if (blockKey.includes(key)) {\n      this.logger.error(\n        `Could not update user ${id} by user ${requetUserId} because he does not have sufficient permissions to update the ${key} key with the value ${value}.`,\n      );\n      throw new ForbiddenException(\n        this.i18nService.translate(\n          'translations.general.account_no_permission',\n        ),\n      );\n    }\n\n    if (requetUserId !== id) {\n      if (\n        !requestUserRank.includes(RanksEnum.ADMINISTRATOR) &&\n        !requestUserRank.includes(RanksEnum.MODERATOR)\n      ) {\n        this.logger.error(\n          `Could not update user ${id} by user ${requetUserId} because the user who wants to update does not have sufficient permissions on the account.`,\n        );\n        throw new ForbiddenException(\n          this.i18nService.translate(\n            'translations.general.account_no_permission',\n          ),\n        );\n      }\n    }\n\n    return await this.userModel\n      .findByIdAndUpdate(id, {\n        [key]: value,\n      })\n      .catch(() => {\n        this.logger.error(\n          `Could not update user ${id} by user ${requetUserId} due to a system error.`,\n        );\n        throw new BadRequestException(\n          this.i18nService.translate('translations.general.process_failed'),\n        );\n      });\n  }\n\n  public async updateOnlineUser(\n    id: string,\n    online: { online: { online: boolean; mode: number; last: Date } },\n  ): Promise {\n    return await this.userModel.findByIdAndUpdate(id, online).catch(() => {\n      throw new BadRequestException(\n        this.i18nService.translate('translations.general.process_failed'),\n      );\n    });\n  }\n\n  public async updatePhoto(\n    userId: string,\n    dir: string,\n    type: string,\n    requetUserId: string,\n    requestUserRank: string[],\n  ): Promise {\n    this.logger.log(\n      `Updating profile picture of ${userId} by user ${requetUserId}.`,\n    );\n    let user: UserModel;\n    try {\n      user = await this.userModel.findById(userId);\n    } catch (error) {\n      throw new ConflictException(\n        this.i18nService.translate('translations.auth.service.user_not_found'),\n      );\n    }\n\n    if (!user) {\n      this.logger.error(\n        `Could not update user ${userId} by user ${requetUserId} because the user does not exist.`,\n      );\n      throw new UnauthorizedException(\n        this.i18nService.translate('translations.auth.service.user_not_found'),\n      );\n    }\n\n    if (requetUserId !== userId) {\n      if (\n        !requestUserRank.includes(RanksEnum.ADMINISTRATOR) &&\n        !requestUserRank.includes(RanksEnum.MODERATOR)\n      ) {\n        this.logger.error(\n          `Could not update user ${userId} by user ${requetUserId} because the user who wants to update does not have sufficient permissions on the account.`,\n        );\n        throw new ForbiddenException(\n          this.i18nService.translate(\n            'translations.general.account_no_permission',\n          ),\n        );\n      }\n    }\n\n    if (!type) {\n      this.logger.error(\n        `Could not update profile picture of ${userId} by user ${requetUserId} because the type of photo to update was not specified.`,\n      );\n      throw new BadRequestException(\n        this.i18nService.translate('translations.user.service.type_photo'),\n      );\n    }\n\n    if (type === 'photo') {\n      await this.userModel\n        .findByIdAndUpdate(userId, { photo: dir })\n        .catch(() => {\n          this.logger.error(\n            `Could not update profile picture of ${userId} by user ${requetUserId} due to a system error.`,\n          );\n          throw new BadRequestException(\n            this.i18nService.translate('translations.general.process_failed'),\n          );\n        });\n    }\n\n    if (type === 'cover') {\n      await this.userModel\n        .findByIdAndUpdate(userId, { cover: dir })\n        .catch(() => {\n          this.logger.error(\n            `Could not update the cover photo of ${userId} by user ${requetUserId} due to a system error.`,\n          );\n          throw new BadRequestException(\n            this.i18nService.translate('translations.general.process_failed'),\n          );\n        });\n    }\n  }\n\n  public async addReaction(reactionsDto: ReactionsDto): Promise {\n    const { toId, ofId, type } = reactionsDto;\n    this.logger.error(\n      `Adding new reaction to user ${toId} by user ${ofId} with reaction type $ {type}.`,\n    );\n    let user;\n    try {\n      user = await this.userModel.findById(toId);\n    } catch (error) {\n      this.logger.error(\n        `The process of adding reaction to user ${toId} by user ${ofId} could not be completed because the user does not exist.`,\n      );\n      throw new ConflictException(\n        this.i18nService.translate('translations.auth.service.user_not_found'),\n      );\n    }\n\n    if (!user) {\n      this.logger.error(\n        `The process of adding reaction to user ${toId} by user ${ofId} could not be completed because the user does not exist.`,\n      );\n      throw new NotFoundException(\n        this.i18nService.translate('translations.auth.service.user_not_found'),\n      );\n    }\n\n    if (type === 'upvote') {\n      user.reactions.push({ author: ofId, type: 0 });\n      await user.save().catch(error => {\n        this.logger.error(\n          `Could not add user reaction ${ofId} to user ${toId} due to a system error.`,\n        );\n        throw new BadRequestException(\n          this.i18nService.translate('translations.general.process_failed'),\n        );\n      });\n    }\n\n    if (type === 'downvote') {\n      user.reactions.push({ author: ofId, type: 1 });\n      await user.save().catch(() => {\n        this.logger.error(\n          `Could not add user reaction ${ofId} to user ${toId} due to a system error.`,\n        );\n        throw new BadRequestException(\n          this.i18nService.translate('translations.general.process_failed'),\n        );\n      });\n    }\n  }\n\n  public async removeReaction(ofId: string, toId: string): Promise {\n    this.logger.error(`Eliminando reaccion de ${ofId} por el usuario ${toId}.`);\n    return await this.userModel\n      .findOneAndUpdate(\n        toId,\n        {\n          $pull: { reactions: { author: ofId } },\n        },\n        { new: true },\n      )\n      .catch(() => {\n        this.logger.error(\n          `Could not remove user reaction ${ofId} to user ${toId} due to a system error.`,\n        );\n        throw new BadRequestException(\n          this.i18nService.translate('translations.general.process_failed'),\n        );\n      });\n  }\n\n  public async deleteUser(id: string): Promise {\n    return await this.userModel.findByIdAndDelete(id).catch(() => {\n      this.logger.error(\n        `The user ${id} could not be deleted due to a system error.`,\n      );\n      throw new BadRequestException(\n        this.i18nService.translate('translations.general.process_failed'),\n      );\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/auth/dto/security.dto.ts\n            \n            class\n            SecurityDto\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/auth/dto/security.update.dto.ts\n            \n            class\n            SecurityCode\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/auth/dto/security.update.dto.ts\n            \n            class\n            SecurityUpdateDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/dto/signin.dto.ts\n            \n            class\n            SignInDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/auth/jwt.payload.interface.ts\n            \n            interface\n            IJwtPayload\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/auth/strategies/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/config/config.service.ts\n            \n            class\n            ConfigService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/decorators/rank.decorator.ts\n            \n            variable\n            Rank\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorators/user.decorator.ts\n            \n            variable\n            GetUser\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/gateways/general.gateway.ts\n            \n            class\n            GeneralGateway\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/guards/rank.guard.ts\n            \n            guard\n            RankGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/admin/admin.controller.ts\n            \n            controller\n            AdminController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/admin/admin.service.ts\n            \n            injectable\n            AdminService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/admin/models/changelog.data.model.ts\n            \n            class\n            ChangelogAuthor\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/admin/models/changelog.model.ts\n            \n            class\n            ChangelogModel\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/modules/market/dto/buyer.add.dto.ts\n            \n            class\n            BuyerAddMarketDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/modules/market/dto/buyer.remove.dto.ts\n            \n            class\n            BuyerRemoveMarketDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/market/dto/comment.add.dto.ts\n            \n            class\n            CommentMarketDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/modules/market/dto/comment.remove.dto.ts\n            \n            class\n            CommentRemoveMarketDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/market/dto/reaction.add.dto.ts\n            \n            class\n            ReactionAddMarketDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/modules/market/dto/reaction.remove.dto.ts\n            \n            class\n            ReactionRemoveMarketDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/market/market.controller.ts\n            \n            controller\n            MarketController\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/modules/market/market.service.ts\n            \n            injectable\n            MarketService\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/modules/market/models/market.data.model.ts\n            \n            class\n            BuyerMarket\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/market/models/market.data.model.ts\n            \n            class\n            CommentMarket\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/modules/market/models/market.data.model.ts\n            \n            class\n            DiscountMarket\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/market/models/market.data.model.ts\n            \n            class\n            ReactionsMarket\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/modules/market/models/market.model.ts\n            \n            class\n            MarketModel\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/modules/transaction/transaction.controller.ts\n            \n            controller\n            TransactionController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/transaction/transaction.service.ts\n            \n            injectable\n            TransactionService\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/user/dto/reactions.dto.ts\n            \n            class\n            ReactionsDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/user/dto/update-user.dto.ts\n            \n            class\n            UpdateUserDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/user/dto/user.dto.data.ts\n            \n            class\n            Email\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/modules/user/dto/user.dto.data.ts\n            \n            class\n            Market\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/modules/user/dto/user.dto.data.ts\n            \n            class\n            Membership\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/user/dto/user.dto.data.ts\n            \n            class\n            Notifications\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/user/dto/user.dto.data.ts\n            \n            class\n            Online\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/user/dto/user.dto.data.ts\n            \n            class\n            Password\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/modules/user/dto/user.dto.data.ts\n            \n            class\n            Rank\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/user/dto/user.dto.data.ts\n            \n            class\n            Reactions\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/user/dto/user.dto.data.ts\n            \n            class\n            Security\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/modules/user/dto/user.dto.data.ts\n            \n            class\n            Sessions\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/modules/user/dto/user.dto.data.ts\n            \n            class\n            Stats\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/modules/user/dto/user.dto.data.ts\n            \n            class\n            Suspension\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/user/dto/user.dto.data.ts\n            \n            class\n            Transaction\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/modules/user/dto/user.dto.data.ts\n            \n            class\n            TransactionBuyer\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/user/dto/user.dto.ts\n            \n            class\n            UserDto\n            \n                0 %\n                (0/24)\n            \n        \n        \n            \n                \n                src/modules/user/models/user.model.data.ts\n            \n            class\n            Email\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/modules/user/models/user.model.data.ts\n            \n            class\n            Membership\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/user/models/user.model.data.ts\n            \n            class\n            Notifications\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/user/models/user.model.data.ts\n            \n            class\n            Online\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/user/models/user.model.data.ts\n            \n            class\n            Password\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/modules/user/models/user.model.data.ts\n            \n            class\n            Rank\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/user/models/user.model.data.ts\n            \n            class\n            Reactions\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/user/models/user.model.data.ts\n            \n            class\n            Security\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/modules/user/models/user.model.data.ts\n            \n            class\n            Sessions\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/modules/user/models/user.model.data.ts\n            \n            class\n            Stats\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/modules/user/models/user.model.data.ts\n            \n            class\n            Suspension\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/user/models/user.model.data.ts\n            \n            class\n            Transaction\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/modules/user/models/user.model.data.ts\n            \n            class\n            TransactionBuyer\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/user/models/user.model.ts\n            \n            class\n            UserModel\n            \n                0 %\n                (0/23)\n            \n        \n        \n            \n                \n                src/modules/user/user.controller.ts\n            \n            controller\n            UserController\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/modules/user/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/11)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nest-modules/mailer : ^1.1.3\n        \n            @nestjs/common : ^6.7.2\n        \n            @nestjs/core : ^6.7.2\n        \n            @nestjs/jwt : ^6.1.1\n        \n            @nestjs/passport : ^6.1.1\n        \n            @nestjs/platform-express : ^6.7.2\n        \n            @nestjs/platform-socket.io : ^6.10.14\n        \n            @nestjs/websockets : ^6.10.14\n        \n            @typegoose/typegoose : ^6.2.1\n        \n            @types/moment-timezone : ^0.5.12\n        \n            bcryptjs : ^2.4.3\n        \n            cache-manager : ^2.10.1\n        \n            class-transformer : ^0.2.3\n        \n            class-validator : ^0.11.0\n        \n            compression : ^1.7.4\n        \n            express-rate-limit : ^5.0.0\n        \n            helmet : ^3.21.2\n        \n            jsonwebtoken : ^8.5.1\n        \n            moment : ^2.24.0\n        \n            moment-timezone : ^0.5.27\n        \n            mongoose : ^5.8.7\n        \n            multer : ^1.4.2\n        \n            nestjs-i18n : ^4.1.3\n        \n            nestjs-typegoose : ^7.0.0\n        \n            passport : ^0.4.1\n        \n            passport-jwt : ^4.0.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.0\n        \n            rxjs : ^6.5.3\n        \n            ts-token-generator : ^1.0.4\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ConfigurationEnum   (src/.../configuration.enum.ts)\n                        \n                        \n                            RanksEnum   (src/.../ranks.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/keys/configuration.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        ConfigurationEnum\n                    \n                \n                        \n                            \n                                 PORT_API\n                            \n                        \n                        \n                            \n                                Value : PORT_API\n                            \n                        \n                        \n                            \n                                 TOKEN_SECRET\n                            \n                        \n                        \n                            \n                                Value : TOKEN_SECRET\n                            \n                        \n                        \n                            \n                                 EMAIL_HOST\n                            \n                        \n                        \n                            \n                                Value : EMAIL_HOST\n                            \n                        \n                        \n                            \n                                 EMAIL_FROM\n                            \n                        \n                        \n                            \n                                Value : EMAIL_FROM\n                            \n                        \n                        \n                            \n                                 DB_HOST\n                            \n                        \n                        \n                            \n                                Value : DB_HOST\n                            \n                        \n                        \n                            \n                                 SERVER_HOST\n                            \n                        \n                        \n                            \n                                Value : SERVER_HOST\n                            \n                        \n            \n        \n\n    src/keys/ranks.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        RanksEnum\n                    \n                \n                        \n                            \n                                 ADMINISTRATOR\n                            \n                        \n                        \n                            \n                                Value : ADMINISTRATOR\n                            \n                        \n                        \n                            \n                                 MODERATOR\n                            \n                        \n                        \n                            \n                                Value : MODERATOR\n                            \n                        \n                        \n                            \n                                 PREMIUM\n                            \n                        \n                        \n                            \n                                Value : PREMIUM\n                            \n                        \n                        \n                            \n                                 SELLER\n                            \n                        \n                        \n                            \n                                Value : SELLER\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            bootstrap\n                        \n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nAkatsuki Project Global API REST test by the Kodachi team.\nThese tests are generated with the Postman client program and are intended to test and verify that the API works correctly and that the client can use it safely, easily and without any problems.\nImportant notes\n\nThe tests must be executed with the authorization of the administrator and all events, problems or actions carried out with the API must be informed.\nThe API can only be tested by assistant administrators and some moderators, to avoid unwanted data leakage.\n\nReporting any important problem is recommended so that it can be corrected by high-ranking administrators and prevent the end customer from being affected by damaging the platform. Please inform all of this to high-ranking administrators or make a \"Failure Report\" in the API repository.\nStart the API\n- $ yarn start: 'With this command the API is initialized locally and without changes in real time.'\n- $ yarn start:dev_: 'With this command the API is initialized locally and with changes in real time.'\n- $ yarn format: 'With this command the entire API code is formatted to maintain a standard and order in the code.'Important notes about new Commits.\n\nThe commit will not be accepted if it has a corrupt code or the code has a bug that was not corrected.\nThe commit will not be accepted if the general file structure of the API is changed.\nThe commit will be accepted after being reviewed by the administrators and tested by the same on a local PC before it can be released to the public and added to the master branch.\nAny questions, problems or comments, inform the general administrator \"@Sawako__\".\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AdminModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ConfigModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MarketModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TransactionModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AdminModule\n\n\n\ncluster_AdminModule_providers\n\n\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_ConfigModule\n\n\n\ncluster_ConfigModule_exports\n\n\n\ncluster_MarketModule\n\n\n\ncluster_MarketModule_providers\n\n\n\ncluster_TransactionModule\n\n\n\ncluster_TransactionModule_providers\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_exports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nAdminService\n\nAdminService\n\n\n\nAdminModule\n\nAdminModule\n\nAdminModule -->\n\nAdminService->AdminModule\n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAdminModule->AppModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nMarketModule\n\nMarketModule\n\nMarketModule -->\n\nAuthModule->MarketModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nAuthModule->UserModule\n\n\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nJwtStrategy \n\nJwtStrategy \n\nJwtStrategy  -->\n\nAuthModule->JwtStrategy \n\n\n\n\n\nConfigModule\n\nConfigModule\n\nUserModule -->\n\nConfigModule->UserModule\n\n\n\nAppModule -->\n\nConfigModule->AppModule\n\n\n\n\n\nConfigService \n\nConfigService \n\nConfigService  -->\n\nConfigModule->ConfigService \n\n\n\nAppModule -->\n\nMarketModule->AppModule\n\n\n\n\n\nTransactionModule\n\nTransactionModule\n\nAppModule -->\n\nTransactionModule->AppModule\n\n\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nUserService \n\nUserService \n\nUserService  -->\n\nUserModule->UserService \n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nMarketService\n\nMarketService\n\nMarketModule -->\n\nMarketService->MarketModule\n\n\n\n\n\nTransactionService\n\nTransactionService\n\nTransactionModule -->\n\nTransactionService->TransactionModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        7 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    6 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    7 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    50 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            GetUser   (src/.../user.decorator.ts)\n                        \n                        \n                            Rank   (src/.../rank.decorator.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/decorators/user.decorator.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            GetUser\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createParamDecorator((key, req) =>\n  key ? req.user[key] : req.user,\n)\n                        \n                    \n\n\n            \n        \n\n    src/decorators/rank.decorator.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            Rank\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (...rank: string[]) => SetMetadata('rank', rank)\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
