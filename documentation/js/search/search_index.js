var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.8","fields":["title","body"],"fieldVectors":[["title/controllers/AdminController.html",[0,1.877,1,3.02]],["body/controllers/AdminController.html",[0,2.311,1,4.7,2,2.311,3,0.14,4,0.14,5,0.106,6,4.472,7,3.462,8,1.354,9,0.194,10,2.698,11,0.767,12,3.696,13,6.512,14,6.198,15,1.064,16,0.013,17,6.48,18,0.364,19,5.127,20,2.698,21,5.127,22,4.729,23,4.798,24,5.041,25,0.399,26,6.48,27,5.127,28,2.22,29,1.979,30,0.268,31,1.497,32,6.48,33,0.63,34,3.462,35,4.376,36,4.376,37,3.462,38,1.601,39,4.501,40,4.472,41,4.041,42,3.649,43,4.376,44,1.908,45,2.41,46,5.127,47,0.14,48,0.386,49,2.134,50,2.921,51,2.168,52,2.596,53,3.181,54,5.127,55,4.041,56,3.462,57,4.041,58,1.186,59,2.633,60,5.127,61,5.127,62,0.008,63,0.01,64,0.008]],["title/modules/AdminModule.html",[65,1.733,66,2.811]],["body/modules/AdminModule.html",[1,5.449,2,3.155,3,0.159,4,0.159,5,0.12,16,0.013,22,3.679,33,0.673,38,1.814,39,5.135,40,5.066,41,4.578,44,2.161,47,0.159,48,0.437,62,0.009,63,0.011,64,0.009,65,3.127,66,5.474,67,2.983,68,2.983,69,3.29,70,3.29,71,2.983,72,4.255,73,3.29,74,5.066,75,5.066,76,3.964,77,3.29,78,3.128,79,5.808,80,5.808,81,3.679,82,2.618,83,3.679,84,5.808]],["title/injectables/AdminService.html",[39,2.637,85,1.803]],["body/injectables/AdminService.html",[3,0.141,4,0.141,5,0.106,9,0.194,10,2.703,11,0.768,12,3.7,13,6.52,14,5.664,16,0.013,18,0.4,20,2.703,22,5.062,28,2.812,29,2.747,30,0.34,31,1.896,33,0.65,38,1.607,39,4.114,41,4.055,42,3.655,44,2.416,45,2.418,47,0.141,48,0.387,49,2.703,50,2.928,51,2.172,52,2.602,53,2.525,59,2.642,62,0.008,63,0.01,64,0.008,82,2.319,85,2.812,86,3.075,87,4.487,88,5.144,89,4.735,90,5.047,91,5.144,92,5.144,93,6.493,94,5.144,95,4.385,96,3.259,97,1.19,98,5.144,99,5.144,100,3.259,101,1.452,102,5.144,103,5.144,104,4.055,105,5.144,106,2.914,107,3.259,108,3.473,109,0.845,110,4.055]],["title/controllers/AppController.html",[0,1.877,111,3.02]],["body/controllers/AppController.html",[0,3.159,2,2.623,3,0.159,4,0.159,5,0.12,9,0.22,10,2.917,15,1.151,16,0.013,18,0.393,20,2.917,25,0.438,33,0.591,38,1.817,47,0.159,48,0.438,49,2.423,52,2.807,62,0.009,63,0.011,64,0.009,111,5.082,112,5.076,113,7.802,114,7.802,115,5.819,116,5.819,117,5.819,118,3.929,119,3.929,120,3.296,121,5.819,122,5.076,123,5.076,124,3.929,125,5.819,126,2.089,127,1.391,128,5.076,129,5.076]],["title/modules/AppModule.html",[65,1.733,130,3.02]],["body/modules/AppModule.html",[2,2.544,3,0.114,4,0.114,5,0.086,12,2.653,16,0.013,25,0.233,33,0.694,38,1.297,44,2.1,45,2.653,47,0.114,48,0.313,51,1.389,62,0.006,63,0.009,64,0.006,65,2.669,66,5.009,67,2.133,68,2.133,69,2.352,70,2.352,71,2.133,72,3.197,73,2.352,76,3.197,77,2.352,78,2.237,81,2.631,82,1.872,83,4.357,101,1.942,111,4.65,130,5.968,131,3.622,132,3.622,133,4.202,134,4.616,135,5.009,136,5.009,137,5.009,138,4.153,139,4.153,140,5.643,141,4.153,142,3.273,143,4.021,144,2.804,145,2.631,146,2.804,147,4.153,148,5.643,149,3.273,150,3.273,151,4.153,152,4.153,153,5.643,154,4.153,155,3.622,156,4.923,157,4.153,158,3.012,159,4.094,160,4.153,161,5.643,162,3.273,163,4.153,164,4.153,165,4.153,166,4.153,167,4.923,168,5.643,169,4.153,170,4.153,171,4.153,172,1.757,173,4.153,174,4.153,175,4.153,176,1.221,177,4.153,178,4.153,179,4.153,180,4.153,181,4.153,182,3.622,183,3.622,184,3.622,185,4.153,186,4.153,187,2.804,188,4.153,189,4.153,190,4.153,191,4.153,192,4.153,193,4.153,194,4.153,195,4.153,196,4.153,197,4.153,198,5.643,199,5.643,200,4.153,201,4.153,202,3.622,203,4.153,204,4.153,205,4.153,206,0.524,207,3.273,208,4.153,209,4.153]],["title/controllers/AuthController.html",[0,1.877,210,3.02]],["body/controllers/AuthController.html",[0,1.2,2,1.2,3,0.073,4,0.073,5,0.055,7,1.797,9,0.1,10,1.702,11,0.791,12,3.812,15,1.151,16,0.013,18,0.393,20,2.917,23,5.423,24,5.544,25,0.478,28,3.034,29,2.704,30,0.367,31,2.045,33,0.591,34,1.797,35,3.77,36,4.731,37,1.797,38,0.831,42,2.556,43,4.731,44,0.99,45,1.251,47,0.073,48,0.2,49,1.108,50,1.843,51,1.367,52,2.738,53,3.44,55,2.098,56,4.613,57,2.098,58,1.58,59,3.509,62,0.004,63,0.006,64,0.004,106,1.508,118,1.797,119,1.797,120,1.508,124,1.797,126,2.004,127,1.19,210,2.965,211,2.321,212,2.661,213,4.34,214,4.34,215,4.975,216,4.975,217,3.565,218,4.34,219,4.975,220,4.34,221,4.34,222,3.565,223,3.536,224,5.582,225,5.582,226,2.661,227,2.661,228,3.565,229,2.321,230,4.975,231,4.087,232,2.661,233,5.188,234,2.661,235,4.869,236,4.869,237,4.087,238,2.661,239,2.661,240,4.34,241,4.087,242,2.661,243,2.661,244,3.77,245,4.087,246,2.661,247,2.321,248,1.868,249,2.661,250,4.975,251,2.661,252,2.661,253,4.087,254,2.661,255,2.661,256,3.77,257,4.087,258,2.661,259,0.799,260,3.565,261,5.582,262,5.582,263,5.582,264,4.087,265,2.661,266,2.661,267,2.321,268,2.321,269,3.152,270,2.321,271,1.2,272,2.321,273,2.321,274,2.321,275,1.797,276,2.098,277,2.661,278,2.661,279,2.661,280,2.661,281,2.321,282,0.52,283,2.661,284,2.661,285,2.661,286,2.661,287,6.023,288,2.661,289,2.661,290,2.661,291,4.802,292,4.802,293,2.661,294,2.661,295,2.661,296,2.661,297,2.661,298,2.661,299,4.975,300,2.661,301,2.661,302,2.661,303,2.661,304,2.661,305,2.661,306,2.661,307,2.321,308,2.661,309,2.661,310,2.098,311,2.098,312,2.661,313,2.661,314,2.661,315,2.661,316,2.661]],["title/modules/AuthModule.html",[65,1.733,133,2.358]],["body/modules/AuthModule.html",[2,2.9,3,0.139,4,0.139,5,0.105,16,0.013,33,0.696,38,1.583,44,1.886,47,0.139,48,0.382,52,2.03,62,0.008,63,0.01,64,0.008,65,2.942,67,2.603,68,2.603,69,2.87,70,2.87,71,2.603,72,4.003,73,4.003,76,3.644,77,2.87,78,2.73,81,3.21,82,2.285,83,4.075,120,2.87,133,4.609,134,3.845,142,3.994,143,3.818,144,3.422,145,3.21,146,3.422,167,4.42,210,5.126,248,1.695,269,4.967,270,4.42,271,2.285,317,4.42,318,4.42,319,4.42,320,5.6,321,5.067,322,5.067,323,5.067,324,6.432,325,5.067,326,3.994,327,4.42,328,5.067,329,5.067,330,3.994,331,5.067,332,5.067,333,5.067,334,4.42,335,5.067,336,5.067,337,5.067]],["title/injectables/AuthService.html",[85,1.803,269,2.637]],["body/injectables/AuthService.html",[3,0.043,4,0.043,5,0.033,9,0.06,10,1.118,11,0.731,12,3.521,16,0.013,18,0.349,20,2.433,25,0.448,28,2.618,29,2.463,30,0.326,31,1.765,33,0.593,38,0.495,42,1.795,44,0.999,45,0.745,47,0.043,48,0.119,49,1.118,50,2.528,51,1.876,52,1.076,53,3.364,59,3.348,62,0.002,63,0.004,64,0.002,82,0.714,85,1.163,86,0.947,89,2.607,90,2.779,95,3.6,96,1.004,97,0.366,100,4.687,101,2.175,106,2.331,109,0.26,126,2.596,127,1.341,143,2.739,144,1.07,145,1.004,146,1.07,149,1.249,150,1.249,172,0.405,176,0.581,182,2.342,206,0.2,213,2.342,214,2.342,217,3.048,218,2.342,220,2.342,221,3.048,222,1.382,223,2.214,228,1.382,229,2.342,233,4.628,235,3.048,236,3.048,240,3.589,244,3.6,247,2.342,248,1.784,256,3.11,259,0.9,260,1.382,269,1.701,271,0.714,272,1.382,273,1.382,274,1.382,281,5.977,282,1.299,307,1.382,326,1.249,338,1.382,339,0.238,340,3.169,341,3.494,342,2.685,343,2.685,344,1.249,345,3.494,346,4.115,347,5.332,348,2.685,349,4.115,350,1.584,351,4.766,352,2.116,353,2.342,354,1.584,355,6.641,356,1.584,357,2.685,358,1.584,359,1.584,360,1.584,361,1.584,362,2.685,363,4.115,364,1.584,365,2.685,366,1.584,367,4.115,368,4.115,369,1.584,370,0.53,371,0.853,372,2.685,373,2.685,374,3.868,375,4.421,376,3.63,377,1.382,378,1.584,379,2.342,380,1.584,381,1.382,382,1.584,383,1.382,384,1.382,385,0.947,386,1.004,387,1.382,388,1.948,389,4.364,390,3.943,391,1.813,392,1.382,393,1.149,394,4.308,395,1.382,396,3.494,397,4.191,398,2.685,399,1.584,400,2.685,401,2.685,402,4.017,403,4.017,404,3.63,405,4.766,406,3.589,407,3.589,408,3.589,409,3.589,410,2.685,411,4.115,412,1.584,413,2.685,414,1.584,415,1.584,416,1.584,417,1.584,418,4.605,419,1.584,420,2.685,421,2.685,422,1.584,423,2.685,424,2.685,425,1.584,426,5.748,427,1.813,428,1.948,429,1.584,430,2.342,431,1.584,432,1.347,433,1.584,434,1.584,435,1.382,436,1.382,437,1.584,438,1.584,439,1.584,440,4.068,441,5.036,442,1.584,443,1.584,444,1.584,445,1.584,446,1.584,447,1.584,448,3.63,449,2.685,450,1.584,451,1.584,452,3.048,453,1.584,454,1.584,455,2.754,456,1.584,457,1.073,458,1.095,459,2.685,460,4.115,461,2.342,462,2.685,463,1.584,464,5.003,465,4.605,466,5.003,467,3.243,468,3.494,469,3.494,470,3.494,471,2.685,472,1.584,473,1.584,474,5.332,475,2.685,476,1.584,477,1.584,478,1.584,479,1.584,480,1.584,481,1.584,482,1.584,483,1.584,484,1.584,485,2.685,486,1.249,487,1.043,488,4.115,489,1.584,490,2.685,491,4.605,492,2.685,493,2.685,494,0.952,495,2.342,496,2.342,497,3.494,498,4.892,499,1.382,500,1.584,501,4.115,502,4.115,503,4.115,504,1.584,505,0.418,506,1.249,507,1.249,508,1.584,509,1.584,510,1.584,511,1.584,512,3.494,513,1.584,514,2.685,515,4.364,516,1.382,517,2.685,518,2.685,519,5.003,520,2.685,521,2.685,522,1.584,523,1.249,524,1.584,525,1.584,526,3.341,527,3.048,528,3.341,529,4.203,530,1.584,531,1.584,532,1.584,533,2.342,534,2.685,535,1.584,536,0.664,537,1.584,538,1.584,539,2.685,540,1.584,541,1.584,542,1.584,543,1.584,544,1.584,545,1.584,546,1.584,547,1.249,548,1.584,549,1.584,550,2.685,551,1.584,552,2.685,553,1.584,554,1.584,555,1.249,556,1.584,557,1.584,558,1.584,559,1.584,560,1.584,561,1.584,562,1.584,563,1.584,564,1.584,565,1.584,566,1.584,567,1.584,568,1.584,569,1.584,570,1.584,571,1.584,572,1.584,573,1.584,574,2.685,575,3.589,576,1.584,577,1.584,578,1.584,579,1.584,580,1.584,581,1.584,582,1.584,583,1.584,584,1.584,585,1.584,586,1.584,587,1.249,588,1.584,589,1.382,590,1.584,591,1.584,592,1.382,593,1.584,594,1.149,595,0.343,596,2.685,597,1.584,598,1.249,599,1.584]],["title/classes/BuyerAddMarketDto.html",[48,0.314,600,3.02]],["body/classes/BuyerAddMarketDto.html",[3,0.149,4,0.149,5,0.113,9,0.206,11,0.817,15,1.254,16,0.013,18,0.429,25,0.449,30,0.4,33,0.617,47,0.149,48,0.508,62,0.008,63,0.01,64,0.008,97,1.264,126,2.625,206,0.851,248,1.828,271,2.464,339,0.598,457,1.117,458,1.117,600,4.892,601,0.583,602,4.768,603,2.284,604,3.602,605,5.465,606,4.143,607,5.465,608,5.465,609,3.757,610,5.465,611,3.443,612,2.367]],["title/classes/BuyerMarket.html",[48,0.314,613,2.488]],["body/classes/BuyerMarket.html",[3,0.128,4,0.128,5,0.097,9,0.177,11,0.821,15,1.119,16,0.013,18,0.383,25,0.45,30,0.378,33,0.517,47,0.198,48,0.544,62,0.007,63,0.009,64,0.007,97,1.086,126,2.593,172,2.132,206,0.969,248,1.57,271,2.116,339,0.543,457,1.144,458,1.144,601,0.501,609,4.121,613,3.66,614,3.17,615,2.202,616,4.694,617,4.694,618,3.891,619,4.694,620,2.678,621,2.806,622,2.666,623,1.747,624,1.626,625,1.747,626,3.405,627,3.405,628,1.122,629,1.016,630,2.806,631,0.95,632,1.626,633,3.17,634,1.626,635,3.405,636,2.974,637,2.806]],["title/classes/BuyerRemoveMarketDto.html",[48,0.314,638,2.811]],["body/classes/BuyerRemoveMarketDto.html",[3,0.163,4,0.163,5,0.123,9,0.225,11,0.796,15,1.168,16,0.013,18,0.399,25,0.442,30,0.372,33,0.504,47,0.163,48,0.536,62,0.009,63,0.011,64,0.009,126,2.728,339,0.631,601,0.637,603,2.373,604,3.426,606,4.029,611,3.426,612,2.583,638,4.803,639,5.204,640,5.966,641,5.966]],["title/classes/ChangelogAuthor.html",[48,0.314,642,3.02]],["body/classes/ChangelogAuthor.html",[3,0.21,4,0.152,5,0.115,9,0.21,11,0.806,15,1.21,16,0.013,18,0.414,25,0.431,30,0.386,33,0.575,47,0.152,48,0.418,62,0.008,63,0.01,64,0.008,97,1.285,172,2.049,206,0.859,248,1.858,271,2.504,339,0.604,457,1.125,458,1.125,601,0.593,609,4.048,615,2.381,618,3.669,620,2.482,622,2.381,642,4.941,643,4.845,644,5.555,645,5.555,646,5.555]],["title/classes/ChangelogModel.html",[22,2.637,48,0.314]],["body/classes/ChangelogModel.html",[3,0.134,4,0.134,5,0.101,9,0.185,11,0.815,15,1.246,16,0.013,18,0.426,22,3.983,25,0.449,30,0.397,33,0.531,47,0.134,48,0.368,62,0.007,63,0.01,64,0.007,97,1.131,172,2.082,176,1.36,187,3.301,339,0.558,379,6.061,494,1.454,601,0.522,615,2.452,620,2.51,622,2.452,631,1.406,632,2.772,633,4.245,634,2.772,642,5.041,647,4.265,648,2.682,649,6.949,650,6.949,651,4.889,652,6.287,653,4.889,654,5.782,655,5.782,656,4.889,657,6.287,658,4.889,659,4.955,660,4.889,661,4.889,662,4.56,663,3.547,664,4.889]],["title/classes/CommentMarket.html",[48,0.314,630,2.488]],["body/classes/CommentMarket.html",[3,0.125,4,0.125,5,0.094,9,0.173,11,0.823,15,1.175,16,0.013,18,0.402,25,0.452,30,0.389,33,0.508,47,0.196,48,0.539,62,0.007,63,0.009,64,0.007,97,1.058,126,2.161,172,2.133,206,0.962,248,1.531,271,2.063,339,0.534,457,1.135,458,1.135,601,0.488,609,4.101,613,2.735,614,3.089,615,2.311,618,3.852,620,2.669,621,2.735,622,2.656,623,1.702,624,1.585,625,1.702,626,3.319,627,3.319,628,1.094,629,0.99,630,3.599,631,1.361,632,2.086,633,4.066,634,2.086,635,4.368,636,4.263,637,2.735,665,4.575,666,4.575,667,4.575,668,4.575]],["title/classes/CommentMarketDto.html",[48,0.314,669,2.811]],["body/classes/CommentMarketDto.html",[3,0.145,4,0.145,5,0.109,9,0.2,11,0.823,15,1.277,16,0.013,18,0.437,25,0.457,30,0.407,33,0.609,47,0.145,48,0.499,62,0.008,63,0.01,64,0.008,97,1.227,126,2.59,206,0.835,248,1.775,339,0.587,457,1.102,458,1.102,601,0.566,603,2.254,604,3.627,606,4.281,609,3.707,611,3.506,612,2.297,636,4.572,669,4.47,670,4.627,671,5.304,672,5.304,673,5.304,674,5.304,675,5.304,676,4.181]],["title/classes/CommentRemoveMarketDto.html",[48,0.314,677,2.811]],["body/classes/CommentRemoveMarketDto.html",[3,0.165,4,0.165,5,0.125,9,0.228,15,1.176,16,0.013,18,0.402,25,0.443,30,0.375,33,0.509,47,0.165,48,0.54,62,0.009,63,0.011,64,0.009,339,0.635,601,0.644,603,2.385,604,3.443,606,4.057,611,3.443,612,2.614,631,1.545,677,4.836,678,5.266,679,6.037,680,6.037]],["title/modules/ConfigModule.html",[65,1.733,134,2.488]],["body/modules/ConfigModule.html",[3,0.163,4,0.163,5,0.123,16,0.013,33,0.599,38,1.856,47,0.163,48,0.448,62,0.009,63,0.011,64,0.009,65,3.158,67,3.053,68,3.053,69,3.367,70,3.367,71,3.053,72,4.02,73,4.297,76,4.02,77,3.367,78,3.201,101,1.678,134,4.8,143,4.292,202,5.184,681,5.184,682,5.184,683,5.943,684,5.943,685,5.943]],["title/classes/ConfigService.html",[48,0.314,143,2.138]],["body/classes/ConfigService.html",[3,0.137,4,0.137,5,0.132,9,0.189,10,2.661,11,0.686,16,0.013,18,0.416,20,2.089,25,0.446,28,2.173,29,1.937,30,0.388,31,1.465,33,0.594,38,1.567,47,0.137,48,0.378,49,2.928,50,3.171,51,2.616,52,2.01,62,0.008,63,0.01,64,0.008,101,1.804,143,3.283,184,4.377,339,0.567,340,4.954,370,1.679,371,2.703,397,3.985,427,3.388,601,0.535,686,4.377,687,7.034,688,6.392,689,4.377,690,5.017,691,6.392,692,6.392,693,5.017,694,1.2,695,5.017,696,5.017,697,5.017,698,5.017,699,5.017,700,5.017,701,6.392,702,5.017,703,5.017,704,5.017,705,5.017,706,6.392,707,5.017,708,5.017,709,3.388,710,5.017,711,6.392,712,5.017,713,4.377,714,5.017,715,4.377,716,5.017,717,4.377,718,5.017,719,4.377,720,5.017,721,4.377,722,5.017,723,4.377,724,5.017,725,5.017]],["title/classes/DiscountMarket.html",[48,0.314,621,2.488]],["body/classes/DiscountMarket.html",[3,0.131,4,0.131,5,0.099,9,0.181,11,0.818,15,1.019,16,0.013,18,0.348,25,0.441,30,0.36,33,0.524,47,0.199,48,0.548,62,0.007,63,0.009,64,0.007,97,1.108,126,2.227,172,2.13,206,0.974,248,1.602,271,2.159,339,0.55,457,1.051,458,1.051,601,0.511,609,4.038,613,2.863,614,3.234,615,2.005,618,3.707,620,2.684,621,3.708,622,2.673,623,2.309,624,2.149,625,2.309,626,4.5,627,4.992,628,1.645,629,1.342,630,2.863,631,0.969,632,1.659,633,3.234,634,1.659,635,3.474,636,3.034,637,2.863,726,4.79,727,4.79]],["title/classes/Email.html",[48,0.314,282,0.814]],["body/classes/Email.html",[3,0.11,4,0.11,5,0.083,8,1.061,9,0.152,11,0.844,16,0.013,18,0.381,25,0.466,30,0.394,31,1.61,47,0.222,48,0.611,58,0.929,62,0.006,63,0.008,64,0.006,109,0.66,127,1.622,176,0.869,206,1.056,259,0.785,282,1.079,339,0.489,432,0.869,457,0.962,458,0.962,487,0.785,494,1.276,505,1.457,536,0.993,595,0.869,601,0.429,628,0.96,629,1.589,631,0.812,648,1.55,694,1.622,728,1.672,729,1.941,730,1.876,731,4.016,732,4.016,733,1.928,734,4.016,735,4.016,736,1.419,737,1.409,738,1.409,739,1.506,740,0.84,741,0.899,742,1.097,743,0.899,744,1.097,745,1.097,746,1.097,747,1.097,748,0.993,749,0.993,750,0.993,751,0.993,752,0.993,753,0.929,754,1.194,755,1.097,756,0.899,757,1.097,758,1.194,759,1.026,760,1.026,761,1.363,762,1.363,763,1.363,764,2.21,765,0.96,766,1.739]],["title/classes/Email-1.html",[48,0.263,282,0.683,767,0.835]],["body/classes/Email-1.html",[3,0.079,4,0.079,5,0.06,8,0.767,9,0.165,11,0.83,15,0.959,16,0.013,18,0.328,25,0.442,30,0.344,31,1.275,33,0.369,47,0.208,48,0.573,58,0.672,62,0.004,63,0.007,64,0.004,97,0.672,101,0.82,109,0.477,127,1.396,172,2.173,176,1.677,206,0.998,259,0.568,282,0.854,339,0.387,370,2.779,432,0.628,457,0.667,458,0.667,487,0.568,494,1.214,505,1.153,536,0.718,595,0.628,601,0.31,603,0.907,615,1.887,620,2.734,622,2.73,623,1.08,624,2.638,625,1.08,628,0.694,629,1.423,631,0.587,632,1.006,634,1.006,694,1.396,729,1.709,730,1.68,733,1.82,736,0.914,737,0.742,738,0.742,739,1.044,740,0.608,741,0.977,742,1.192,743,0.65,744,0.793,745,0.793,746,0.793,747,0.793,748,0.718,749,0.718,750,0.718,751,0.718,752,0.718,753,0.672,754,0.945,755,0.793,756,0.65,757,0.793,758,0.945,759,0.742,760,0.742,761,1.079,762,1.079,763,1.079,765,0.694,767,0.694,768,1.257,769,1.84,770,2.904,771,2.528,772,2.904,773,2.904,774,2.904,775,2.103,776,1.164,777,1.257,778,1.209,779,1.257,780,1.209,781,1.309,782,1.309,783,1.257,784,1.309,785,1.309,786,2.822,787,1.686,788,2.185]],["title/classes/GeneralGateway.html",[48,0.314,159,3.02]],["body/classes/GeneralGateway.html",[3,0.119,4,0.119,5,0.09,9,0.164,10,2.423,15,0.714,16,0.013,18,0.41,20,2.423,25,0.244,28,2.841,29,2.533,30,0.383,31,1.915,33,0.617,38,1.358,47,0.119,48,0.327,49,1.81,50,3.39,51,2.569,52,2.629,62,0.007,63,0.009,64,0.007,101,1.643,126,2.089,159,4.222,172,1.487,176,1.259,207,3.427,339,0.516,340,4.763,370,1.454,371,2.342,387,3.792,388,4.222,389,5.724,390,5.172,394,3.93,397,3.97,402,5.077,403,5.077,404,4.588,405,5.523,406,5.077,407,5.077,408,5.077,409,5.077,486,3.427,487,1.37,498,5.077,516,3.792,601,0.464,758,1.627,759,1.487,760,1.487,767,1.676,789,3.792,790,5.077,791,6.561,792,6.561,793,6.561,794,5.82,795,5.82,796,4.347,797,4.494,798,5.82,799,5.82,800,5.077,801,4.347,802,6.561,803,5.82,804,4.347,805,5.077,806,5.82,807,4.347,808,5.82,809,3.792,810,4.347,811,5.82,812,5.82,813,5.82,814,5.82,815,5.82,816,5.82,817,4.347,818,5.82,819,4.347,820,4.347,821,3.792,822,4.347]],["title/interfaces/IJwtPayload.html",[391,2.811,823,3.02]],["body/interfaces/IJwtPayload.html",[3,0.161,4,0.161,5,0.122,9,0.223,16,0.013,25,0.475,30,0.42,31,2.062,47,0.161,62,0.009,63,0.011,64,0.009,106,4.44,109,1.287,282,1.532,339,0.627,391,4.769,487,1.532,629,1.636,823,4.278,824,5.897,825,5.144,826,7.837]],["title/injectables/JwtStrategy.html",[85,1.803,320,2.811]],["body/injectables/JwtStrategy.html",[3,0.129,4,0.129,5,0.097,9,0.178,10,2.557,12,3.211,16,0.013,18,0.345,20,1.963,28,2.659,29,2.371,30,0.322,31,1.793,33,0.678,38,1.473,44,1.755,47,0.129,48,0.355,49,2.557,50,2.126,51,2.055,52,1.89,53,2.315,62,0.007,63,0.009,64,0.007,82,2.126,85,2.659,86,2.819,89,4.584,96,2.988,97,1.091,100,4.753,101,2.118,106,3.479,120,2.671,123,4.114,126,1.693,143,4.024,144,3.184,145,2.988,146,3.184,176,1.02,248,2.285,271,2.126,282,1.201,320,4.147,330,3.717,334,4.114,344,3.717,375,6.063,391,4.886,392,4.114,393,3.421,397,3.479,426,3.717,427,3.184,428,3.421,455,3.717,486,5.383,487,0.922,523,3.717,709,3.184,780,1.963,787,1.82,827,4.114,828,6.141,829,4.716,830,6.141,831,4.716,832,4.716,833,4.716,834,4.716,835,4.114,836,4.716,837,4.716,838,4.716,839,4.716,840,4.716,841,4.716,842,6.141,843,4.114,844,4.114,845,4.716,846,4.716,847,4.716,848,4.716,849,4.716,850,4.716,851,4.114,852,4.114]],["title/classes/Market.html",[48,0.314,736,0.871]],["body/classes/Market.html",[3,0.105,4,0.105,5,0.079,8,1.015,9,0.145,11,0.844,16,0.013,18,0.426,25,0.466,30,0.419,47,0.22,48,0.607,58,0.889,62,0.006,63,0.008,64,0.006,109,0.632,127,1.28,176,0.832,206,1.062,259,0.752,282,0.752,339,0.475,432,0.832,457,1.069,458,1.069,487,0.752,494,1.238,505,1.414,536,0.95,595,0.832,601,0.41,628,0.919,629,1.514,631,0.778,648,2.376,694,1.28,728,1.601,729,1.681,730,1.701,733,1.901,736,1.555,737,1.701,738,1.701,739,1.673,740,0.804,741,0.86,742,1.05,743,0.86,744,1.05,745,1.05,746,1.05,747,1.05,748,0.95,749,0.95,750,0.95,751,0.95,752,0.95,753,0.889,754,1.158,755,1.05,756,0.86,757,1.05,758,1.158,759,0.982,760,0.982,761,1.323,762,1.323,763,1.323,764,2.145,765,0.919,766,1.665,853,3.845,854,3.845,855,3.845,856,3.845,857,3.845,858,3.845,859,3.845,860,3.845]],["title/controllers/MarketController.html",[0,1.877,861,3.02]],["body/controllers/MarketController.html",[0,1.294,2,1.294,3,0.079,4,0.079,5,0.059,7,1.939,9,0.108,10,1.803,11,0.791,12,3.81,15,1.149,16,0.013,18,0.393,20,2.913,23,5.332,24,5.473,25,0.469,28,3.029,29,2.7,30,0.366,31,2.042,33,0.647,34,1.939,35,4.59,36,4.59,37,1.939,38,0.897,42,2.678,43,4.59,44,1.068,45,1.35,47,0.079,48,0.216,49,1.195,50,1.952,51,1.449,52,2.803,53,3.435,55,2.263,56,4.422,57,2.263,58,1.515,59,3.363,62,0.004,63,0.007,64,0.004,109,0.472,118,1.939,119,1.939,120,1.626,124,1.939,206,0.658,275,1.939,276,2.263,291,4.519,292,4.519,310,4.575,311,3.413,385,1.716,386,1.819,638,4.422,669,4.422,677,4.422,736,0.601,861,3.141,862,2.504,863,4.547,864,4.547,865,3.781,866,4.547,867,4.547,868,4.547,869,4.547,870,3.781,871,2.504,872,4.33,873,2.871,874,2.504,875,3.527,876,4.33,877,2.871,878,3.777,879,4.422,880,4.33,881,2.871,882,2.871,883,6.103,884,6.801,885,4.33,886,2.871,887,5.712,888,2.504,889,4.33,890,2.871,891,3.777,892,3.413,893,2.871,894,2.871,895,3.777,896,4.33,897,2.871,898,3.777,899,4.422,900,4.33,901,2.871,902,2.504,903,4.33,904,2.083,905,3.302,906,2.504,907,2.263,908,2.504,909,2.504,910,2.504,911,2.263,912,2.924,913,2.504,914,2.504,915,2.504,916,2.871,917,2.871,918,2.871,919,2.504,920,2.871,921,2.871,922,2.871,923,2.871,924,2.871,925,5.804,926,2.871,927,2.871,928,2.504,929,2.871,930,2.871,931,2.871]],["title/classes/MarketModel.html",[48,0.314,875,2.243]],["body/classes/MarketModel.html",[3,0.101,4,0.101,5,0.076,9,0.227,11,0.829,15,1.306,16,0.013,18,0.447,25,0.421,29,2.322,30,0.416,33,0.551,47,0.101,48,0.277,62,0.006,63,0.008,64,0.006,97,0.852,172,2.109,176,1.124,187,2.487,206,0.902,248,1.232,271,1.66,339,0.461,457,0.919,458,0.919,494,1.201,601,0.393,609,3.538,613,4.117,615,2.498,618,2.797,620,2.526,621,3.596,622,2.498,623,1.932,625,1.932,630,4.117,631,1.217,632,2.263,634,2.263,637,4.117,648,2.322,654,4.093,655,4.093,662,3.767,663,2.672,730,1.537,733,1.562,736,1.441,737,1.537,738,1.537,740,1.259,767,1.793,775,2.41,776,1.476,787,2.005,875,2.797,932,3.213,933,4.741,934,4.741,935,4.741,936,3.683,937,3.683,938,5.247,939,3.683,940,3.683,941,4.093,942,4.53,943,3.683,944,3.683,945,3.683,946,3.683,947,3.683,948,3.683,949,5.193,950,3.683,951,3.683,952,3.683,953,5.698,954,3.683,955,3.683,956,3.683,957,3.683,958,3.683,959,3.683,960,3.683,961,3.683,962,3.683,963,3.213,964,5.247]],["title/modules/MarketModule.html",[65,1.733,135,2.811]],["body/modules/MarketModule.html",[2,3.102,3,0.154,4,0.154,5,0.117,16,0.013,33,0.68,38,1.764,44,2.101,47,0.154,48,0.425,62,0.009,63,0.011,64,0.009,65,3.089,67,2.901,68,2.901,69,3.199,70,3.199,71,2.901,72,4.204,73,3.199,76,3.898,77,3.199,78,3.042,81,3.577,82,2.546,83,4.359,133,4.562,135,5.556,158,4.096,861,5.383,875,3.042,905,5.102,906,4.926,907,4.451,965,4.926,966,5.647,967,4.926,968,5.647,969,5.647,970,5.647]],["title/injectables/MarketService.html",[85,1.803,905,2.637]],["body/injectables/MarketService.html",[3,0.051,4,0.051,5,0.039,9,0.071,10,1.289,11,0.756,12,3.641,16,0.013,18,0.37,20,2.6,25,0.42,28,2.785,29,2.91,30,0.353,31,1.877,33,0.568,38,0.586,42,2.028,44,1.152,45,0.883,47,0.051,48,0.141,49,1.289,50,2.284,51,1.695,52,2.502,53,3.42,59,3.787,62,0.003,63,0.005,64,0.003,82,0.847,85,1.34,86,1.122,89,2.901,90,3.093,95,4.068,96,1.189,97,0.434,100,4.67,101,2.26,104,1.48,107,3.817,109,0.99,110,2.44,126,2.461,172,1.009,206,0.498,339,0.275,340,3.454,370,0.628,371,1.667,374,2.864,376,5.196,385,1.122,386,1.189,394,4.216,395,1.638,440,4.371,441,5.348,448,2.44,457,0.7,458,0.7,467,4.297,506,3.993,507,2.44,526,3.675,528,4.529,555,1.48,594,2.864,598,3.993,600,3.675,603,2.553,631,1.103,636,1.189,638,3.421,648,1.195,659,1.48,669,3.421,677,3.681,709,3.421,730,0.791,736,0.393,737,1.17,738,1.009,740,0.826,765,1.303,767,0.449,778,0.782,863,2.7,864,2.7,865,2.245,866,3.444,867,3.444,868,2.7,869,3.444,870,2.864,871,2.7,874,2.7,875,3.106,878,2.7,879,3.421,883,4.755,884,6.373,887,3.444,888,1.638,891,2.7,895,1.638,898,1.638,899,3.681,904,3.322,905,1.961,907,1.48,908,1.638,909,1.638,910,1.638,914,1.638,915,1.638,933,2.44,934,3.112,935,3.112,971,1.638,972,3.095,973,1.877,974,3.095,975,3.095,976,1.877,977,1.877,978,1.877,979,1.877,980,1.877,981,1.877,982,5.066,983,1.877,984,1.877,985,1.877,986,1.877,987,3.095,988,1.877,989,1.638,990,3.095,991,1.877,992,1.877,993,1.877,994,3.095,995,1.877,996,1.877,997,1.877,998,2.7,999,1.877,1000,2.7,1001,3.095,1002,3.095,1003,4.419,1004,1.877,1005,2.7,1006,3.095,1007,6.025,1008,3.095,1009,3.095,1010,3.095,1011,5.029,1012,1.877,1013,1.877,1014,5.451,1015,5.451,1016,1.877,1017,3.095,1018,3.095,1019,1.877,1020,1.877,1021,3.444,1022,5.066,1023,4.58,1024,1.877,1025,5.447,1026,6.431,1027,1.877,1028,1.877,1029,1.877,1030,3.948,1031,4.755,1032,5.451,1033,1.877,1034,6.431,1035,5.066,1036,4.58,1037,1.877,1038,1.877,1039,1.877,1040,1.877,1041,1.877,1042,1.877,1043,5.61,1044,5.066,1045,4.58,1046,1.877,1047,1.877,1048,1.877,1049,1.877,1050,1.877,1051,1.877,1052,1.877,1053,5.451,1054,5.451,1055,1.877,1056,3.095,1057,1.877,1058,3.112,1059,1.877,1060,1.877,1061,3.948,1062,3.948,1063,1.638,1064,1.877,1065,1.877,1066,5.451,1067,5.765,1068,1.877,1069,3.444,1070,1.877,1071,1.877,1072,1.877]],["title/classes/Membership.html",[48,0.314,753,0.963]],["body/classes/Membership.html",[3,0.112,4,0.112,5,0.084,8,1.081,9,0.155,11,0.844,16,0.013,18,0.357,25,0.465,30,0.375,47,0.222,48,0.613,58,0.946,62,0.006,63,0.009,64,0.006,109,0.672,127,1.336,176,0.885,206,1.058,259,0.8,282,0.8,339,0.496,432,0.885,457,0.972,458,0.972,487,0.8,494,1.292,505,1.476,536,1.011,595,0.885,601,0.437,628,0.978,629,1.636,631,0.828,648,1.579,694,1.336,728,1.703,729,1.954,730,1.887,733,1.921,736,1.43,737,1.427,738,1.427,739,1.521,740,0.856,741,0.915,742,1.117,743,0.915,744,1.117,745,1.117,746,1.117,747,1.117,748,1.011,749,1.011,750,1.011,751,1.011,752,1.011,753,1.292,754,1.479,755,1.117,756,0.915,757,1.117,758,1.209,759,1.045,760,1.045,761,1.381,762,1.381,763,1.381,764,2.239,765,0.978,766,1.772,1073,4.092,1074,4.092,1075,4.092]],["title/classes/Membership-1.html",[48,0.263,753,0.807,767,0.835]],["body/classes/Membership-1.html",[3,0.081,4,0.081,5,0.061,8,0.78,9,0.167,11,0.83,15,0.871,16,0.013,18,0.298,25,0.437,30,0.308,33,0.373,47,0.209,48,0.575,58,0.683,62,0.005,63,0.007,64,0.005,97,0.683,101,0.834,109,0.485,127,1.058,172,2.172,176,1.683,206,1,259,0.578,282,0.578,339,0.392,370,2.787,432,0.639,457,0.676,458,0.676,487,0.578,494,1.227,505,1.168,536,0.73,595,0.639,601,0.315,603,0.923,615,1.714,620,2.737,622,2.732,623,1.099,624,2.647,625,1.099,628,0.706,629,1.485,631,0.598,632,1.023,634,1.023,694,1.058,729,1.722,730,1.691,733,1.807,736,0.926,737,0.755,738,0.755,739,1.058,740,0.618,741,0.99,742,1.208,743,0.661,744,0.807,745,0.807,746,0.807,747,0.807,748,0.73,749,0.73,750,0.73,751,0.73,752,0.73,753,1.023,754,1.274,755,0.807,756,0.661,757,0.807,758,0.957,759,0.755,760,0.755,761,1.093,762,1.093,763,1.093,765,0.706,767,0.706,768,1.279,769,2.802,771,2.296,775,2.125,776,1.184,777,1.279,778,1.23,779,1.279,780,1.23,781,1.332,782,1.332,783,1.279,784,1.332,785,1.332,786,2.843,787,1.708,788,2.208,1076,2.954,1077,2.954,1078,2.954]],["title/classes/Notifications.html",[48,0.314,756,0.931]],["body/classes/Notifications.html",[3,0.111,4,0.111,5,0.084,8,1.076,9,0.154,11,0.844,16,0.013,18,0.356,25,0.464,30,0.386,47,0.222,48,0.612,58,1.468,62,0.006,63,0.009,64,0.006,109,0.669,127,1.332,176,0.882,206,1.057,259,0.797,282,0.797,339,0.494,432,0.882,457,0.97,458,0.97,487,0.797,494,1.289,505,1.471,536,1.007,595,0.882,601,0.435,628,0.974,629,1.546,631,0.824,648,1.573,694,1.332,728,1.697,729,1.733,730,1.743,733,1.954,736,1.543,737,1.423,738,1.423,739,1.518,740,0.853,741,0.912,742,1.113,743,0.912,744,1.113,745,1.113,746,1.113,747,1.113,748,1.007,749,1.007,750,1.007,751,1.007,752,1.007,753,0.943,754,1.205,755,1.113,756,1.246,757,1.733,758,1.205,759,1.041,760,1.041,761,1.377,762,1.377,763,1.377,764,2.232,765,0.974,766,1.765,1079,4.075,1080,4.075,1081,4.075]],["title/classes/Notifications-1.html",[48,0.263,756,0.781,767,0.835]],["body/classes/Notifications-1.html",[3,0.081,4,0.081,5,0.061,8,0.778,9,0.167,11,0.83,15,0.87,16,0.013,18,0.297,25,0.436,30,0.33,33,0.373,47,0.209,48,0.575,58,1.224,62,0.005,63,0.007,64,0.005,97,0.681,101,0.832,109,0.484,127,1.055,172,2.172,176,1.705,206,1,259,0.576,282,0.576,339,0.392,370,2.787,432,0.637,457,0.674,458,0.674,487,0.576,494,1.224,505,1.166,536,0.728,595,0.637,601,0.314,603,0.92,615,1.711,620,2.736,622,2.732,623,1.096,624,2.645,625,1.096,628,0.704,629,1.363,631,0.596,632,1.021,634,1.021,694,1.055,729,1.445,730,1.502,733,1.858,736,1.23,737,0.753,738,0.753,739,1.055,740,0.616,741,0.988,742,1.205,743,0.659,744,0.804,745,0.804,746,0.804,747,0.804,748,0.728,749,0.728,750,0.728,751,0.728,752,0.728,753,0.681,754,0.955,755,0.804,756,0.988,757,1.445,758,0.955,759,0.753,760,0.753,761,1.091,762,1.091,763,1.091,765,0.704,767,0.704,768,1.275,771,2.292,775,2.121,776,1.18,777,1.275,778,1.226,779,1.275,780,1.226,781,1.328,782,1.328,783,1.275,784,1.328,785,1.328,786,2.84,787,1.704,788,2.204,1082,2.946,1083,2.946,1084,2.946]],["title/classes/Online.html",[48,0.314,758,0.901]],["body/classes/Online.html",[3,0.111,4,0.111,5,0.084,8,1.076,9,0.154,11,0.844,16,0.013,18,0.356,25,0.464,30,0.386,47,0.222,48,0.612,58,0.943,62,0.006,63,0.009,64,0.006,109,0.669,127,1.332,176,0.882,206,1.059,259,0.797,282,0.797,339,0.494,432,0.882,457,0.97,458,0.97,487,0.797,494,1.289,505,1.471,536,1.007,595,0.882,601,0.435,628,0.974,629,1.596,631,0.824,648,1.573,694,1.332,728,1.697,729,1.733,730,1.743,733,1.932,736,1.428,737,1.423,738,1.423,739,1.518,740,0.853,741,0.912,742,1.113,743,0.912,744,1.113,745,1.113,746,1.113,747,1.113,748,1.007,749,1.007,750,1.007,751,1.007,752,1.007,753,0.943,754,1.205,755,1.113,756,0.912,757,1.113,758,1.546,759,1.622,760,1.622,761,1.377,762,1.377,763,1.377,764,2.232,765,0.974,766,1.765,1085,4.075,1086,4.075,1087,4.075]],["title/classes/Online-1.html",[48,0.263,758,0.755,767,0.835]],["body/classes/Online-1.html",[3,0.081,4,0.081,5,0.061,8,0.778,9,0.167,11,0.83,15,0.87,16,0.013,18,0.297,25,0.436,30,0.33,33,0.373,47,0.209,48,0.575,58,0.681,62,0.005,63,0.007,64,0.005,97,0.681,101,0.832,109,0.484,127,1.055,172,2.172,176,1.682,206,1.005,259,0.576,282,0.576,339,0.392,370,2.787,432,0.637,457,0.674,458,0.674,487,0.576,494,1.224,505,1.166,536,0.728,595,0.637,601,0.314,603,0.92,615,1.711,620,2.736,622,2.732,623,1.096,624,2.671,625,1.096,628,0.704,629,1.431,631,0.596,632,1.021,634,1.021,694,1.055,729,1.445,730,1.502,733,1.826,736,0.924,737,0.753,738,0.753,739,1.055,740,0.616,741,0.988,742,1.205,743,0.659,744,0.804,745,0.804,746,0.804,747,0.804,748,0.728,749,0.728,750,0.728,751,0.728,752,0.728,753,0.681,754,0.955,755,0.804,756,0.659,757,0.804,758,1.363,759,1.353,760,1.353,761,1.091,762,1.091,763,1.091,765,0.704,767,0.704,768,1.275,769,1.866,771,2.292,775,2.121,776,1.18,777,1.275,778,1.226,779,1.275,780,1.226,781,1.328,782,1.328,783,1.275,784,1.328,785,1.328,786,2.84,787,1.704,788,2.204,1088,2.946,1089,2.946,1090,2.946]],["title/classes/Password.html",[48,0.314,432,0.901]],["body/classes/Password.html",[3,0.109,4,0.109,5,0.082,8,1.055,9,0.151,11,0.844,16,0.013,18,0.38,25,0.466,30,0.393,31,2.14,47,0.222,48,0.611,58,0.924,62,0.006,63,0.008,64,0.006,109,0.656,127,1.618,176,0.864,206,1.055,259,0.781,282,0.781,339,0.488,432,1.189,457,0.96,458,0.96,487,0.781,494,1.271,505,1.452,536,0.988,595,0.864,601,0.426,628,0.955,629,1.587,631,0.808,648,1.542,694,1.618,728,1.663,729,1.937,730,1.873,733,1.927,736,1.416,737,1.404,738,1.404,739,1.502,740,0.836,741,0.894,742,1.091,743,0.894,744,1.091,745,1.091,746,1.091,747,1.091,748,0.988,749,0.988,750,0.988,751,0.988,752,0.988,753,0.924,754,1.189,755,1.091,756,0.894,757,1.091,758,1.189,759,1.021,760,1.021,761,1.358,762,1.358,763,1.358,764,2.202,765,0.955,766,1.73,1091,3.995,1092,3.995,1093,3.995,1094,3.995]],["title/classes/Password-1.html",[48,0.263,432,0.755,767,0.835]],["body/classes/Password-1.html",[3,0.079,4,0.079,5,0.06,8,0.764,9,0.164,11,0.83,15,0.957,16,0.013,18,0.327,25,0.441,30,0.344,31,1.917,33,0.367,47,0.208,48,0.573,58,0.669,62,0.004,63,0.007,64,0.004,97,0.669,101,0.817,109,0.475,127,1.393,172,2.174,176,1.662,206,0.997,259,0.566,282,0.566,339,0.386,370,2.778,432,0.942,457,0.665,458,0.665,487,0.566,494,1.211,505,1.15,536,0.715,595,0.626,601,0.309,603,0.903,615,1.883,620,2.733,622,2.729,623,1.076,624,2.636,625,1.076,628,0.692,629,1.421,631,0.585,632,1.002,634,1.002,694,1.393,729,1.706,730,1.678,733,1.819,736,0.911,737,0.739,738,0.739,739,1.041,740,0.605,741,0.974,742,1.189,743,0.647,744,0.79,745,0.79,746,0.79,747,0.79,748,0.715,749,0.715,750,0.715,751,0.715,752,0.715,753,0.669,754,0.942,755,0.79,756,0.647,757,0.79,758,0.942,759,0.739,760,0.739,761,1.076,762,1.076,763,1.076,765,0.692,767,0.692,768,1.253,769,1.833,771,2.523,775,2.098,776,1.159,777,1.253,778,1.204,779,1.253,780,1.204,781,1.304,782,1.304,783,1.253,784,1.304,785,1.304,786,2.818,787,1.681,788,2.18,1095,2.893,1096,2.893,1097,2.893,1098,2.893]],["title/classes/Rank.html",[48,0.314,109,0.684]],["body/classes/Rank.html",[3,0.111,4,0.111,5,0.084,8,1.677,9,0.154,11,0.844,16,0.013,18,0.356,25,0.464,30,0.386,47,0.222,48,0.612,58,0.943,62,0.006,63,0.009,64,0.006,109,0.915,127,1.332,176,0.882,206,1.057,259,0.797,282,0.797,339,0.494,432,0.882,457,0.97,458,0.97,487,0.797,494,1.289,505,1.471,536,1.007,595,0.882,601,0.435,628,0.974,629,1.546,631,0.824,648,1.573,694,1.332,728,1.697,729,1.733,730,1.743,733,1.954,736,1.428,737,1.423,738,1.423,739,1.708,740,0.853,741,0.912,742,1.113,743,0.912,744,1.113,745,1.113,746,1.113,747,1.113,748,1.007,749,1.007,750,1.007,751,1.007,752,1.007,753,0.943,754,1.205,755,1.733,756,0.912,757,1.113,758,1.205,759,1.041,760,1.041,761,1.377,762,1.377,763,1.377,764,2.232,765,0.974,766,1.765,1099,4.075,1100,4.075,1101,4.075]],["title/classes/Rank-1.html",[48,0.263,109,0.573,767,0.835]],["body/classes/Rank-1.html",[3,0.081,4,0.081,5,0.061,8,1.398,9,0.167,11,0.83,15,0.87,16,0.013,18,0.297,25,0.436,30,0.33,33,0.373,47,0.209,48,0.575,58,0.681,62,0.005,63,0.007,64,0.005,97,0.681,101,0.832,109,0.725,127,1.055,172,2.172,176,1.705,206,1,259,0.576,282,0.576,339,0.392,370,2.787,432,0.637,457,0.674,458,0.674,487,0.576,494,1.224,505,1.166,536,0.728,595,0.637,601,0.314,603,0.92,615,1.711,620,2.736,622,2.732,623,1.096,624,2.645,625,1.096,628,0.704,629,1.363,631,0.596,632,1.021,634,1.021,694,1.055,729,1.445,730,1.502,733,1.858,736,0.924,737,0.753,738,0.753,739,1.406,740,0.616,741,0.988,742,1.205,743,0.659,744,0.804,745,0.804,746,0.804,747,0.804,748,0.728,749,0.728,750,0.728,751,0.728,752,0.728,753,0.681,754,0.955,755,1.445,756,0.659,757,0.804,758,0.955,759,0.753,760,0.753,761,1.091,762,1.091,763,1.091,765,0.704,767,0.704,768,1.275,771,2.292,775,2.121,776,1.18,777,1.275,778,1.226,779,1.275,780,1.226,781,1.328,782,1.328,783,1.275,784,1.328,785,1.328,786,2.84,787,1.704,788,2.204,1102,2.946,1103,2.946,1104,2.946]],["title/guards/RankGuard.html",[912,2.811,1105,3.281]],["body/guards/RankGuard.html",[3,0.149,4,0.149,5,0.112,9,0.205,10,2.798,16,0.013,18,0.377,20,2.263,25,0.377,28,2.91,29,2.595,30,0.352,31,1.962,33,0.567,38,1.698,47,0.149,48,0.41,49,2.263,51,1.819,52,2.693,62,0.008,63,0.01,64,0.008,85,2.91,109,0.893,126,2.413,162,4.285,172,1.389,207,4.285,397,4.318,430,4.742,455,5.298,733,1.607,790,4.742,912,4.539,1106,5.436,1107,4.742,1108,7.623,1109,5.436,1110,7.979,1111,5.436,1112,6.721,1113,7.623,1114,5.436,1115,6.721,1116,5.436,1117,5.436,1118,5.436,1119,6.721,1120,5.436,1121,5.436,1122,5.436]],["title/classes/ReactionAddMarketDto.html",[48,0.314,879,2.811]],["body/classes/ReactionAddMarketDto.html",[3,0.145,4,0.145,5,0.109,9,0.2,11,0.822,15,1.277,16,0.013,18,0.436,25,0.445,30,0.426,33,0.609,47,0.145,48,0.498,62,0.008,63,0.01,64,0.008,97,1.225,126,2.588,206,0.953,248,1.772,271,2.387,339,0.587,457,1.101,458,1.101,601,0.565,603,2.252,604,3.574,606,4.403,609,3.704,611,3.574,612,2.293,879,4.465,1123,4.619,1124,5.295,1125,5.295,1126,5.295,1127,5.295,1128,5.295]],["title/classes/ReactionRemoveMarketDto.html",[48,0.314,899,2.811]],["body/classes/ReactionRemoveMarketDto.html",[3,0.165,4,0.165,5,0.125,9,0.228,15,1.176,16,0.013,18,0.402,25,0.443,30,0.375,33,0.509,47,0.165,48,0.54,62,0.009,63,0.011,64,0.009,126,2.741,339,0.635,601,0.644,603,2.385,604,3.443,606,4.057,611,3.443,612,2.614,899,4.836,1129,5.266,1130,6.037,1131,6.037]],["title/classes/Reactions.html",[48,0.314,740,0.871]],["body/classes/Reactions.html",[3,0.113,4,0.113,5,0.085,8,1.089,9,0.156,11,0.844,16,0.013,18,0.315,25,0.466,30,0.397,47,0.223,48,0.613,58,0.954,62,0.006,63,0.009,64,0.006,109,0.677,127,1.343,176,0.892,206,1.06,259,0.807,282,0.807,339,0.498,432,0.892,457,0.976,458,0.976,487,0.807,494,1.299,505,1.484,536,1.019,595,0.892,601,0.44,628,0.986,629,1.553,631,1.292,648,1.592,694,1.343,728,1.717,729,1.744,730,1.752,733,1.923,736,1.435,737,1.435,738,1.435,739,1.527,740,1.175,741,0.923,742,1.126,743,0.923,744,1.126,745,1.126,746,1.126,747,1.126,748,1.019,749,1.019,750,1.019,751,1.019,752,1.019,753,0.954,754,1.215,755,1.126,756,0.923,757,1.126,758,1.215,759,1.054,760,1.054,761,1.388,762,1.388,763,1.388,764,2.251,765,0.986,766,1.786,1132,4.125,1133,4.125]],["title/classes/Reactions-1.html",[48,0.263,740,0.73,767,0.835]],["body/classes/Reactions-1.html",[3,0.083,4,0.083,5,0.062,8,0.8,9,0.17,11,0.829,15,0.497,16,0.013,18,0.17,25,0.438,30,0.334,33,0.38,47,0.21,48,0.578,58,0.7,62,0.005,63,0.007,64,0.005,97,0.7,101,0.855,109,0.497,127,1.077,172,2.172,176,1.676,206,1.009,259,0.592,282,0.592,339,0.4,370,2.779,432,0.655,457,0.688,458,0.688,487,0.592,494,1.245,505,1.19,536,0.748,595,0.655,601,0.323,603,0.945,615,0.978,620,2.74,622,2.736,623,1.676,624,2.684,625,1.676,628,0.724,629,1.379,631,0.612,632,1.049,634,1.049,694,1.077,729,1.469,730,1.523,733,1.816,736,0.943,737,0.773,738,0.773,739,1.077,740,0.943,741,1.008,742,1.23,743,0.677,744,0.827,745,0.827,746,0.827,747,0.827,748,0.748,749,0.748,750,0.748,751,0.748,752,0.748,753,0.7,754,0.975,755,0.827,756,0.677,757,0.827,758,0.975,759,0.773,760,0.773,761,1.114,762,1.114,763,1.114,765,0.724,767,1.077,768,1.311,771,2.33,775,2.156,776,1.213,777,1.311,778,1.26,779,1.311,780,1.26,781,1.365,782,1.365,783,1.311,784,1.365,785,1.365,786,2.873,787,1.739,788,2.24,1134,3.027]],["title/classes/ReactionsDto.html",[48,0.314,1135,2.811]],["body/classes/ReactionsDto.html",[3,0.158,4,0.158,5,0.119,9,0.218,15,1.231,16,0.013,18,0.421,25,0.455,30,0.424,33,0.487,47,0.158,48,0.525,51,2.783,62,0.009,63,0.011,64,0.009,339,0.619,601,0.616,604,3.509,611,3.509,612,2.5,1135,4.71,1136,5.037,1137,5.906,1138,5.906,1139,5.436,1140,5.775,1141,5.775,1142,5.775]],["title/classes/ReactionsMarket.html",[48,0.314,637,2.488]],["body/classes/ReactionsMarket.html",[3,0.126,4,0.126,5,0.095,9,0.174,11,0.823,15,1.177,16,0.013,18,0.402,25,0.449,30,0.408,33,0.51,47,0.196,48,0.54,62,0.007,63,0.009,64,0.007,97,1.064,126,2.573,172,2.135,206,0.982,248,1.54,271,2.075,339,0.536,457,1.137,458,1.137,601,0.491,609,4.105,613,2.751,614,3.108,615,2.316,618,3.861,620,2.671,621,2.751,622,2.658,623,1.713,624,1.595,625,1.713,626,3.339,627,3.339,628,1.1,629,0.996,630,2.751,631,0.931,632,1.595,633,3.108,634,1.595,635,3.339,636,2.916,637,3.613,1143,4.602,1144,4.602,1145,4.602,1146,4.602]],["title/classes/Security.html",[48,0.314,259,0.814]],["body/classes/Security.html",[3,0.106,4,0.106,5,0.08,8,1.027,9,0.147,11,0.844,16,0.013,18,0.419,25,0.462,30,0.409,47,0.221,48,0.608,58,0.899,62,0.006,63,0.008,64,0.006,109,0.639,127,1.29,176,0.841,206,1.064,259,1.055,282,0.76,339,0.479,432,0.841,457,0.946,458,0.946,487,0.76,494,1.248,505,1.767,536,1.531,595,0.841,601,0.415,628,0.93,629,1.52,631,0.787,648,1.501,694,1.29,728,1.619,729,1.691,730,1.709,733,1.918,736,1.4,737,1.378,738,1.378,739,1.481,740,0.814,741,0.87,742,1.062,743,0.87,744,1.062,745,1.062,746,1.062,747,1.062,748,1.531,749,1.531,750,1.531,751,1.531,752,1.531,753,0.899,754,1.167,755,1.062,756,0.87,757,1.062,758,1.167,759,0.994,760,0.994,761,1.333,762,1.333,763,1.333,764,2.162,765,0.93,766,1.684,1147,3.889,1148,3.889,1149,3.889,1150,3.889,1151,3.889,1152,3.889,1153,3.889]],["title/classes/Security-1.html",[48,0.263,259,0.683,767,0.835]],["body/classes/Security-1.html",[3,0.076,4,0.076,5,0.057,8,0.735,9,0.16,11,0.831,15,1.105,16,0.013,18,0.378,25,0.432,30,0.372,33,0.357,47,0.206,48,0.569,58,0.644,62,0.004,63,0.006,64,0.004,97,0.644,101,0.786,109,0.457,127,1.012,172,2.171,176,1.665,206,1.019,259,0.827,282,0.545,339,0.375,370,2.79,432,0.603,457,0.646,458,0.646,487,0.545,494,1.183,505,1.509,536,1.265,595,0.603,601,0.297,603,0.87,615,2.174,620,2.727,622,2.722,623,1.036,624,2.738,625,1.036,628,0.666,629,1.33,631,0.563,632,0.965,634,0.965,694,1.012,729,1.397,730,1.46,733,1.805,736,0.885,737,0.711,738,0.711,739,1.012,740,0.583,741,0.947,742,1.155,743,0.623,744,0.76,745,0.76,746,0.76,747,0.76,748,1.265,749,1.265,750,1.265,751,1.265,752,1.265,753,0.644,754,0.915,755,0.76,756,0.623,757,0.76,758,0.915,759,0.711,760,0.711,761,1.046,762,1.046,763,1.046,765,0.666,767,0.666,768,1.206,771,2.216,775,2.05,776,1.116,777,1.206,778,1.159,779,1.206,780,1.159,781,1.256,782,1.256,783,1.206,784,1.256,785,1.256,786,2.771,787,1.633,788,2.13,1154,2.785,1155,2.785,1156,2.785,1157,2.785,1158,2.785,1159,2.785,1160,2.785]],["title/classes/SecurityCode.html",[48,0.314,1161,3.02]],["body/classes/SecurityCode.html",[3,0.141,4,0.141,5,0.106,9,0.195,15,1.293,16,0.013,18,0.442,25,0.4,30,0.412,33,0.435,47,0.178,48,0.536,51,2.834,62,0.008,63,0.01,64,0.008,206,1.037,223,3.264,259,1.007,339,0.577,487,1.007,536,1.76,601,0.55,604,3.646,611,2.931,612,2.231,748,1.76,749,1.76,750,1.76,751,1.76,752,1.76,1161,5.166,1162,4.061,1163,6.726,1164,5.152,1165,5.152,1166,5.152,1167,5.152,1168,5.152,1169,5.152,1170,5.152,1171,6.206,1172,5.67]],["title/classes/SecurityDto.html",[48,0.314,256,2.811]],["body/classes/SecurityDto.html",[3,0.144,4,0.144,5,0.109,9,0.199,15,1.3,16,0.013,18,0.444,25,0.37,30,0.414,33,0.444,47,0.144,48,0.496,51,2.839,62,0.008,63,0.01,64,0.008,206,1.04,256,4.446,339,0.584,487,1.405,601,0.561,604,3.62,611,2.969,612,2.277,748,1.777,749,1.777,750,1.777,751,1.777,752,1.777,1139,3.815,1163,6.767,1171,6.238,1173,4.587,1174,5.259,1175,5.259,1176,5.259,1177,5.259,1178,5.259,1179,5.259]],["title/classes/SecurityUpdateDto.html",[48,0.314,223,2.637]],["body/classes/SecurityUpdateDto.html",[3,0.155,4,0.155,5,0.117,9,0.214,15,0.933,16,0.013,18,0.388,25,0.418,30,0.361,33,0.479,47,0.189,48,0.56,51,2.698,62,0.009,63,0.011,64,0.009,206,1,223,4.374,259,1.454,339,0.612,487,1.454,536,1.403,601,0.606,604,3.713,611,3.113,612,2.459,748,1.403,749,1.403,750,1.403,751,1.403,752,1.403,1139,4.119,1161,5.396,1162,4.476,1171,6.356,1172,6.022,1180,5.678,1181,5.678]],["title/classes/Sessions.html",[48,0.314,595,0.901]],["body/classes/Sessions.html",[3,0.11,4,0.11,5,0.083,8,1.058,9,0.151,11,0.844,16,0.013,18,0.38,25,0.468,30,0.394,31,1.607,47,0.222,48,0.611,58,0.927,62,0.006,63,0.008,64,0.006,109,0.658,127,1.317,176,0.867,206,1.058,259,0.783,282,0.783,339,0.488,432,0.867,457,1.085,458,1.085,487,0.783,494,1.567,505,1.789,536,0.99,595,1.191,601,0.428,628,0.958,629,1.537,631,0.81,648,1.546,694,1.317,728,1.668,729,1.718,730,1.731,733,1.927,736,1.417,737,1.407,738,1.407,739,1.504,740,0.838,741,0.896,742,1.094,743,0.896,744,1.094,745,1.094,746,1.094,747,1.094,748,0.99,749,0.99,750,0.99,751,0.99,752,0.99,753,0.927,754,1.191,755,1.094,756,0.896,757,1.094,758,1.191,759,1.024,760,1.024,761,1.361,762,1.361,763,1.361,764,2.206,765,0.958,766,1.735,1182,4.006,1183,4.006,1184,4.006,1185,4.006]],["title/classes/Sessions-1.html",[48,0.263,595,0.755,767,0.835]],["body/classes/Sessions-1.html",[3,0.08,4,0.08,5,0.06,8,0.77,9,0.165,11,0.83,15,0.864,16,0.013,18,0.328,25,0.444,30,0.345,31,1.278,33,0.37,47,0.208,48,0.574,58,0.674,62,0.004,63,0.007,64,0.004,97,0.674,101,0.823,109,0.479,127,1.047,172,2.171,176,1.679,206,1.004,259,0.57,282,0.57,339,0.388,370,2.775,432,0.631,457,0.893,458,0.893,487,0.57,494,1.45,505,1.545,536,0.72,595,0.948,601,0.311,603,0.91,615,1.7,620,2.735,622,2.73,623,1.085,624,2.64,625,1.085,628,0.697,629,1.357,631,0.59,632,1.01,634,1.01,694,1.047,729,1.436,730,1.494,733,1.822,736,0.916,737,0.745,738,0.745,739,1.047,740,0.61,741,0.98,742,1.196,743,0.652,744,0.796,745,0.796,746,0.796,747,0.796,748,0.72,749,0.72,750,0.72,751,0.72,752,0.72,753,0.674,754,0.948,755,0.796,756,0.652,757,0.796,758,0.948,759,0.745,760,0.745,761,1.082,762,1.082,763,1.082,765,0.697,767,0.697,768,1.262,771,2.278,775,2.344,776,1.168,777,1.262,778,1.213,779,1.262,780,1.213,781,1.314,782,1.314,783,1.262,784,1.314,785,1.314,786,2.827,787,2.031,788,2.19,1186,2.915,1187,2.915,1188,2.915,1189,2.915]],["title/classes/SignInDto.html",[48,0.314,244,2.811]],["body/classes/SignInDto.html",[3,0.152,4,0.152,5,0.115,9,0.21,11,0.782,15,1.261,16,0.013,18,0.431,25,0.461,30,0.402,33,0.469,47,0.152,48,0.513,51,2.684,62,0.008,63,0.01,64,0.008,206,0.859,244,4.599,282,1.44,339,0.604,432,1.594,457,1.125,458,1.125,601,0.593,604,3.616,606,3.858,611,3.321,612,2.405,1190,4.845,1191,5.555,1192,5.555,1193,5.555,1194,5.555,1195,5.555,1196,6.811]],["title/classes/Stats.html",[48,0.314,743,0.931]],["body/classes/Stats.html",[3,0.109,4,0.109,5,0.082,8,1.051,9,0.15,11,0.844,16,0.013,18,0.398,25,0.463,30,0.4,47,0.222,48,0.61,58,0.921,62,0.006,63,0.008,64,0.006,109,0.654,127,1.311,176,0.861,206,1.064,259,0.778,282,0.778,339,0.486,432,0.861,457,0.958,458,0.958,487,0.778,494,1.268,505,1.448,536,0.984,595,0.861,601,0.425,628,1.499,629,1.533,631,0.805,648,1.536,694,1.311,728,1.657,729,1.712,730,1.726,733,1.912,736,1.414,737,1.401,738,1.401,739,1.499,740,0.833,741,0.89,742,1.087,743,1.226,744,1.712,745,1.712,746,1.712,747,1.712,748,0.984,749,0.984,750,0.984,751,0.984,752,0.984,753,0.921,754,1.186,755,1.087,756,0.89,757,1.087,758,1.186,759,1.017,760,1.017,761,1.355,762,1.355,763,1.355,764,2.196,765,0.952,766,1.723,1197,3.98,1198,3.98,1199,3.98,1200,3.98,1201,3.98]],["title/classes/Stats-1.html",[48,0.263,743,0.781,767,0.835]],["body/classes/Stats-1.html",[3,0.078,4,0.078,5,0.059,8,0.756,9,0.163,11,0.83,15,1.022,16,0.013,18,0.349,25,0.434,30,0.356,33,0.365,47,0.208,48,0.572,58,0.662,62,0.004,63,0.007,64,0.004,97,0.662,101,0.808,109,0.47,127,1.033,172,2.171,176,1.659,206,1.019,259,0.56,282,0.56,339,0.383,370,2.789,432,0.619,457,0.66,458,0.66,487,0.56,494,1.204,505,1.141,536,0.708,595,0.619,601,0.306,603,0.894,615,2.011,620,2.732,622,2.727,623,1.065,624,2.735,625,1.065,628,1.244,629,1.346,631,0.579,632,0.992,634,0.992,694,1.033,729,1.421,730,1.481,733,1.795,736,0.904,737,0.731,738,0.731,739,1.033,740,0.599,741,0.967,742,1.18,743,0.967,744,1.421,745,1.421,746,1.421,747,1.421,748,0.708,749,0.708,750,0.708,751,0.708,752,0.708,753,0.662,754,0.935,755,0.782,756,0.64,757,0.782,758,0.935,759,0.731,760,0.731,761,1.068,762,1.068,763,1.068,765,0.685,767,0.685,768,1.24,771,2.253,775,2.085,776,1.147,777,1.24,778,1.192,779,1.24,780,1.192,781,1.291,782,1.291,783,1.24,784,1.291,785,1.291,786,2.805,787,1.668,788,2.167,1202,2.863,1203,2.863,1204,2.863,1205,2.863,1206,2.863]],["title/classes/Suspension.html",[48,0.314,741,0.931]],["body/classes/Suspension.html",[3,0.113,4,0.113,5,0.085,8,1.089,9,0.156,11,0.844,16,0.013,18,0.315,25,0.466,30,0.376,47,0.223,48,0.613,58,0.954,62,0.006,63,0.009,64,0.006,109,0.677,127,1.343,176,0.892,206,1.058,259,0.807,282,0.807,339,0.498,432,0.892,457,0.976,458,0.976,487,0.807,494,1.299,505,1.484,536,1.019,595,0.892,601,0.44,628,0.986,629,1.553,631,0.834,648,1.592,694,1.343,728,1.717,729,1.744,730,1.892,733,1.936,736,1.435,737,1.435,738,1.435,739,1.527,740,0.863,741,1.257,742,1.744,743,0.923,744,1.126,745,1.126,746,1.126,747,1.126,748,1.019,749,1.019,750,1.019,751,1.019,752,1.019,753,0.954,754,1.215,755,1.126,756,0.923,757,1.126,758,1.215,759,1.054,760,1.054,761,1.388,762,1.388,763,1.388,764,2.251,765,0.986,766,1.786,1207,4.125,1208,4.125]],["title/classes/Suspension-1.html",[48,0.263,741,0.781,767,0.835]],["body/classes/Suspension-1.html",[3,0.081,4,0.081,5,0.061,8,0.781,9,0.167,11,0.829,15,0.727,16,0.013,18,0.249,25,0.44,30,0.308,33,0.374,47,0.209,48,0.576,58,0.684,62,0.005,63,0.007,64,0.005,97,0.684,101,0.835,109,0.486,127,1.058,172,2.171,176,1.683,206,1.001,259,0.578,282,0.578,339,0.393,370,2.783,432,0.64,457,0.676,458,0.676,487,0.578,494,1.227,505,1.169,536,0.731,595,0.64,601,0.316,603,0.924,615,1.431,620,2.737,622,2.733,623,1.1,624,2.647,625,1.1,628,0.707,629,1.365,631,0.598,632,1.534,634,1.534,694,1.058,729,1.449,730,1.692,733,1.827,736,0.926,737,0.755,738,0.755,739,1.058,740,0.619,741,1.318,742,1.722,743,0.662,744,0.807,745,0.807,746,0.807,747,0.807,748,0.731,749,0.731,750,0.731,751,0.731,752,0.731,753,0.684,754,0.958,755,0.807,756,0.662,757,0.807,758,0.958,759,0.755,760,0.755,761,1.094,762,1.094,763,1.094,765,0.707,767,0.707,768,1.28,771,2.298,775,2.126,776,1.185,777,1.28,778,1.843,779,1.917,780,1.843,781,1.996,782,1.996,783,1.917,784,1.996,785,1.996,786,2.844,787,1.709,788,2.209,1209,2.957,1210,2.957]],["title/classes/Transaction.html",[48,0.314,754,0.901]],["body/classes/Transaction.html",[3,0.105,4,0.105,5,0.079,8,1.013,9,0.145,11,0.844,16,0.013,18,0.425,25,0.466,30,0.419,31,1.56,47,0.22,48,0.607,58,0.887,62,0.006,63,0.008,64,0.006,109,0.63,127,1.277,176,0.83,206,1.06,259,0.75,282,0.75,339,0.474,432,0.83,457,0.939,458,0.939,487,0.75,494,1.538,505,1.411,536,0.948,595,0.83,601,0.409,628,0.917,629,1.513,631,0.776,648,1.48,694,1.277,728,1.597,729,1.679,730,1.699,733,1.9,736,1.515,737,1.699,738,1.699,739,1.672,740,0.802,741,0.858,742,1.047,743,0.858,744,1.047,745,1.047,746,1.047,747,1.047,748,0.948,749,0.948,750,0.948,751,0.948,752,0.948,753,0.887,754,1.33,755,1.047,756,0.858,757,1.047,758,1.156,759,0.98,760,0.98,761,1.321,762,1.321,763,1.321,764,2.464,765,1.47,766,2.662,1211,3.835,1212,3.835,1213,3.835,1214,3.835,1215,3.835,1216,3.835,1217,3.835,1218,3.835]],["title/classes/Transaction-1.html",[48,0.263,754,0.755,767,0.835]],["body/classes/Transaction-1.html",[3,0.076,4,0.076,5,0.057,8,0.735,9,0.16,11,0.832,15,1.104,16,0.013,18,0.389,25,0.441,30,0.391,31,1.234,33,0.357,47,0.206,48,0.568,58,0.644,62,0.004,63,0.006,64,0.004,97,0.644,101,0.785,109,0.457,127,1.011,172,2.17,176,1.665,206,1.011,259,0.544,282,0.544,339,0.375,370,2.759,432,0.602,457,0.646,458,0.646,487,0.544,494,1.496,505,1.117,536,0.688,595,0.602,601,0.297,603,1.597,615,2.091,620,2.727,622,2.722,623,1.035,624,2.615,625,1.035,628,0.665,629,1.329,631,0.563,632,0.964,634,0.964,694,1.011,729,1.396,730,1.46,733,1.783,736,1.195,737,1.307,738,1.307,739,1.366,740,0.582,741,0.946,742,1.154,743,0.622,744,0.76,745,0.76,746,0.76,747,0.76,748,0.688,749,0.688,750,0.688,751,0.688,752,0.688,753,0.644,754,1.107,755,0.76,756,0.622,757,0.76,758,0.915,759,0.711,760,0.711,761,1.045,762,1.045,763,1.045,765,1.223,767,0.665,768,1.205,769,1.763,771,2.214,775,2.289,776,1.115,777,1.205,778,1.158,779,1.205,780,1.158,781,1.254,782,1.254,783,1.205,784,1.254,785,1.254,786,2.77,787,1.974,788,2.378,1219,2.782,1220,2.427,1221,2.782,1222,2.782,1223,2.782,1224,2.782,1225,2.782,1226,2.782,1227,2.782]],["title/classes/TransactionBuyer.html",[48,0.314,764,1.668]],["body/classes/TransactionBuyer.html",[3,0.111,4,0.111,5,0.084,8,1.076,9,0.154,11,0.844,16,0.013,18,0.356,25,0.468,30,0.386,47,0.222,48,0.612,58,0.943,62,0.006,63,0.009,64,0.006,109,0.669,127,1.332,176,0.882,206,1.057,259,0.797,282,0.797,339,0.494,432,0.882,457,1.091,458,1.091,487,1.241,494,1.289,505,1.471,536,1.007,595,0.882,601,0.435,628,0.974,629,1.546,631,0.824,648,1.573,694,1.332,728,1.697,729,1.733,730,1.743,733,1.919,736,1.428,737,1.423,738,1.423,739,1.518,740,0.853,741,0.912,742,1.113,743,0.912,744,1.113,745,1.113,746,1.113,747,1.113,748,1.007,749,1.007,750,1.007,751,1.007,752,1.007,753,0.943,754,1.205,755,1.113,756,0.912,757,1.113,758,1.205,759,1.041,760,1.041,761,1.377,762,1.377,763,1.377,764,2.544,765,0.974,766,1.765,1228,4.075,1229,4.075,1230,4.075]],["title/controllers/TransactionController.html",[0,1.877,1231,3.02]],["body/controllers/TransactionController.html",[0,2.072,2,2.072,3,0.126,4,0.126,5,0.095,7,3.103,9,0.174,10,2.514,11,0.779,12,3.756,15,1.108,16,0.013,18,0.379,20,2.808,23,4.554,24,4.837,25,0.379,28,2.615,29,2.331,30,0.316,31,1.763,33,0.674,34,3.103,35,4.078,36,4.078,37,3.103,38,1.435,42,3.464,43,4.078,44,1.71,45,2.16,47,0.126,48,0.346,49,1.913,50,2.723,51,2.02,52,2.703,53,2.965,56,3.103,58,1.063,59,2.361,62,0.007,63,0.009,64,0.007,109,0.755,118,3.103,119,3.103,120,2.603,124,3.103,291,3.334,292,3.334,385,2.747,386,2.911,754,0.994,892,5.646,904,3.334,911,3.622,912,4.078,913,4.009,928,5.268,1231,4.38,1232,4.009,1233,5.883,1234,7.163,1235,5.268,1236,5.268,1237,5.157,1238,4.595,1239,4.595,1240,4.595,1241,4.595,1242,4.009,1243,4.838,1244,6.038,1245,4.595,1246,4.273,1247,4.009,1248,3.622,1249,4.009,1250,4.595,1251,4.595,1252,4.595,1253,4.595,1254,4.595,1255,4.595,1256,4.595,1257,4.595]],["title/classes/TransactionDeleteDto.html",[48,0.314,1237,2.811]],["body/classes/TransactionDeleteDto.html",[3,0.158,4,0.158,5,0.119,9,0.218,11,0.811,15,1.231,16,0.013,18,0.421,25,0.455,30,0.392,33,0.487,47,0.158,48,0.525,62,0.009,63,0.011,64,0.009,339,0.619,601,0.616,603,2.34,604,3.509,606,4.245,611,3.509,612,2.5,739,1.792,765,1.792,1237,4.71,1258,5.037,1259,5.775,1260,5.775,1261,5.775]],["title/classes/TransactionInfo.html",[48,0.314,788,1.733]],["body/classes/TransactionInfo.html",[3,0.081,4,0.081,5,0.061,8,0.782,9,0.167,11,0.83,15,0.873,16,0.013,18,0.298,25,0.445,30,0.331,33,0.374,47,0.209,48,0.576,58,0.685,62,0.005,63,0.007,64,0.005,97,0.685,101,0.836,109,0.487,127,1.06,172,2.173,176,1.67,206,1.001,259,0.579,282,0.579,339,0.393,370,2.774,432,0.641,457,0.901,458,0.901,487,1.039,494,1.229,505,1.171,536,0.732,595,0.641,601,0.316,603,0.925,615,1.717,620,2.737,622,2.733,623,1.102,624,2.648,625,1.102,628,0.708,629,1.366,631,0.599,632,1.026,634,1.026,694,1.06,729,1.45,730,1.507,733,1.808,736,0.928,737,0.757,738,0.757,739,1.06,740,0.62,741,0.992,742,1.21,743,0.663,744,0.809,745,0.809,746,0.809,747,0.809,748,0.732,749,0.732,750,0.732,751,0.732,752,0.732,753,0.685,754,0.959,755,0.809,756,0.663,757,0.809,758,0.959,759,0.757,760,0.757,761,1.096,762,1.096,763,1.096,765,0.708,767,0.708,768,1.283,771,2.3,775,2.129,776,1.187,777,1.283,778,1.233,779,1.283,780,1.233,781,1.336,782,1.336,783,1.283,784,1.336,785,1.336,786,2.847,787,1.711,788,2.455,1262,2.963,1263,2.963,1264,2.963]],["title/classes/TransactionModel.html",[48,0.314,1243,2.637]],["body/classes/TransactionModel.html",[3,0.135,4,0.135,5,0.102,9,0.238,11,0.816,15,1.249,16,0.013,18,0.427,25,0.413,30,0.398,33,0.621,47,0.135,48,0.371,62,0.008,63,0.01,64,0.008,97,1.138,172,2.085,187,3.323,206,0.796,248,1.646,271,2.218,339,0.56,457,1.065,458,1.065,601,0.525,603,2.177,609,4.263,615,2.457,618,3.961,620,2.514,622,2.457,662,4.579,663,3.569,736,1.321,739,1.667,765,1.667,775,2.793,776,1.972,787,2.437,875,2.651,1243,3.999,1265,4.292,1266,4.92,1267,4.92,1268,4.92,1269,4.92,1270,4.92,1271,4.92,1272,3.323]],["title/modules/TransactionModule.html",[65,1.733,136,2.811]],["body/modules/TransactionModule.html",[2,3.054,3,0.151,4,0.151,5,0.114,16,0.013,33,0.691,38,1.719,44,2.048,47,0.151,48,0.415,62,0.008,63,0.01,64,0.008,65,3.055,67,2.828,68,2.828,69,3.118,70,3.118,71,2.828,72,4.157,73,3.118,76,3.837,77,3.118,78,2.965,81,3.487,82,2.482,83,4.291,133,4.534,136,5.53,158,3.993,248,2.266,676,4.339,875,3.649,1231,5.323,1243,3.487,1246,5.07,1247,4.802,1248,4.339,1273,4.802,1274,5.505,1275,4.802,1276,5.505,1277,5.505,1278,4.802,1279,5.505]],["title/injectables/TransactionService.html",[85,1.803,1246,2.637]],["body/injectables/TransactionService.html",[3,0.095,4,0.095,5,0.072,9,0.131,10,2.072,11,0.72,12,3.471,16,0.013,18,0.378,20,2.423,28,2.52,29,2.247,30,0.333,31,1.699,33,0.623,38,1.084,42,2.557,44,1.852,45,1.631,47,0.095,48,0.261,49,2.072,50,3.254,51,2.415,52,1.39,53,3.122,59,3.6,62,0.005,63,0.008,64,0.005,82,1.564,85,2.155,86,2.074,89,4.834,90,4.294,95,4.547,96,2.198,97,0.803,100,4.573,101,2.222,126,1.787,172,1.487,248,2.128,339,0.442,340,4.44,351,3.924,370,1.161,371,1.869,374,4.613,393,2.517,394,2.343,397,3.297,440,4.884,441,4.613,457,0.889,458,0.889,526,3.611,528,3.611,529,2.735,533,3.027,547,3.924,555,5.013,587,2.735,594,4.223,598,2.735,603,2.254,676,2.735,709,4.294,739,1.19,754,1.457,765,1.676,875,3.426,934,2.735,941,2.735,989,3.027,1003,3.027,1058,4.588,1233,4.342,1235,5.078,1236,4.342,1237,4.547,1242,3.027,1243,4.834,1246,3.153,1248,2.735,1249,3.027,1272,3.361,1278,3.027,1280,3.027,1281,5.821,1282,3.47,1283,4.978,1284,3.47,1285,3.47,1286,3.47,1287,4.978,1288,3.47,1289,5.821,1290,4.978,1291,5.821,1292,3.47,1293,5.821,1294,5.821,1295,5.821,1296,3.47,1297,3.47,1298,3.47,1299,4.978,1300,3.47,1301,4.978,1302,3.47,1303,3.47,1304,3.47,1305,3.47,1306,4.978,1307,3.47,1308,3.47]],["title/classes/UpdateUserDto.html",[48,0.314,1309,2.811]],["body/classes/UpdateUserDto.html",[3,0.154,4,0.154,5,0.116,9,0.212,15,1.216,16,0.013,18,0.416,25,0.452,30,0.388,33,0.474,47,0.154,48,0.517,51,2.77,62,0.009,63,0.01,64,0.009,206,0.865,339,0.608,371,3.988,487,1.447,601,0.599,604,3.564,611,3.338,612,2.432,629,1.484,694,1.77,733,1.64,1139,4.974,1309,4.63,1310,6.725,1311,4.899,1312,5.616,1313,5.616,1314,5.616]],["title/controllers/UserController.html",[0,1.877,1315,3.02]],["body/controllers/UserController.html",[0,1.257,2,1.257,3,0.076,4,0.076,5,0.139,7,1.882,9,0.105,10,1.763,11,0.632,12,3.695,15,1.105,16,0.013,18,0.378,20,2.801,23,3.457,24,5.365,25,0.474,28,2.803,29,2.676,30,0.339,31,1.89,33,0.644,34,1.882,35,3.457,36,5.238,37,1.882,38,0.871,42,2.63,43,4.372,44,1.037,45,1.31,47,0.076,48,0.21,49,1.16,50,2.308,51,1.713,52,2.778,53,3.178,56,4.152,58,1.422,59,2.937,62,0.004,63,0.006,64,0.004,107,1.766,108,1.882,109,0.458,118,1.882,119,1.882,120,1.579,124,1.882,126,1.001,143,2.63,144,1.882,145,1.766,146,1.882,155,3.693,156,4.466,233,3.071,267,2.431,268,2.431,275,3.861,276,2.197,291,2.022,292,4.46,310,4.507,311,4.036,352,6.114,353,6.508,385,1.666,386,1.766,397,2.398,435,4.988,436,4.988,487,1.356,761,1.046,762,1.046,763,1.046,797,3.06,865,3.714,870,3.714,892,2.197,902,2.431,904,2.022,911,2.197,919,3.693,1135,4.543,1137,4.036,1138,4.036,1309,4.543,1315,3.071,1316,2.431,1317,7.696,1318,5.12,1319,5.12,1320,5.718,1321,4.466,1322,2.787,1323,4.234,1324,2.787,1325,2.787,1326,2.787,1327,2.787,1328,2.787,1329,2.787,1330,2.787,1331,2.787,1332,2.787,1333,4.234,1334,2.787,1335,2.787,1336,2.787,1337,2.787,1338,2.431,1339,4.234,1340,2.787,1341,5.12,1342,5.12,1343,2.787,1344,2.431,1345,2.431,1346,2.431,1347,2.431,1348,2.431,1349,2.787,1350,5.12,1351,2.431,1352,2.431,1353,2.787,1354,2.787,1355,2.787,1356,2.787,1357,2.787,1358,2.787,1359,2.787,1360,2.787,1361,4.234,1362,4.234,1363,2.787,1364,3.693,1365,4.234,1366,4.234,1367,4.234,1368,4.234,1369,4.234,1370,4.234,1371,4.234,1372,4.234,1373,4.234,1374,4.234,1375,4.234,1376,4.234,1377,3.693,1378,4.234,1379,5.718,1380,2.787,1381,2.787,1382,2.787,1383,2.787,1384,2.787,1385,2.787,1386,2.787,1387,2.787,1388,2.787,1389,2.787,1390,2.787,1391,2.787,1392,2.787,1393,2.787,1394,2.787]],["title/classes/UserDto.html",[48,0.314,1395,3.281]],["body/classes/UserDto.html",[3,0.109,4,0.109,5,0.082,9,0.15,11,0.844,16,0.013,18,0.469,25,0.463,29,2.417,30,0.438,31,1.597,33,0.335,47,0.109,48,0.299,62,0.006,63,0.008,64,0.006,106,3.547,107,3.967,108,4.228,109,1.202,206,0.69,259,1.431,282,1.431,339,0.485,432,1.583,457,0.956,458,0.956,494,1.448,595,1.583,601,0.424,736,1.531,740,1.531,741,1.637,743,1.637,753,1.448,754,1.355,756,1.637,758,1.583,761,0.981,762,0.981,763,0.981,1272,4.228,1395,4.313,1396,3.463,1397,4.936,1398,4.542,1399,4.936,1400,4.936,1401,3.969,1402,3.969,1403,3.969,1404,3.969,1405,3.969,1406,3.969,1407,3.969,1408,3.969,1409,3.969,1410,3.969,1411,3.969,1412,3.969,1413,3.969,1414,3.969,1415,3.969,1416,3.969,1417,3.969,1418,3.969,1419,3.969,1420,3.969,1421,3.969,1422,3.969,1423,3.969,1424,3.969]],["title/classes/UserModel.html",[48,0.314,248,1.393]],["body/classes/UserModel.html",[3,0.076,4,0.076,5,0.057,9,0.193,11,0.832,15,1.311,16,0.013,18,0.45,25,0.441,29,1.973,30,0.42,31,1.233,33,0.431,47,0.076,48,0.209,62,0.004,63,0.006,64,0.004,97,0.643,101,2.003,106,3.234,107,3.238,108,3.451,109,1.104,172,2.055,176,1.7,187,1.877,206,0.533,248,1.414,259,1.314,282,1.354,339,0.375,370,2.573,388,3.065,432,1.454,457,0.872,458,0.872,494,1.846,495,2.425,496,2.425,575,3.686,595,1.499,601,0.297,615,1.985,618,1.497,620,2.554,622,1.985,624,1.464,632,2.4,634,2.4,654,3.33,655,3.33,659,4.501,662,3.065,663,2.016,740,1.449,741,1.504,743,1.504,753,1.321,754,1.329,756,1.504,758,1.454,761,0.687,762,0.687,763,0.687,767,1.546,769,4.495,771,3.133,775,2.048,776,1.114,777,1.83,787,1.631,821,3.686,933,3.33,938,4.459,941,3.33,942,3.686,953,4.981,963,2.425,964,4.459,1220,6.582,1272,3.451,1397,4.841,1398,3.708,1399,4.029,1400,4.029,1425,2.425,1426,2.78,1427,4.225,1428,2.78,1429,2.78,1430,2.78,1431,4.225,1432,2.78,1433,2.78,1434,2.78,1435,4.225,1436,3.686,1437,5.71,1438,4.225,1439,4.225,1440,4.225,1441,4.225,1442,2.78,1443,2.78,1444,2.78,1445,4.225,1446,2.78,1447,2.78,1448,2.78,1449,2.78,1450,2.78,1451,2.78,1452,2.78,1453,2.78,1454,2.78,1455,2.78,1456,2.78,1457,4.225,1458,2.78,1459,2.78]],["title/modules/UserModule.html",[65,1.733,137,2.811]],["body/modules/UserModule.html",[2,3.021,3,0.148,4,0.148,5,0.112,16,0.013,33,0.682,38,1.689,44,2.012,47,0.148,48,0.407,62,0.008,63,0.01,64,0.008,65,3.031,67,2.778,68,2.778,69,3.063,70,3.063,71,2.778,72,4.124,73,4.124,76,3.795,77,3.063,78,2.913,81,3.426,82,2.438,83,4.244,133,4.514,134,4.763,137,5.623,142,4.262,158,3.923,248,1.809,327,4.717,797,5,1315,5.281,1346,4.717,1460,4.717,1461,5.407,1462,4.717,1463,4.717,1464,5.407,1465,5.407,1466,4.717]],["title/injectables/UserService.html",[85,1.803,797,2.488]],["body/injectables/UserService.html",[3,0.055,4,0.055,5,0.041,9,0.076,10,1.36,11,0.756,12,3.626,16,0.013,18,0.369,20,2.574,25,0.456,28,2.677,29,2.598,30,0.406,31,1.805,33,0.522,38,0.626,42,2.123,44,1.216,45,0.943,47,0.055,48,0.151,49,1.36,50,2.536,51,1.755,52,2.254,53,3.479,59,2.123,62,0.003,63,0.005,64,0.003,82,0.904,85,1.415,86,1.199,89,3.019,90,3.218,95,4.44,96,1.271,97,0.464,100,4.769,101,2.178,104,1.581,106,2.341,107,3.757,108,3.799,109,0.679,110,1.581,126,3.001,172,0.512,183,4.577,206,0.253,233,5.27,248,1.882,259,0.392,339,0.29,340,3.564,344,1.581,351,5.586,352,4.874,370,0.671,371,2.826,374,3.806,375,3.756,376,2.575,377,4.157,385,1.199,386,1.271,393,1.455,394,3.543,397,2.341,426,2.575,427,1.354,428,1.455,440,4.485,441,5.419,457,0.306,458,0.306,461,1.749,467,4.675,487,1.316,499,1.749,506,1.581,507,1.581,515,2.85,523,3.258,526,3.457,527,1.749,528,4.882,529,4.874,547,4.675,587,2.575,592,5.394,594,1.455,595,0.707,618,1.08,624,0.695,629,0.434,631,0.836,689,2.85,694,1.139,709,4.005,733,0.48,736,0.683,740,1.098,741,0.449,743,1.066,756,0.449,758,1.338,759,0.512,760,0.512,767,0.48,778,2.469,779,0.868,783,2.063,797,1.953,843,1.749,851,3.605,865,2.37,870,2.37,1000,3.605,1005,3.605,1021,3.605,1043,5.174,1058,1.581,1063,1.749,1069,1.749,1135,3.799,1137,5.411,1138,5.411,1272,2.206,1309,4.005,1321,3.605,1338,1.749,1347,1.749,1348,1.749,1352,1.749,1377,3.605,1397,3.258,1398,2.37,1399,3.258,1400,2.575,1436,3.605,1466,1.749,1467,1.749,1468,3.267,1469,4.133,1470,4.765,1471,4.133,1472,3.267,1473,3.267,1474,2.005,1475,3.267,1476,2.005,1477,2.005,1478,2.005,1479,2.005,1480,3.267,1481,2.005,1482,2.005,1483,2.005,1484,2.005,1485,7.527,1486,5.625,1487,2.005,1488,2.005,1489,3.267,1490,3.267,1491,2.005,1492,2.005,1493,3.267,1494,2.005,1495,2.005,1496,2.005,1497,2.005,1498,2.005,1499,2.005,1500,2.005,1501,2.005,1502,2.005,1503,7.087,1504,2.005,1505,4.133,1506,3.267,1507,3.267,1508,2.005,1509,2.005,1510,2.005,1511,4.133,1512,2.005,1513,3.267,1514,2.005,1515,2.005,1516,3.267,1517,2.005,1518,3.267,1519,2.005,1520,2.005,1521,2.005,1522,2.005,1523,2.005,1524,2.005,1525,2.005,1526,2.005,1527,2.005]],["title/coverage.html",[1528,4.931]],["body/coverage.html",[0,3.16,1,2.517,5,0.072,6,3.027,16,0.013,22,2.198,30,0.182,39,2.198,48,0.644,62,0.005,63,0.008,64,0.005,71,1.782,85,3.034,87,3.027,101,0.98,109,0.956,111,2.517,112,3.027,143,1.782,159,2.517,210,2.517,211,3.027,223,2.198,244,2.343,248,1.161,256,2.343,259,0.973,269,2.198,275,2.343,282,0.973,320,2.343,338,3.027,391,2.343,432,1.077,595,1.077,600,2.517,602,3.027,613,2.074,614,4.294,621,2.074,624,2.983,630,2.074,637,2.074,638,2.343,639,3.027,642,2.517,643,3.027,647,3.027,669,2.343,670,3.027,677,2.343,678,3.027,686,3.027,728,3.302,736,0.726,740,1.041,741,1.114,743,1.114,753,1.151,754,1.077,756,1.114,758,1.077,764,1.39,768,3.409,788,1.445,789,3.027,797,2.074,823,2.517,825,3.027,827,3.027,861,2.517,862,3.027,875,1.869,879,2.343,899,2.343,905,2.198,912,2.343,932,3.027,971,3.027,1105,2.735,1107,3.027,1123,3.027,1129,3.027,1135,2.343,1136,3.027,1161,2.517,1162,3.924,1173,3.027,1190,3.027,1231,2.517,1232,3.027,1237,2.343,1243,2.198,1246,2.198,1258,3.027,1265,3.027,1280,3.027,1309,2.343,1310,3.027,1311,3.027,1315,2.517,1316,3.027,1364,4.342,1395,2.735,1396,3.027,1425,3.027,1467,3.027,1528,3.027,1529,3.47,1530,3.47,1531,3.47,1532,7.803,1533,3.47,1534,4.978,1535,4.978,1536,7.724,1537,7.519,1538,3.027,1539,5.821,1540,3.027,1541,3.027,1542,3.47,1543,8.073,1544,6.359,1545,3.47,1546,5.821,1547,3.47,1548,3.47,1549,3.47,1550,3.47,1551,3.47,1552,3.47]],["title/dependencies.html",[68,2.568,1553,3.491]],["body/dependencies.html",[16,0.013,38,1.692,44,2.496,45,2.546,48,0.505,62,0.008,63,0.01,64,0.008,68,2.783,82,2.442,97,1.253,120,3.069,127,1.295,149,4.27,150,4.27,162,4.27,326,4.27,330,4.27,381,4.725,383,4.725,384,4.725,388,4.865,390,5.287,612,2.346,809,4.725,835,5.851,1344,5.851,1345,5.851,1351,4.725,1554,5.417,1555,7.285,1556,6.707,1557,5.417,1558,6.707,1559,5.417,1560,5.417,1561,5.417,1562,5.417,1563,5.417,1564,5.417,1565,5.417,1566,5.417,1567,5.417,1568,5.417,1569,5.417,1570,5.417,1571,5.417,1572,5.417,1573,5.417,1574,5.417,1575,5.417,1576,5.417,1577,5.417,1578,5.417,1579,5.417,1580,5.417,1581,5.417,1582,5.417,1583,5.417,1584,5.417,1585,5.417,1586,5.417,1587,5.417,1588,5.417,1589,5.417,1590,5.417,1591,5.417,1592,5.417,1593,5.417,1594,5.417]],["title/miscellaneous/enumerations.html",[1595,2.211,1596,4.361]],["body/miscellaneous/enumerations.html",[9,0.227,16,0.013,62,0.009,63,0.011,64,0.009,145,4.527,371,4.532,385,4.271,713,6.233,715,6.233,717,6.233,719,6.233,721,6.233,723,6.233,739,1.708,1398,5.183,1595,3.809,1596,5.245,1597,6.013,1598,6.013,1599,6.013,1600,6.013,1601,6.233,1602,7.145]],["title/miscellaneous/functions.html",[1595,2.211,1603,4.361]],["body/miscellaneous/functions.html",[9,0.248,16,0.011,62,0.01,63,0.011,64,0.01,71,4.061,1541,5.729,1595,4.161,1603,5.729,1604,6.568]],["title/index.html",[9,0.132,1605,3.491,1606,3.491]],["body/index.html",[5,0.105,11,0.494,16,0.012,62,0.008,63,0.01,64,0.008,78,2.73,101,1.43,122,7.152,128,4.42,129,4.42,404,3.994,405,5.07,427,3.422,428,3.676,448,3.994,452,4.42,589,6.164,780,2.11,800,5.611,805,5.611,844,4.42,852,4.42,935,3.994,998,4.42,1011,4.42,1025,4.42,1031,5.611,1601,5.611,1607,5.067,1608,5.067,1609,6.432,1610,5.067,1611,5.067,1612,6.432,1613,5.067,1614,5.067,1615,5.067,1616,5.067,1617,5.067,1618,5.067,1619,6.432,1620,7.066,1621,6.432,1622,6.432,1623,5.067,1624,5.067,1625,5.067,1626,5.067,1627,5.067,1628,5.067,1629,6.432,1630,5.067,1631,7.433,1632,5.067,1633,5.067,1634,5.067,1635,5.067,1636,5.067,1637,5.067,1638,6.432,1639,6.432,1640,6.432,1641,5.067,1642,5.067,1643,5.067,1644,6.432,1645,5.067,1646,5.067,1647,5.067,1648,6.432,1649,5.067,1650,5.067,1651,5.067,1652,6.432,1653,7.066,1654,7.066,1655,6.432,1656,6.432,1657,6.432,1658,5.067,1659,5.067,1660,5.067,1661,5.067,1662,5.067,1663,5.067,1664,5.067,1665,7.066,1666,7.066,1667,5.067,1668,5.067,1669,5.067,1670,5.067,1671,5.067,1672,5.067,1673,5.067,1674,5.067,1675,5.067,1676,5.067,1677,5.067,1678,5.067,1679,5.067,1680,5.067]],["title/modules.html",[67,2.904]],["body/modules.html",[16,0.011,62,0.009,63,0.011,64,0.009,66,4.184,67,3.183,130,4.494,133,3.51,134,3.704,135,4.184,136,4.184,137,4.184,1681,8.304,1682,8.304,1683,8.304,1684,8.304]],["title/overview.html",[1685,4.931]],["body/overview.html",[2,2.277,16,0.013,39,4.47,62,0.008,63,0.01,64,0.008,65,2.103,66,5.175,67,2.594,68,2.594,69,2.861,70,2.861,71,2.594,72,2.861,73,2.861,74,4.406,75,4.406,76,3.636,77,2.861,78,2.721,86,3.019,130,6.064,131,4.406,132,4.406,133,4.671,134,4.581,135,5.374,136,5.374,137,5.533,143,3.813,269,4.47,317,4.406,318,4.406,319,4.406,320,5.374,601,0.539,681,4.406,682,4.406,767,1.535,797,4.757,823,3.664,905,4.47,965,4.406,967,4.406,1105,3.981,1246,4.47,1273,4.406,1275,4.406,1460,4.406,1462,4.406,1463,4.406,1685,4.406,1686,5.05,1687,6.418,1688,5.05]],["title/miscellaneous/variables.html",[1595,2.211,1689,4.361]],["body/miscellaneous/variables.html",[9,0.236,16,0.013,25,0.351,62,0.01,63,0.011,64,0.01,109,1.313,275,4.94,370,2.448,371,3.941,694,1.497,1538,5.46,1540,5.46,1595,3.965,1689,5.46,1690,6.259,1691,6.259,1692,6.259,1693,6.259,1694,6.259,1695,6.259,1696,6.259]]],"invertedIndex":[["",{"_index":16,"title":{},"body":{"controllers/AdminController.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BuyerAddMarketDto.html":{},"classes/BuyerMarket.html":{},"classes/BuyerRemoveMarketDto.html":{},"classes/ChangelogAuthor.html":{},"classes/ChangelogModel.html":{},"classes/CommentMarket.html":{},"classes/CommentMarketDto.html":{},"classes/CommentRemoveMarketDto.html":{},"modules/ConfigModule.html":{},"classes/ConfigService.html":{},"classes/DiscountMarket.html":{},"classes/Email.html":{},"classes/Email-1.html":{},"classes/GeneralGateway.html":{},"interfaces/IJwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/Market.html":{},"controllers/MarketController.html":{},"classes/MarketModel.html":{},"modules/MarketModule.html":{},"injectables/MarketService.html":{},"classes/Membership.html":{},"classes/Membership-1.html":{},"classes/Notifications.html":{},"classes/Notifications-1.html":{},"classes/Online.html":{},"classes/Online-1.html":{},"classes/Password.html":{},"classes/Password-1.html":{},"classes/Rank.html":{},"classes/Rank-1.html":{},"guards/RankGuard.html":{},"classes/ReactionAddMarketDto.html":{},"classes/ReactionRemoveMarketDto.html":{},"classes/Reactions.html":{},"classes/Reactions-1.html":{},"classes/ReactionsDto.html":{},"classes/ReactionsMarket.html":{},"classes/Security.html":{},"classes/Security-1.html":{},"classes/SecurityCode.html":{},"classes/SecurityDto.html":{},"classes/SecurityUpdateDto.html":{},"classes/Sessions.html":{},"classes/Sessions-1.html":{},"classes/SignInDto.html":{},"classes/Stats.html":{},"classes/Stats-1.html":{},"classes/Suspension.html":{},"classes/Suspension-1.html":{},"classes/Transaction.html":{},"classes/Transaction-1.html":{},"classes/TransactionBuyer.html":{},"controllers/TransactionController.html":{},"classes/TransactionDeleteDto.html":{},"classes/TransactionInfo.html":{},"classes/TransactionModel.html":{},"modules/TransactionModule.html":{},"injectables/TransactionService.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"classes/UserModel.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":624,"title":{},"body":{"classes/BuyerMarket.html":{},"classes/CommentMarket.html":{},"classes/DiscountMarket.html":{},"classes/Email-1.html":{},"classes/Membership-1.html":{},"classes/Notifications-1.html":{},"classes/Online-1.html":{},"classes/Password-1.html":{},"classes/Rank-1.html":{},"classes/Reactions-1.html":{},"classes/ReactionsMarket.html":{},"classes/Security-1.html":{},"classes/Sessions-1.html":{},"classes/Stats-1.html":{},"classes/Suspension-1.html":{},"classes/Transaction-1.html":{},"classes/TransactionInfo.html":{},"classes/UserModel.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["0.1.13",{"_index":1589,"title":{},"body":{"dependencies.html":{}}}],["0.11.0",{"_index":1568,"title":{},"body":{"dependencies.html":{}}}],["0.2.3",{"_index":1567,"title":{},"body":{"dependencies.html":{}}}],["0.4.1",{"_index":1585,"title":{},"body":{"dependencies.html":{}}}],["0.5.12",{"_index":1561,"title":{},"body":{"dependencies.html":{}}}],["0.5.27",{"_index":1579,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1539,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1533,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":1550,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":1534,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":1545,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1548,"title":{},"body":{"coverage.html":{}}}],["0/23",{"_index":1549,"title":{},"body":{"coverage.html":{}}}],["0/24",{"_index":1547,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1532,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1543,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1536,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1537,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1535,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1546,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1544,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":767,"title":{"classes/Email-1.html":{},"classes/Membership-1.html":{},"classes/Notifications-1.html":{},"classes/Online-1.html":{},"classes/Password-1.html":{},"classes/Rank-1.html":{},"classes/Reactions-1.html":{},"classes/Security-1.html":{},"classes/Sessions-1.html":{},"classes/Stats-1.html":{},"classes/Suspension-1.html":{},"classes/Transaction-1.html":{}},"body":{"classes/Email-1.html":{},"classes/GeneralGateway.html":{},"classes/MarketModel.html":{},"injectables/MarketService.html":{},"classes/Membership-1.html":{},"classes/Notifications-1.html":{},"classes/Online-1.html":{},"classes/Password-1.html":{},"classes/Rank-1.html":{},"classes/Reactions-1.html":{},"classes/Security-1.html":{},"classes/Sessions-1.html":{},"classes/Stats-1.html":{},"classes/Suspension-1.html":{},"classes/Transaction-1.html":{},"classes/TransactionInfo.html":{},"classes/UserModel.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["1.0.4",{"_index":1594,"title":{},"body":{"dependencies.html":{}}}],["1.1.3",{"_index":1554,"title":{},"body":{"dependencies.html":{}}}],["1.4.2",{"_index":1582,"title":{},"body":{"dependencies.html":{}}}],["1.7.4",{"_index":1570,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":654,"title":{},"body":{"classes/ChangelogModel.html":{},"classes/MarketModel.html":{},"classes/UserModel.html":{}}}],["100",{"_index":941,"title":{},"body":{"classes/MarketModel.html":{},"injectables/TransactionService.html":{},"classes/UserModel.html":{}}}],["1000",{"_index":942,"title":{},"body":{"classes/MarketModel.html":{},"classes/UserModel.html":{}}}],["11000",{"_index":446,"title":{},"body":{"injectables/AuthService.html":{}}}],["127.0.0.1",{"_index":1431,"title":{},"body":{"classes/UserModel.html":{}}}],["140",{"_index":1441,"title":{},"body":{"classes/UserModel.html":{}}}],["15",{"_index":1457,"title":{},"body":{"classes/UserModel.html":{}}}],["15d",{"_index":337,"title":{},"body":{"modules/AuthModule.html":{}}}],["16).tostring(16",{"_index":1373,"title":{},"body":{"controllers/UserController.html":{}}}],["1]._id",{"_index":511,"title":{},"body":{"injectables/AuthService.html":{}}}],["2",{"_index":1016,"title":{},"body":{"injectables/MarketService.html":{}}}],["2.10.1",{"_index":1565,"title":{},"body":{"dependencies.html":{}}}],["2.24.0",{"_index":1578,"title":{},"body":{"dependencies.html":{}}}],["2.4.3",{"_index":1562,"title":{},"body":{"dependencies.html":{}}}],["200",{"_index":785,"title":{},"body":{"classes/Email-1.html":{},"classes/Membership-1.html":{},"classes/Notifications-1.html":{},"classes/Online-1.html":{},"classes/Password-1.html":{},"classes/Rank-1.html":{},"classes/Reactions-1.html":{},"classes/Security-1.html":{},"classes/Sessions-1.html":{},"classes/Stats-1.html":{},"classes/Suspension-1.html":{},"classes/Transaction-1.html":{},"classes/TransactionInfo.html":{}}}],["250",{"_index":657,"title":{},"body":{"classes/ChangelogModel.html":{}}}],["3",{"_index":1017,"title":{},"body":{"injectables/MarketService.html":{}}}],["3.0.0",{"_index":1591,"title":{},"body":{"dependencies.html":{}}}],["3.21.2",{"_index":1575,"title":{},"body":{"dependencies.html":{}}}],["30",{"_index":655,"title":{},"body":{"classes/ChangelogModel.html":{},"classes/MarketModel.html":{},"classes/UserModel.html":{}}}],["3000",{"_index":652,"title":{},"body":{"classes/ChangelogModel.html":{}}}],["4",{"_index":1019,"title":{},"body":{"injectables/MarketService.html":{}}}],["4.0.0",{"_index":1586,"title":{},"body":{"dependencies.html":{}}}],["4.1.3",{"_index":1583,"title":{},"body":{"dependencies.html":{}}}],["5",{"_index":659,"title":{},"body":{"classes/ChangelogModel.html":{},"injectables/MarketService.html":{},"classes/UserModel.html":{}}}],["5.0.0",{"_index":1573,"title":{},"body":{"dependencies.html":{}}}],["5.8.7",{"_index":1581,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":633,"title":{},"body":{"classes/BuyerMarket.html":{},"classes/ChangelogModel.html":{},"classes/CommentMarket.html":{},"classes/DiscountMarket.html":{},"classes/ReactionsMarket.html":{}}}],["500",{"_index":635,"title":{},"body":{"classes/BuyerMarket.html":{},"classes/CommentMarket.html":{},"classes/DiscountMarket.html":{},"classes/ReactionsMarket.html":{}}}],["52",{"_index":1688,"title":{},"body":{"overview.html":{}}}],["6",{"_index":1687,"title":{},"body":{"overview.html":{}}}],["6.1.1",{"_index":1556,"title":{},"body":{"dependencies.html":{}}}],["6.10.14",{"_index":1558,"title":{},"body":{"dependencies.html":{}}}],["6.2.1",{"_index":1559,"title":{},"body":{"dependencies.html":{}}}],["6.5.3",{"_index":1593,"title":{},"body":{"dependencies.html":{}}}],["6.7.2",{"_index":1555,"title":{},"body":{"dependencies.html":{}}}],["7",{"_index":1686,"title":{},"body":{"overview.html":{}}}],["7.0.0",{"_index":1584,"title":{},"body":{"dependencies.html":{}}}],["8.5.1",{"_index":1577,"title":{},"body":{"dependencies.html":{}}}],["90",{"_index":784,"title":{},"body":{"classes/Email-1.html":{},"classes/Membership-1.html":{},"classes/Notifications-1.html":{},"classes/Online-1.html":{},"classes/Password-1.html":{},"classes/Rank-1.html":{},"classes/Reactions-1.html":{},"classes/Security-1.html":{},"classes/Sessions-1.html":{},"classes/Stats-1.html":{},"classes/Suspension-1.html":{},"classes/Transaction-1.html":{},"classes/TransactionInfo.html":{}}}],["99",{"_index":626,"title":{},"body":{"classes/BuyerMarket.html":{},"classes/CommentMarket.html":{},"classes/DiscountMarket.html":{},"classes/ReactionsMarket.html":{}}}],["9999",{"_index":949,"title":{},"body":{"classes/MarketModel.html":{}}}],["__dirname",{"_index":184,"title":{},"body":{"modules/AppModule.html":{},"classes/ConfigService.html":{}}}],["__v",{"_index":1502,"title":{},"body":{"injectables/UserService.html":{}}}],["_id",{"_index":494,"title":{},"body":{"injectables/AuthService.html":{},"classes/ChangelogModel.html":{},"classes/Email.html":{},"classes/Email-1.html":{},"classes/Market.html":{},"classes/MarketModel.html":{},"classes/Membership.html":{},"classes/Membership-1.html":{},"classes/Notifications.html":{},"classes/Notifications-1.html":{},"classes/Online.html":{},"classes/Online-1.html":{},"classes/Password.html":{},"classes/Password-1.html":{},"classes/Rank.html":{},"classes/Rank-1.html":{},"classes/Reactions.html":{},"classes/Reactions-1.html":{},"classes/Security.html":{},"classes/Security-1.html":{},"classes/Sessions.html":{},"classes/Sessions-1.html":{},"classes/Stats.html":{},"classes/Stats-1.html":{},"classes/Suspension.html":{},"classes/Suspension-1.html":{},"classes/Transaction.html":{},"classes/Transaction-1.html":{},"classes/TransactionBuyer.html":{},"classes/TransactionInfo.html":{},"classes/UserDto.html":{},"classes/UserModel.html":{}}}],["_req",{"_index":1366,"title":{},"body":{"controllers/UserController.html":{}}}],["accepted",{"_index":1666,"title":{},"body":{"index.html":{}}}],["access",{"_index":485,"title":{},"body":{"injectables/AuthService.html":{}}}],["account",{"_index":426,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/UserService.html":{}}}],["actions",{"_index":1626,"title":{},"body":{"index.html":{}}}],["activation",{"_index":540,"title":{},"body":{"injectables/AuthService.html":{}}}],["adapter",{"_index":186,"title":{},"body":{"modules/AppModule.html":{}}}],["add",{"_index":1518,"title":{},"body":{"injectables/UserService.html":{}}}],["add(15",{"_index":407,"title":{},"body":{"injectables/AuthService.html":{},"classes/GeneralGateway.html":{}}}],["addbuyertoproduct",{"_index":972,"title":{},"body":{"injectables/MarketService.html":{}}}],["addbuyertoproduct(buyeraddmarketdto",{"_index":975,"title":{},"body":{"injectables/MarketService.html":{}}}],["addcomment",{"_index":863,"title":{},"body":{"controllers/MarketController.html":{},"injectables/MarketService.html":{}}}],["addcomment(commentmarketdto",{"_index":871,"title":{},"body":{"controllers/MarketController.html":{},"injectables/MarketService.html":{}}}],["added",{"_index":1025,"title":{},"body":{"injectables/MarketService.html":{},"index.html":{}}}],["adding",{"_index":1021,"title":{},"body":{"injectables/MarketService.html":{},"injectables/UserService.html":{}}}],["addproduct",{"_index":864,"title":{},"body":{"controllers/MarketController.html":{},"injectables/MarketService.html":{}}}],["addproduct(marketmodel",{"_index":874,"title":{},"body":{"controllers/MarketController.html":{},"injectables/MarketService.html":{}}}],["addreaction",{"_index":865,"title":{},"body":{"controllers/MarketController.html":{},"injectables/MarketService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["addreaction(reactionaddmarketdto",{"_index":878,"title":{},"body":{"controllers/MarketController.html":{},"injectables/MarketService.html":{}}}],["addreaction(reactionsdto",{"_index":1473,"title":{},"body":{"injectables/UserService.html":{}}}],["addreaction(res",{"_index":1322,"title":{},"body":{"controllers/UserController.html":{}}}],["address",{"_index":533,"title":{},"body":{"injectables/AuthService.html":{},"injectables/TransactionService.html":{}}}],["admin",{"_index":8,"title":{},"body":{"controllers/AdminController.html":{},"classes/Email.html":{},"classes/Email-1.html":{},"classes/Market.html":{},"classes/Membership.html":{},"classes/Membership-1.html":{},"classes/Notifications.html":{},"classes/Notifications-1.html":{},"classes/Online.html":{},"classes/Online-1.html":{},"classes/Password.html":{},"classes/Password-1.html":{},"classes/Rank.html":{},"classes/Rank-1.html":{},"classes/Reactions.html":{},"classes/Reactions-1.html":{},"classes/Security.html":{},"classes/Security-1.html":{},"classes/Sessions.html":{},"classes/Sessions-1.html":{},"classes/Stats.html":{},"classes/Stats-1.html":{},"classes/Suspension.html":{},"classes/Suspension-1.html":{},"classes/Transaction.html":{},"classes/Transaction-1.html":{},"classes/TransactionBuyer.html":{},"classes/TransactionInfo.html":{}}}],["admin.controller",{"_index":80,"title":{},"body":{"modules/AdminModule.html":{}}}],["admin.service",{"_index":40,"title":{},"body":{"controllers/AdminController.html":{},"modules/AdminModule.html":{}}}],["admincontroller",{"_index":1,"title":{"controllers/AdminController.html":{}},"body":{"controllers/AdminController.html":{},"modules/AdminModule.html":{},"coverage.html":{}}}],["administrator",{"_index":1601,"title":{},"body":{"miscellaneous/enumerations.html":{},"index.html":{}}}],["administrators",{"_index":1631,"title":{},"body":{"index.html":{}}}],["adminmodule",{"_index":66,"title":{"modules/AdminModule.html":{}},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["adminservice",{"_index":39,"title":{"injectables/AdminService.html":{}},"body":{"controllers/AdminController.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"coverage.html":{},"overview.html":{}}}],["affected",{"_index":1645,"title":{},"body":{"index.html":{}}}],["akatsuki",{"_index":427,"title":{},"body":{"injectables/AuthService.html":{},"classes/ConfigService.html":{},"injectables/JwtStrategy.html":{},"injectables/UserService.html":{},"index.html":{}}}],["already",{"_index":449,"title":{},"body":{"injectables/AuthService.html":{}}}],["api",{"_index":122,"title":{},"body":{"controllers/AppController.html":{},"index.html":{}}}],["app.controller",{"_index":141,"title":{},"body":{"modules/AppModule.html":{}}}],["app_interceptor",{"_index":161,"title":{},"body":{"modules/AppModule.html":{}}}],["appcontroller",{"_index":111,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["appmodule",{"_index":130,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appmodule.port",{"_index":208,"title":{},"body":{"modules/AppModule.html":{}}}],["array(32",{"_index":1369,"title":{},"body":{"controllers/UserController.html":{}}}],["arrayprop",{"_index":953,"title":{},"body":{"classes/MarketModel.html":{},"classes/UserModel.html":{}}}],["arrayprop({items",{"_index":938,"title":{},"body":{"classes/MarketModel.html":{},"classes/UserModel.html":{}}}],["assistant",{"_index":1630,"title":{},"body":{"index.html":{}}}],["associated",{"_index":576,"title":{},"body":{"injectables/AuthService.html":{}}}],["async",{"_index":12,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/MarketController.html":{},"injectables/MarketService.html":{},"controllers/TransactionController.html":{},"injectables/TransactionService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["attempt",{"_index":464,"title":{},"body":{"injectables/AuthService.html":{}}}],["auth",{"_index":212,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth.controller",{"_index":322,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.service",{"_index":270,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["auth/auth.module",{"_index":158,"title":{},"body":{"modules/AppModule.html":{},"modules/MarketModule.html":{},"modules/TransactionModule.html":{},"modules/UserModule.html":{}}}],["auth/email/verification/${usercreated._id",{"_index":437,"title":{},"body":{"injectables/AuthService.html":{}}}],["authcontroller",{"_index":210,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authguard",{"_index":119,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/MarketController.html":{},"controllers/TransactionController.html":{},"controllers/UserController.html":{}}}],["authmodule",{"_index":133,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/MarketModule.html":{},"modules/TransactionModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":631,"title":{},"body":{"classes/BuyerMarket.html":{},"classes/ChangelogModel.html":{},"classes/CommentMarket.html":{},"classes/CommentRemoveMarketDto.html":{},"classes/DiscountMarket.html":{},"classes/Email.html":{},"classes/Email-1.html":{},"classes/Market.html":{},"classes/MarketModel.html":{},"injectables/MarketService.html":{},"classes/Membership.html":{},"classes/Membership-1.html":{},"classes/Notifications.html":{},"classes/Notifications-1.html":{},"classes/Online.html":{},"classes/Online-1.html":{},"classes/Password.html":{},"classes/Password-1.html":{},"classes/Rank.html":{},"classes/Rank-1.html":{},"classes/Reactions.html":{},"classes/Reactions-1.html":{},"classes/ReactionsMarket.html":{},"classes/Security.html":{},"classes/Security-1.html":{},"classes/Sessions.html":{},"classes/Sessions-1.html":{},"classes/Stats.html":{},"classes/Stats-1.html":{},"classes/Suspension.html":{},"classes/Suspension-1.html":{},"classes/Transaction.html":{},"classes/Transaction-1.html":{},"classes/TransactionBuyer.html":{},"classes/TransactionInfo.html":{},"injectables/UserService.html":{}}}],["authorization",{"_index":1624,"title":{},"body":{"index.html":{}}}],["authservice",{"_index":269,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"coverage.html":{},"overview.html":{}}}],["available",{"_index":933,"title":{},"body":{"classes/MarketModel.html":{},"injectables/MarketService.html":{},"classes/UserModel.html":{}}}],["avoid",{"_index":1633,"title":{},"body":{"index.html":{}}}],["await",{"_index":53,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/MarketController.html":{},"injectables/MarketService.html":{},"controllers/TransactionController.html":{},"injectables/TransactionService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["badgatewayexception",{"_index":373,"title":{},"body":{"injectables/AuthService.html":{}}}],["badrequestexception",{"_index":95,"title":{},"body":{"injectables/AdminService.html":{},"injectables/AuthService.html":{},"injectables/MarketService.html":{},"injectables/TransactionService.html":{},"injectables/UserService.html":{}}}],["ban",{"_index":520,"title":{},"body":{"injectables/AuthService.html":{}}}],["ban_reason",{"_index":521,"title":{},"body":{"injectables/AuthService.html":{}}}],["bcryptjs",{"_index":381,"title":{},"body":{"injectables/AuthService.html":{},"dependencies.html":{}}}],["before",{"_index":1675,"title":{},"body":{"index.html":{}}}],["being",{"_index":1644,"title":{},"body":{"index.html":{}}}],["blockkey",{"_index":1495,"title":{},"body":{"injectables/UserService.html":{}}}],["blockkey.includes(key",{"_index":1504,"title":{},"body":{"injectables/UserService.html":{}}}],["body",{"_index":35,"title":{},"body":{"controllers/AdminController.html":{},"controllers/AuthController.html":{},"controllers/MarketController.html":{},"controllers/TransactionController.html":{},"controllers/UserController.html":{}}}],["body('newpassword",{"_index":306,"title":{},"body":{"controllers/AuthController.html":{}}}],["body('ofid",{"_index":1391,"title":{},"body":{"controllers/UserController.html":{}}}],["body('sesionid",{"_index":313,"title":{},"body":{"controllers/AuthController.html":{}}}],["body('sessioid",{"_index":296,"title":{},"body":{"controllers/AuthController.html":{}}}],["body('sessiondevice",{"_index":298,"title":{},"body":{"controllers/AuthController.html":{}}}],["body('sessionip",{"_index":297,"title":{},"body":{"controllers/AuthController.html":{}}}],["body('toid",{"_index":1390,"title":{},"body":{"controllers/UserController.html":{}}}],["body('token",{"_index":288,"title":{},"body":{"controllers/AuthController.html":{}}}],["body('tokenpassword",{"_index":305,"title":{},"body":{"controllers/AuthController.html":{}}}],["body('userid",{"_index":287,"title":{},"body":{"controllers/AuthController.html":{}}}],["body('userip",{"_index":301,"title":{},"body":{"controllers/AuthController.html":{}}}],["boolean",{"_index":733,"title":{},"body":{"classes/Email.html":{},"classes/Email-1.html":{},"classes/Market.html":{},"classes/MarketModel.html":{},"classes/Membership.html":{},"classes/Membership-1.html":{},"classes/Notifications.html":{},"classes/Notifications-1.html":{},"classes/Online.html":{},"classes/Online-1.html":{},"classes/Password.html":{},"classes/Password-1.html":{},"classes/Rank.html":{},"classes/Rank-1.html":{},"guards/RankGuard.html":{},"classes/Reactions.html":{},"classes/Reactions-1.html":{},"classes/Security.html":{},"classes/Security-1.html":{},"classes/Sessions.html":{},"classes/Sessions-1.html":{},"classes/Stats.html":{},"classes/Stats-1.html":{},"classes/Suspension.html":{},"classes/Suspension-1.html":{},"classes/Transaction.html":{},"classes/Transaction-1.html":{},"classes/TransactionBuyer.html":{},"classes/TransactionInfo.html":{},"classes/UpdateUserDto.html":{},"injectables/UserService.html":{}}}],["bootstrap",{"_index":71,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ConfigModule.html":{},"modules/MarketModule.html":{},"modules/TransactionModule.html":{},"modules/UserModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["branch",{"_index":1678,"title":{},"body":{"index.html":{}}}],["break",{"_index":1015,"title":{},"body":{"injectables/MarketService.html":{}}}],["browse",{"_index":1684,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1681,"title":{},"body":{"modules.html":{}}}],["bug",{"_index":1668,"title":{},"body":{"index.html":{}}}],["buyer",{"_index":765,"title":{},"body":{"classes/Email.html":{},"classes/Email-1.html":{},"classes/Market.html":{},"injectables/MarketService.html":{},"classes/Membership.html":{},"classes/Membership-1.html":{},"classes/Notifications.html":{},"classes/Notifications-1.html":{},"classes/Online.html":{},"classes/Online-1.html":{},"classes/Password.html":{},"classes/Password-1.html":{},"classes/Rank.html":{},"classes/Rank-1.html":{},"classes/Reactions.html":{},"classes/Reactions-1.html":{},"classes/Security.html":{},"classes/Security-1.html":{},"classes/Sessions.html":{},"classes/Sessions-1.html":{},"classes/Stats.html":{},"classes/Stats-1.html":{},"classes/Suspension.html":{},"classes/Suspension-1.html":{},"classes/Transaction.html":{},"classes/Transaction-1.html":{},"classes/TransactionBuyer.html":{},"classes/TransactionDeleteDto.html":{},"classes/TransactionInfo.html":{},"classes/TransactionModel.html":{},"injectables/TransactionService.html":{}}}],["buyer.device",{"_index":957,"title":{},"body":{"classes/MarketModel.html":{}}}],["buyer.ip",{"_index":958,"title":{},"body":{"classes/MarketModel.html":{}}}],["buyer.user._id",{"_index":959,"title":{},"body":{"classes/MarketModel.html":{}}}],["buyeraddmarketdto",{"_index":600,"title":{"classes/BuyerAddMarketDto.html":{}},"body":{"classes/BuyerAddMarketDto.html":{},"injectables/MarketService.html":{},"coverage.html":{}}}],["buyeraddmarketdto.device",{"_index":1028,"title":{},"body":{"injectables/MarketService.html":{}}}],["buyeraddmarketdto.ip",{"_index":1029,"title":{},"body":{"injectables/MarketService.html":{}}}],["buyeraddmarketdto.product",{"_index":1023,"title":{},"body":{"injectables/MarketService.html":{}}}],["buyeraddmarketdto.user",{"_index":1022,"title":{},"body":{"injectables/MarketService.html":{}}}],["buyermarket",{"_index":613,"title":{"classes/BuyerMarket.html":{}},"body":{"classes/BuyerMarket.html":{},"classes/CommentMarket.html":{},"classes/DiscountMarket.html":{},"classes/MarketModel.html":{},"classes/ReactionsMarket.html":{},"coverage.html":{}}}],["buyerremovemarketdto",{"_index":638,"title":{"classes/BuyerRemoveMarketDto.html":{}},"body":{"classes/BuyerRemoveMarketDto.html":{},"controllers/MarketController.html":{},"injectables/MarketService.html":{},"coverage.html":{}}}],["buyerremovemarketdto.product",{"_index":1062,"title":{},"body":{"injectables/MarketService.html":{}}}],["buyerremovemarketdto.user",{"_index":1061,"title":{},"body":{"injectables/MarketService.html":{}}}],["buyers",{"_index":934,"title":{},"body":{"classes/MarketModel.html":{},"injectables/MarketService.html":{},"injectables/TransactionService.html":{}}}],["cache",{"_index":1563,"title":{},"body":{"dependencies.html":{}}}],["cacheinterceptor",{"_index":140,"title":{},"body":{"modules/AppModule.html":{}}}],["cachemodule",{"_index":139,"title":{},"body":{"modules/AppModule.html":{}}}],["cachemodule.register",{"_index":201,"title":{},"body":{"modules/AppModule.html":{}}}],["canactivate",{"_index":1108,"title":{},"body":{"guards/RankGuard.html":{}}}],["canactivate(context",{"_index":1112,"title":{},"body":{"guards/RankGuard.html":{}}}],["carried",{"_index":1627,"title":{},"body":{"index.html":{}}}],["case",{"_index":1014,"title":{},"body":{"injectables/MarketService.html":{}}}],["catch",{"_index":440,"title":{},"body":{"injectables/AuthService.html":{},"injectables/MarketService.html":{},"injectables/TransactionService.html":{},"injectables/UserService.html":{}}}],["catch((error",{"_index":444,"title":{},"body":{"injectables/AuthService.html":{}}}],["cb",{"_index":1367,"title":{},"body":{"controllers/UserController.html":{}}}],["cb(null",{"_index":1374,"title":{},"body":{"controllers/UserController.html":{}}}],["cdentials",{"_index":469,"title":{},"body":{"injectables/AuthService.html":{}}}],["challenge",{"_index":550,"title":{},"body":{"injectables/AuthService.html":{}}}],["change",{"_index":575,"title":{},"body":{"injectables/AuthService.html":{},"classes/UserModel.html":{}}}],["changecoverphoto",{"_index":1318,"title":{},"body":{"controllers/UserController.html":{}}}],["changecoverphoto(file",{"_index":1325,"title":{},"body":{"controllers/UserController.html":{}}}],["changed",{"_index":1670,"title":{},"body":{"index.html":{}}}],["changelog",{"_index":32,"title":{},"body":{"controllers/AdminController.html":{}}}],["changelog.data.model",{"_index":661,"title":{},"body":{"classes/ChangelogModel.html":{}}}],["changelogauthor",{"_index":642,"title":{"classes/ChangelogAuthor.html":{}},"body":{"classes/ChangelogAuthor.html":{},"classes/ChangelogModel.html":{},"coverage.html":{}}}],["changelogmodel",{"_index":22,"title":{"classes/ChangelogModel.html":{}},"body":{"controllers/AdminController.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"classes/ChangelogModel.html":{},"coverage.html":{}}}],["changelogs",{"_index":664,"title":{},"body":{"classes/ChangelogModel.html":{}}}],["changepassword",{"_index":341,"title":{},"body":{"injectables/AuthService.html":{}}}],["changepassword(userid",{"_index":307,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["changeprofilephoto",{"_index":1319,"title":{},"body":{"controllers/UserController.html":{}}}],["changeprofilephoto(file",{"_index":1328,"title":{},"body":{"controllers/UserController.html":{}}}],["changes",{"_index":1031,"title":{},"body":{"injectables/MarketService.html":{},"index.html":{}}}],["changesecurity",{"_index":213,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["changesecurity(securityupdate",{"_index":222,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["changing",{"_index":588,"title":{},"body":{"injectables/AuthService.html":{}}}],["check",{"_index":569,"title":{},"body":{"injectables/AuthService.html":{}}}],["class",{"_index":48,"title":{"classes/BuyerAddMarketDto.html":{},"classes/BuyerMarket.html":{},"classes/BuyerRemoveMarketDto.html":{},"classes/ChangelogAuthor.html":{},"classes/ChangelogModel.html":{},"classes/CommentMarket.html":{},"classes/CommentMarketDto.html":{},"classes/CommentRemoveMarketDto.html":{},"classes/ConfigService.html":{},"classes/DiscountMarket.html":{},"classes/Email.html":{},"classes/Email-1.html":{},"classes/GeneralGateway.html":{},"classes/Market.html":{},"classes/MarketModel.html":{},"classes/Membership.html":{},"classes/Membership-1.html":{},"classes/Notifications.html":{},"classes/Notifications-1.html":{},"classes/Online.html":{},"classes/Online-1.html":{},"classes/Password.html":{},"classes/Password-1.html":{},"classes/Rank.html":{},"classes/Rank-1.html":{},"classes/ReactionAddMarketDto.html":{},"classes/ReactionRemoveMarketDto.html":{},"classes/Reactions.html":{},"classes/Reactions-1.html":{},"classes/ReactionsDto.html":{},"classes/ReactionsMarket.html":{},"classes/Security.html":{},"classes/Security-1.html":{},"classes/SecurityCode.html":{},"classes/SecurityDto.html":{},"classes/SecurityUpdateDto.html":{},"classes/Sessions.html":{},"classes/Sessions-1.html":{},"classes/SignInDto.html":{},"classes/Stats.html":{},"classes/Stats-1.html":{},"classes/Suspension.html":{},"classes/Suspension-1.html":{},"classes/Transaction.html":{},"classes/Transaction-1.html":{},"classes/TransactionBuyer.html":{},"classes/TransactionDeleteDto.html":{},"classes/TransactionInfo.html":{},"classes/TransactionModel.html":{},"classes/UpdateUserDto.html":{},"classes/UserDto.html":{},"classes/UserModel.html":{}},"body":{"controllers/AdminController.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BuyerAddMarketDto.html":{},"classes/BuyerMarket.html":{},"classes/BuyerRemoveMarketDto.html":{},"classes/ChangelogAuthor.html":{},"classes/ChangelogModel.html":{},"classes/CommentMarket.html":{},"classes/CommentMarketDto.html":{},"classes/CommentRemoveMarketDto.html":{},"modules/ConfigModule.html":{},"classes/ConfigService.html":{},"classes/DiscountMarket.html":{},"classes/Email.html":{},"classes/Email-1.html":{},"classes/GeneralGateway.html":{},"injectables/JwtStrategy.html":{},"classes/Market.html":{},"controllers/MarketController.html":{},"classes/MarketModel.html":{},"modules/MarketModule.html":{},"injectables/MarketService.html":{},"classes/Membership.html":{},"classes/Membership-1.html":{},"classes/Notifications.html":{},"classes/Notifications-1.html":{},"classes/Online.html":{},"classes/Online-1.html":{},"classes/Password.html":{},"classes/Password-1.html":{},"classes/Rank.html":{},"classes/Rank-1.html":{},"guards/RankGuard.html":{},"classes/ReactionAddMarketDto.html":{},"classes/ReactionRemoveMarketDto.html":{},"classes/Reactions.html":{},"classes/Reactions-1.html":{},"classes/ReactionsDto.html":{},"classes/ReactionsMarket.html":{},"classes/Security.html":{},"classes/Security-1.html":{},"classes/SecurityCode.html":{},"classes/SecurityDto.html":{},"classes/SecurityUpdateDto.html":{},"classes/Sessions.html":{},"classes/Sessions-1.html":{},"classes/SignInDto.html":{},"classes/Stats.html":{},"classes/Stats-1.html":{},"classes/Suspension.html":{},"classes/Suspension-1.html":{},"classes/Transaction.html":{},"classes/Transaction-1.html":{},"classes/TransactionBuyer.html":{},"controllers/TransactionController.html":{},"classes/TransactionDeleteDto.html":{},"classes/TransactionInfo.html":{},"classes/TransactionModel.html":{},"modules/TransactionModule.html":{},"injectables/TransactionService.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"classes/UserModel.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":601,"title":{},"body":{"classes/BuyerAddMarketDto.html":{},"classes/BuyerMarket.html":{},"classes/BuyerRemoveMarketDto.html":{},"classes/ChangelogAuthor.html":{},"classes/ChangelogModel.html":{},"classes/CommentMarket.html":{},"classes/CommentMarketDto.html":{},"classes/CommentRemoveMarketDto.html":{},"classes/ConfigService.html":{},"classes/DiscountMarket.html":{},"classes/Email.html":{},"classes/Email-1.html":{},"classes/GeneralGateway.html":{},"classes/Market.html":{},"classes/MarketModel.html":{},"classes/Membership.html":{},"classes/Membership-1.html":{},"classes/Notifications.html":{},"classes/Notifications-1.html":{},"classes/Online.html":{},"classes/Online-1.html":{},"classes/Password.html":{},"classes/Password-1.html":{},"classes/Rank.html":{},"classes/Rank-1.html":{},"classes/ReactionAddMarketDto.html":{},"classes/ReactionRemoveMarketDto.html":{},"classes/Reactions.html":{},"classes/Reactions-1.html":{},"classes/ReactionsDto.html":{},"classes/ReactionsMarket.html":{},"classes/Security.html":{},"classes/Security-1.html":{},"classes/SecurityCode.html":{},"classes/SecurityDto.html":{},"classes/SecurityUpdateDto.html":{},"classes/Sessions.html":{},"classes/Sessions-1.html":{},"classes/SignInDto.html":{},"classes/Stats.html":{},"classes/Stats-1.html":{},"classes/Suspension.html":{},"classes/Suspension-1.html":{},"classes/Transaction.html":{},"classes/Transaction-1.html":{},"classes/TransactionBuyer.html":{},"classes/TransactionDeleteDto.html":{},"classes/TransactionInfo.html":{},"classes/TransactionModel.html":{},"classes/UpdateUserDto.html":{},"classes/UserDto.html":{},"classes/UserModel.html":{},"overview.html":{}}}],["client",{"_index":805,"title":{},"body":{"classes/GeneralGateway.html":{},"index.html":{}}}],["client.id",{"_index":816,"title":{},"body":{"classes/GeneralGateway.html":{}}}],["client.query.online",{"_index":811,"title":{},"body":{"classes/GeneralGateway.html":{}}}],["client.query.session",{"_index":814,"title":{},"body":{"classes/GeneralGateway.html":{}}}],["client.query.user",{"_index":813,"title":{},"body":{"classes/GeneralGateway.html":{}}}],["closed",{"_index":596,"title":{},"body":{"injectables/AuthService.html":{}}}],["cluster_adminmodule",{"_index":74,"title":{},"body":{"modules/AdminModule.html":{},"overview.html":{}}}],["cluster_adminmodule_providers",{"_index":75,"title":{},"body":{"modules/AdminModule.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":131,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":132,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":317,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":318,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_providers",{"_index":319,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_configmodule",{"_index":681,"title":{},"body":{"modules/ConfigModule.html":{},"overview.html":{}}}],["cluster_configmodule_exports",{"_index":682,"title":{},"body":{"modules/ConfigModule.html":{},"overview.html":{}}}],["cluster_marketmodule",{"_index":965,"title":{},"body":{"modules/MarketModule.html":{},"overview.html":{}}}],["cluster_marketmodule_imports",{"_index":966,"title":{},"body":{"modules/MarketModule.html":{}}}],["cluster_marketmodule_providers",{"_index":967,"title":{},"body":{"modules/MarketModule.html":{},"overview.html":{}}}],["cluster_transactionmodule",{"_index":1273,"title":{},"body":{"modules/TransactionModule.html":{},"overview.html":{}}}],["cluster_transactionmodule_imports",{"_index":1274,"title":{},"body":{"modules/TransactionModule.html":{}}}],["cluster_transactionmodule_providers",{"_index":1275,"title":{},"body":{"modules/TransactionModule.html":{},"overview.html":{}}}],["cluster_usermodule",{"_index":1460,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_exports",{"_index":1462,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_imports",{"_index":1461,"title":{},"body":{"modules/UserModule.html":{}}}],["cluster_usermodule_providers",{"_index":1463,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["code",{"_index":589,"title":{},"body":{"injectables/AuthService.html":{},"index.html":{}}}],["code.'important",{"_index":1663,"title":{},"body":{"index.html":{}}}],["code1",{"_index":748,"title":{},"body":{"classes/Email.html":{},"classes/Email-1.html":{},"classes/Market.html":{},"classes/Membership.html":{},"classes/Membership-1.html":{},"classes/Notifications.html":{},"classes/Notifications-1.html":{},"classes/Online.html":{},"classes/Online-1.html":{},"classes/Password.html":{},"classes/Password-1.html":{},"classes/Rank.html":{},"classes/Rank-1.html":{},"classes/Reactions.html":{},"classes/Reactions-1.html":{},"classes/Security.html":{},"classes/Security-1.html":{},"classes/SecurityCode.html":{},"classes/SecurityDto.html":{},"classes/SecurityUpdateDto.html":{},"classes/Sessions.html":{},"classes/Sessions-1.html":{},"classes/Stats.html":{},"classes/Stats-1.html":{},"classes/Suspension.html":{},"classes/Suspension-1.html":{},"classes/Transaction.html":{},"classes/Transaction-1.html":{},"classes/TransactionBuyer.html":{},"classes/TransactionInfo.html":{}}}],["code2",{"_index":749,"title":{},"body":{"classes/Email.html":{},"classes/Email-1.html":{},"classes/Market.html":{},"classes/Membership.html":{},"classes/Membership-1.html":{},"classes/Notifications.html":{},"classes/Notifications-1.html":{},"classes/Online.html":{},"classes/Online-1.html":{},"classes/Password.html":{},"classes/Password-1.html":{},"classes/Rank.html":{},"classes/Rank-1.html":{},"classes/Reactions.html":{},"classes/Reactions-1.html":{},"classes/Security.html":{},"classes/Security-1.html":{},"classes/SecurityCode.html":{},"classes/SecurityDto.html":{},"classes/SecurityUpdateDto.html":{},"classes/Sessions.html":{},"classes/Sessions-1.html":{},"classes/Stats.html":{},"classes/Stats-1.html":{},"classes/Suspension.html":{},"classes/Suspension-1.html":{},"classes/Transaction.html":{},"classes/Transaction-1.html":{},"classes/TransactionBuyer.html":{},"classes/TransactionInfo.html":{}}}],["code3",{"_index":750,"title":{},"body":{"classes/Email.html":{},"classes/Email-1.html":{},"classes/Market.html":{},"classes/Membership.html":{},"classes/Membership-1.html":{},"classes/Notifications.html":{},"classes/Notifications-1.html":{},"classes/Online.html":{},"classes/Online-1.html":{},"classes/Password.html":{},"classes/Password-1.html":{},"classes/Rank.html":{},"classes/Rank-1.html":{},"classes/Reactions.html":{},"classes/Reactions-1.html":{},"classes/Security.html":{},"classes/Security-1.html":{},"classes/SecurityCode.html":{},"classes/SecurityDto.html":{},"classes/SecurityUpdateDto.html":{},"classes/Sessions.html":{},"classes/Sessions-1.html":{},"classes/Stats.html":{},"classes/Stats-1.html":{},"classes/Suspension.html":{},"classes/Suspension-1.html":{},"classes/Transaction.html":{},"classes/Transaction-1.html":{},"classes/TransactionBuyer.html":{},"classes/TransactionInfo.html":{}}}],["code4",{"_index":751,"title":{},"body":{"classes/Email.html":{},"classes/Email-1.html":{},"classes/Market.html":{},"classes/Membership.html":{},"classes/Membership-1.html":{},"classes/Notifications.html":{},"classes/Notifications-1.html":{},"classes/Online.html":{},"classes/Online-1.html":{},"classes/Password.html":{},"classes/Password-1.html":{},"classes/Rank.html":{},"classes/Rank-1.html":{},"classes/Reactions.html":{},"classes/Reactions-1.html":{},"classes/Security.html":{},"classes/Security-1.html":{},"classes/SecurityCode.html":{},"classes/SecurityDto.html":{},"classes/SecurityUpdateDto.html":{},"classes/Sessions.html":{},"classes/Sessions-1.html":{},"classes/Stats.html":{},"classes/Stats-1.html":{},"classes/Suspension.html":{},"classes/Suspension-1.html":{},"classes/Transaction.html":{},"classes/Transaction-1.html":{},"classes/TransactionBuyer.html":{},"classes/TransactionInfo.html":{}}}],["code5",{"_index":752,"title":{},"body":{"classes/Email.html":{},"classes/Email-1.html":{},"classes/Market.html":{},"classes/Membership.html":{},"classes/Membership-1.html":{},"classes/Notifications.html":{},"classes/Notifications-1.html":{},"classes/Online.html":{},"classes/Online-1.html":{},"classes/Password.html":{},"classes/Password-1.html":{},"classes/Rank.html":{},"classes/Rank-1.html":{},"classes/Reactions.html":{},"classes/Reactions-1.html":{},"classes/Security.html":{},"classes/Security-1.html":{},"classes/SecurityCode.html":{},"classes/SecurityDto.html":{},"classes/SecurityUpdateDto.html":{},"classes/Sessions.html":{},"classes/Sessions-1.html":{},"classes/Stats.html":{},"classes/Stats-1.html":{},"classes/Suspension.html":{},"classes/Suspension-1.html":{},"classes/Transaction.html":{},"classes/Transaction-1.html":{},"classes/TransactionBuyer.html":{},"classes/TransactionInfo.html":{}}}],["codes",{"_index":552,"title":{},"body":{"injectables/AuthService.html":{}}}],["collection",{"_index":956,"title":{},"body":{"classes/MarketModel.html":{}}}],["command",{"_index":1654,"title":{},"body":{"index.html":{}}}],["comment",{"_index":1034,"title":{},"body":{"injectables/MarketService.html":{}}}],["commentmarket",{"_index":630,"title":{"classes/CommentMarket.html":{}},"body":{"classes/BuyerMarket.html":{},"classes/CommentMarket.html":{},"classes/DiscountMarket.html":{},"classes/MarketModel.html":{},"classes/ReactionsMarket.html":{},"coverage.html":{}}}],["commentmarketdto",{"_index":669,"title":{"classes/CommentMarketDto.html":{}},"body":{"classes/CommentMarketDto.html":{},"controllers/MarketController.html":{},"injectables/MarketService.html":{},"coverage.html":{}}}],["commentmarketdto.content",{"_index":1041,"title":{},"body":{"injectables/MarketService.html":{}}}],["commentmarketdto.device",{"_index":1039,"title":{},"body":{"injectables/MarketService.html":{}}}],["commentmarketdto.ip",{"_index":1040,"title":{},"body":{"injectables/MarketService.html":{}}}],["commentmarketdto.product",{"_index":1036,"title":{},"body":{"injectables/MarketService.html":{}}}],["commentmarketdto.user",{"_index":1035,"title":{},"body":{"injectables/MarketService.html":{}}}],["commentremovemarketdto",{"_index":677,"title":{"classes/CommentRemoveMarketDto.html":{}},"body":{"classes/CommentRemoveMarketDto.html":{},"controllers/MarketController.html":{},"injectables/MarketService.html":{},"coverage.html":{}}}],["commentremovemarketdto.author",{"_index":1053,"title":{},"body":{"injectables/MarketService.html":{}}}],["commentremovemarketdto.product",{"_index":1054,"title":{},"body":{"injectables/MarketService.html":{}}}],["comments",{"_index":935,"title":{},"body":{"classes/MarketModel.html":{},"injectables/MarketService.html":{},"index.html":{}}}],["commit",{"_index":1665,"title":{},"body":{"index.html":{}}}],["commits",{"_index":1664,"title":{},"body":{"index.html":{}}}],["compare",{"_index":380,"title":{},"body":{"injectables/AuthService.html":{}}}],["compare(password",{"_index":472,"title":{},"body":{"injectables/AuthService.html":{}}}],["complete",{"_index":553,"title":{},"body":{"injectables/AuthService.html":{}}}],["completed",{"_index":515,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["compression",{"_index":1569,"title":{},"body":{"dependencies.html":{}}}],["config.service",{"_index":684,"title":{},"body":{"modules/ConfigModule.html":{}}}],["config/config.module",{"_index":142,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{}}}],["config/config.service",{"_index":144,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/UserController.html":{}}}],["configmodule",{"_index":134,"title":{"modules/ConfigModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ConfigModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["configservice",{"_index":143,"title":{"classes/ConfigService.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/ConfigModule.html":{},"classes/ConfigService.html":{},"injectables/JwtStrategy.html":{},"controllers/UserController.html":{},"coverage.html":{},"overview.html":{}}}],["configservice.get(configurationenum.db_host",{"_index":170,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get(configurationenum.email_from",{"_index":181,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get(configurationenum.email_host",{"_index":179,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get(configurationenum.token_secret",{"_index":334,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["configurationenum",{"_index":145,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/UserController.html":{},"miscellaneous/enumerations.html":{}}}],["configurationenum.server_host",{"_index":436,"title":{},"body":{"injectables/AuthService.html":{},"controllers/UserController.html":{}}}],["confirm_account",{"_index":434,"title":{},"body":{"injectables/AuthService.html":{}}}],["confirmation",{"_index":519,"title":{},"body":{"injectables/AuthService.html":{}}}],["confirmed",{"_index":535,"title":{},"body":{"injectables/AuthService.html":{}}}],["conflictexception",{"_index":374,"title":{},"body":{"injectables/AuthService.html":{},"injectables/MarketService.html":{},"injectables/TransactionService.html":{},"injectables/UserService.html":{}}}],["connection",{"_index":121,"title":{},"body":{"controllers/AppController.html":{}}}],["const",{"_index":397,"title":{},"body":{"injectables/AuthService.html":{},"classes/ConfigService.html":{},"classes/GeneralGateway.html":{},"injectables/JwtStrategy.html":{},"guards/RankGuard.html":{},"injectables/TransactionService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["constructor",{"_index":49,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ConfigService.html":{},"classes/GeneralGateway.html":{},"injectables/JwtStrategy.html":{},"controllers/MarketController.html":{},"injectables/MarketService.html":{},"guards/RankGuard.html":{},"controllers/TransactionController.html":{},"injectables/TransactionService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["constructor(changelogmodel",{"_index":88,"title":{},"body":{"injectables/AdminService.html":{}}}],["constructor(i18nservice",{"_index":1282,"title":{},"body":{"injectables/TransactionService.html":{}}}],["constructor(marketmodel",{"_index":973,"title":{},"body":{"injectables/MarketService.html":{}}}],["constructor(private",{"_index":207,"title":{},"body":{"modules/AppModule.html":{},"classes/GeneralGateway.html":{},"guards/RankGuard.html":{}}}],["constructor(reflector",{"_index":1109,"title":{},"body":{"guards/RankGuard.html":{}}}],["constructor(usermodel",{"_index":344,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/UserService.html":{}}}],["constructor(userservice",{"_index":796,"title":{},"body":{"classes/GeneralGateway.html":{}}}],["contact",{"_index":781,"title":{},"body":{"classes/Email-1.html":{},"classes/Membership-1.html":{},"classes/Notifications-1.html":{},"classes/Online-1.html":{},"classes/Password-1.html":{},"classes/Rank-1.html":{},"classes/Reactions-1.html":{},"classes/Security-1.html":{},"classes/Sessions-1.html":{},"classes/Stats-1.html":{},"classes/Suspension-1.html":{},"classes/Transaction-1.html":{},"classes/TransactionInfo.html":{}}}],["content",{"_index":636,"title":{},"body":{"classes/BuyerMarket.html":{},"classes/CommentMarket.html":{},"classes/CommentMarketDto.html":{},"classes/DiscountMarket.html":{},"injectables/MarketService.html":{},"classes/ReactionsMarket.html":{}}}],["context",{"_index":430,"title":{},"body":{"injectables/AuthService.html":{},"guards/RankGuard.html":{}}}],["context.gethandler",{"_index":1117,"title":{},"body":{"guards/RankGuard.html":{}}}],["context.switchtohttp().getrequest",{"_index":1118,"title":{},"body":{"guards/RankGuard.html":{}}}],["controller",{"_index":0,"title":{"controllers/AdminController.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/MarketController.html":{},"controllers/TransactionController.html":{},"controllers/UserController.html":{}},"body":{"controllers/AdminController.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/MarketController.html":{},"controllers/TransactionController.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["controller('admin",{"_index":46,"title":{},"body":{"controllers/AdminController.html":{}}}],["controller('auth",{"_index":277,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('market",{"_index":916,"title":{},"body":{"controllers/MarketController.html":{}}}],["controller('transaction",{"_index":1250,"title":{},"body":{"controllers/TransactionController.html":{}}}],["controller('user",{"_index":1353,"title":{},"body":{"controllers/UserController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AdminController.html":{},"modules/AdminModule.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/MarketController.html":{},"modules/MarketModule.html":{},"controllers/TransactionController.html":{},"modules/TransactionModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["cookieresolver",{"_index":154,"title":{},"body":{"modules/AppModule.html":{}}}],["cookieresolver(['lang",{"_index":200,"title":{},"body":{"modules/AppModule.html":{}}}],["correct",{"_index":123,"title":{},"body":{"controllers/AppController.html":{},"injectables/JwtStrategy.html":{}}}],["corrected",{"_index":1638,"title":{},"body":{"index.html":{}}}],["correctly",{"_index":129,"title":{},"body":{"controllers/AppController.html":{},"index.html":{}}}],["corrode",{"_index":531,"title":{},"body":{"injectables/AuthService.html":{}}}],["corrupt",{"_index":1667,"title":{},"body":{"index.html":{}}}],["cover",{"_index":108,"title":{},"body":{"injectables/AdminService.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"classes/UserModel.html":{},"injectables/UserService.html":{}}}],["coverage",{"_index":1528,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":447,"title":{},"body":{"injectables/AuthService.html":{}}}],["created",{"_index":419,"title":{},"body":{"injectables/AuthService.html":{}}}],["createdat",{"_index":506,"title":{},"body":{"injectables/AuthService.html":{},"injectables/MarketService.html":{},"injectables/UserService.html":{}}}],["createparamdecorator((key",{"_index":1692,"title":{},"body":{"miscellaneous/variables.html":{}}}],["creating",{"_index":395,"title":{},"body":{"injectables/AuthService.html":{},"injectables/MarketService.html":{}}}],["customer",{"_index":1643,"title":{},"body":{"index.html":{}}}],["customname",{"_index":663,"title":{},"body":{"classes/ChangelogModel.html":{},"classes/MarketModel.html":{},"classes/TransactionModel.html":{},"classes/UserModel.html":{}}}],["damaging",{"_index":1646,"title":{},"body":{"index.html":{}}}],["data",{"_index":448,"title":{},"body":{"injectables/AuthService.html":{},"injectables/MarketService.html":{},"index.html":{}}}],["database",{"_index":598,"title":{},"body":{"injectables/AuthService.html":{},"injectables/MarketService.html":{},"injectables/TransactionService.html":{}}}],["date",{"_index":629,"title":{},"body":{"classes/BuyerMarket.html":{},"classes/CommentMarket.html":{},"classes/DiscountMarket.html":{},"classes/Email.html":{},"classes/Email-1.html":{},"interfaces/IJwtPayload.html":{},"classes/Market.html":{},"classes/Membership.html":{},"classes/Membership-1.html":{},"classes/Notifications.html":{},"classes/Notifications-1.html":{},"classes/Online.html":{},"classes/Online-1.html":{},"classes/Password.html":{},"classes/Password-1.html":{},"classes/Rank.html":{},"classes/Rank-1.html":{},"classes/Reactions.html":{},"classes/Reactions-1.html":{},"classes/ReactionsMarket.html":{},"classes/Security.html":{},"classes/Security-1.html":{},"classes/Sessions.html":{},"classes/Sessions-1.html":{},"classes/Stats.html":{},"classes/Stats-1.html":{},"classes/Suspension.html":{},"classes/Suspension-1.html":{},"classes/Transaction.html":{},"classes/Transaction-1.html":{},"classes/TransactionBuyer.html":{},"classes/TransactionInfo.html":{},"classes/UpdateUserDto.html":{},"injectables/UserService.html":{}}}],["date.now",{"_index":786,"title":{},"body":{"classes/Email-1.html":{},"classes/Membership-1.html":{},"classes/Notifications-1.html":{},"classes/Online-1.html":{},"classes/Password-1.html":{},"classes/Rank-1.html":{},"classes/Reactions-1.html":{},"classes/Security-1.html":{},"classes/Sessions-1.html":{},"classes/Stats-1.html":{},"classes/Suspension-1.html":{},"classes/Transaction-1.html":{},"classes/TransactionInfo.html":{}}}],["db_host",{"_index":721,"title":{},"body":{"classes/ConfigService.html":{},"miscellaneous/enumerations.html":{}}}],["de",{"_index":1523,"title":{},"body":{"injectables/UserService.html":{}}}],["declarations",{"_index":70,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ConfigModule.html":{},"modules/MarketModule.html":{},"modules/TransactionModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["decorators",{"_index":15,"title":{},"body":{"controllers/AdminController.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/BuyerAddMarketDto.html":{},"classes/BuyerMarket.html":{},"classes/BuyerRemoveMarketDto.html":{},"classes/ChangelogAuthor.html":{},"classes/ChangelogModel.html":{},"classes/CommentMarket.html":{},"classes/CommentMarketDto.html":{},"classes/CommentRemoveMarketDto.html":{},"classes/DiscountMarket.html":{},"classes/Email-1.html":{},"classes/GeneralGateway.html":{},"controllers/MarketController.html":{},"classes/MarketModel.html":{},"classes/Membership-1.html":{},"classes/Notifications-1.html":{},"classes/Online-1.html":{},"classes/Password-1.html":{},"classes/Rank-1.html":{},"classes/ReactionAddMarketDto.html":{},"classes/ReactionRemoveMarketDto.html":{},"classes/Reactions-1.html":{},"classes/ReactionsDto.html":{},"classes/ReactionsMarket.html":{},"classes/Security-1.html":{},"classes/SecurityCode.html":{},"classes/SecurityDto.html":{},"classes/SecurityUpdateDto.html":{},"classes/Sessions-1.html":{},"classes/SignInDto.html":{},"classes/Stats-1.html":{},"classes/Suspension-1.html":{},"classes/Transaction-1.html":{},"controllers/TransactionController.html":{},"classes/TransactionDeleteDto.html":{},"classes/TransactionInfo.html":{},"classes/TransactionModel.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"classes/UserModel.html":{}}}],["decorators/rank.decorator",{"_index":911,"title":{},"body":{"controllers/MarketController.html":{},"controllers/TransactionController.html":{},"controllers/UserController.html":{}}}],["decorators/user.decorator",{"_index":276,"title":{},"body":{"controllers/AuthController.html":{},"controllers/MarketController.html":{},"controllers/UserController.html":{}}}],["default",{"_index":370,"title":{},"body":{"injectables/AuthService.html":{},"classes/ConfigService.html":{},"classes/Email-1.html":{},"classes/GeneralGateway.html":{},"injectables/MarketService.html":{},"classes/Membership-1.html":{},"classes/Notifications-1.html":{},"classes/Online-1.html":{},"classes/Password-1.html":{},"classes/Rank-1.html":{},"classes/Reactions-1.html":{},"classes/Security-1.html":{},"classes/Sessions-1.html":{},"classes/Stats-1.html":{},"classes/Suspension-1.html":{},"classes/Transaction-1.html":{},"classes/TransactionInfo.html":{},"injectables/TransactionService.html":{},"classes/UserModel.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["defaults",{"_index":180,"title":{},"body":{"modules/AppModule.html":{}}}],["defaultstrategy",{"_index":329,"title":{},"body":{"modules/AuthModule.html":{}}}],["defined",{"_index":18,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BuyerAddMarketDto.html":{},"classes/BuyerMarket.html":{},"classes/BuyerRemoveMarketDto.html":{},"classes/ChangelogAuthor.html":{},"classes/ChangelogModel.html":{},"classes/CommentMarket.html":{},"classes/CommentMarketDto.html":{},"classes/CommentRemoveMarketDto.html":{},"classes/ConfigService.html":{},"classes/DiscountMarket.html":{},"classes/Email.html":{},"classes/Email-1.html":{},"classes/GeneralGateway.html":{},"injectables/JwtStrategy.html":{},"classes/Market.html":{},"controllers/MarketController.html":{},"classes/MarketModel.html":{},"injectables/MarketService.html":{},"classes/Membership.html":{},"classes/Membership-1.html":{},"classes/Notifications.html":{},"classes/Notifications-1.html":{},"classes/Online.html":{},"classes/Online-1.html":{},"classes/Password.html":{},"classes/Password-1.html":{},"classes/Rank.html":{},"classes/Rank-1.html":{},"guards/RankGuard.html":{},"classes/ReactionAddMarketDto.html":{},"classes/ReactionRemoveMarketDto.html":{},"classes/Reactions.html":{},"classes/Reactions-1.html":{},"classes/ReactionsDto.html":{},"classes/ReactionsMarket.html":{},"classes/Security.html":{},"classes/Security-1.html":{},"classes/SecurityCode.html":{},"classes/SecurityDto.html":{},"classes/SecurityUpdateDto.html":{},"classes/Sessions.html":{},"classes/Sessions-1.html":{},"classes/SignInDto.html":{},"classes/Stats.html":{},"classes/Stats-1.html":{},"classes/Suspension.html":{},"classes/Suspension-1.html":{},"classes/Transaction.html":{},"classes/Transaction-1.html":{},"classes/TransactionBuyer.html":{},"controllers/TransactionController.html":{},"classes/TransactionDeleteDto.html":{},"classes/TransactionInfo.html":{},"classes/TransactionModel.html":{},"injectables/TransactionService.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"classes/UserModel.html":{},"injectables/UserService.html":{}}}],["delete",{"_index":904,"title":{},"body":{"controllers/MarketController.html":{},"injectables/MarketService.html":{},"controllers/TransactionController.html":{},"controllers/UserController.html":{}}}],["delete('/delete/buyer",{"_index":929,"title":{},"body":{"controllers/MarketController.html":{}}}],["delete('/delete/comment",{"_index":896,"title":{},"body":{"controllers/MarketController.html":{}}}],["delete('/delete/purchase",{"_index":1253,"title":{},"body":{"controllers/TransactionController.html":{}}}],["delete('/delete/reaction",{"_index":900,"title":{},"body":{"controllers/MarketController.html":{}}}],["delete('/reactions/remove",{"_index":1389,"title":{},"body":{"controllers/UserController.html":{}}}],["deleted",{"_index":1069,"title":{},"body":{"injectables/MarketService.html":{},"injectables/UserService.html":{}}}],["deletetransaction",{"_index":1233,"title":{},"body":{"controllers/TransactionController.html":{},"injectables/TransactionService.html":{}}}],["deletetransaction(transactiondeletedto",{"_index":1236,"title":{},"body":{"controllers/TransactionController.html":{},"injectables/TransactionService.html":{}}}],["deleteuser",{"_index":1468,"title":{},"body":{"injectables/UserService.html":{}}}],["deleteuser(id",{"_index":1475,"title":{},"body":{"injectables/UserService.html":{}}}],["deleting",{"_index":1052,"title":{},"body":{"injectables/MarketService.html":{}}}],["dependencies",{"_index":68,"title":{"dependencies.html":{}},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ConfigModule.html":{},"modules/MarketModule.html":{},"modules/TransactionModule.html":{},"modules/UserModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":648,"title":{},"body":{"classes/ChangelogModel.html":{},"classes/Email.html":{},"classes/Market.html":{},"classes/MarketModel.html":{},"injectables/MarketService.html":{},"classes/Membership.html":{},"classes/Notifications.html":{},"classes/Online.html":{},"classes/Password.html":{},"classes/Rank.html":{},"classes/Reactions.html":{},"classes/Security.html":{},"classes/Sessions.html":{},"classes/Stats.html":{},"classes/Suspension.html":{},"classes/Transaction.html":{},"classes/TransactionBuyer.html":{}}}],["destination",{"_index":1362,"title":{},"body":{"controllers/UserController.html":{}}}],["device",{"_index":457,"title":{},"body":{"injectables/AuthService.html":{},"classes/BuyerAddMarketDto.html":{},"classes/BuyerMarket.html":{},"classes/ChangelogAuthor.html":{},"classes/CommentMarket.html":{},"classes/CommentMarketDto.html":{},"classes/DiscountMarket.html":{},"classes/Email.html":{},"classes/Email-1.html":{},"classes/Market.html":{},"classes/MarketModel.html":{},"injectables/MarketService.html":{},"classes/Membership.html":{},"classes/Membership-1.html":{},"classes/Notifications.html":{},"classes/Notifications-1.html":{},"classes/Online.html":{},"classes/Online-1.html":{},"classes/Password.html":{},"classes/Password-1.html":{},"classes/Rank.html":{},"classes/Rank-1.html":{},"classes/ReactionAddMarketDto.html":{},"classes/Reactions.html":{},"classes/Reactions-1.html":{},"classes/ReactionsMarket.html":{},"classes/Security.html":{},"classes/Security-1.html":{},"classes/Sessions.html":{},"classes/Sessions-1.html":{},"classes/SignInDto.html":{},"classes/Stats.html":{},"classes/Stats-1.html":{},"classes/Suspension.html":{},"classes/Suspension-1.html":{},"classes/Transaction.html":{},"classes/Transaction-1.html":{},"classes/TransactionBuyer.html":{},"classes/TransactionInfo.html":{},"classes/TransactionModel.html":{},"injectables/TransactionService.html":{},"classes/UserDto.html":{},"classes/UserModel.html":{},"injectables/UserService.html":{}}}],["dir",{"_index":183,"title":{},"body":{"modules/AppModule.html":{},"injectables/UserService.html":{}}}],["disconnected",{"_index":817,"title":{},"body":{"classes/GeneralGateway.html":{}}}],["discount",{"_index":738,"title":{},"body":{"classes/Email.html":{},"classes/Email-1.html":{},"classes/Market.html":{},"classes/MarketModel.html":{},"injectables/MarketService.html":{},"classes/Membership.html":{},"classes/Membership-1.html":{},"classes/Notifications.html":{},"classes/Notifications-1.html":{},"classes/Online.html":{},"classes/Online-1.html":{},"classes/Password.html":{},"classes/Password-1.html":{},"classes/Rank.html":{},"classes/Rank-1.html":{},"classes/Reactions.html":{},"classes/Reactions-1.html":{},"classes/Security.html":{},"classes/Security-1.html":{},"classes/Sessions.html":{},"classes/Sessions-1.html":{},"classes/Stats.html":{},"classes/Stats-1.html":{},"classes/Suspension.html":{},"classes/Suspension-1.html":{},"classes/Transaction.html":{},"classes/Transaction-1.html":{},"classes/TransactionBuyer.html":{},"classes/TransactionInfo.html":{}}}],["discount.percentage",{"_index":1018,"title":{},"body":{"injectables/MarketService.html":{}}}],["discountmarket",{"_index":621,"title":{"classes/DiscountMarket.html":{}},"body":{"classes/BuyerMarket.html":{},"classes/CommentMarket.html":{},"classes/DiscountMarket.html":{},"classes/MarketModel.html":{},"classes/ReactionsMarket.html":{},"coverage.html":{}}}],["discounttotal",{"_index":1304,"title":{},"body":{"injectables/TransactionService.html":{}}}],["diskstorage",{"_index":1350,"title":{},"body":{"controllers/UserController.html":{}}}],["disposition",{"_index":514,"title":{},"body":{"injectables/AuthService.html":{}}}],["documentation",{"_index":1529,"title":{},"body":{"coverage.html":{}}}],["dont",{"_index":1437,"title":{},"body":{"classes/UserModel.html":{}}}],["dotenv",{"_index":699,"title":{},"body":{"classes/ConfigService.html":{}}}],["downvote",{"_index":1519,"title":{},"body":{"injectables/UserService.html":{}}}],["dto/buyer.add.dto",{"_index":988,"title":{},"body":{"injectables/MarketService.html":{}}}],["dto/buyer.remove.dto",{"_index":910,"title":{},"body":{"controllers/MarketController.html":{},"injectables/MarketService.html":{}}}],["dto/comment.add.dto",{"_index":908,"title":{},"body":{"controllers/MarketController.html":{},"injectables/MarketService.html":{}}}],["dto/comment.remove.dto",{"_index":909,"title":{},"body":{"controllers/MarketController.html":{},"injectables/MarketService.html":{}}}],["dto/reaction.add.dto",{"_index":914,"title":{},"body":{"controllers/MarketController.html":{},"injectables/MarketService.html":{}}}],["dto/reaction.remove.dto",{"_index":915,"title":{},"body":{"controllers/MarketController.html":{},"injectables/MarketService.html":{}}}],["dto/reactions.dto",{"_index":1352,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["dto/security.dto",{"_index":273,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["dto/security.update.dto",{"_index":274,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["dto/signin.dto",{"_index":272,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["dto/transaction.delete.dto",{"_index":1249,"title":{},"body":{"controllers/TransactionController.html":{},"injectables/TransactionService.html":{}}}],["dto/update",{"_index":1347,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["due",{"_index":467,"title":{},"body":{"injectables/AuthService.html":{},"injectables/MarketService.html":{},"injectables/UserService.html":{}}}],["easily",{"_index":1618,"title":{},"body":{"index.html":{}}}],["el",{"_index":1525,"title":{},"body":{"injectables/UserService.html":{}}}],["electronic",{"_index":530,"title":{},"body":{"injectables/AuthService.html":{}}}],["eliminating",{"_index":1065,"title":{},"body":{"injectables/MarketService.html":{}}}],["email",{"_index":282,"title":{"classes/Email.html":{},"classes/Email-1.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/Email.html":{},"classes/Email-1.html":{},"interfaces/IJwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/Market.html":{},"classes/Membership.html":{},"classes/Membership-1.html":{},"classes/Notifications.html":{},"classes/Notifications-1.html":{},"classes/Online.html":{},"classes/Online-1.html":{},"classes/Password.html":{},"classes/Password-1.html":{},"classes/Rank.html":{},"classes/Rank-1.html":{},"classes/Reactions.html":{},"classes/Reactions-1.html":{},"classes/Security.html":{},"classes/Security-1.html":{},"classes/Sessions.html":{},"classes/Sessions-1.html":{},"classes/SignInDto.html":{},"classes/Stats.html":{},"classes/Stats-1.html":{},"classes/Suspension.html":{},"classes/Suspension-1.html":{},"classes/Transaction.html":{},"classes/Transaction-1.html":{},"classes/TransactionBuyer.html":{},"classes/TransactionInfo.html":{},"classes/UserDto.html":{},"classes/UserModel.html":{},"coverage.html":{}}}],["email.expiration",{"_index":1497,"title":{},"body":{"injectables/UserService.html":{}}}],["email.key",{"_index":461,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["email.status",{"_index":1496,"title":{},"body":{"injectables/UserService.html":{}}}],["email.token",{"_index":1498,"title":{},"body":{"injectables/UserService.html":{}}}],["email_from",{"_index":719,"title":{},"body":{"classes/ConfigService.html":{},"miscellaneous/enumerations.html":{}}}],["email_host",{"_index":717,"title":{},"body":{"classes/ConfigService.html":{},"miscellaneous/enumerations.html":{}}}],["en_us",{"_index":194,"title":{},"body":{"modules/AppModule.html":{}}}],["enabled",{"_index":536,"title":{},"body":{"injectables/AuthService.html":{},"classes/Email.html":{},"classes/Email-1.html":{},"classes/Market.html":{},"classes/Membership.html":{},"classes/Membership-1.html":{},"classes/Notifications.html":{},"classes/Notifications-1.html":{},"classes/Online.html":{},"classes/Online-1.html":{},"classes/Password.html":{},"classes/Password-1.html":{},"classes/Rank.html":{},"classes/Rank-1.html":{},"classes/Reactions.html":{},"classes/Reactions-1.html":{},"classes/Security.html":{},"classes/Security-1.html":{},"classes/SecurityCode.html":{},"classes/SecurityUpdateDto.html":{},"classes/Sessions.html":{},"classes/Sessions-1.html":{},"classes/Stats.html":{},"classes/Stats-1.html":{},"classes/Suspension.html":{},"classes/Suspension-1.html":{},"classes/Transaction.html":{},"classes/Transaction-1.html":{},"classes/TransactionBuyer.html":{},"classes/TransactionInfo.html":{}}}],["end",{"_index":1642,"title":{},"body":{"index.html":{}}}],["enough",{"_index":1439,"title":{},"body":{"classes/UserModel.html":{}}}],["entered",{"_index":571,"title":{},"body":{"injectables/AuthService.html":{}}}],["entire",{"_index":1659,"title":{},"body":{"index.html":{}}}],["enumerations",{"_index":1596,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["env",{"_index":705,"title":{},"body":{"classes/ConfigService.html":{}}}],["envconfig",{"_index":687,"title":{},"body":{"classes/ConfigService.html":{}}}],["envfilepath",{"_index":704,"title":{},"body":{"classes/ConfigService.html":{}}}],["error",{"_index":528,"title":{},"body":{"injectables/AuthService.html":{},"injectables/MarketService.html":{},"injectables/TransactionService.html":{},"injectables/UserService.html":{}}}],["error.code",{"_index":445,"title":{},"body":{"injectables/AuthService.html":{}}}],["events",{"_index":1625,"title":{},"body":{"index.html":{}}}],["exec",{"_index":110,"title":{},"body":{"injectables/AdminService.html":{},"injectables/MarketService.html":{},"injectables/UserService.html":{}}}],["executed",{"_index":1623,"title":{},"body":{"index.html":{}}}],["executioncontext",{"_index":1113,"title":{},"body":{"guards/RankGuard.html":{}}}],["exist",{"_index":709,"title":{},"body":{"classes/ConfigService.html":{},"injectables/JwtStrategy.html":{},"injectables/MarketService.html":{},"injectables/TransactionService.html":{},"injectables/UserService.html":{}}}],["existpath",{"_index":706,"title":{},"body":{"classes/ConfigService.html":{}}}],["exists",{"_index":450,"title":{},"body":{"injectables/AuthService.html":{}}}],["existssync",{"_index":695,"title":{},"body":{"classes/ConfigService.html":{}}}],["existssync(envfilepath",{"_index":707,"title":{},"body":{"classes/ConfigService.html":{}}}],["exp",{"_index":628,"title":{},"body":{"classes/BuyerMarket.html":{},"classes/CommentMarket.html":{},"classes/DiscountMarket.html":{},"classes/Email.html":{},"classes/Email-1.html":{},"classes/Market.html":{},"classes/Membership.html":{},"classes/Membership-1.html":{},"classes/Notifications.html":{},"classes/Notifications-1.html":{},"classes/Online.html":{},"classes/Online-1.html":{},"classes/Password.html":{},"classes/Password-1.html":{},"classes/Rank.html":{},"classes/Rank-1.html":{},"classes/Reactions.html":{},"classes/Reactions-1.html":{},"classes/ReactionsMarket.html":{},"classes/Security.html":{},"classes/Security-1.html":{},"classes/Sessions.html":{},"classes/Sessions-1.html":{},"classes/Stats.html":{},"classes/Stats-1.html":{},"classes/Suspension.html":{},"classes/Suspension-1.html":{},"classes/Transaction.html":{},"classes/Transaction-1.html":{},"classes/TransactionBuyer.html":{},"classes/TransactionInfo.html":{}}}],["expiration",{"_index":729,"title":{},"body":{"classes/Email.html":{},"classes/Email-1.html":{},"classes/Market.html":{},"classes/Membership.html":{},"classes/Membership-1.html":{},"classes/Notifications.html":{},"classes/Notifications-1.html":{},"classes/Online.html":{},"classes/Online-1.html":{},"classes/Password.html":{},"classes/Password-1.html":{},"classes/Rank.html":{},"classes/Rank-1.html":{},"classes/Reactions.html":{},"classes/Reactions-1.html":{},"classes/Security.html":{},"classes/Security-1.html":{},"classes/Sessions.html":{},"classes/Sessions-1.html":{},"classes/Stats.html":{},"classes/Stats-1.html":{},"classes/Suspension.html":{},"classes/Suspension-1.html":{},"classes/Transaction.html":{},"classes/Transaction-1.html":{},"classes/TransactionBuyer.html":{},"classes/TransactionInfo.html":{}}}],["expired",{"_index":542,"title":{},"body":{"injectables/AuthService.html":{}}}],["expiresin",{"_index":336,"title":{},"body":{"modules/AuthModule.html":{}}}],["export",{"_index":47,"title":{},"body":{"controllers/AdminController.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BuyerAddMarketDto.html":{},"classes/BuyerMarket.html":{},"classes/BuyerRemoveMarketDto.html":{},"classes/ChangelogAuthor.html":{},"classes/ChangelogModel.html":{},"classes/CommentMarket.html":{},"classes/CommentMarketDto.html":{},"classes/CommentRemoveMarketDto.html":{},"modules/ConfigModule.html":{},"classes/ConfigService.html":{},"classes/DiscountMarket.html":{},"classes/Email.html":{},"classes/Email-1.html":{},"classes/GeneralGateway.html":{},"interfaces/IJwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/Market.html":{},"controllers/MarketController.html":{},"classes/MarketModel.html":{},"modules/MarketModule.html":{},"injectables/MarketService.html":{},"classes/Membership.html":{},"classes/Membership-1.html":{},"classes/Notifications.html":{},"classes/Notifications-1.html":{},"classes/Online.html":{},"classes/Online-1.html":{},"classes/Password.html":{},"classes/Password-1.html":{},"classes/Rank.html":{},"classes/Rank-1.html":{},"guards/RankGuard.html":{},"classes/ReactionAddMarketDto.html":{},"classes/ReactionRemoveMarketDto.html":{},"classes/Reactions.html":{},"classes/Reactions-1.html":{},"classes/ReactionsDto.html":{},"classes/ReactionsMarket.html":{},"classes/Security.html":{},"classes/Security-1.html":{},"classes/SecurityCode.html":{},"classes/SecurityDto.html":{},"classes/SecurityUpdateDto.html":{},"classes/Sessions.html":{},"classes/Sessions-1.html":{},"classes/SignInDto.html":{},"classes/Stats.html":{},"classes/Stats-1.html":{},"classes/Suspension.html":{},"classes/Suspension-1.html":{},"classes/Transaction.html":{},"classes/Transaction-1.html":{},"classes/TransactionBuyer.html":{},"controllers/TransactionController.html":{},"classes/TransactionDeleteDto.html":{},"classes/TransactionInfo.html":{},"classes/TransactionModel.html":{},"modules/TransactionModule.html":{},"injectables/TransactionService.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"classes/UserModel.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["exports",{"_index":73,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ConfigModule.html":{},"modules/MarketModule.html":{},"modules/TransactionModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["express",{"_index":1345,"title":{},"body":{"controllers/UserController.html":{},"dependencies.html":{}}}],["extends",{"_index":787,"title":{},"body":{"classes/Email-1.html":{},"injectables/JwtStrategy.html":{},"classes/MarketModel.html":{},"classes/Membership-1.html":{},"classes/Notifications-1.html":{},"classes/Online-1.html":{},"classes/Password-1.html":{},"classes/Rank-1.html":{},"classes/Reactions-1.html":{},"classes/Security-1.html":{},"classes/Sessions-1.html":{},"classes/Stats-1.html":{},"classes/Suspension-1.html":{},"classes/Transaction-1.html":{},"classes/TransactionInfo.html":{},"classes/TransactionModel.html":{},"classes/UserModel.html":{}}}],["extname",{"_index":1349,"title":{},"body":{"controllers/UserController.html":{}}}],["extractjwt",{"_index":834,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":839,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["factor",{"_index":557,"title":{},"body":{"injectables/AuthService.html":{}}}],["failure",{"_index":998,"title":{},"body":{"injectables/MarketService.html":{},"index.html":{}}}],["fallbacklanguage",{"_index":193,"title":{},"body":{"modules/AppModule.html":{}}}],["false",{"_index":176,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"classes/ChangelogModel.html":{},"classes/Email.html":{},"classes/Email-1.html":{},"classes/GeneralGateway.html":{},"injectables/JwtStrategy.html":{},"classes/Market.html":{},"classes/MarketModel.html":{},"classes/Membership.html":{},"classes/Membership-1.html":{},"classes/Notifications.html":{},"classes/Notifications-1.html":{},"classes/Online.html":{},"classes/Online-1.html":{},"classes/Password.html":{},"classes/Password-1.html":{},"classes/Rank.html":{},"classes/Rank-1.html":{},"classes/Reactions.html":{},"classes/Reactions-1.html":{},"classes/Security.html":{},"classes/Security-1.html":{},"classes/Sessions.html":{},"classes/Sessions-1.html":{},"classes/Stats.html":{},"classes/Stats-1.html":{},"classes/Suspension.html":{},"classes/Suspension-1.html":{},"classes/Transaction.html":{},"classes/Transaction-1.html":{},"classes/TransactionBuyer.html":{},"classes/TransactionInfo.html":{},"classes/UserModel.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AdminController.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BuyerAddMarketDto.html":{},"classes/BuyerMarket.html":{},"classes/BuyerRemoveMarketDto.html":{},"classes/ChangelogAuthor.html":{},"classes/ChangelogModel.html":{},"classes/CommentMarket.html":{},"classes/CommentMarketDto.html":{},"classes/CommentRemoveMarketDto.html":{},"modules/ConfigModule.html":{},"classes/ConfigService.html":{},"classes/DiscountMarket.html":{},"classes/Email.html":{},"classes/Email-1.html":{},"classes/GeneralGateway.html":{},"interfaces/IJwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/Market.html":{},"controllers/MarketController.html":{},"classes/MarketModel.html":{},"modules/MarketModule.html":{},"injectables/MarketService.html":{},"classes/Membership.html":{},"classes/Membership-1.html":{},"classes/Notifications.html":{},"classes/Notifications-1.html":{},"classes/Online.html":{},"classes/Online-1.html":{},"classes/Password.html":{},"classes/Password-1.html":{},"classes/Rank.html":{},"classes/Rank-1.html":{},"guards/RankGuard.html":{},"classes/ReactionAddMarketDto.html":{},"classes/ReactionRemoveMarketDto.html":{},"classes/Reactions.html":{},"classes/Reactions-1.html":{},"classes/ReactionsDto.html":{},"classes/ReactionsMarket.html":{},"classes/Security.html":{},"classes/Security-1.html":{},"classes/SecurityCode.html":{},"classes/SecurityDto.html":{},"classes/SecurityUpdateDto.html":{},"classes/Sessions.html":{},"classes/Sessions-1.html":{},"classes/SignInDto.html":{},"classes/Stats.html":{},"classes/Stats-1.html":{},"classes/Suspension.html":{},"classes/Suspension-1.html":{},"classes/Transaction.html":{},"classes/Transaction-1.html":{},"classes/TransactionBuyer.html":{},"controllers/TransactionController.html":{},"classes/TransactionDeleteDto.html":{},"classes/TransactionInfo.html":{},"classes/TransactionModel.html":{},"modules/TransactionModule.html":{},"injectables/TransactionService.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"classes/UserModel.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"index.html":{}}}],["fileinterceptor",{"_index":1343,"title":{},"body":{"controllers/UserController.html":{}}}],["fileinterceptor('cover",{"_index":1381,"title":{},"body":{"controllers/UserController.html":{}}}],["fileinterceptor('photo",{"_index":1360,"title":{},"body":{"controllers/UserController.html":{}}}],["filename",{"_index":1365,"title":{},"body":{"controllers/UserController.html":{}}}],["filepattern",{"_index":191,"title":{},"body":{"modules/AppModule.html":{}}}],["fill(null",{"_index":1370,"title":{},"body":{"controllers/UserController.html":{}}}],["filter",{"_index":982,"title":{},"body":{"injectables/MarketService.html":{}}}],["find",{"_index":104,"title":{},"body":{"injectables/AdminService.html":{},"injectables/MarketService.html":{},"injectables/UserService.html":{}}}],["findbyid(productid",{"_index":1004,"title":{},"body":{"injectables/MarketService.html":{}}}],["findbyid(securitydto.id",{"_index":548,"title":{},"body":{"injectables/AuthService.html":{}}}],["findbyid(userid",{"_index":1490,"title":{},"body":{"injectables/UserService.html":{}}}],["findbyidandupdate(id",{"_index":1508,"title":{},"body":{"injectables/UserService.html":{}}}],["findbyidandupdate(userid",{"_index":1513,"title":{},"body":{"injectables/UserService.html":{}}}],["findoneandupdate",{"_index":1058,"title":{},"body":{"injectables/MarketService.html":{},"injectables/TransactionService.html":{},"injectables/UserService.html":{}}}],["forbiddenexception",{"_index":377,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["format",{"_index":404,"title":{},"body":{"injectables/AuthService.html":{},"classes/GeneralGateway.html":{},"index.html":{}}}],["formatted",{"_index":1660,"title":{},"body":{"index.html":{}}}],["fs",{"_index":697,"title":{},"body":{"classes/ConfigService.html":{}}}],["function",{"_index":1542,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":1603,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["gateways/general.gateway",{"_index":160,"title":{},"body":{"modules/AppModule.html":{}}}],["general",{"_index":800,"title":{},"body":{"classes/GeneralGateway.html":{},"index.html":{}}}],["generalgateway",{"_index":159,"title":{"classes/GeneralGateway.html":{}},"body":{"modules/AppModule.html":{},"classes/GeneralGateway.html":{},"coverage.html":{}}}],["generate",{"_index":524,"title":{},"body":{"injectables/AuthService.html":{}}}],["generated",{"_index":1613,"title":{},"body":{"index.html":{}}}],["generating",{"_index":484,"title":{},"body":{"injectables/AuthService.html":{}}}],["generator",{"_index":384,"title":{},"body":{"injectables/AuthService.html":{},"dependencies.html":{}}}],["gensalt",{"_index":378,"title":{},"body":{"injectables/AuthService.html":{}}}],["gensalt(10",{"_index":401,"title":{},"body":{"injectables/AuthService.html":{}}}],["get('/find/:userid",{"_index":1333,"title":{},"body":{"controllers/UserController.html":{}}}],["get('/get/all",{"_index":1256,"title":{},"body":{"controllers/TransactionController.html":{}}}],["get('/get/changelog",{"_index":17,"title":{},"body":{"controllers/AdminController.html":{}}}],["get('/get/product/:id",{"_index":889,"title":{},"body":{"controllers/MarketController.html":{}}}],["get('/get/products/:filter",{"_index":885,"title":{},"body":{"controllers/MarketController.html":{}}}],["get('/token",{"_index":125,"title":{},"body":{"controllers/AppController.html":{}}}],["get(key",{"_index":692,"title":{},"body":{"classes/ConfigService.html":{}}}],["getallproducts",{"_index":866,"title":{},"body":{"controllers/MarketController.html":{},"injectables/MarketService.html":{}}}],["getallproducts(filter",{"_index":980,"title":{},"body":{"injectables/MarketService.html":{}}}],["getallproducts(productid",{"_index":882,"title":{},"body":{"controllers/MarketController.html":{}}}],["getalltransactions",{"_index":1281,"title":{},"body":{"injectables/TransactionService.html":{}}}],["getallusers",{"_index":1320,"title":{},"body":{"controllers/UserController.html":{}}}],["getchangelog",{"_index":13,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{}}}],["getproduct",{"_index":867,"title":{},"body":{"controllers/MarketController.html":{},"injectables/MarketService.html":{}}}],["getproduct(productid",{"_index":888,"title":{},"body":{"controllers/MarketController.html":{},"injectables/MarketService.html":{}}}],["getpublicuser",{"_index":1469,"title":{},"body":{"injectables/UserService.html":{}}}],["getpublicuser(userid",{"_index":1477,"title":{},"body":{"injectables/UserService.html":{}}}],["getting",{"_index":1605,"title":{"index.html":{}},"body":{}}],["gettransactions",{"_index":1234,"title":{},"body":{"controllers/TransactionController.html":{}}}],["getuser",{"_index":275,"title":{},"body":{"controllers/AuthController.html":{},"controllers/MarketController.html":{},"controllers/UserController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["getuser('id",{"_index":310,"title":{},"body":{"controllers/AuthController.html":{},"controllers/MarketController.html":{},"controllers/UserController.html":{}}}],["getuser('rank",{"_index":311,"title":{},"body":{"controllers/AuthController.html":{},"controllers/MarketController.html":{},"controllers/UserController.html":{}}}],["getuser(userid",{"_index":1332,"title":{},"body":{"controllers/UserController.html":{}}}],["getusers",{"_index":1470,"title":{},"body":{"injectables/UserService.html":{}}}],["global",{"_index":1607,"title":{},"body":{"index.html":{}}}],["google_play_app",{"_index":438,"title":{},"body":{"injectables/AuthService.html":{}}}],["guard",{"_index":1105,"title":{"guards/RankGuard.html":{}},"body":{"coverage.html":{},"overview.html":{}}}],["guards",{"_index":1106,"title":{},"body":{"guards/RankGuard.html":{}}}],["guards/rank.guard",{"_index":913,"title":{},"body":{"controllers/MarketController.html":{},"controllers/TransactionController.html":{}}}],["handlebarsadapter",{"_index":148,"title":{},"body":{"modules/AppModule.html":{}}}],["handleconnection",{"_index":794,"title":{},"body":{"classes/GeneralGateway.html":{}}}],["handleconnection(client",{"_index":803,"title":{},"body":{"classes/GeneralGateway.html":{}}}],["handledisconnect",{"_index":795,"title":{},"body":{"classes/GeneralGateway.html":{}}}],["handledisconnect(client",{"_index":806,"title":{},"body":{"classes/GeneralGateway.html":{}}}],["handlemessage(client",{"_index":820,"title":{},"body":{"classes/GeneralGateway.html":{}}}],["hash",{"_index":379,"title":{},"body":{"injectables/AuthService.html":{},"classes/ChangelogModel.html":{}}}],["hasrole",{"_index":1119,"title":{},"body":{"guards/RankGuard.html":{}}}],["headerresolver",{"_index":153,"title":{},"body":{"modules/AppModule.html":{}}}],["hello",{"_index":821,"title":{},"body":{"classes/GeneralGateway.html":{},"classes/UserModel.html":{}}}],["helmet",{"_index":1574,"title":{},"body":{"dependencies.html":{}}}],["high",{"_index":1639,"title":{},"body":{"index.html":{}}}],["https://akatsukiapp.com/password/reset",{"_index":580,"title":{},"body":{"injectables/AuthService.html":{}}}],["https://api.akatsukiapp.com/uploads/placeholders/cover_photo.jpg",{"_index":1427,"title":{},"body":{"classes/UserModel.html":{}}}],["https://api.akatsukiapp.com/uploads/placeholders/profile_photo.jpg",{"_index":1445,"title":{},"body":{"classes/UserModel.html":{}}}],["https://api.akatsukiapp.com:3678/v1",{"_index":724,"title":{},"body":{"classes/ConfigService.html":{}}}],["https://play.google.com/akatsukiapp_",{"_index":439,"title":{},"body":{"injectables/AuthService.html":{}}}],["httpstatus",{"_index":37,"title":{},"body":{"controllers/AdminController.html":{},"controllers/AuthController.html":{},"controllers/MarketController.html":{},"controllers/TransactionController.html":{},"controllers/UserController.html":{}}}],["httpstatus.created",{"_index":57,"title":{},"body":{"controllers/AdminController.html":{},"controllers/AuthController.html":{},"controllers/MarketController.html":{}}}],["httpstatus.ok",{"_index":292,"title":{},"body":{"controllers/AuthController.html":{},"controllers/MarketController.html":{},"controllers/TransactionController.html":{},"controllers/UserController.html":{}}}],["i18n",{"_index":45,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/MarketController.html":{},"injectables/MarketService.html":{},"controllers/TransactionController.html":{},"injectables/TransactionService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["i18nlang",{"_index":43,"title":{},"body":{"controllers/AdminController.html":{},"controllers/AuthController.html":{},"controllers/MarketController.html":{},"controllers/TransactionController.html":{},"controllers/UserController.html":{}}}],["i18nmodule",{"_index":151,"title":{},"body":{"modules/AppModule.html":{}}}],["i18nmodule.forroot",{"_index":189,"title":{},"body":{"modules/AppModule.html":{}}}],["i18nrequestscopeservice",{"_index":90,"title":{},"body":{"injectables/AdminService.html":{},"injectables/AuthService.html":{},"injectables/MarketService.html":{},"injectables/TransactionService.html":{},"injectables/UserService.html":{}}}],["i18nservice",{"_index":42,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/MarketController.html":{},"injectables/MarketService.html":{},"controllers/TransactionController.html":{},"injectables/TransactionService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["id",{"_index":487,"title":{},"body":{"injectables/AuthService.html":{},"classes/Email.html":{},"classes/Email-1.html":{},"classes/GeneralGateway.html":{},"interfaces/IJwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/Market.html":{},"classes/Membership.html":{},"classes/Membership-1.html":{},"classes/Notifications.html":{},"classes/Notifications-1.html":{},"classes/Online.html":{},"classes/Online-1.html":{},"classes/Password.html":{},"classes/Password-1.html":{},"classes/Rank.html":{},"classes/Rank-1.html":{},"classes/Reactions.html":{},"classes/Reactions-1.html":{},"classes/Security.html":{},"classes/Security-1.html":{},"classes/SecurityCode.html":{},"classes/SecurityDto.html":{},"classes/SecurityUpdateDto.html":{},"classes/Sessions.html":{},"classes/Sessions-1.html":{},"classes/Stats.html":{},"classes/Stats-1.html":{},"classes/Suspension.html":{},"classes/Suspension-1.html":{},"classes/Transaction.html":{},"classes/Transaction-1.html":{},"classes/TransactionBuyer.html":{},"classes/TransactionInfo.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["identifier",{"_index":1530,"title":{},"body":{"coverage.html":{}}}],["iduserrequest",{"_index":884,"title":{},"body":{"controllers/MarketController.html":{},"injectables/MarketService.html":{}}}],["ignore",{"_index":493,"title":{},"body":{"injectables/AuthService.html":{}}}],["ignoreexpiration",{"_index":840,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["ijwtpayload",{"_index":391,"title":{"interfaces/IJwtPayload.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/IJwtPayload.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["implements",{"_index":790,"title":{},"body":{"classes/GeneralGateway.html":{},"guards/RankGuard.html":{}}}],["import",{"_index":33,"title":{},"body":{"controllers/AdminController.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BuyerAddMarketDto.html":{},"classes/BuyerMarket.html":{},"classes/BuyerRemoveMarketDto.html":{},"classes/ChangelogAuthor.html":{},"classes/ChangelogModel.html":{},"classes/CommentMarket.html":{},"classes/CommentMarketDto.html":{},"classes/CommentRemoveMarketDto.html":{},"modules/ConfigModule.html":{},"classes/ConfigService.html":{},"classes/DiscountMarket.html":{},"classes/Email-1.html":{},"classes/GeneralGateway.html":{},"injectables/JwtStrategy.html":{},"controllers/MarketController.html":{},"classes/MarketModel.html":{},"modules/MarketModule.html":{},"injectables/MarketService.html":{},"classes/Membership-1.html":{},"classes/Notifications-1.html":{},"classes/Online-1.html":{},"classes/Password-1.html":{},"classes/Rank-1.html":{},"guards/RankGuard.html":{},"classes/ReactionAddMarketDto.html":{},"classes/ReactionRemoveMarketDto.html":{},"classes/Reactions-1.html":{},"classes/ReactionsDto.html":{},"classes/ReactionsMarket.html":{},"classes/Security-1.html":{},"classes/SecurityCode.html":{},"classes/SecurityDto.html":{},"classes/SecurityUpdateDto.html":{},"classes/Sessions-1.html":{},"classes/SignInDto.html":{},"classes/Stats-1.html":{},"classes/Suspension-1.html":{},"classes/Transaction-1.html":{},"controllers/TransactionController.html":{},"classes/TransactionDeleteDto.html":{},"classes/TransactionInfo.html":{},"classes/TransactionModel.html":{},"modules/TransactionModule.html":{},"injectables/TransactionService.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"classes/UserModel.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["important",{"_index":1621,"title":{},"body":{"index.html":{}}}],["imports",{"_index":83,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/MarketModule.html":{},"modules/TransactionModule.html":{},"modules/UserModule.html":{}}}],["incorrect",{"_index":468,"title":{},"body":{"injectables/AuthService.html":{}}}],["incorrectly",{"_index":570,"title":{},"body":{"injectables/AuthService.html":{}}}],["index",{"_index":9,"title":{"index.html":{}},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BuyerAddMarketDto.html":{},"classes/BuyerMarket.html":{},"classes/BuyerRemoveMarketDto.html":{},"classes/ChangelogAuthor.html":{},"classes/ChangelogModel.html":{},"classes/CommentMarket.html":{},"classes/CommentMarketDto.html":{},"classes/CommentRemoveMarketDto.html":{},"classes/ConfigService.html":{},"classes/DiscountMarket.html":{},"classes/Email.html":{},"classes/Email-1.html":{},"classes/GeneralGateway.html":{},"interfaces/IJwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/Market.html":{},"controllers/MarketController.html":{},"classes/MarketModel.html":{},"injectables/MarketService.html":{},"classes/Membership.html":{},"classes/Membership-1.html":{},"classes/Notifications.html":{},"classes/Notifications-1.html":{},"classes/Online.html":{},"classes/Online-1.html":{},"classes/Password.html":{},"classes/Password-1.html":{},"classes/Rank.html":{},"classes/Rank-1.html":{},"guards/RankGuard.html":{},"classes/ReactionAddMarketDto.html":{},"classes/ReactionRemoveMarketDto.html":{},"classes/Reactions.html":{},"classes/Reactions-1.html":{},"classes/ReactionsDto.html":{},"classes/ReactionsMarket.html":{},"classes/Security.html":{},"classes/Security-1.html":{},"classes/SecurityCode.html":{},"classes/SecurityDto.html":{},"classes/SecurityUpdateDto.html":{},"classes/Sessions.html":{},"classes/Sessions-1.html":{},"classes/SignInDto.html":{},"classes/Stats.html":{},"classes/Stats-1.html":{},"classes/Suspension.html":{},"classes/Suspension-1.html":{},"classes/Transaction.html":{},"classes/Transaction-1.html":{},"classes/TransactionBuyer.html":{},"controllers/TransactionController.html":{},"classes/TransactionDeleteDto.html":{},"classes/TransactionInfo.html":{},"classes/TransactionModel.html":{},"injectables/TransactionService.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"classes/UserModel.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AdminController.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BuyerAddMarketDto.html":{},"classes/BuyerMarket.html":{},"classes/BuyerRemoveMarketDto.html":{},"classes/ChangelogAuthor.html":{},"classes/ChangelogModel.html":{},"classes/CommentMarket.html":{},"classes/CommentMarketDto.html":{},"classes/CommentRemoveMarketDto.html":{},"modules/ConfigModule.html":{},"classes/ConfigService.html":{},"classes/DiscountMarket.html":{},"classes/Email.html":{},"classes/Email-1.html":{},"classes/GeneralGateway.html":{},"interfaces/IJwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/Market.html":{},"controllers/MarketController.html":{},"classes/MarketModel.html":{},"modules/MarketModule.html":{},"injectables/MarketService.html":{},"classes/Membership.html":{},"classes/Membership-1.html":{},"classes/Notifications.html":{},"classes/Notifications-1.html":{},"classes/Online.html":{},"classes/Online-1.html":{},"classes/Password.html":{},"classes/Password-1.html":{},"classes/Rank.html":{},"classes/Rank-1.html":{},"guards/RankGuard.html":{},"classes/ReactionAddMarketDto.html":{},"classes/ReactionRemoveMarketDto.html":{},"classes/Reactions.html":{},"classes/Reactions-1.html":{},"classes/ReactionsDto.html":{},"classes/ReactionsMarket.html":{},"classes/Security.html":{},"classes/Security-1.html":{},"classes/SecurityCode.html":{},"classes/SecurityDto.html":{},"classes/SecurityUpdateDto.html":{},"classes/Sessions.html":{},"classes/Sessions-1.html":{},"classes/SignInDto.html":{},"classes/Stats.html":{},"classes/Stats-1.html":{},"classes/Suspension.html":{},"classes/Suspension-1.html":{},"classes/Transaction.html":{},"classes/Transaction-1.html":{},"classes/TransactionBuyer.html":{},"controllers/TransactionController.html":{},"classes/TransactionDeleteDto.html":{},"classes/TransactionInfo.html":{},"classes/TransactionModel.html":{},"modules/TransactionModule.html":{},"injectables/TransactionService.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"classes/UserModel.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["inform",{"_index":1648,"title":{},"body":{"index.html":{}}}],["information",{"_index":783,"title":{},"body":{"classes/Email-1.html":{},"classes/Membership-1.html":{},"classes/Notifications-1.html":{},"classes/Online-1.html":{},"classes/Password-1.html":{},"classes/Rank-1.html":{},"classes/Reactions-1.html":{},"classes/Security-1.html":{},"classes/Sessions-1.html":{},"classes/Stats-1.html":{},"classes/Suspension-1.html":{},"classes/Transaction-1.html":{},"classes/TransactionInfo.html":{},"injectables/UserService.html":{}}}],["informed",{"_index":1628,"title":{},"body":{"index.html":{}}}],["initialized",{"_index":1655,"title":{},"body":{"index.html":{}}}],["inject",{"_index":167,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["injectable",{"_index":85,"title":{"injectables/AdminService.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/MarketService.html":{},"injectables/TransactionService.html":{},"injectables/UserService.html":{}},"body":{"injectables/AdminService.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/MarketService.html":{},"guards/RankGuard.html":{},"injectables/TransactionService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":86,"title":{},"body":{"injectables/AdminService.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/MarketService.html":{},"injectables/TransactionService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["injectmodel",{"_index":96,"title":{},"body":{"injectables/AdminService.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/MarketService.html":{},"injectables/TransactionService.html":{},"injectables/UserService.html":{}}}],["injectmodel(changelogmodel",{"_index":98,"title":{},"body":{"injectables/AdminService.html":{}}}],["injectmodel(marketmodel",{"_index":989,"title":{},"body":{"injectables/MarketService.html":{},"injectables/TransactionService.html":{}}}],["injectmodel(transactionmodel",{"_index":1288,"title":{},"body":{"injectables/TransactionService.html":{}}}],["injectmodel(usermodel",{"_index":393,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/TransactionService.html":{},"injectables/UserService.html":{}}}],["insufficient",{"_index":522,"title":{},"body":{"injectables/AuthService.html":{}}}],["intended",{"_index":1616,"title":{},"body":{"index.html":{}}}],["interface",{"_index":823,"title":{"interfaces/IJwtPayload.html":{}},"body":{"interfaces/IJwtPayload.html":{},"coverage.html":{},"overview.html":{}}}],["interfaces",{"_index":824,"title":{},"body":{"interfaces/IJwtPayload.html":{}}}],["invalid",{"_index":541,"title":{},"body":{"injectables/AuthService.html":{}}}],["ip",{"_index":458,"title":{},"body":{"injectables/AuthService.html":{},"classes/BuyerAddMarketDto.html":{},"classes/BuyerMarket.html":{},"classes/ChangelogAuthor.html":{},"classes/CommentMarket.html":{},"classes/CommentMarketDto.html":{},"classes/DiscountMarket.html":{},"classes/Email.html":{},"classes/Email-1.html":{},"classes/Market.html":{},"classes/MarketModel.html":{},"injectables/MarketService.html":{},"classes/Membership.html":{},"classes/Membership-1.html":{},"classes/Notifications.html":{},"classes/Notifications-1.html":{},"classes/Online.html":{},"classes/Online-1.html":{},"classes/Password.html":{},"classes/Password-1.html":{},"classes/Rank.html":{},"classes/Rank-1.html":{},"classes/ReactionAddMarketDto.html":{},"classes/Reactions.html":{},"classes/Reactions-1.html":{},"classes/ReactionsMarket.html":{},"classes/Security.html":{},"classes/Security-1.html":{},"classes/Sessions.html":{},"classes/Sessions-1.html":{},"classes/SignInDto.html":{},"classes/Stats.html":{},"classes/Stats-1.html":{},"classes/Suspension.html":{},"classes/Suspension-1.html":{},"classes/Transaction.html":{},"classes/Transaction-1.html":{},"classes/TransactionBuyer.html":{},"classes/TransactionInfo.html":{},"classes/TransactionModel.html":{},"injectables/TransactionService.html":{},"classes/UserDto.html":{},"classes/UserModel.html":{},"injectables/UserService.html":{}}}],["isboolean",{"_index":1172,"title":{},"body":{"classes/SecurityCode.html":{},"classes/SecurityUpdateDto.html":{}}}],["isboolean()@isnotempty",{"_index":1169,"title":{},"body":{"classes/SecurityCode.html":{}}}],["isdevenv",{"_index":701,"title":{},"body":{"classes/ConfigService.html":{}}}],["isemail",{"_index":1196,"title":{},"body":{"classes/SignInDto.html":{}}}],["isnotempty",{"_index":604,"title":{},"body":{"classes/BuyerAddMarketDto.html":{},"classes/BuyerRemoveMarketDto.html":{},"classes/CommentMarketDto.html":{},"classes/CommentRemoveMarketDto.html":{},"classes/ReactionAddMarketDto.html":{},"classes/ReactionRemoveMarketDto.html":{},"classes/ReactionsDto.html":{},"classes/SecurityCode.html":{},"classes/SecurityDto.html":{},"classes/SecurityUpdateDto.html":{},"classes/SignInDto.html":{},"classes/TransactionDeleteDto.html":{},"classes/UpdateUserDto.html":{}}}],["isnotempty()@isemail",{"_index":1192,"title":{},"body":{"classes/SignInDto.html":{}}}],["isnotempty()@isstring",{"_index":606,"title":{},"body":{"classes/BuyerAddMarketDto.html":{},"classes/BuyerRemoveMarketDto.html":{},"classes/CommentMarketDto.html":{},"classes/CommentRemoveMarketDto.html":{},"classes/ReactionAddMarketDto.html":{},"classes/ReactionRemoveMarketDto.html":{},"classes/SignInDto.html":{},"classes/TransactionDeleteDto.html":{}}}],["isnumber",{"_index":1171,"title":{},"body":{"classes/SecurityCode.html":{},"classes/SecurityDto.html":{},"classes/SecurityUpdateDto.html":{}}}],["isnumber()@isnotempty",{"_index":1163,"title":{},"body":{"classes/SecurityCode.html":{},"classes/SecurityDto.html":{}}}],["ispasswordmatch",{"_index":471,"title":{},"body":{"injectables/AuthService.html":{}}}],["isstring",{"_index":611,"title":{},"body":{"classes/BuyerAddMarketDto.html":{},"classes/BuyerRemoveMarketDto.html":{},"classes/CommentMarketDto.html":{},"classes/CommentRemoveMarketDto.html":{},"classes/ReactionAddMarketDto.html":{},"classes/ReactionRemoveMarketDto.html":{},"classes/ReactionsDto.html":{},"classes/SecurityCode.html":{},"classes/SecurityDto.html":{},"classes/SecurityUpdateDto.html":{},"classes/SignInDto.html":{},"classes/TransactionDeleteDto.html":{},"classes/UpdateUserDto.html":{}}}],["isstring()@isnotempty",{"_index":1139,"title":{},"body":{"classes/ReactionsDto.html":{},"classes/SecurityDto.html":{},"classes/SecurityUpdateDto.html":{},"classes/UpdateUserDto.html":{}}}],["item",{"_index":766,"title":{},"body":{"classes/Email.html":{},"classes/Market.html":{},"classes/Membership.html":{},"classes/Notifications.html":{},"classes/Online.html":{},"classes/Password.html":{},"classes/Rank.html":{},"classes/Reactions.html":{},"classes/Security.html":{},"classes/Sessions.html":{},"classes/Stats.html":{},"classes/Suspension.html":{},"classes/Transaction.html":{},"classes/TransactionBuyer.html":{}}}],["items",{"_index":964,"title":{},"body":{"classes/MarketModel.html":{},"classes/UserModel.html":{}}}],["join",{"_index":155,"title":{},"body":{"modules/AppModule.html":{},"controllers/UserController.html":{}}}],["join(__dirname",{"_index":190,"title":{},"body":{"modules/AppModule.html":{}}}],["json",{"_index":192,"title":{},"body":{"modules/AppModule.html":{}}}],["jsonwebtoken",{"_index":1576,"title":{},"body":{"dependencies.html":{}}}],["jwt",{"_index":330,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["jwt.payload.interface",{"_index":392,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["jwtfromrequest",{"_index":838,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":325,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.registerasync",{"_index":331,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtservice",{"_index":347,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":320,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["ket",{"_index":700,"title":{},"body":{"classes/ConfigService.html":{}}}],["key",{"_index":694,"title":{},"body":{"classes/ConfigService.html":{},"classes/Email.html":{},"classes/Email-1.html":{},"classes/Market.html":{},"classes/Membership.html":{},"classes/Membership-1.html":{},"classes/Notifications.html":{},"classes/Notifications-1.html":{},"classes/Online.html":{},"classes/Online-1.html":{},"classes/Password.html":{},"classes/Password-1.html":{},"classes/Rank.html":{},"classes/Rank-1.html":{},"classes/Reactions.html":{},"classes/Reactions-1.html":{},"classes/Security.html":{},"classes/Security-1.html":{},"classes/Sessions.html":{},"classes/Sessions-1.html":{},"classes/Stats.html":{},"classes/Stats-1.html":{},"classes/Suspension.html":{},"classes/Suspension-1.html":{},"classes/Transaction.html":{},"classes/Transaction-1.html":{},"classes/TransactionBuyer.html":{},"classes/TransactionInfo.html":{},"classes/UpdateUserDto.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["keys/configuration.enum",{"_index":146,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/UserController.html":{}}}],["keys/ranks.enum",{"_index":386,"title":{},"body":{"injectables/AuthService.html":{},"controllers/MarketController.html":{},"injectables/MarketService.html":{},"controllers/TransactionController.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["kodachi",{"_index":1610,"title":{},"body":{"index.html":{}}}],["l",{"_index":199,"title":{},"body":{"modules/AppModule.html":{}}}],["lang",{"_index":24,"title":{},"body":{"controllers/AdminController.html":{},"controllers/AuthController.html":{},"controllers/MarketController.html":{},"controllers/TransactionController.html":{},"controllers/UserController.html":{}}}],["last",{"_index":760,"title":{},"body":{"classes/Email.html":{},"classes/Email-1.html":{},"classes/GeneralGateway.html":{},"classes/Market.html":{},"classes/Membership.html":{},"classes/Membership-1.html":{},"classes/Notifications.html":{},"classes/Notifications-1.html":{},"classes/Online.html":{},"classes/Online-1.html":{},"classes/Password.html":{},"classes/Password-1.html":{},"classes/Rank.html":{},"classes/Rank-1.html":{},"classes/Reactions.html":{},"classes/Reactions-1.html":{},"classes/Security.html":{},"classes/Security-1.html":{},"classes/Sessions.html":{},"classes/Sessions-1.html":{},"classes/Stats.html":{},"classes/Stats-1.html":{},"classes/Suspension.html":{},"classes/Suspension-1.html":{},"classes/Transaction.html":{},"classes/Transaction-1.html":{},"classes/TransactionBuyer.html":{},"classes/TransactionInfo.html":{},"injectables/UserService.html":{}}}],["lat",{"_index":826,"title":{},"body":{"interfaces/IJwtPayload.html":{}}}],["leakage",{"_index":1635,"title":{},"body":{"index.html":{}}}],["legend",{"_index":69,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ConfigModule.html":{},"modules/MarketModule.html":{},"modules/TransactionModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["limit",{"_index":1572,"title":{},"body":{"dependencies.html":{}}}],["line",{"_index":763,"title":{},"body":{"classes/Email.html":{},"classes/Email-1.html":{},"classes/Market.html":{},"classes/Membership.html":{},"classes/Membership-1.html":{},"classes/Notifications.html":{},"classes/Notifications-1.html":{},"classes/Online.html":{},"classes/Online-1.html":{},"classes/Password.html":{},"classes/Password-1.html":{},"classes/Rank.html":{},"classes/Rank-1.html":{},"classes/Reactions.html":{},"classes/Reactions-1.html":{},"classes/Security.html":{},"classes/Security-1.html":{},"classes/Sessions.html":{},"classes/Sessions-1.html":{},"classes/Stats.html":{},"classes/Stats-1.html":{},"classes/Suspension.html":{},"classes/Suspension-1.html":{},"classes/Transaction.html":{},"classes/Transaction-1.html":{},"classes/TransactionBuyer.html":{},"classes/TransactionInfo.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"classes/UserModel.html":{}}}],["list",{"_index":1492,"title":{},"body":{"injectables/UserService.html":{}}}],["literal",{"_index":689,"title":{},"body":{"classes/ConfigService.html":{},"injectables/UserService.html":{}}}],["local",{"_index":1673,"title":{},"body":{"index.html":{}}}],["locale",{"_index":198,"title":{},"body":{"modules/AppModule.html":{}}}],["locally",{"_index":1656,"title":{},"body":{"index.html":{}}}],["log",{"_index":497,"title":{},"body":{"injectables/AuthService.html":{}}}],["logged",{"_index":516,"title":{},"body":{"injectables/AuthService.html":{},"classes/GeneralGateway.html":{}}}],["logger",{"_index":340,"title":{},"body":{"injectables/AuthService.html":{},"classes/ConfigService.html":{},"classes/GeneralGateway.html":{},"injectables/MarketService.html":{},"injectables/TransactionService.html":{},"injectables/UserService.html":{}}}],["logger('authentication",{"_index":372,"title":{},"body":{"injectables/AuthService.html":{}}}],["logger('configuration",{"_index":691,"title":{},"body":{"classes/ConfigService.html":{}}}],["logger('gateway",{"_index":799,"title":{},"body":{"classes/GeneralGateway.html":{}}}],["logger('market",{"_index":987,"title":{},"body":{"injectables/MarketService.html":{}}}],["logger('transaction",{"_index":1287,"title":{},"body":{"injectables/TransactionService.html":{}}}],["logger('user",{"_index":1489,"title":{},"body":{"injectables/UserService.html":{}}}],["logging",{"_index":462,"title":{},"body":{"injectables/AuthService.html":{}}}],["login",{"_index":465,"title":{},"body":{"injectables/AuthService.html":{}}}],["logout",{"_index":214,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["logout(userid",{"_index":229,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["lowercase",{"_index":777,"title":{},"body":{"classes/Email-1.html":{},"classes/Membership-1.html":{},"classes/Notifications-1.html":{},"classes/Online-1.html":{},"classes/Password-1.html":{},"classes/Rank-1.html":{},"classes/Reactions-1.html":{},"classes/Security-1.html":{},"classes/Sessions-1.html":{},"classes/Stats-1.html":{},"classes/Suspension-1.html":{},"classes/Transaction-1.html":{},"classes/TransactionInfo.html":{},"classes/UserModel.html":{}}}],["mailermodule",{"_index":147,"title":{},"body":{"modules/AppModule.html":{}}}],["mailermodule.forrootasync",{"_index":177,"title":{},"body":{"modules/AppModule.html":{}}}],["mailerservice",{"_index":346,"title":{},"body":{"injectables/AuthService.html":{}}}],["mailservice",{"_index":345,"title":{},"body":{"injectables/AuthService.html":{}}}],["maintain",{"_index":1661,"title":{},"body":{"index.html":{}}}],["make",{"_index":1649,"title":{},"body":{"index.html":{}}}],["manager",{"_index":1564,"title":{},"body":{"dependencies.html":{}}}],["map",{"_index":1371,"title":{},"body":{"controllers/UserController.html":{}}}],["market",{"_index":736,"title":{"classes/Market.html":{}},"body":{"classes/Email.html":{},"classes/Email-1.html":{},"classes/Market.html":{},"controllers/MarketController.html":{},"classes/MarketModel.html":{},"injectables/MarketService.html":{},"classes/Membership.html":{},"classes/Membership-1.html":{},"classes/Notifications.html":{},"classes/Notifications-1.html":{},"classes/Online.html":{},"classes/Online-1.html":{},"classes/Password.html":{},"classes/Password-1.html":{},"classes/Rank.html":{},"classes/Rank-1.html":{},"classes/Reactions.html":{},"classes/Reactions-1.html":{},"classes/Security.html":{},"classes/Security-1.html":{},"classes/Sessions.html":{},"classes/Sessions-1.html":{},"classes/Stats.html":{},"classes/Stats-1.html":{},"classes/Suspension.html":{},"classes/Suspension-1.html":{},"classes/Transaction.html":{},"classes/Transaction-1.html":{},"classes/TransactionBuyer.html":{},"classes/TransactionInfo.html":{},"classes/TransactionModel.html":{},"classes/UserDto.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["market.controller",{"_index":969,"title":{},"body":{"modules/MarketModule.html":{}}}],["market.data.model",{"_index":954,"title":{},"body":{"classes/MarketModel.html":{}}}],["market.service",{"_index":906,"title":{},"body":{"controllers/MarketController.html":{},"modules/MarketModule.html":{}}}],["market/models/market.model",{"_index":1278,"title":{},"body":{"modules/TransactionModule.html":{},"injectables/TransactionService.html":{}}}],["marketcontroller",{"_index":861,"title":{"controllers/MarketController.html":{}},"body":{"controllers/MarketController.html":{},"modules/MarketModule.html":{},"coverage.html":{}}}],["marketmodel",{"_index":875,"title":{"classes/MarketModel.html":{}},"body":{"controllers/MarketController.html":{},"classes/MarketModel.html":{},"modules/MarketModule.html":{},"injectables/MarketService.html":{},"classes/TransactionModel.html":{},"modules/TransactionModule.html":{},"injectables/TransactionService.html":{},"coverage.html":{}}}],["marketmodel.author",{"_index":994,"title":{},"body":{"injectables/MarketService.html":{}}}],["marketmodel.device",{"_index":995,"title":{},"body":{"injectables/MarketService.html":{}}}],["marketmodel.discount.percentage",{"_index":992,"title":{},"body":{"injectables/MarketService.html":{}}}],["marketmodel.ip",{"_index":996,"title":{},"body":{"injectables/MarketService.html":{}}}],["marketmodel.name",{"_index":990,"title":{},"body":{"injectables/MarketService.html":{}}}],["marketmodel.price",{"_index":991,"title":{},"body":{"injectables/MarketService.html":{}}}],["marketmodule",{"_index":135,"title":{"modules/MarketModule.html":{}},"body":{"modules/AppModule.html":{},"modules/MarketModule.html":{},"modules.html":{},"overview.html":{}}}],["marketservice",{"_index":905,"title":{"injectables/MarketService.html":{}},"body":{"controllers/MarketController.html":{},"modules/MarketModule.html":{},"injectables/MarketService.html":{},"coverage.html":{},"overview.html":{}}}],["markettransaction",{"_index":1293,"title":{},"body":{"injectables/TransactionService.html":{}}}],["markettransaction.author",{"_index":1302,"title":{},"body":{"injectables/TransactionService.html":{}}}],["markettransaction.discount.percentage",{"_index":1307,"title":{},"body":{"injectables/TransactionService.html":{}}}],["markettransaction.price",{"_index":1306,"title":{},"body":{"injectables/TransactionService.html":{}}}],["master",{"_index":1677,"title":{},"body":{"index.html":{}}}],["matching",{"_index":63,"title":{},"body":{"controllers/AdminController.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BuyerAddMarketDto.html":{},"classes/BuyerMarket.html":{},"classes/BuyerRemoveMarketDto.html":{},"classes/ChangelogAuthor.html":{},"classes/ChangelogModel.html":{},"classes/CommentMarket.html":{},"classes/CommentMarketDto.html":{},"classes/CommentRemoveMarketDto.html":{},"modules/ConfigModule.html":{},"classes/ConfigService.html":{},"classes/DiscountMarket.html":{},"classes/Email.html":{},"classes/Email-1.html":{},"classes/GeneralGateway.html":{},"interfaces/IJwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/Market.html":{},"controllers/MarketController.html":{},"classes/MarketModel.html":{},"modules/MarketModule.html":{},"injectables/MarketService.html":{},"classes/Membership.html":{},"classes/Membership-1.html":{},"classes/Notifications.html":{},"classes/Notifications-1.html":{},"classes/Online.html":{},"classes/Online-1.html":{},"classes/Password.html":{},"classes/Password-1.html":{},"classes/Rank.html":{},"classes/Rank-1.html":{},"guards/RankGuard.html":{},"classes/ReactionAddMarketDto.html":{},"classes/ReactionRemoveMarketDto.html":{},"classes/Reactions.html":{},"classes/Reactions-1.html":{},"classes/ReactionsDto.html":{},"classes/ReactionsMarket.html":{},"classes/Security.html":{},"classes/Security-1.html":{},"classes/SecurityCode.html":{},"classes/SecurityDto.html":{},"classes/SecurityUpdateDto.html":{},"classes/Sessions.html":{},"classes/Sessions-1.html":{},"classes/SignInDto.html":{},"classes/Stats.html":{},"classes/Stats-1.html":{},"classes/Suspension.html":{},"classes/Suspension-1.html":{},"classes/Transaction.html":{},"classes/Transaction-1.html":{},"classes/TransactionBuyer.html":{},"controllers/TransactionController.html":{},"classes/TransactionDeleteDto.html":{},"classes/TransactionInfo.html":{},"classes/TransactionModel.html":{},"modules/TransactionModule.html":{},"injectables/TransactionService.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"classes/UserModel.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["math.round",{"_index":1305,"title":{},"body":{"injectables/TransactionService.html":{}}}],["math.round(math.random",{"_index":1372,"title":{},"body":{"controllers/UserController.html":{}}}],["max",{"_index":625,"title":{},"body":{"classes/BuyerMarket.html":{},"classes/CommentMarket.html":{},"classes/DiscountMarket.html":{},"classes/Email-1.html":{},"classes/MarketModel.html":{},"classes/Membership-1.html":{},"classes/Notifications-1.html":{},"classes/Online-1.html":{},"classes/Password-1.html":{},"classes/Rank-1.html":{},"classes/Reactions-1.html":{},"classes/ReactionsMarket.html":{},"classes/Security-1.html":{},"classes/Sessions-1.html":{},"classes/Stats-1.html":{},"classes/Suspension-1.html":{},"classes/Transaction-1.html":{},"classes/TransactionInfo.html":{}}}],["maxlength",{"_index":634,"title":{},"body":{"classes/BuyerMarket.html":{},"classes/ChangelogModel.html":{},"classes/CommentMarket.html":{},"classes/DiscountMarket.html":{},"classes/Email-1.html":{},"classes/MarketModel.html":{},"classes/Membership-1.html":{},"classes/Notifications-1.html":{},"classes/Online-1.html":{},"classes/Password-1.html":{},"classes/Rank-1.html":{},"classes/Reactions-1.html":{},"classes/ReactionsMarket.html":{},"classes/Security-1.html":{},"classes/Sessions-1.html":{},"classes/Stats-1.html":{},"classes/Suspension-1.html":{},"classes/Transaction-1.html":{},"classes/TransactionInfo.html":{},"classes/UserModel.html":{}}}],["membership",{"_index":753,"title":{"classes/Membership.html":{},"classes/Membership-1.html":{}},"body":{"classes/Email.html":{},"classes/Email-1.html":{},"classes/Market.html":{},"classes/Membership.html":{},"classes/Membership-1.html":{},"classes/Notifications.html":{},"classes/Notifications-1.html":{},"classes/Online.html":{},"classes/Online-1.html":{},"classes/Password.html":{},"classes/Password-1.html":{},"classes/Rank.html":{},"classes/Rank-1.html":{},"classes/Reactions.html":{},"classes/Reactions-1.html":{},"classes/Security.html":{},"classes/Security-1.html":{},"classes/Sessions.html":{},"classes/Sessions-1.html":{},"classes/Stats.html":{},"classes/Stats-1.html":{},"classes/Suspension.html":{},"classes/Suspension-1.html":{},"classes/Transaction.html":{},"classes/Transaction-1.html":{},"classes/TransactionBuyer.html":{},"classes/TransactionInfo.html":{},"classes/UserDto.html":{},"classes/UserModel.html":{},"coverage.html":{}}}],["message",{"_index":58,"title":{},"body":{"controllers/AdminController.html":{},"controllers/AuthController.html":{},"classes/Email.html":{},"classes/Email-1.html":{},"classes/Market.html":{},"controllers/MarketController.html":{},"classes/Membership.html":{},"classes/Membership-1.html":{},"classes/Notifications.html":{},"classes/Notifications-1.html":{},"classes/Online.html":{},"classes/Online-1.html":{},"classes/Password.html":{},"classes/Password-1.html":{},"classes/Rank.html":{},"classes/Rank-1.html":{},"classes/Reactions.html":{},"classes/Reactions-1.html":{},"classes/Security.html":{},"classes/Security-1.html":{},"classes/Sessions.html":{},"classes/Sessions-1.html":{},"classes/Stats.html":{},"classes/Stats-1.html":{},"classes/Suspension.html":{},"classes/Suspension-1.html":{},"classes/Transaction.html":{},"classes/Transaction-1.html":{},"classes/TransactionBuyer.html":{},"controllers/TransactionController.html":{},"classes/TransactionInfo.html":{},"controllers/UserController.html":{}}}],["metadata",{"_index":1588,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":10,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ConfigService.html":{},"classes/GeneralGateway.html":{},"injectables/JwtStrategy.html":{},"controllers/MarketController.html":{},"injectables/MarketService.html":{},"guards/RankGuard.html":{},"controllers/TransactionController.html":{},"injectables/TransactionService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["min",{"_index":623,"title":{},"body":{"classes/BuyerMarket.html":{},"classes/CommentMarket.html":{},"classes/DiscountMarket.html":{},"classes/Email-1.html":{},"classes/MarketModel.html":{},"classes/Membership-1.html":{},"classes/Notifications-1.html":{},"classes/Online-1.html":{},"classes/Password-1.html":{},"classes/Rank-1.html":{},"classes/Reactions-1.html":{},"classes/ReactionsMarket.html":{},"classes/Security-1.html":{},"classes/Sessions-1.html":{},"classes/Stats-1.html":{},"classes/Suspension-1.html":{},"classes/Transaction-1.html":{},"classes/TransactionInfo.html":{}}}],["minlength",{"_index":632,"title":{},"body":{"classes/BuyerMarket.html":{},"classes/ChangelogModel.html":{},"classes/CommentMarket.html":{},"classes/DiscountMarket.html":{},"classes/Email-1.html":{},"classes/MarketModel.html":{},"classes/Membership-1.html":{},"classes/Notifications-1.html":{},"classes/Online-1.html":{},"classes/Password-1.html":{},"classes/Rank-1.html":{},"classes/Reactions-1.html":{},"classes/ReactionsMarket.html":{},"classes/Security-1.html":{},"classes/Sessions-1.html":{},"classes/Stats-1.html":{},"classes/Suspension-1.html":{},"classes/Transaction-1.html":{},"classes/TransactionInfo.html":{},"classes/UserModel.html":{}}}],["minutes",{"_index":408,"title":{},"body":{"injectables/AuthService.html":{},"classes/GeneralGateway.html":{}}}],["miscellaneous",{"_index":1595,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mod",{"_index":755,"title":{},"body":{"classes/Email.html":{},"classes/Email-1.html":{},"classes/Market.html":{},"classes/Membership.html":{},"classes/Membership-1.html":{},"classes/Notifications.html":{},"classes/Notifications-1.html":{},"classes/Online.html":{},"classes/Online-1.html":{},"classes/Password.html":{},"classes/Password-1.html":{},"classes/Rank.html":{},"classes/Rank-1.html":{},"classes/Reactions.html":{},"classes/Reactions-1.html":{},"classes/Security.html":{},"classes/Security-1.html":{},"classes/Sessions.html":{},"classes/Sessions-1.html":{},"classes/Stats.html":{},"classes/Stats-1.html":{},"classes/Suspension.html":{},"classes/Suspension-1.html":{},"classes/Transaction.html":{},"classes/Transaction-1.html":{},"classes/TransactionBuyer.html":{},"classes/TransactionInfo.html":{}}}],["mode",{"_index":759,"title":{},"body":{"classes/Email.html":{},"classes/Email-1.html":{},"classes/GeneralGateway.html":{},"classes/Market.html":{},"classes/Membership.html":{},"classes/Membership-1.html":{},"classes/Notifications.html":{},"classes/Notifications-1.html":{},"classes/Online.html":{},"classes/Online-1.html":{},"classes/Password.html":{},"classes/Password-1.html":{},"classes/Rank.html":{},"classes/Rank-1.html":{},"classes/Reactions.html":{},"classes/Reactions-1.html":{},"classes/Security.html":{},"classes/Security-1.html":{},"classes/Sessions.html":{},"classes/Sessions-1.html":{},"classes/Stats.html":{},"classes/Stats-1.html":{},"classes/Suspension.html":{},"classes/Suspension-1.html":{},"classes/Transaction.html":{},"classes/Transaction-1.html":{},"classes/TransactionBuyer.html":{},"classes/TransactionInfo.html":{},"injectables/UserService.html":{}}}],["modeloptions",{"_index":662,"title":{},"body":{"classes/ChangelogModel.html":{},"classes/MarketModel.html":{},"classes/TransactionModel.html":{},"classes/UserModel.html":{}}}],["models/changelog.model",{"_index":41,"title":{},"body":{"controllers/AdminController.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{}}}],["models/market.model",{"_index":907,"title":{},"body":{"controllers/MarketController.html":{},"modules/MarketModule.html":{},"injectables/MarketService.html":{}}}],["models/transaction.model",{"_index":1248,"title":{},"body":{"controllers/TransactionController.html":{},"modules/TransactionModule.html":{},"injectables/TransactionService.html":{}}}],["models/user.model",{"_index":1466,"title":{},"body":{"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["moderator",{"_index":1602,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["moderators",{"_index":1632,"title":{},"body":{"index.html":{}}}],["module",{"_index":65,"title":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ConfigModule.html":{},"modules/MarketModule.html":{},"modules/TransactionModule.html":{},"modules/UserModule.html":{}},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ConfigModule.html":{},"modules/MarketModule.html":{},"modules/TransactionModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["modules",{"_index":67,"title":{"modules.html":{}},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ConfigModule.html":{},"modules/MarketModule.html":{},"modules/TransactionModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["modules/admin/admin.module",{"_index":163,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/mailer",{"_index":150,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["modules/market/market.module",{"_index":164,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/market/models/market.model",{"_index":1271,"title":{},"body":{"classes/TransactionModel.html":{}}}],["modules/transaction/transaction.module",{"_index":165,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/user/models/user.model",{"_index":271,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BuyerAddMarketDto.html":{},"classes/BuyerMarket.html":{},"classes/ChangelogAuthor.html":{},"classes/CommentMarket.html":{},"classes/DiscountMarket.html":{},"injectables/JwtStrategy.html":{},"classes/MarketModel.html":{},"classes/ReactionAddMarketDto.html":{},"classes/ReactionsMarket.html":{},"classes/TransactionModel.html":{}}}],["modules/user/user.module",{"_index":157,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/user/user.service",{"_index":810,"title":{},"body":{"classes/GeneralGateway.html":{}}}],["moment",{"_index":388,"title":{},"body":{"injectables/AuthService.html":{},"classes/GeneralGateway.html":{},"classes/UserModel.html":{},"dependencies.html":{}}}],["moments",{"_index":387,"title":{},"body":{"injectables/AuthService.html":{},"classes/GeneralGateway.html":{}}}],["moments().todate",{"_index":591,"title":{},"body":{"injectables/AuthService.html":{}}}],["moments(timezone",{"_index":406,"title":{},"body":{"injectables/AuthService.html":{},"classes/GeneralGateway.html":{}}}],["moments(timezone).todate",{"_index":463,"title":{},"body":{"injectables/AuthService.html":{}}}],["momentstz",{"_index":389,"title":{},"body":{"injectables/AuthService.html":{},"classes/GeneralGateway.html":{}}}],["mongodb://localhost:27017/akatsuki",{"_index":722,"title":{},"body":{"classes/ConfigService.html":{}}}],["mongoose",{"_index":1580,"title":{},"body":{"dependencies.html":{}}}],["more",{"_index":782,"title":{},"body":{"classes/Email-1.html":{},"classes/Membership-1.html":{},"classes/Notifications-1.html":{},"classes/Online-1.html":{},"classes/Password-1.html":{},"classes/Rank-1.html":{},"classes/Reactions-1.html":{},"classes/Security-1.html":{},"classes/Sessions-1.html":{},"classes/Stats-1.html":{},"classes/Suspension-1.html":{},"classes/Transaction-1.html":{},"classes/TransactionInfo.html":{}}}],["multer",{"_index":1351,"title":{},"body":{"controllers/UserController.html":{},"dependencies.html":{}}}],["name",{"_index":29,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ConfigService.html":{},"classes/GeneralGateway.html":{},"injectables/JwtStrategy.html":{},"controllers/MarketController.html":{},"classes/MarketModel.html":{},"injectables/MarketService.html":{},"guards/RankGuard.html":{},"controllers/TransactionController.html":{},"injectables/TransactionService.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"classes/UserModel.html":{},"injectables/UserService.html":{}}}],["nest",{"_index":149,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs",{"_index":44,"title":{},"body":{"controllers/AdminController.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/MarketController.html":{},"modules/MarketModule.html":{},"injectables/MarketService.html":{},"controllers/TransactionController.html":{},"modules/TransactionModule.html":{},"injectables/TransactionService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/common",{"_index":38,"title":{},"body":{"controllers/AdminController.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/ConfigModule.html":{},"classes/ConfigService.html":{},"classes/GeneralGateway.html":{},"injectables/JwtStrategy.html":{},"controllers/MarketController.html":{},"modules/MarketModule.html":{},"injectables/MarketService.html":{},"guards/RankGuard.html":{},"controllers/TransactionController.html":{},"modules/TransactionModule.html":{},"injectables/TransactionService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":162,"title":{},"body":{"modules/AppModule.html":{},"guards/RankGuard.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":326,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":120,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"controllers/MarketController.html":{},"controllers/TransactionController.html":{},"controllers/UserController.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":1344,"title":{},"body":{"controllers/UserController.html":{},"dependencies.html":{}}}],["nestjs/websockets",{"_index":809,"title":{},"body":{"classes/GeneralGateway.html":{},"dependencies.html":{}}}],["network",{"_index":720,"title":{},"body":{"classes/ConfigService.html":{}}}],["new",{"_index":101,"title":{},"body":{"injectables/AdminService.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"modules/ConfigModule.html":{},"classes/ConfigService.html":{},"classes/Email-1.html":{},"classes/GeneralGateway.html":{},"injectables/JwtStrategy.html":{},"injectables/MarketService.html":{},"classes/Membership-1.html":{},"classes/Notifications-1.html":{},"classes/Online-1.html":{},"classes/Password-1.html":{},"classes/Rank-1.html":{},"classes/Reactions-1.html":{},"classes/Security-1.html":{},"classes/Sessions-1.html":{},"classes/Stats-1.html":{},"classes/Suspension-1.html":{},"classes/Transaction-1.html":{},"classes/TransactionInfo.html":{},"injectables/TransactionService.html":{},"classes/UserModel.html":{},"injectables/UserService.html":{},"coverage.html":{},"index.html":{}}}],["newchangelog",{"_index":14,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{}}}],["newchangelog(changelog",{"_index":21,"title":{},"body":{"controllers/AdminController.html":{}}}],["newchangelog(changelogmodel",{"_index":93,"title":{},"body":{"injectables/AdminService.html":{}}}],["newpassword",{"_index":236,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["next",{"_index":762,"title":{},"body":{"classes/Email.html":{},"classes/Email-1.html":{},"classes/Market.html":{},"classes/Membership.html":{},"classes/Membership-1.html":{},"classes/Notifications.html":{},"classes/Notifications-1.html":{},"classes/Online.html":{},"classes/Online-1.html":{},"classes/Password.html":{},"classes/Password-1.html":{},"classes/Rank.html":{},"classes/Rank-1.html":{},"classes/Reactions.html":{},"classes/Reactions-1.html":{},"classes/Security.html":{},"classes/Security-1.html":{},"classes/Sessions.html":{},"classes/Sessions-1.html":{},"classes/Stats.html":{},"classes/Stats-1.html":{},"classes/Suspension.html":{},"classes/Suspension-1.html":{},"classes/Transaction.html":{},"classes/Transaction-1.html":{},"classes/TransactionBuyer.html":{},"classes/TransactionInfo.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"classes/UserModel.html":{}}}],["notes",{"_index":1622,"title":{},"body":{"index.html":{}}}],["notfoundexception",{"_index":376,"title":{},"body":{"injectables/AuthService.html":{},"injectables/MarketService.html":{},"injectables/UserService.html":{}}}],["notifications",{"_index":756,"title":{"classes/Notifications.html":{},"classes/Notifications-1.html":{}},"body":{"classes/Email.html":{},"classes/Email-1.html":{},"classes/Market.html":{},"classes/Membership.html":{},"classes/Membership-1.html":{},"classes/Notifications.html":{},"classes/Notifications-1.html":{},"classes/Online.html":{},"classes/Online-1.html":{},"classes/Password.html":{},"classes/Password-1.html":{},"classes/Rank.html":{},"classes/Rank-1.html":{},"classes/Reactions.html":{},"classes/Reactions-1.html":{},"classes/Security.html":{},"classes/Security-1.html":{},"classes/Sessions.html":{},"classes/Sessions-1.html":{},"classes/Stats.html":{},"classes/Stats-1.html":{},"classes/Suspension.html":{},"classes/Suspension-1.html":{},"classes/Transaction.html":{},"classes/Transaction-1.html":{},"classes/TransactionBuyer.html":{},"classes/TransactionInfo.html":{},"classes/UserDto.html":{},"classes/UserModel.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["number",{"_index":206,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"classes/BuyerAddMarketDto.html":{},"classes/BuyerMarket.html":{},"classes/ChangelogAuthor.html":{},"classes/CommentMarket.html":{},"classes/CommentMarketDto.html":{},"classes/DiscountMarket.html":{},"classes/Email.html":{},"classes/Email-1.html":{},"classes/Market.html":{},"controllers/MarketController.html":{},"classes/MarketModel.html":{},"injectables/MarketService.html":{},"classes/Membership.html":{},"classes/Membership-1.html":{},"classes/Notifications.html":{},"classes/Notifications-1.html":{},"classes/Online.html":{},"classes/Online-1.html":{},"classes/Password.html":{},"classes/Password-1.html":{},"classes/Rank.html":{},"classes/Rank-1.html":{},"classes/ReactionAddMarketDto.html":{},"classes/Reactions.html":{},"classes/Reactions-1.html":{},"classes/ReactionsMarket.html":{},"classes/Security.html":{},"classes/Security-1.html":{},"classes/SecurityCode.html":{},"classes/SecurityDto.html":{},"classes/SecurityUpdateDto.html":{},"classes/Sessions.html":{},"classes/Sessions-1.html":{},"classes/SignInDto.html":{},"classes/Stats.html":{},"classes/Stats-1.html":{},"classes/Suspension.html":{},"classes/Suspension-1.html":{},"classes/Transaction.html":{},"classes/Transaction-1.html":{},"classes/TransactionBuyer.html":{},"classes/TransactionInfo.html":{},"classes/TransactionModel.html":{},"classes/UpdateUserDto.html":{},"classes/UserDto.html":{},"classes/UserModel.html":{},"injectables/UserService.html":{}}}],["obtaining",{"_index":1000,"title":{},"body":{"injectables/MarketService.html":{},"injectables/UserService.html":{}}}],["occurred",{"_index":597,"title":{},"body":{"injectables/AuthService.html":{}}}],["offer",{"_index":1397,"title":{},"body":{"classes/UserDto.html":{},"classes/UserModel.html":{},"injectables/UserService.html":{}}}],["offers",{"_index":1438,"title":{},"body":{"classes/UserModel.html":{}}}],["ofid",{"_index":1137,"title":{},"body":{"classes/ReactionsDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["ongatewayconnection",{"_index":791,"title":{},"body":{"classes/GeneralGateway.html":{}}}],["ongatewaydisconnect",{"_index":792,"title":{},"body":{"classes/GeneralGateway.html":{}}}],["online",{"_index":758,"title":{"classes/Online.html":{},"classes/Online-1.html":{}},"body":{"classes/Email.html":{},"classes/Email-1.html":{},"classes/GeneralGateway.html":{},"classes/Market.html":{},"classes/Membership.html":{},"classes/Membership-1.html":{},"classes/Notifications.html":{},"classes/Notifications-1.html":{},"classes/Online.html":{},"classes/Online-1.html":{},"classes/Password.html":{},"classes/Password-1.html":{},"classes/Rank.html":{},"classes/Rank-1.html":{},"classes/Reactions.html":{},"classes/Reactions-1.html":{},"classes/Security.html":{},"classes/Security-1.html":{},"classes/Sessions.html":{},"classes/Sessions-1.html":{},"classes/Stats.html":{},"classes/Stats-1.html":{},"classes/Suspension.html":{},"classes/Suspension-1.html":{},"classes/Transaction.html":{},"classes/Transaction-1.html":{},"classes/TransactionBuyer.html":{},"classes/TransactionInfo.html":{},"classes/UserDto.html":{},"classes/UserModel.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["online).catch",{"_index":1510,"title":{},"body":{"injectables/UserService.html":{}}}],["optional",{"_index":31,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ConfigService.html":{},"classes/Email.html":{},"classes/Email-1.html":{},"classes/GeneralGateway.html":{},"interfaces/IJwtPayload.html":{},"injectables/JwtStrategy.html":{},"controllers/MarketController.html":{},"injectables/MarketService.html":{},"classes/Password.html":{},"classes/Password-1.html":{},"guards/RankGuard.html":{},"classes/Sessions.html":{},"classes/Sessions-1.html":{},"classes/Transaction.html":{},"classes/Transaction-1.html":{},"controllers/TransactionController.html":{},"injectables/TransactionService.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"classes/UserModel.html":{},"injectables/UserService.html":{}}}],["options",{"_index":187,"title":{},"body":{"modules/AppModule.html":{},"classes/ChangelogModel.html":{},"classes/MarketModel.html":{},"classes/TransactionModel.html":{},"classes/UserModel.html":{}}}],["order",{"_index":1011,"title":{},"body":{"injectables/MarketService.html":{},"index.html":{}}}],["out",{"_index":78,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ConfigModule.html":{},"modules/MarketModule.html":{},"modules/TransactionModule.html":{},"modules/UserModule.html":{},"index.html":{},"overview.html":{}}}],["overview",{"_index":1685,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":1553,"title":{"dependencies.html":{}},"body":{}}],["param",{"_index":902,"title":{},"body":{"controllers/MarketController.html":{},"controllers/UserController.html":{}}}],["param('filter",{"_index":921,"title":{},"body":{"controllers/MarketController.html":{}}}],["param('id",{"_index":919,"title":{},"body":{"controllers/MarketController.html":{},"controllers/UserController.html":{}}}],["param('userid",{"_index":1354,"title":{},"body":{"controllers/UserController.html":{}}}],["parameters",{"_index":28,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ConfigService.html":{},"classes/GeneralGateway.html":{},"injectables/JwtStrategy.html":{},"controllers/MarketController.html":{},"injectables/MarketService.html":{},"guards/RankGuard.html":{},"controllers/TransactionController.html":{},"injectables/TransactionService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["parse",{"_index":698,"title":{},"body":{"classes/ConfigService.html":{}}}],["parse(readfilesync(envfilepath",{"_index":712,"title":{},"body":{"classes/ConfigService.html":{}}}],["parseintpipe",{"_index":903,"title":{},"body":{"controllers/MarketController.html":{}}}],["passport",{"_index":835,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":324,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportmodule.register",{"_index":328,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":832,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["passportstrategy(strategy",{"_index":836,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["password",{"_index":432,"title":{"classes/Password.html":{},"classes/Password-1.html":{}},"body":{"injectables/AuthService.html":{},"classes/Email.html":{},"classes/Email-1.html":{},"classes/Market.html":{},"classes/Membership.html":{},"classes/Membership-1.html":{},"classes/Notifications.html":{},"classes/Notifications-1.html":{},"classes/Online.html":{},"classes/Online-1.html":{},"classes/Password.html":{},"classes/Password-1.html":{},"classes/Rank.html":{},"classes/Rank-1.html":{},"classes/Reactions.html":{},"classes/Reactions-1.html":{},"classes/Security.html":{},"classes/Security-1.html":{},"classes/Sessions.html":{},"classes/Sessions-1.html":{},"classes/SignInDto.html":{},"classes/Stats.html":{},"classes/Stats-1.html":{},"classes/Suspension.html":{},"classes/Suspension-1.html":{},"classes/Transaction.html":{},"classes/Transaction-1.html":{},"classes/TransactionBuyer.html":{},"classes/TransactionInfo.html":{},"classes/UserDto.html":{},"classes/UserModel.html":{},"coverage.html":{}}}],["password.expiration",{"_index":1500,"title":{},"body":{"injectables/UserService.html":{}}}],["password.key",{"_index":1491,"title":{},"body":{"injectables/UserService.html":{}}}],["password.status",{"_index":1499,"title":{},"body":{"injectables/UserService.html":{}}}],["password.token",{"_index":1501,"title":{},"body":{"injectables/UserService.html":{}}}],["password_reset_request",{"_index":578,"title":{},"body":{"injectables/AuthService.html":{}}}],["passwordchange",{"_index":215,"title":{},"body":{"controllers/AuthController.html":{}}}],["passwordchange(userid",{"_index":234,"title":{},"body":{"controllers/AuthController.html":{}}}],["passwordresetrequest",{"_index":216,"title":{},"body":{"controllers/AuthController.html":{}}}],["passwordresetrequest(userid",{"_index":239,"title":{},"body":{"controllers/AuthController.html":{}}}],["passwordsalt",{"_index":400,"title":{},"body":{"injectables/AuthService.html":{}}}],["patch",{"_index":267,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UserController.html":{}}}],["patch('/account/password/change",{"_index":237,"title":{},"body":{"controllers/AuthController.html":{}}}],["patch('/account/security/change",{"_index":309,"title":{},"body":{"controllers/AuthController.html":{}}}],["patch('/account/verify/email",{"_index":253,"title":{},"body":{"controllers/AuthController.html":{}}}],["patch('/update",{"_index":1339,"title":{},"body":{"controllers/UserController.html":{}}}],["path",{"_index":156,"title":{},"body":{"modules/AppModule.html":{},"controllers/UserController.html":{}}}],["payload",{"_index":486,"title":{},"body":{"injectables/AuthService.html":{},"classes/GeneralGateway.html":{},"injectables/JwtStrategy.html":{}}}],["pc",{"_index":1674,"title":{},"body":{"index.html":{}}}],["percentage",{"_index":627,"title":{},"body":{"classes/BuyerMarket.html":{},"classes/CommentMarket.html":{},"classes/DiscountMarket.html":{},"classes/ReactionsMarket.html":{}}}],["permissions",{"_index":523,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/UserService.html":{}}}],["photo",{"_index":107,"title":{},"body":{"injectables/AdminService.html":{},"injectables/MarketService.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"classes/UserModel.html":{},"injectables/UserService.html":{}}}],["picture",{"_index":1511,"title":{},"body":{"injectables/UserService.html":{}}}],["platform",{"_index":1647,"title":{},"body":{"index.html":{}}}],["please",{"_index":780,"title":{},"body":{"classes/Email-1.html":{},"injectables/JwtStrategy.html":{},"classes/Membership-1.html":{},"classes/Notifications-1.html":{},"classes/Online-1.html":{},"classes/Password-1.html":{},"classes/Rank-1.html":{},"classes/Reactions-1.html":{},"classes/Security-1.html":{},"classes/Sessions-1.html":{},"classes/Stats-1.html":{},"classes/Suspension-1.html":{},"classes/Transaction-1.html":{},"classes/TransactionInfo.html":{},"index.html":{}}}],["populate('author",{"_index":1006,"title":{},"body":{"injectables/MarketService.html":{}}}],["populate('author.info",{"_index":105,"title":{},"body":{"injectables/AdminService.html":{}}}],["populate('buyers.user",{"_index":1008,"title":{},"body":{"injectables/MarketService.html":{}}}],["populate('comments.author",{"_index":1010,"title":{},"body":{"injectables/MarketService.html":{}}}],["populate('reactions.user",{"_index":1009,"title":{},"body":{"injectables/MarketService.html":{}}}],["por",{"_index":1524,"title":{},"body":{"injectables/UserService.html":{}}}],["port",{"_index":205,"title":{},"body":{"modules/AppModule.html":{}}}],["port_api",{"_index":713,"title":{},"body":{"classes/ConfigService.html":{},"miscellaneous/enumerations.html":{}}}],["post",{"_index":268,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UserController.html":{}}}],["post('/account/logout",{"_index":231,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('/account/password/reset",{"_index":241,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('/account/verify/security",{"_index":257,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('/account/verify/session",{"_index":264,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('/signin",{"_index":245,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('/upload/cover/:id",{"_index":1383,"title":{},"body":{"controllers/UserController.html":{}}}],["post('/upload/photo/:id",{"_index":1359,"title":{},"body":{"controllers/UserController.html":{}}}],["post('/upload/photo/:id')@useinterceptors(undefined",{"_index":1329,"title":{},"body":{"controllers/UserController.html":{}}}],["postman",{"_index":1614,"title":{},"body":{"index.html":{}}}],["prefix",{"_index":7,"title":{},"body":{"controllers/AdminController.html":{},"controllers/AuthController.html":{},"controllers/MarketController.html":{},"controllers/TransactionController.html":{},"controllers/UserController.html":{}}}],["premium",{"_index":1398,"title":{},"body":{"classes/UserDto.html":{},"classes/UserModel.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{}}}],["premium.status",{"_index":1007,"title":{},"body":{"injectables/MarketService.html":{}}}],["prettier",{"_index":492,"title":{},"body":{"injectables/AuthService.html":{}}}],["prevent",{"_index":1641,"title":{},"body":{"index.html":{}}}],["price",{"_index":737,"title":{},"body":{"classes/Email.html":{},"classes/Email-1.html":{},"classes/Market.html":{},"classes/MarketModel.html":{},"injectables/MarketService.html":{},"classes/Membership.html":{},"classes/Membership-1.html":{},"classes/Notifications.html":{},"classes/Notifications-1.html":{},"classes/Online.html":{},"classes/Online-1.html":{},"classes/Password.html":{},"classes/Password-1.html":{},"classes/Rank.html":{},"classes/Rank-1.html":{},"classes/Reactions.html":{},"classes/Reactions-1.html":{},"classes/Security.html":{},"classes/Security-1.html":{},"classes/Sessions.html":{},"classes/Sessions-1.html":{},"classes/Stats.html":{},"classes/Stats-1.html":{},"classes/Suspension.html":{},"classes/Suspension-1.html":{},"classes/Transaction.html":{},"classes/Transaction-1.html":{},"classes/TransactionBuyer.html":{},"classes/TransactionInfo.html":{}}}],["private",{"_index":50,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ConfigService.html":{},"classes/GeneralGateway.html":{},"injectables/JwtStrategy.html":{},"controllers/MarketController.html":{},"injectables/MarketService.html":{},"controllers/TransactionController.html":{},"injectables/TransactionService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["problem",{"_index":452,"title":{},"body":{"injectables/AuthService.html":{},"index.html":{}}}],["problems",{"_index":1620,"title":{},"body":{"index.html":{}}}],["process",{"_index":587,"title":{},"body":{"injectables/AuthService.html":{},"injectables/TransactionService.html":{},"injectables/UserService.html":{}}}],["process.env.node_nev",{"_index":702,"title":{},"body":{"classes/ConfigService.html":{}}}],["process.env.port",{"_index":714,"title":{},"body":{"classes/ConfigService.html":{}}}],["process.exit(0",{"_index":710,"title":{},"body":{"classes/ConfigService.html":{}}}],["processed",{"_index":555,"title":{},"body":{"injectables/AuthService.html":{},"injectables/MarketService.html":{},"injectables/TransactionService.html":{}}}],["processing",{"_index":453,"title":{},"body":{"injectables/AuthService.html":{}}}],["processtransaction",{"_index":1235,"title":{},"body":{"controllers/TransactionController.html":{},"injectables/TransactionService.html":{}}}],["processtransaction(@body",{"_index":1251,"title":{},"body":{"controllers/TransactionController.html":{}}}],["processtransaction(transactionmodel",{"_index":1242,"title":{},"body":{"controllers/TransactionController.html":{},"injectables/TransactionService.html":{}}}],["product",{"_index":603,"title":{},"body":{"classes/BuyerAddMarketDto.html":{},"classes/BuyerRemoveMarketDto.html":{},"classes/CommentMarketDto.html":{},"classes/CommentRemoveMarketDto.html":{},"classes/Email-1.html":{},"injectables/MarketService.html":{},"classes/Membership-1.html":{},"classes/Notifications-1.html":{},"classes/Online-1.html":{},"classes/Password-1.html":{},"classes/Rank-1.html":{},"classes/ReactionAddMarketDto.html":{},"classes/ReactionRemoveMarketDto.html":{},"classes/Reactions-1.html":{},"classes/Security-1.html":{},"classes/Sessions-1.html":{},"classes/Stats-1.html":{},"classes/Suspension-1.html":{},"classes/Transaction-1.html":{},"classes/TransactionDeleteDto.html":{},"classes/TransactionInfo.html":{},"classes/TransactionModel.html":{},"injectables/TransactionService.html":{}}}],["product.buyers.push",{"_index":1027,"title":{},"body":{"injectables/MarketService.html":{}}}],["product.comments.push",{"_index":1038,"title":{},"body":{"injectables/MarketService.html":{}}}],["product.reaction.user",{"_index":1056,"title":{},"body":{"injectables/MarketService.html":{}}}],["product.reactions.push",{"_index":1047,"title":{},"body":{"injectables/MarketService.html":{}}}],["product.save().catch",{"_index":1030,"title":{},"body":{"injectables/MarketService.html":{}}}],["productid",{"_index":887,"title":{},"body":{"controllers/MarketController.html":{},"injectables/MarketService.html":{}}}],["production",{"_index":703,"title":{},"body":{"classes/ConfigService.html":{}}}],["products",{"_index":1012,"title":{},"body":{"injectables/MarketService.html":{}}}],["profile",{"_index":1436,"title":{},"body":{"classes/UserModel.html":{},"injectables/UserService.html":{}}}],["program",{"_index":1615,"title":{},"body":{"index.html":{}}}],["project",{"_index":428,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/UserService.html":{},"index.html":{}}}],["promise",{"_index":351,"title":{},"body":{"injectables/AuthService.html":{},"injectables/TransactionService.html":{},"injectables/UserService.html":{}}}],["prop",{"_index":620,"title":{},"body":{"classes/BuyerMarket.html":{},"classes/ChangelogAuthor.html":{},"classes/ChangelogModel.html":{},"classes/CommentMarket.html":{},"classes/DiscountMarket.html":{},"classes/Email-1.html":{},"classes/MarketModel.html":{},"classes/Membership-1.html":{},"classes/Notifications-1.html":{},"classes/Online-1.html":{},"classes/Password-1.html":{},"classes/Rank-1.html":{},"classes/Reactions-1.html":{},"classes/ReactionsMarket.html":{},"classes/Security-1.html":{},"classes/Sessions-1.html":{},"classes/Stats-1.html":{},"classes/Suspension-1.html":{},"classes/Transaction-1.html":{},"classes/TransactionInfo.html":{},"classes/TransactionModel.html":{},"classes/UserModel.html":{}}}],["prop({default",{"_index":1220,"title":{},"body":{"classes/Transaction-1.html":{},"classes/UserModel.html":{}}}],["prop({required",{"_index":615,"title":{},"body":{"classes/BuyerMarket.html":{},"classes/ChangelogAuthor.html":{},"classes/ChangelogModel.html":{},"classes/CommentMarket.html":{},"classes/DiscountMarket.html":{},"classes/Email-1.html":{},"classes/MarketModel.html":{},"classes/Membership-1.html":{},"classes/Notifications-1.html":{},"classes/Online-1.html":{},"classes/Password-1.html":{},"classes/Rank-1.html":{},"classes/Reactions-1.html":{},"classes/ReactionsMarket.html":{},"classes/Security-1.html":{},"classes/Sessions-1.html":{},"classes/Stats-1.html":{},"classes/Suspension-1.html":{},"classes/Transaction-1.html":{},"classes/TransactionInfo.html":{},"classes/TransactionModel.html":{},"classes/UserModel.html":{}}}],["properties",{"_index":339,"title":{},"body":{"injectables/AuthService.html":{},"classes/BuyerAddMarketDto.html":{},"classes/BuyerMarket.html":{},"classes/BuyerRemoveMarketDto.html":{},"classes/ChangelogAuthor.html":{},"classes/ChangelogModel.html":{},"classes/CommentMarket.html":{},"classes/CommentMarketDto.html":{},"classes/CommentRemoveMarketDto.html":{},"classes/ConfigService.html":{},"classes/DiscountMarket.html":{},"classes/Email.html":{},"classes/Email-1.html":{},"classes/GeneralGateway.html":{},"interfaces/IJwtPayload.html":{},"classes/Market.html":{},"classes/MarketModel.html":{},"injectables/MarketService.html":{},"classes/Membership.html":{},"classes/Membership-1.html":{},"classes/Notifications.html":{},"classes/Notifications-1.html":{},"classes/Online.html":{},"classes/Online-1.html":{},"classes/Password.html":{},"classes/Password-1.html":{},"classes/Rank.html":{},"classes/Rank-1.html":{},"classes/ReactionAddMarketDto.html":{},"classes/ReactionRemoveMarketDto.html":{},"classes/Reactions.html":{},"classes/Reactions-1.html":{},"classes/ReactionsDto.html":{},"classes/ReactionsMarket.html":{},"classes/Security.html":{},"classes/Security-1.html":{},"classes/SecurityCode.html":{},"classes/SecurityDto.html":{},"classes/SecurityUpdateDto.html":{},"classes/Sessions.html":{},"classes/Sessions-1.html":{},"classes/SignInDto.html":{},"classes/Stats.html":{},"classes/Stats-1.html":{},"classes/Suspension.html":{},"classes/Suspension-1.html":{},"classes/Transaction.html":{},"classes/Transaction-1.html":{},"classes/TransactionBuyer.html":{},"classes/TransactionDeleteDto.html":{},"classes/TransactionInfo.html":{},"classes/TransactionModel.html":{},"injectables/TransactionService.html":{},"classes/UpdateUserDto.html":{},"classes/UserDto.html":{},"classes/UserModel.html":{},"injectables/UserService.html":{}}}],["protected",{"_index":1317,"title":{},"body":{"controllers/UserController.html":{}}}],["provide",{"_index":202,"title":{},"body":{"modules/AppModule.html":{},"modules/ConfigModule.html":{}}}],["providers",{"_index":72,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ConfigModule.html":{},"modules/MarketModule.html":{},"modules/TransactionModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["public",{"_index":11,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BuyerAddMarketDto.html":{},"classes/BuyerMarket.html":{},"classes/BuyerRemoveMarketDto.html":{},"classes/ChangelogAuthor.html":{},"classes/ChangelogModel.html":{},"classes/CommentMarket.html":{},"classes/CommentMarketDto.html":{},"classes/ConfigService.html":{},"classes/DiscountMarket.html":{},"classes/Email.html":{},"classes/Email-1.html":{},"classes/Market.html":{},"controllers/MarketController.html":{},"classes/MarketModel.html":{},"injectables/MarketService.html":{},"classes/Membership.html":{},"classes/Membership-1.html":{},"classes/Notifications.html":{},"classes/Notifications-1.html":{},"classes/Online.html":{},"classes/Online-1.html":{},"classes/Password.html":{},"classes/Password-1.html":{},"classes/Rank.html":{},"classes/Rank-1.html":{},"classes/ReactionAddMarketDto.html":{},"classes/Reactions.html":{},"classes/Reactions-1.html":{},"classes/ReactionsMarket.html":{},"classes/Security.html":{},"classes/Security-1.html":{},"classes/Sessions.html":{},"classes/Sessions-1.html":{},"classes/SignInDto.html":{},"classes/Stats.html":{},"classes/Stats-1.html":{},"classes/Suspension.html":{},"classes/Suspension-1.html":{},"classes/Transaction.html":{},"classes/Transaction-1.html":{},"classes/TransactionBuyer.html":{},"controllers/TransactionController.html":{},"classes/TransactionDeleteDto.html":{},"classes/TransactionInfo.html":{},"classes/TransactionModel.html":{},"injectables/TransactionService.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"classes/UserModel.html":{},"injectables/UserService.html":{},"index.html":{}}}],["published",{"_index":993,"title":{},"body":{"injectables/MarketService.html":{}}}],["pull",{"_index":594,"title":{},"body":{"injectables/AuthService.html":{},"injectables/MarketService.html":{},"injectables/TransactionService.html":{},"injectables/UserService.html":{}}}],["put",{"_index":34,"title":{},"body":{"controllers/AdminController.html":{},"controllers/AuthController.html":{},"controllers/MarketController.html":{},"controllers/TransactionController.html":{},"controllers/UserController.html":{}}}],["put('/add/comment",{"_index":872,"title":{},"body":{"controllers/MarketController.html":{}}}],["put('/add/product",{"_index":876,"title":{},"body":{"controllers/MarketController.html":{}}}],["put('/add/reaction",{"_index":880,"title":{},"body":{"controllers/MarketController.html":{}}}],["put('/new/changelog",{"_index":26,"title":{},"body":{"controllers/AdminController.html":{}}}],["put('/process/purchase",{"_index":1244,"title":{},"body":{"controllers/TransactionController.html":{}}}],["put('/reactions/add",{"_index":1323,"title":{},"body":{"controllers/UserController.html":{}}}],["put('/signup",{"_index":278,"title":{},"body":{"controllers/AuthController.html":{}}}],["put('/signup')@usepipes(new",{"_index":249,"title":{},"body":{"controllers/AuthController.html":{}}}],["queryresolver",{"_index":152,"title":{},"body":{"modules/AppModule.html":{}}}],["queryresolver(['lang",{"_index":197,"title":{},"body":{"modules/AppModule.html":{}}}],["questions",{"_index":1679,"title":{},"body":{"index.html":{}}}],["randomname",{"_index":1368,"title":{},"body":{"controllers/UserController.html":{}}}],["randomname}${extname(file.originalname",{"_index":1375,"title":{},"body":{"controllers/UserController.html":{}}}],["range",{"_index":1440,"title":{},"body":{"classes/UserModel.html":{}}}],["rank",{"_index":109,"title":{"classes/Rank.html":{},"classes/Rank-1.html":{}},"body":{"injectables/AdminService.html":{},"injectables/AuthService.html":{},"classes/Email.html":{},"classes/Email-1.html":{},"interfaces/IJwtPayload.html":{},"classes/Market.html":{},"controllers/MarketController.html":{},"injectables/MarketService.html":{},"classes/Membership.html":{},"classes/Membership-1.html":{},"classes/Notifications.html":{},"classes/Notifications-1.html":{},"classes/Online.html":{},"classes/Online-1.html":{},"classes/Password.html":{},"classes/Password-1.html":{},"classes/Rank.html":{},"classes/Rank-1.html":{},"guards/RankGuard.html":{},"classes/Reactions.html":{},"classes/Reactions-1.html":{},"classes/Security.html":{},"classes/Security-1.html":{},"classes/Sessions.html":{},"classes/Sessions-1.html":{},"classes/Stats.html":{},"classes/Stats-1.html":{},"classes/Suspension.html":{},"classes/Suspension-1.html":{},"classes/Transaction.html":{},"classes/Transaction-1.html":{},"classes/TransactionBuyer.html":{},"controllers/TransactionController.html":{},"classes/TransactionInfo.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"classes/UserModel.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["rank(ranksenum.administrator",{"_index":892,"title":{},"body":{"controllers/MarketController.html":{},"controllers/TransactionController.html":{},"controllers/UserController.html":{}}}],["rank(ranksenum.administrator)@delete('/reactions/remove",{"_index":1336,"title":{},"body":{"controllers/UserController.html":{}}}],["rankdata",{"_index":475,"title":{},"body":{"injectables/AuthService.html":{}}}],["rankdata.push(ranksenum.administrator",{"_index":477,"title":{},"body":{"injectables/AuthService.html":{}}}],["rankdata.push(ranksenum.moderator",{"_index":479,"title":{},"body":{"injectables/AuthService.html":{}}}],["rankdata.push(ranksenum.premium",{"_index":483,"title":{},"body":{"injectables/AuthService.html":{}}}],["rankdata.push(ranksenum.seller",{"_index":481,"title":{},"body":{"injectables/AuthService.html":{}}}],["rankguard",{"_index":912,"title":{"guards/RankGuard.html":{}},"body":{"controllers/MarketController.html":{},"guards/RankGuard.html":{},"controllers/TransactionController.html":{},"coverage.html":{}}}],["ranking",{"_index":1640,"title":{},"body":{"index.html":{}}}],["ranks",{"_index":1115,"title":{},"body":{"guards/RankGuard.html":{}}}],["ranks.includes(rank",{"_index":1121,"title":{},"body":{"guards/RankGuard.html":{}}}],["ranksenum",{"_index":385,"title":{},"body":{"injectables/AuthService.html":{},"controllers/MarketController.html":{},"injectables/MarketService.html":{},"controllers/TransactionController.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{}}}],["ranksenum.moderator",{"_index":928,"title":{},"body":{"controllers/MarketController.html":{},"controllers/TransactionController.html":{}}}],["ranksenum.moderator)@delete('/delete/buyer",{"_index":893,"title":{},"body":{"controllers/MarketController.html":{}}}],["ranksenum.moderator)@delete('/delete/purchase",{"_index":1238,"title":{},"body":{"controllers/TransactionController.html":{}}}],["ranksenum.moderator)@get('/get/all",{"_index":1240,"title":{},"body":{"controllers/TransactionController.html":{}}}],["rankuserrequest",{"_index":883,"title":{},"body":{"controllers/MarketController.html":{},"injectables/MarketService.html":{}}}],["rankuserrequest.includes(ranksenum.administrator",{"_index":1001,"title":{},"body":{"injectables/MarketService.html":{}}}],["rankuserrequest.includes(ranksenum.moderator",{"_index":1002,"title":{},"body":{"injectables/MarketService.html":{}}}],["rate",{"_index":1571,"title":{},"body":{"dependencies.html":{}}}],["reaccion",{"_index":1522,"title":{},"body":{"injectables/UserService.html":{}}}],["reaction",{"_index":1043,"title":{},"body":{"injectables/MarketService.html":{},"injectables/UserService.html":{}}}],["reactionaddmarketdto",{"_index":879,"title":{"classes/ReactionAddMarketDto.html":{}},"body":{"controllers/MarketController.html":{},"injectables/MarketService.html":{},"classes/ReactionAddMarketDto.html":{},"coverage.html":{}}}],["reactionaddmarketdto.device",{"_index":1048,"title":{},"body":{"injectables/MarketService.html":{}}}],["reactionaddmarketdto.ip",{"_index":1049,"title":{},"body":{"injectables/MarketService.html":{}}}],["reactionaddmarketdto.product",{"_index":1045,"title":{},"body":{"injectables/MarketService.html":{}}}],["reactionaddmarketdto.type",{"_index":1050,"title":{},"body":{"injectables/MarketService.html":{}}}],["reactionaddmarketdto.user",{"_index":1044,"title":{},"body":{"injectables/MarketService.html":{}}}],["reactionremovemarketdto",{"_index":899,"title":{"classes/ReactionRemoveMarketDto.html":{}},"body":{"controllers/MarketController.html":{},"injectables/MarketService.html":{},"classes/ReactionRemoveMarketDto.html":{},"coverage.html":{}}}],["reactionremovemarketdto.product",{"_index":1067,"title":{},"body":{"injectables/MarketService.html":{}}}],["reactionremovemarketdto.user",{"_index":1066,"title":{},"body":{"injectables/MarketService.html":{}}}],["reactions",{"_index":740,"title":{"classes/Reactions.html":{},"classes/Reactions-1.html":{}},"body":{"classes/Email.html":{},"classes/Email-1.html":{},"classes/Market.html":{},"classes/MarketModel.html":{},"injectables/MarketService.html":{},"classes/Membership.html":{},"classes/Membership-1.html":{},"classes/Notifications.html":{},"classes/Notifications-1.html":{},"classes/Online.html":{},"classes/Online-1.html":{},"classes/Password.html":{},"classes/Password-1.html":{},"classes/Rank.html":{},"classes/Rank-1.html":{},"classes/Reactions.html":{},"classes/Reactions-1.html":{},"classes/Security.html":{},"classes/Security-1.html":{},"classes/Sessions.html":{},"classes/Sessions-1.html":{},"classes/Stats.html":{},"classes/Stats-1.html":{},"classes/Suspension.html":{},"classes/Suspension-1.html":{},"classes/Transaction.html":{},"classes/Transaction-1.html":{},"classes/TransactionBuyer.html":{},"classes/TransactionInfo.html":{},"classes/UserDto.html":{},"classes/UserModel.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["reactions.device",{"_index":960,"title":{},"body":{"classes/MarketModel.html":{}}}],["reactions.ip",{"_index":961,"title":{},"body":{"classes/MarketModel.html":{}}}],["reactions.user",{"_index":962,"title":{},"body":{"classes/MarketModel.html":{}}}],["reactionsdto",{"_index":1135,"title":{"classes/ReactionsDto.html":{}},"body":{"classes/ReactionsDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["reactionsmarket",{"_index":637,"title":{"classes/ReactionsMarket.html":{}},"body":{"classes/BuyerMarket.html":{},"classes/CommentMarket.html":{},"classes/DiscountMarket.html":{},"classes/MarketModel.html":{},"classes/ReactionsMarket.html":{},"coverage.html":{}}}],["readfilesync",{"_index":696,"title":{},"body":{"classes/ConfigService.html":{}}}],["readonly",{"_index":51,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ConfigService.html":{},"classes/GeneralGateway.html":{},"injectables/JwtStrategy.html":{},"controllers/MarketController.html":{},"injectables/MarketService.html":{},"guards/RankGuard.html":{},"classes/ReactionsDto.html":{},"classes/SecurityCode.html":{},"classes/SecurityDto.html":{},"classes/SecurityUpdateDto.html":{},"classes/SignInDto.html":{},"controllers/TransactionController.html":{},"injectables/TransactionService.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["real",{"_index":1657,"title":{},"body":{"index.html":{}}}],["reason",{"_index":742,"title":{},"body":{"classes/Email.html":{},"classes/Email-1.html":{},"classes/Market.html":{},"classes/Membership.html":{},"classes/Membership-1.html":{},"classes/Notifications.html":{},"classes/Notifications-1.html":{},"classes/Online.html":{},"classes/Online-1.html":{},"classes/Password.html":{},"classes/Password-1.html":{},"classes/Rank.html":{},"classes/Rank-1.html":{},"classes/Reactions.html":{},"classes/Reactions-1.html":{},"classes/Security.html":{},"classes/Security-1.html":{},"classes/Sessions.html":{},"classes/Sessions-1.html":{},"classes/Stats.html":{},"classes/Stats-1.html":{},"classes/Suspension.html":{},"classes/Suspension-1.html":{},"classes/Transaction.html":{},"classes/Transaction-1.html":{},"classes/TransactionBuyer.html":{},"classes/TransactionInfo.html":{}}}],["recommended",{"_index":1637,"title":{},"body":{"index.html":{}}}],["ref",{"_index":609,"title":{},"body":{"classes/BuyerAddMarketDto.html":{},"classes/BuyerMarket.html":{},"classes/ChangelogAuthor.html":{},"classes/CommentMarket.html":{},"classes/CommentMarketDto.html":{},"classes/DiscountMarket.html":{},"classes/MarketModel.html":{},"classes/ReactionAddMarketDto.html":{},"classes/ReactionsMarket.html":{},"classes/TransactionModel.html":{}}}],["reflect",{"_index":1587,"title":{},"body":{"dependencies.html":{}}}],["reflector",{"_index":1110,"title":{},"body":{"guards/RankGuard.html":{}}}],["registered",{"_index":499,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["registration",{"_index":454,"title":{},"body":{"injectables/AuthService.html":{}}}],["rejected",{"_index":466,"title":{},"body":{"injectables/AuthService.html":{}}}],["released",{"_index":1676,"title":{},"body":{"index.html":{}}}],["remove",{"_index":1063,"title":{},"body":{"injectables/MarketService.html":{},"injectables/UserService.html":{}}}],["removebuyer",{"_index":868,"title":{},"body":{"controllers/MarketController.html":{},"injectables/MarketService.html":{}}}],["removebuyer(buyerremovemarketdto",{"_index":891,"title":{},"body":{"controllers/MarketController.html":{},"injectables/MarketService.html":{}}}],["removecomment",{"_index":869,"title":{},"body":{"controllers/MarketController.html":{},"injectables/MarketService.html":{}}}],["removecomment(commentremovemarketdto",{"_index":895,"title":{},"body":{"controllers/MarketController.html":{},"injectables/MarketService.html":{}}}],["removed",{"_index":1070,"title":{},"body":{"injectables/MarketService.html":{}}}],["removereaction",{"_index":870,"title":{},"body":{"controllers/MarketController.html":{},"injectables/MarketService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["removereaction(ofid",{"_index":1480,"title":{},"body":{"injectables/UserService.html":{}}}],["removereaction(reactionremovemarketdto",{"_index":898,"title":{},"body":{"controllers/MarketController.html":{},"injectables/MarketService.html":{}}}],["removereaction(res",{"_index":1335,"title":{},"body":{"controllers/UserController.html":{}}}],["removing",{"_index":1060,"title":{},"body":{"injectables/MarketService.html":{}}}],["rep",{"_index":747,"title":{},"body":{"classes/Email.html":{},"classes/Email-1.html":{},"classes/Market.html":{},"classes/Membership.html":{},"classes/Membership-1.html":{},"classes/Notifications.html":{},"classes/Notifications-1.html":{},"classes/Online.html":{},"classes/Online-1.html":{},"classes/Password.html":{},"classes/Password-1.html":{},"classes/Rank.html":{},"classes/Rank-1.html":{},"classes/Reactions.html":{},"classes/Reactions-1.html":{},"classes/Security.html":{},"classes/Security-1.html":{},"classes/Sessions.html":{},"classes/Sessions-1.html":{},"classes/Stats.html":{},"classes/Stats-1.html":{},"classes/Suspension.html":{},"classes/Suspension-1.html":{},"classes/Transaction.html":{},"classes/Transaction-1.html":{},"classes/TransactionBuyer.html":{},"classes/TransactionInfo.html":{}}}],["report",{"_index":1650,"title":{},"body":{"index.html":{}}}],["reporting",{"_index":1636,"title":{},"body":{"index.html":{}}}],["repository",{"_index":1651,"title":{},"body":{"index.html":{}}}],["req",{"_index":1693,"title":{},"body":{"miscellaneous/variables.html":{}}}],["req.user",{"_index":1695,"title":{},"body":{"miscellaneous/variables.html":{}}}],["req.user[key",{"_index":1694,"title":{},"body":{"miscellaneous/variables.html":{}}}],["request",{"_index":455,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"guards/RankGuard.html":{}}}],["requestuserrank",{"_index":1486,"title":{},"body":{"injectables/UserService.html":{}}}],["requestuserrank.includes(ranksenum.administrator",{"_index":1506,"title":{},"body":{"injectables/UserService.html":{}}}],["requestuserrank.includes(ranksenum.moderator",{"_index":1507,"title":{},"body":{"injectables/UserService.html":{}}}],["requetuserid",{"_index":1485,"title":{},"body":{"injectables/UserService.html":{}}}],["required",{"_index":622,"title":{},"body":{"classes/BuyerMarket.html":{},"classes/ChangelogAuthor.html":{},"classes/ChangelogModel.html":{},"classes/CommentMarket.html":{},"classes/DiscountMarket.html":{},"classes/Email-1.html":{},"classes/MarketModel.html":{},"classes/Membership-1.html":{},"classes/Notifications-1.html":{},"classes/Online-1.html":{},"classes/Password-1.html":{},"classes/Rank-1.html":{},"classes/Reactions-1.html":{},"classes/ReactionsMarket.html":{},"classes/Security-1.html":{},"classes/Sessions-1.html":{},"classes/Stats-1.html":{},"classes/Suspension-1.html":{},"classes/Transaction-1.html":{},"classes/TransactionInfo.html":{},"classes/TransactionModel.html":{},"classes/UserModel.html":{}}}],["res",{"_index":36,"title":{},"body":{"controllers/AdminController.html":{},"controllers/AuthController.html":{},"controllers/MarketController.html":{},"controllers/TransactionController.html":{},"controllers/UserController.html":{}}}],["res.status(httpstatus.ok).json",{"_index":1379,"title":{},"body":{"controllers/UserController.html":{}}}],["resed",{"_index":577,"title":{},"body":{"injectables/AuthService.html":{}}}],["reset",{"_index":77,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ConfigModule.html":{},"modules/MarketModule.html":{},"modules/TransactionModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["reset_password",{"_index":579,"title":{},"body":{"injectables/AuthService.html":{}}}],["resolvers",{"_index":196,"title":{},"body":{"modules/AppModule.html":{}}}],["response",{"_index":23,"title":{},"body":{"controllers/AdminController.html":{},"controllers/AuthController.html":{},"controllers/MarketController.html":{},"controllers/TransactionController.html":{},"controllers/UserController.html":{}}}],["response.status(httpstatus.created).json",{"_index":55,"title":{},"body":{"controllers/AdminController.html":{},"controllers/AuthController.html":{},"controllers/MarketController.html":{}}}],["response.status(httpstatus.ok).json",{"_index":291,"title":{},"body":{"controllers/AuthController.html":{},"controllers/MarketController.html":{},"controllers/TransactionController.html":{},"controllers/UserController.html":{}}}],["rest",{"_index":1608,"title":{},"body":{"index.html":{}}}],["result",{"_index":62,"title":{},"body":{"controllers/AdminController.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BuyerAddMarketDto.html":{},"classes/BuyerMarket.html":{},"classes/BuyerRemoveMarketDto.html":{},"classes/ChangelogAuthor.html":{},"classes/ChangelogModel.html":{},"classes/CommentMarket.html":{},"classes/CommentMarketDto.html":{},"classes/CommentRemoveMarketDto.html":{},"modules/ConfigModule.html":{},"classes/ConfigService.html":{},"classes/DiscountMarket.html":{},"classes/Email.html":{},"classes/Email-1.html":{},"classes/GeneralGateway.html":{},"interfaces/IJwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/Market.html":{},"controllers/MarketController.html":{},"classes/MarketModel.html":{},"modules/MarketModule.html":{},"injectables/MarketService.html":{},"classes/Membership.html":{},"classes/Membership-1.html":{},"classes/Notifications.html":{},"classes/Notifications-1.html":{},"classes/Online.html":{},"classes/Online-1.html":{},"classes/Password.html":{},"classes/Password-1.html":{},"classes/Rank.html":{},"classes/Rank-1.html":{},"guards/RankGuard.html":{},"classes/ReactionAddMarketDto.html":{},"classes/ReactionRemoveMarketDto.html":{},"classes/Reactions.html":{},"classes/Reactions-1.html":{},"classes/ReactionsDto.html":{},"classes/ReactionsMarket.html":{},"classes/Security.html":{},"classes/Security-1.html":{},"classes/SecurityCode.html":{},"classes/SecurityDto.html":{},"classes/SecurityUpdateDto.html":{},"classes/Sessions.html":{},"classes/Sessions-1.html":{},"classes/SignInDto.html":{},"classes/Stats.html":{},"classes/Stats-1.html":{},"classes/Suspension.html":{},"classes/Suspension-1.html":{},"classes/Transaction.html":{},"classes/Transaction-1.html":{},"classes/TransactionBuyer.html":{},"controllers/TransactionController.html":{},"classes/TransactionDeleteDto.html":{},"classes/TransactionInfo.html":{},"classes/TransactionModel.html":{},"modules/TransactionModule.html":{},"injectables/TransactionService.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"classes/UserModel.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":64,"title":{},"body":{"controllers/AdminController.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BuyerAddMarketDto.html":{},"classes/BuyerMarket.html":{},"classes/BuyerRemoveMarketDto.html":{},"classes/ChangelogAuthor.html":{},"classes/ChangelogModel.html":{},"classes/CommentMarket.html":{},"classes/CommentMarketDto.html":{},"classes/CommentRemoveMarketDto.html":{},"modules/ConfigModule.html":{},"classes/ConfigService.html":{},"classes/DiscountMarket.html":{},"classes/Email.html":{},"classes/Email-1.html":{},"classes/GeneralGateway.html":{},"interfaces/IJwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/Market.html":{},"controllers/MarketController.html":{},"classes/MarketModel.html":{},"modules/MarketModule.html":{},"injectables/MarketService.html":{},"classes/Membership.html":{},"classes/Membership-1.html":{},"classes/Notifications.html":{},"classes/Notifications-1.html":{},"classes/Online.html":{},"classes/Online-1.html":{},"classes/Password.html":{},"classes/Password-1.html":{},"classes/Rank.html":{},"classes/Rank-1.html":{},"guards/RankGuard.html":{},"classes/ReactionAddMarketDto.html":{},"classes/ReactionRemoveMarketDto.html":{},"classes/Reactions.html":{},"classes/Reactions-1.html":{},"classes/ReactionsDto.html":{},"classes/ReactionsMarket.html":{},"classes/Security.html":{},"classes/Security-1.html":{},"classes/SecurityCode.html":{},"classes/SecurityDto.html":{},"classes/SecurityUpdateDto.html":{},"classes/Sessions.html":{},"classes/Sessions-1.html":{},"classes/SignInDto.html":{},"classes/Stats.html":{},"classes/Stats-1.html":{},"classes/Suspension.html":{},"classes/Suspension-1.html":{},"classes/Transaction.html":{},"classes/Transaction-1.html":{},"classes/TransactionBuyer.html":{},"controllers/TransactionController.html":{},"classes/TransactionDeleteDto.html":{},"classes/TransactionInfo.html":{},"classes/TransactionModel.html":{},"modules/TransactionModule.html":{},"injectables/TransactionService.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"classes/UserModel.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":52,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/ConfigService.html":{},"classes/GeneralGateway.html":{},"injectables/JwtStrategy.html":{},"controllers/MarketController.html":{},"injectables/MarketService.html":{},"guards/RankGuard.html":{},"controllers/TransactionController.html":{},"injectables/TransactionService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["returnmodeltype",{"_index":89,"title":{},"body":{"injectables/AdminService.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/MarketService.html":{},"injectables/TransactionService.html":{},"injectables/UserService.html":{}}}],["returns",{"_index":20,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ConfigService.html":{},"classes/GeneralGateway.html":{},"injectables/JwtStrategy.html":{},"controllers/MarketController.html":{},"injectables/MarketService.html":{},"guards/RankGuard.html":{},"controllers/TransactionController.html":{},"injectables/TransactionService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["reviewed",{"_index":1671,"title":{},"body":{"index.html":{}}}],["rewards",{"_index":746,"title":{},"body":{"classes/Email.html":{},"classes/Email-1.html":{},"classes/Market.html":{},"classes/Membership.html":{},"classes/Membership-1.html":{},"classes/Notifications.html":{},"classes/Notifications-1.html":{},"classes/Online.html":{},"classes/Online-1.html":{},"classes/Password.html":{},"classes/Password-1.html":{},"classes/Rank.html":{},"classes/Rank-1.html":{},"classes/Reactions.html":{},"classes/Reactions-1.html":{},"classes/Security.html":{},"classes/Security-1.html":{},"classes/Sessions.html":{},"classes/Sessions-1.html":{},"classes/Stats.html":{},"classes/Stats-1.html":{},"classes/Suspension.html":{},"classes/Suspension-1.html":{},"classes/Transaction.html":{},"classes/Transaction-1.html":{},"classes/TransactionBuyer.html":{},"classes/TransactionInfo.html":{}}}],["rimraf",{"_index":1590,"title":{},"body":{"dependencies.html":{}}}],["rxjs",{"_index":1592,"title":{},"body":{"dependencies.html":{}}}],["s9sdnxc9sm",{"_index":716,"title":{},"body":{"classes/ConfigService.html":{}}}],["safely",{"_index":1617,"title":{},"body":{"index.html":{}}}],["salt",{"_index":590,"title":{},"body":{"injectables/AuthService.html":{}}}],["same",{"_index":1672,"title":{},"body":{"index.html":{}}}],["saturnoxspace@outlook.com",{"_index":423,"title":{},"body":{"injectables/AuthService.html":{}}}],["save",{"_index":417,"title":{},"body":{"injectables/AuthService.html":{}}}],["saved",{"_index":1032,"title":{},"body":{"injectables/MarketService.html":{}}}],["savemissing",{"_index":195,"title":{},"body":{"modules/AppModule.html":{}}}],["sawako__",{"_index":1680,"title":{},"body":{"index.html":{}}}],["schemaoptions",{"_index":955,"title":{},"body":{"classes/MarketModel.html":{}}}],["secret",{"_index":333,"title":{},"body":{"modules/AuthModule.html":{}}}],["secretorkey",{"_index":841,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["security",{"_index":259,"title":{"classes/Security.html":{},"classes/Security-1.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/Email.html":{},"classes/Email-1.html":{},"classes/Market.html":{},"classes/Membership.html":{},"classes/Membership-1.html":{},"classes/Notifications.html":{},"classes/Notifications-1.html":{},"classes/Online.html":{},"classes/Online-1.html":{},"classes/Password.html":{},"classes/Password-1.html":{},"classes/Rank.html":{},"classes/Rank-1.html":{},"classes/Reactions.html":{},"classes/Reactions-1.html":{},"classes/Security.html":{},"classes/Security-1.html":{},"classes/SecurityCode.html":{},"classes/SecurityUpdateDto.html":{},"classes/Sessions.html":{},"classes/Sessions-1.html":{},"classes/Stats.html":{},"classes/Stats-1.html":{},"classes/Suspension.html":{},"classes/Suspension-1.html":{},"classes/Transaction.html":{},"classes/Transaction-1.html":{},"classes/TransactionBuyer.html":{},"classes/TransactionInfo.html":{},"classes/UserDto.html":{},"classes/UserModel.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["securitycode",{"_index":1161,"title":{"classes/SecurityCode.html":{}},"body":{"classes/SecurityCode.html":{},"classes/SecurityUpdateDto.html":{},"coverage.html":{}}}],["securitydto",{"_index":256,"title":{"classes/SecurityDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/SecurityDto.html":{},"coverage.html":{}}}],["securitydto.code1",{"_index":559,"title":{},"body":{"injectables/AuthService.html":{}}}],["securitydto.code2",{"_index":561,"title":{},"body":{"injectables/AuthService.html":{}}}],["securitydto.code3",{"_index":563,"title":{},"body":{"injectables/AuthService.html":{}}}],["securitydto.code4",{"_index":565,"title":{},"body":{"injectables/AuthService.html":{}}}],["securitydto.code5",{"_index":567,"title":{},"body":{"injectables/AuthService.html":{}}}],["securityupdate",{"_index":228,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["securityupdatedto",{"_index":223,"title":{"classes/SecurityUpdateDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/SecurityCode.html":{},"classes/SecurityUpdateDto.html":{},"coverage.html":{}}}],["select",{"_index":1005,"title":{},"body":{"injectables/MarketService.html":{},"injectables/UserService.html":{}}}],["seller",{"_index":739,"title":{},"body":{"classes/Email.html":{},"classes/Email-1.html":{},"classes/Market.html":{},"classes/Membership.html":{},"classes/Membership-1.html":{},"classes/Notifications.html":{},"classes/Notifications-1.html":{},"classes/Online.html":{},"classes/Online-1.html":{},"classes/Password.html":{},"classes/Password-1.html":{},"classes/Rank.html":{},"classes/Rank-1.html":{},"classes/Reactions.html":{},"classes/Reactions-1.html":{},"classes/Security.html":{},"classes/Security-1.html":{},"classes/Sessions.html":{},"classes/Sessions-1.html":{},"classes/Stats.html":{},"classes/Stats-1.html":{},"classes/Suspension.html":{},"classes/Suspension-1.html":{},"classes/Transaction.html":{},"classes/Transaction-1.html":{},"classes/TransactionBuyer.html":{},"classes/TransactionDeleteDto.html":{},"classes/TransactionInfo.html":{},"classes/TransactionModel.html":{},"injectables/TransactionService.html":{},"miscellaneous/enumerations.html":{}}}],["send",{"_index":442,"title":{},"body":{"injectables/AuthService.html":{}}}],["sending",{"_index":574,"title":{},"body":{"injectables/AuthService.html":{}}}],["sendmail",{"_index":421,"title":{},"body":{"injectables/AuthService.html":{}}}],["sendpasswordreset",{"_index":342,"title":{},"body":{"injectables/AuthService.html":{}}}],["sendpasswordreset(userid",{"_index":357,"title":{},"body":{"injectables/AuthService.html":{}}}],["sent",{"_index":582,"title":{},"body":{"injectables/AuthService.html":{}}}],["server",{"_index":793,"title":{},"body":{"classes/GeneralGateway.html":{}}}],["server_host",{"_index":723,"title":{},"body":{"classes/ConfigService.html":{},"miscellaneous/enumerations.html":{}}}],["sesionid",{"_index":230,"title":{},"body":{"controllers/AuthController.html":{}}}],["sesionid).then",{"_index":315,"title":{},"body":{"controllers/AuthController.html":{}}}],["sessiodevice",{"_index":263,"title":{},"body":{"controllers/AuthController.html":{}}}],["sessioid",{"_index":261,"title":{},"body":{"controllers/AuthController.html":{}}}],["sessioip",{"_index":262,"title":{},"body":{"controllers/AuthController.html":{}}}],["session",{"_index":498,"title":{},"body":{"injectables/AuthService.html":{},"classes/GeneralGateway.html":{}}}],["session_id",{"_index":518,"title":{},"body":{"injectables/AuthService.html":{}}}],["sessiondevice",{"_index":367,"title":{},"body":{"injectables/AuthService.html":{}}}],["sessionid",{"_index":355,"title":{},"body":{"injectables/AuthService.html":{}}}],["sessionip",{"_index":368,"title":{},"body":{"injectables/AuthService.html":{}}}],["sessions",{"_index":595,"title":{"classes/Sessions.html":{},"classes/Sessions-1.html":{}},"body":{"injectables/AuthService.html":{},"classes/Email.html":{},"classes/Email-1.html":{},"classes/Market.html":{},"classes/Membership.html":{},"classes/Membership-1.html":{},"classes/Notifications.html":{},"classes/Notifications-1.html":{},"classes/Online.html":{},"classes/Online-1.html":{},"classes/Password.html":{},"classes/Password-1.html":{},"classes/Rank.html":{},"classes/Rank-1.html":{},"classes/Reactions.html":{},"classes/Reactions-1.html":{},"classes/Security.html":{},"classes/Security-1.html":{},"classes/Sessions.html":{},"classes/Sessions-1.html":{},"classes/Stats.html":{},"classes/Stats-1.html":{},"classes/Suspension.html":{},"classes/Suspension-1.html":{},"classes/Transaction.html":{},"classes/Transaction-1.html":{},"classes/TransactionBuyer.html":{},"classes/TransactionInfo.html":{},"classes/UserDto.html":{},"classes/UserModel.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["sessions._id",{"_index":544,"title":{},"body":{"injectables/AuthService.html":{}}}],["sessions.device",{"_index":495,"title":{},"body":{"injectables/AuthService.html":{},"classes/UserModel.html":{}}}],["sessions.ip",{"_index":496,"title":{},"body":{"injectables/AuthService.html":{},"classes/UserModel.html":{}}}],["setmetadata('rank",{"_index":1696,"title":{},"body":{"miscellaneous/variables.html":{}}}],["signin",{"_index":217,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["signin(@body",{"_index":285,"title":{},"body":{"controllers/AuthController.html":{}}}],["signin(signindto",{"_index":359,"title":{},"body":{"injectables/AuthService.html":{}}}],["signin(user",{"_index":243,"title":{},"body":{"controllers/AuthController.html":{}}}],["signindto",{"_index":244,"title":{"classes/SignInDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/SignInDto.html":{},"coverage.html":{}}}],["signoptions",{"_index":335,"title":{},"body":{"modules/AuthModule.html":{}}}],["signup",{"_index":218,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["signup(user",{"_index":247,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["smtp://saturnoxspace@outlook.com:efhdmhtdxblafvjj@smtp.office365.com",{"_index":718,"title":{},"body":{"classes/ConfigService.html":{}}}],["social",{"_index":757,"title":{},"body":{"classes/Email.html":{},"classes/Email-1.html":{},"classes/Market.html":{},"classes/Membership.html":{},"classes/Membership-1.html":{},"classes/Notifications.html":{},"classes/Notifications-1.html":{},"classes/Online.html":{},"classes/Online-1.html":{},"classes/Password.html":{},"classes/Password-1.html":{},"classes/Rank.html":{},"classes/Rank-1.html":{},"classes/Reactions.html":{},"classes/Reactions-1.html":{},"classes/Security.html":{},"classes/Security-1.html":{},"classes/Sessions.html":{},"classes/Sessions-1.html":{},"classes/Stats.html":{},"classes/Stats-1.html":{},"classes/Suspension.html":{},"classes/Suspension-1.html":{},"classes/Transaction.html":{},"classes/Transaction-1.html":{},"classes/TransactionBuyer.html":{},"classes/TransactionInfo.html":{}}}],["socket",{"_index":815,"title":{},"body":{"classes/GeneralGateway.html":{}}}],["socket.io",{"_index":1557,"title":{},"body":{"dependencies.html":{}}}],["sorry",{"_index":850,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["sort(order",{"_index":1020,"title":{},"body":{"injectables/MarketService.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AdminController.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BuyerAddMarketDto.html":{},"classes/BuyerMarket.html":{},"classes/BuyerRemoveMarketDto.html":{},"classes/ChangelogAuthor.html":{},"classes/ChangelogModel.html":{},"classes/CommentMarket.html":{},"classes/CommentMarketDto.html":{},"classes/CommentRemoveMarketDto.html":{},"modules/ConfigModule.html":{},"classes/ConfigService.html":{},"classes/DiscountMarket.html":{},"classes/Email.html":{},"classes/Email-1.html":{},"classes/GeneralGateway.html":{},"interfaces/IJwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/Market.html":{},"controllers/MarketController.html":{},"classes/MarketModel.html":{},"modules/MarketModule.html":{},"injectables/MarketService.html":{},"classes/Membership.html":{},"classes/Membership-1.html":{},"classes/Notifications.html":{},"classes/Notifications-1.html":{},"classes/Online.html":{},"classes/Online-1.html":{},"classes/Password.html":{},"classes/Password-1.html":{},"classes/Rank.html":{},"classes/Rank-1.html":{},"guards/RankGuard.html":{},"classes/ReactionAddMarketDto.html":{},"classes/ReactionRemoveMarketDto.html":{},"classes/Reactions.html":{},"classes/Reactions-1.html":{},"classes/ReactionsDto.html":{},"classes/ReactionsMarket.html":{},"classes/Security.html":{},"classes/Security-1.html":{},"classes/SecurityCode.html":{},"classes/SecurityDto.html":{},"classes/SecurityUpdateDto.html":{},"classes/Sessions.html":{},"classes/Sessions-1.html":{},"classes/SignInDto.html":{},"classes/Stats.html":{},"classes/Stats-1.html":{},"classes/Suspension.html":{},"classes/Suspension-1.html":{},"classes/Transaction.html":{},"classes/Transaction-1.html":{},"classes/TransactionBuyer.html":{},"controllers/TransactionController.html":{},"classes/TransactionDeleteDto.html":{},"classes/TransactionInfo.html":{},"classes/TransactionModel.html":{},"modules/TransactionModule.html":{},"injectables/TransactionService.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"classes/UserModel.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["specialty",{"_index":1399,"title":{},"body":{"classes/UserDto.html":{},"classes/UserModel.html":{},"injectables/UserService.html":{}}}],["specified",{"_index":779,"title":{},"body":{"classes/Email-1.html":{},"classes/Membership-1.html":{},"classes/Notifications-1.html":{},"classes/Online-1.html":{},"classes/Password-1.html":{},"classes/Rank-1.html":{},"classes/Reactions-1.html":{},"classes/Security-1.html":{},"classes/Sessions-1.html":{},"classes/Stats-1.html":{},"classes/Suspension-1.html":{},"classes/Transaction-1.html":{},"classes/TransactionInfo.html":{},"injectables/UserService.html":{}}}],["spent",{"_index":744,"title":{},"body":{"classes/Email.html":{},"classes/Email-1.html":{},"classes/Market.html":{},"classes/Membership.html":{},"classes/Membership-1.html":{},"classes/Notifications.html":{},"classes/Notifications-1.html":{},"classes/Online.html":{},"classes/Online-1.html":{},"classes/Password.html":{},"classes/Password-1.html":{},"classes/Rank.html":{},"classes/Rank-1.html":{},"classes/Reactions.html":{},"classes/Reactions-1.html":{},"classes/Security.html":{},"classes/Security-1.html":{},"classes/Sessions.html":{},"classes/Sessions-1.html":{},"classes/Stats.html":{},"classes/Stats-1.html":{},"classes/Suspension.html":{},"classes/Suspension-1.html":{},"classes/Transaction.html":{},"classes/Transaction-1.html":{},"classes/TransactionBuyer.html":{},"classes/TransactionInfo.html":{}}}],["src/.../configuration.enum.ts",{"_index":1597,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../main.ts",{"_index":1604,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../rank.decorator.ts",{"_index":1691,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../ranks.enum.ts",{"_index":1598,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../user.decorator.ts",{"_index":1690,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.controller.ts",{"_index":112,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:15",{"_index":117,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.controller.ts:9",{"_index":115,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":138,"title":{},"body":{"modules/AppModule.html":{}}}],["src/auth/auth.controller.ts",{"_index":211,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:120",{"_index":242,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:140",{"_index":238,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:164",{"_index":227,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:187",{"_index":232,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:32",{"_index":251,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:52",{"_index":246,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:57",{"_index":254,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:77",{"_index":258,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:96",{"_index":265,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.module.ts",{"_index":321,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.service.ts",{"_index":338,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:122",{"_index":360,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:292",{"_index":364,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:31",{"_index":348,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:344",{"_index":369,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:374",{"_index":366,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:42",{"_index":361,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:430",{"_index":358,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:500",{"_index":350,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:564",{"_index":354,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:615",{"_index":356,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/dto/security.dto.ts",{"_index":1173,"title":{},"body":{"classes/SecurityDto.html":{},"coverage.html":{}}}],["src/auth/dto/security.dto.ts:10",{"_index":1174,"title":{},"body":{"classes/SecurityDto.html":{}}}],["src/auth/dto/security.dto.ts:14",{"_index":1175,"title":{},"body":{"classes/SecurityDto.html":{}}}],["src/auth/dto/security.dto.ts:18",{"_index":1176,"title":{},"body":{"classes/SecurityDto.html":{}}}],["src/auth/dto/security.dto.ts:22",{"_index":1177,"title":{},"body":{"classes/SecurityDto.html":{}}}],["src/auth/dto/security.dto.ts:26",{"_index":1178,"title":{},"body":{"classes/SecurityDto.html":{}}}],["src/auth/dto/security.dto.ts:6",{"_index":1179,"title":{},"body":{"classes/SecurityDto.html":{}}}],["src/auth/dto/security.update.dto.ts",{"_index":1162,"title":{},"body":{"classes/SecurityCode.html":{},"classes/SecurityUpdateDto.html":{},"coverage.html":{}}}],["src/auth/dto/security.update.dto.ts:10",{"_index":1165,"title":{},"body":{"classes/SecurityCode.html":{}}}],["src/auth/dto/security.update.dto.ts:14",{"_index":1166,"title":{},"body":{"classes/SecurityCode.html":{}}}],["src/auth/dto/security.update.dto.ts:18",{"_index":1167,"title":{},"body":{"classes/SecurityCode.html":{}}}],["src/auth/dto/security.update.dto.ts:22",{"_index":1168,"title":{},"body":{"classes/SecurityCode.html":{}}}],["src/auth/dto/security.update.dto.ts:26",{"_index":1170,"title":{},"body":{"classes/SecurityCode.html":{}}}],["src/auth/dto/security.update.dto.ts:32",{"_index":1180,"title":{},"body":{"classes/SecurityUpdateDto.html":{}}}],["src/auth/dto/security.update.dto.ts:34",{"_index":1181,"title":{},"body":{"classes/SecurityUpdateDto.html":{}}}],["src/auth/dto/security.update.dto.ts:6",{"_index":1164,"title":{},"body":{"classes/SecurityCode.html":{}}}],["src/auth/dto/signin.dto.ts",{"_index":1190,"title":{},"body":{"classes/SignInDto.html":{},"coverage.html":{}}}],["src/auth/dto/signin.dto.ts:12",{"_index":1191,"title":{},"body":{"classes/SignInDto.html":{}}}],["src/auth/dto/signin.dto.ts:16",{"_index":1194,"title":{},"body":{"classes/SignInDto.html":{}}}],["src/auth/dto/signin.dto.ts:5",{"_index":1193,"title":{},"body":{"classes/SignInDto.html":{}}}],["src/auth/dto/signin.dto.ts:9",{"_index":1195,"title":{},"body":{"classes/SignInDto.html":{}}}],["src/auth/jwt.payload.interface.ts",{"_index":825,"title":{},"body":{"interfaces/IJwtPayload.html":{},"coverage.html":{}}}],["src/auth/strategies/jwt.strategy.ts",{"_index":827,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/auth/strategies/jwt.strategy.ts:12",{"_index":829,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/strategies/jwt.strategy.ts:25",{"_index":831,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/config/config.module.ts",{"_index":683,"title":{},"body":{"modules/ConfigModule.html":{}}}],["src/config/config.service.ts",{"_index":686,"title":{},"body":{"classes/ConfigService.html":{},"coverage.html":{}}}],["src/config/config.service.ts:34",{"_index":693,"title":{},"body":{"classes/ConfigService.html":{}}}],["src/config/config.service.ts:6",{"_index":690,"title":{},"body":{"classes/ConfigService.html":{}}}],["src/config/config.service.ts:7",{"_index":688,"title":{},"body":{"classes/ConfigService.html":{}}}],["src/decorators/rank.decorator.ts",{"_index":1538,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/decorators/user.decorator.ts",{"_index":1540,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/gateways/general.gateway.ts",{"_index":789,"title":{},"body":{"classes/GeneralGateway.html":{},"coverage.html":{}}}],["src/gateways/general.gateway.ts:15",{"_index":801,"title":{},"body":{"classes/GeneralGateway.html":{}}}],["src/gateways/general.gateway.ts:17",{"_index":798,"title":{},"body":{"classes/GeneralGateway.html":{}}}],["src/gateways/general.gateway.ts:20",{"_index":807,"title":{},"body":{"classes/GeneralGateway.html":{}}}],["src/gateways/general.gateway.ts:45",{"_index":804,"title":{},"body":{"classes/GeneralGateway.html":{}}}],["src/guards/rank.guard.ts",{"_index":1107,"title":{},"body":{"guards/RankGuard.html":{},"coverage.html":{}}}],["src/guards/rank.guard.ts:5",{"_index":1111,"title":{},"body":{"guards/RankGuard.html":{}}}],["src/guards/rank.guard.ts:8",{"_index":1114,"title":{},"body":{"guards/RankGuard.html":{}}}],["src/keys/configuration.enum.ts",{"_index":1599,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/keys/ranks.enum.ts",{"_index":1600,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/main.ts",{"_index":1541,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/modules/admin/admin.controller.ts",{"_index":6,"title":{},"body":{"controllers/AdminController.html":{},"coverage.html":{}}}],["src/modules/admin/admin.controller.ts:14",{"_index":27,"title":{},"body":{"controllers/AdminController.html":{}}}],["src/modules/admin/admin.controller.ts:33",{"_index":19,"title":{},"body":{"controllers/AdminController.html":{}}}],["src/modules/admin/admin.module.ts",{"_index":79,"title":{},"body":{"modules/AdminModule.html":{}}}],["src/modules/admin/admin.service.ts",{"_index":87,"title":{},"body":{"injectables/AdminService.html":{},"coverage.html":{}}}],["src/modules/admin/admin.service.ts:15",{"_index":94,"title":{},"body":{"injectables/AdminService.html":{}}}],["src/modules/admin/admin.service.ts:25",{"_index":92,"title":{},"body":{"injectables/AdminService.html":{}}}],["src/modules/admin/admin.service.ts:8",{"_index":91,"title":{},"body":{"injectables/AdminService.html":{}}}],["src/modules/admin/models/changelog.data.model.ts",{"_index":643,"title":{},"body":{"classes/ChangelogAuthor.html":{},"coverage.html":{}}}],["src/modules/admin/models/changelog.data.model.ts:12",{"_index":644,"title":{},"body":{"classes/ChangelogAuthor.html":{}}}],["src/modules/admin/models/changelog.data.model.ts:15",{"_index":646,"title":{},"body":{"classes/ChangelogAuthor.html":{}}}],["src/modules/admin/models/changelog.data.model.ts:9",{"_index":645,"title":{},"body":{"classes/ChangelogAuthor.html":{}}}],["src/modules/admin/models/changelog.model.ts",{"_index":647,"title":{},"body":{"classes/ChangelogModel.html":{},"coverage.html":{}}}],["src/modules/admin/models/changelog.model.ts:11",{"_index":658,"title":{},"body":{"classes/ChangelogModel.html":{}}}],["src/modules/admin/models/changelog.model.ts:14",{"_index":660,"title":{},"body":{"classes/ChangelogModel.html":{}}}],["src/modules/admin/models/changelog.model.ts:17",{"_index":656,"title":{},"body":{"classes/ChangelogModel.html":{}}}],["src/modules/admin/models/changelog.model.ts:20",{"_index":653,"title":{},"body":{"classes/ChangelogModel.html":{}}}],["src/modules/admin/models/changelog.model.ts:23",{"_index":651,"title":{},"body":{"classes/ChangelogModel.html":{}}}],["src/modules/market/dto/buyer.add.dto.ts",{"_index":602,"title":{},"body":{"classes/BuyerAddMarketDto.html":{},"coverage.html":{}}}],["src/modules/market/dto/buyer.add.dto.ts:13",{"_index":610,"title":{},"body":{"classes/BuyerAddMarketDto.html":{}}}],["src/modules/market/dto/buyer.add.dto.ts:16",{"_index":605,"title":{},"body":{"classes/BuyerAddMarketDto.html":{}}}],["src/modules/market/dto/buyer.add.dto.ts:20",{"_index":607,"title":{},"body":{"classes/BuyerAddMarketDto.html":{}}}],["src/modules/market/dto/buyer.add.dto.ts:9",{"_index":608,"title":{},"body":{"classes/BuyerAddMarketDto.html":{}}}],["src/modules/market/dto/buyer.remove.dto.ts",{"_index":639,"title":{},"body":{"classes/BuyerRemoveMarketDto.html":{},"coverage.html":{}}}],["src/modules/market/dto/buyer.remove.dto.ts:10",{"_index":641,"title":{},"body":{"classes/BuyerRemoveMarketDto.html":{}}}],["src/modules/market/dto/buyer.remove.dto.ts:6",{"_index":640,"title":{},"body":{"classes/BuyerRemoveMarketDto.html":{}}}],["src/modules/market/dto/comment.add.dto.ts",{"_index":670,"title":{},"body":{"classes/CommentMarketDto.html":{},"coverage.html":{}}}],["src/modules/market/dto/comment.add.dto.ts:13",{"_index":675,"title":{},"body":{"classes/CommentMarketDto.html":{}}}],["src/modules/market/dto/comment.add.dto.ts:16",{"_index":672,"title":{},"body":{"classes/CommentMarketDto.html":{}}}],["src/modules/market/dto/comment.add.dto.ts:20",{"_index":673,"title":{},"body":{"classes/CommentMarketDto.html":{}}}],["src/modules/market/dto/comment.add.dto.ts:24",{"_index":671,"title":{},"body":{"classes/CommentMarketDto.html":{}}}],["src/modules/market/dto/comment.add.dto.ts:9",{"_index":674,"title":{},"body":{"classes/CommentMarketDto.html":{}}}],["src/modules/market/dto/comment.remove.dto.ts",{"_index":678,"title":{},"body":{"classes/CommentRemoveMarketDto.html":{},"coverage.html":{}}}],["src/modules/market/dto/comment.remove.dto.ts:10",{"_index":679,"title":{},"body":{"classes/CommentRemoveMarketDto.html":{}}}],["src/modules/market/dto/comment.remove.dto.ts:6",{"_index":680,"title":{},"body":{"classes/CommentRemoveMarketDto.html":{}}}],["src/modules/market/dto/reaction.add.dto.ts",{"_index":1123,"title":{},"body":{"classes/ReactionAddMarketDto.html":{},"coverage.html":{}}}],["src/modules/market/dto/reaction.add.dto.ts:13",{"_index":1128,"title":{},"body":{"classes/ReactionAddMarketDto.html":{}}}],["src/modules/market/dto/reaction.add.dto.ts:17",{"_index":1124,"title":{},"body":{"classes/ReactionAddMarketDto.html":{}}}],["src/modules/market/dto/reaction.add.dto.ts:21",{"_index":1125,"title":{},"body":{"classes/ReactionAddMarketDto.html":{}}}],["src/modules/market/dto/reaction.add.dto.ts:25",{"_index":1127,"title":{},"body":{"classes/ReactionAddMarketDto.html":{}}}],["src/modules/market/dto/reaction.add.dto.ts:9",{"_index":1126,"title":{},"body":{"classes/ReactionAddMarketDto.html":{}}}],["src/modules/market/dto/reaction.remove.dto.ts",{"_index":1129,"title":{},"body":{"classes/ReactionRemoveMarketDto.html":{},"coverage.html":{}}}],["src/modules/market/dto/reaction.remove.dto.ts:10",{"_index":1131,"title":{},"body":{"classes/ReactionRemoveMarketDto.html":{}}}],["src/modules/market/dto/reaction.remove.dto.ts:6",{"_index":1130,"title":{},"body":{"classes/ReactionRemoveMarketDto.html":{}}}],["src/modules/market/market.controller.ts",{"_index":862,"title":{},"body":{"controllers/MarketController.html":{},"coverage.html":{}}}],["src/modules/market/market.controller.ts:100",{"_index":881,"title":{},"body":{"controllers/MarketController.html":{}}}],["src/modules/market/market.controller.ts:121",{"_index":897,"title":{},"body":{"controllers/MarketController.html":{}}}],["src/modules/market/market.controller.ts:144",{"_index":894,"title":{},"body":{"controllers/MarketController.html":{}}}],["src/modules/market/market.controller.ts:165",{"_index":901,"title":{},"body":{"controllers/MarketController.html":{}}}],["src/modules/market/market.controller.ts:36",{"_index":877,"title":{},"body":{"controllers/MarketController.html":{}}}],["src/modules/market/market.controller.ts:55",{"_index":890,"title":{},"body":{"controllers/MarketController.html":{}}}],["src/modules/market/market.controller.ts:68",{"_index":886,"title":{},"body":{"controllers/MarketController.html":{}}}],["src/modules/market/market.controller.ts:81",{"_index":873,"title":{},"body":{"controllers/MarketController.html":{}}}],["src/modules/market/market.module.ts",{"_index":968,"title":{},"body":{"modules/MarketModule.html":{}}}],["src/modules/market/market.service.ts",{"_index":971,"title":{},"body":{"injectables/MarketService.html":{},"coverage.html":{}}}],["src/modules/market/market.service.ts:146",{"_index":976,"title":{},"body":{"injectables/MarketService.html":{}}}],["src/modules/market/market.service.ts:198",{"_index":977,"title":{},"body":{"injectables/MarketService.html":{}}}],["src/modules/market/market.service.ts:22",{"_index":974,"title":{},"body":{"injectables/MarketService.html":{}}}],["src/modules/market/market.service.ts:251",{"_index":979,"title":{},"body":{"injectables/MarketService.html":{}}}],["src/modules/market/market.service.ts:30",{"_index":978,"title":{},"body":{"injectables/MarketService.html":{}}}],["src/modules/market/market.service.ts:304",{"_index":985,"title":{},"body":{"injectables/MarketService.html":{}}}],["src/modules/market/market.service.ts:377",{"_index":984,"title":{},"body":{"injectables/MarketService.html":{}}}],["src/modules/market/market.service.ts:407",{"_index":986,"title":{},"body":{"injectables/MarketService.html":{}}}],["src/modules/market/market.service.ts:48",{"_index":983,"title":{},"body":{"injectables/MarketService.html":{}}}],["src/modules/market/market.service.ts:85",{"_index":981,"title":{},"body":{"injectables/MarketService.html":{}}}],["src/modules/market/models/market.data.model.ts",{"_index":614,"title":{},"body":{"classes/BuyerMarket.html":{},"classes/CommentMarket.html":{},"classes/DiscountMarket.html":{},"classes/ReactionsMarket.html":{},"coverage.html":{}}}],["src/modules/market/models/market.data.model.ts:17",{"_index":619,"title":{},"body":{"classes/BuyerMarket.html":{}}}],["src/modules/market/models/market.data.model.ts:20",{"_index":616,"title":{},"body":{"classes/BuyerMarket.html":{}}}],["src/modules/market/models/market.data.model.ts:23",{"_index":617,"title":{},"body":{"classes/BuyerMarket.html":{}}}],["src/modules/market/models/market.data.model.ts:31",{"_index":665,"title":{},"body":{"classes/CommentMarket.html":{}}}],["src/modules/market/models/market.data.model.ts:34",{"_index":667,"title":{},"body":{"classes/CommentMarket.html":{}}}],["src/modules/market/models/market.data.model.ts:37",{"_index":668,"title":{},"body":{"classes/CommentMarket.html":{}}}],["src/modules/market/models/market.data.model.ts:40",{"_index":666,"title":{},"body":{"classes/CommentMarket.html":{}}}],["src/modules/market/models/market.data.model.ts:48",{"_index":1146,"title":{},"body":{"classes/ReactionsMarket.html":{}}}],["src/modules/market/models/market.data.model.ts:51",{"_index":1143,"title":{},"body":{"classes/ReactionsMarket.html":{}}}],["src/modules/market/models/market.data.model.ts:54",{"_index":1144,"title":{},"body":{"classes/ReactionsMarket.html":{}}}],["src/modules/market/models/market.data.model.ts:57",{"_index":1145,"title":{},"body":{"classes/ReactionsMarket.html":{}}}],["src/modules/market/models/market.data.model.ts:6",{"_index":727,"title":{},"body":{"classes/DiscountMarket.html":{}}}],["src/modules/market/models/market.data.model.ts:9",{"_index":726,"title":{},"body":{"classes/DiscountMarket.html":{}}}],["src/modules/market/models/market.model.ts",{"_index":932,"title":{},"body":{"classes/MarketModel.html":{},"coverage.html":{}}}],["src/modules/market/models/market.model.ts:38",{"_index":948,"title":{},"body":{"classes/MarketModel.html":{}}}],["src/modules/market/models/market.model.ts:41",{"_index":943,"title":{},"body":{"classes/MarketModel.html":{}}}],["src/modules/market/models/market.model.ts:44",{"_index":950,"title":{},"body":{"classes/MarketModel.html":{}}}],["src/modules/market/models/market.model.ts:47",{"_index":937,"title":{},"body":{"classes/MarketModel.html":{}}}],["src/modules/market/models/market.model.ts:50",{"_index":952,"title":{},"body":{"classes/MarketModel.html":{}}}],["src/modules/market/models/market.model.ts:53",{"_index":945,"title":{},"body":{"classes/MarketModel.html":{}}}],["src/modules/market/models/market.model.ts:56",{"_index":947,"title":{},"body":{"classes/MarketModel.html":{}}}],["src/modules/market/models/market.model.ts:59",{"_index":946,"title":{},"body":{"classes/MarketModel.html":{}}}],["src/modules/market/models/market.model.ts:62",{"_index":944,"title":{},"body":{"classes/MarketModel.html":{}}}],["src/modules/market/models/market.model.ts:65",{"_index":939,"title":{},"body":{"classes/MarketModel.html":{}}}],["src/modules/market/models/market.model.ts:68",{"_index":940,"title":{},"body":{"classes/MarketModel.html":{}}}],["src/modules/market/models/market.model.ts:71",{"_index":951,"title":{},"body":{"classes/MarketModel.html":{}}}],["src/modules/market/models/market.model.ts:77",{"_index":936,"title":{},"body":{"classes/MarketModel.html":{}}}],["src/modules/transaction/dto/transaction.delete.dto.ts",{"_index":1258,"title":{},"body":{"classes/TransactionDeleteDto.html":{},"coverage.html":{}}}],["src/modules/transaction/dto/transaction.delete.dto.ts:10",{"_index":1261,"title":{},"body":{"classes/TransactionDeleteDto.html":{}}}],["src/modules/transaction/dto/transaction.delete.dto.ts:14",{"_index":1260,"title":{},"body":{"classes/TransactionDeleteDto.html":{}}}],["src/modules/transaction/dto/transaction.delete.dto.ts:6",{"_index":1259,"title":{},"body":{"classes/TransactionDeleteDto.html":{}}}],["src/modules/transaction/models/transaction.model.ts",{"_index":1265,"title":{},"body":{"classes/TransactionModel.html":{},"coverage.html":{}}}],["src/modules/transaction/models/transaction.model.ts:16",{"_index":1269,"title":{},"body":{"classes/TransactionModel.html":{}}}],["src/modules/transaction/models/transaction.model.ts:22",{"_index":1266,"title":{},"body":{"classes/TransactionModel.html":{}}}],["src/modules/transaction/models/transaction.model.ts:28",{"_index":1270,"title":{},"body":{"classes/TransactionModel.html":{}}}],["src/modules/transaction/models/transaction.model.ts:31",{"_index":1267,"title":{},"body":{"classes/TransactionModel.html":{}}}],["src/modules/transaction/models/transaction.model.ts:34",{"_index":1268,"title":{},"body":{"classes/TransactionModel.html":{}}}],["src/modules/transaction/transaction.controller.ts",{"_index":1232,"title":{},"body":{"controllers/TransactionController.html":{},"coverage.html":{}}}],["src/modules/transaction/transaction.controller.ts:29",{"_index":1245,"title":{},"body":{"controllers/TransactionController.html":{}}}],["src/modules/transaction/transaction.controller.ts:35",{"_index":1239,"title":{},"body":{"controllers/TransactionController.html":{}}}],["src/modules/transaction/transaction.controller.ts:57",{"_index":1241,"title":{},"body":{"controllers/TransactionController.html":{}}}],["src/modules/transaction/transaction.module.ts",{"_index":1276,"title":{},"body":{"modules/TransactionModule.html":{}}}],["src/modules/transaction/transaction.service.ts",{"_index":1280,"title":{},"body":{"injectables/TransactionService.html":{},"coverage.html":{}}}],["src/modules/transaction/transaction.service.ts:17",{"_index":1283,"title":{},"body":{"injectables/TransactionService.html":{}}}],["src/modules/transaction/transaction.service.ts:29",{"_index":1284,"title":{},"body":{"injectables/TransactionService.html":{}}}],["src/modules/transaction/transaction.service.ts:299",{"_index":1285,"title":{},"body":{"injectables/TransactionService.html":{}}}],["src/modules/transaction/transaction.service.ts:93",{"_index":1286,"title":{},"body":{"injectables/TransactionService.html":{}}}],["src/modules/user/dto/reactions.dto.ts",{"_index":1136,"title":{},"body":{"classes/ReactionsDto.html":{},"coverage.html":{}}}],["src/modules/user/dto/reactions.dto.ts:10",{"_index":1140,"title":{},"body":{"classes/ReactionsDto.html":{}}}],["src/modules/user/dto/reactions.dto.ts:14",{"_index":1142,"title":{},"body":{"classes/ReactionsDto.html":{}}}],["src/modules/user/dto/reactions.dto.ts:6",{"_index":1141,"title":{},"body":{"classes/ReactionsDto.html":{}}}],["src/modules/user/dto/update",{"_index":1310,"title":{},"body":{"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["src/modules/user/dto/user.dto.data.ts",{"_index":728,"title":{},"body":{"classes/Email.html":{},"classes/Market.html":{},"classes/Membership.html":{},"classes/Notifications.html":{},"classes/Online.html":{},"classes/Password.html":{},"classes/Rank.html":{},"classes/Reactions.html":{},"classes/Security.html":{},"classes/Sessions.html":{},"classes/Stats.html":{},"classes/Suspension.html":{},"classes/Transaction.html":{},"classes/TransactionBuyer.html":{},"coverage.html":{}}}],["src/modules/user/dto/user.dto.data.ts:10",{"_index":859,"title":{},"body":{"classes/Market.html":{}}}],["src/modules/user/dto/user.dto.data.ts:103",{"_index":732,"title":{},"body":{"classes/Email.html":{}}}],["src/modules/user/dto/user.dto.data.ts:105",{"_index":734,"title":{},"body":{"classes/Email.html":{}}}],["src/modules/user/dto/user.dto.data.ts:107",{"_index":735,"title":{},"body":{"classes/Email.html":{}}}],["src/modules/user/dto/user.dto.data.ts:109",{"_index":731,"title":{},"body":{"classes/Email.html":{}}}],["src/modules/user/dto/user.dto.data.ts:113",{"_index":1092,"title":{},"body":{"classes/Password.html":{}}}],["src/modules/user/dto/user.dto.data.ts:115",{"_index":1093,"title":{},"body":{"classes/Password.html":{}}}],["src/modules/user/dto/user.dto.data.ts:117",{"_index":1094,"title":{},"body":{"classes/Password.html":{}}}],["src/modules/user/dto/user.dto.data.ts:119",{"_index":1091,"title":{},"body":{"classes/Password.html":{}}}],["src/modules/user/dto/user.dto.data.ts:12",{"_index":854,"title":{},"body":{"classes/Market.html":{}}}],["src/modules/user/dto/user.dto.data.ts:123",{"_index":1229,"title":{},"body":{"classes/TransactionBuyer.html":{}}}],["src/modules/user/dto/user.dto.data.ts:125",{"_index":1230,"title":{},"body":{"classes/TransactionBuyer.html":{}}}],["src/modules/user/dto/user.dto.data.ts:127",{"_index":1228,"title":{},"body":{"classes/TransactionBuyer.html":{}}}],["src/modules/user/dto/user.dto.data.ts:131",{"_index":1211,"title":{},"body":{"classes/Transaction.html":{}}}],["src/modules/user/dto/user.dto.data.ts:133",{"_index":1217,"title":{},"body":{"classes/Transaction.html":{}}}],["src/modules/user/dto/user.dto.data.ts:135",{"_index":1212,"title":{},"body":{"classes/Transaction.html":{}}}],["src/modules/user/dto/user.dto.data.ts:137",{"_index":1214,"title":{},"body":{"classes/Transaction.html":{}}}],["src/modules/user/dto/user.dto.data.ts:139",{"_index":1218,"title":{},"body":{"classes/Transaction.html":{}}}],["src/modules/user/dto/user.dto.data.ts:14",{"_index":856,"title":{},"body":{"classes/Market.html":{}}}],["src/modules/user/dto/user.dto.data.ts:141",{"_index":1216,"title":{},"body":{"classes/Transaction.html":{}}}],["src/modules/user/dto/user.dto.data.ts:143",{"_index":1213,"title":{},"body":{"classes/Transaction.html":{}}}],["src/modules/user/dto/user.dto.data.ts:145",{"_index":1215,"title":{},"body":{"classes/Transaction.html":{}}}],["src/modules/user/dto/user.dto.data.ts:16",{"_index":857,"title":{},"body":{"classes/Market.html":{}}}],["src/modules/user/dto/user.dto.data.ts:2",{"_index":853,"title":{},"body":{"classes/Market.html":{}}}],["src/modules/user/dto/user.dto.data.ts:20",{"_index":1132,"title":{},"body":{"classes/Reactions.html":{}}}],["src/modules/user/dto/user.dto.data.ts:22",{"_index":1133,"title":{},"body":{"classes/Reactions.html":{}}}],["src/modules/user/dto/user.dto.data.ts:26",{"_index":1208,"title":{},"body":{"classes/Suspension.html":{}}}],["src/modules/user/dto/user.dto.data.ts:28",{"_index":1207,"title":{},"body":{"classes/Suspension.html":{}}}],["src/modules/user/dto/user.dto.data.ts:32",{"_index":1200,"title":{},"body":{"classes/Stats.html":{}}}],["src/modules/user/dto/user.dto.data.ts:34",{"_index":1201,"title":{},"body":{"classes/Stats.html":{}}}],["src/modules/user/dto/user.dto.data.ts:36",{"_index":1199,"title":{},"body":{"classes/Stats.html":{}}}],["src/modules/user/dto/user.dto.data.ts:38",{"_index":1198,"title":{},"body":{"classes/Stats.html":{}}}],["src/modules/user/dto/user.dto.data.ts:4",{"_index":858,"title":{},"body":{"classes/Market.html":{}}}],["src/modules/user/dto/user.dto.data.ts:40",{"_index":1197,"title":{},"body":{"classes/Stats.html":{}}}],["src/modules/user/dto/user.dto.data.ts:44",{"_index":1152,"title":{},"body":{"classes/Security.html":{}}}],["src/modules/user/dto/user.dto.data.ts:46",{"_index":1147,"title":{},"body":{"classes/Security.html":{}}}],["src/modules/user/dto/user.dto.data.ts:48",{"_index":1148,"title":{},"body":{"classes/Security.html":{}}}],["src/modules/user/dto/user.dto.data.ts:50",{"_index":1149,"title":{},"body":{"classes/Security.html":{}}}],["src/modules/user/dto/user.dto.data.ts:52",{"_index":1150,"title":{},"body":{"classes/Security.html":{}}}],["src/modules/user/dto/user.dto.data.ts:54",{"_index":1151,"title":{},"body":{"classes/Security.html":{}}}],["src/modules/user/dto/user.dto.data.ts:56",{"_index":1153,"title":{},"body":{"classes/Security.html":{}}}],["src/modules/user/dto/user.dto.data.ts:6",{"_index":860,"title":{},"body":{"classes/Market.html":{}}}],["src/modules/user/dto/user.dto.data.ts:60",{"_index":1074,"title":{},"body":{"classes/Membership.html":{}}}],["src/modules/user/dto/user.dto.data.ts:62",{"_index":1073,"title":{},"body":{"classes/Membership.html":{}}}],["src/modules/user/dto/user.dto.data.ts:64",{"_index":1075,"title":{},"body":{"classes/Membership.html":{}}}],["src/modules/user/dto/user.dto.data.ts:68",{"_index":1101,"title":{},"body":{"classes/Rank.html":{}}}],["src/modules/user/dto/user.dto.data.ts:70",{"_index":1100,"title":{},"body":{"classes/Rank.html":{}}}],["src/modules/user/dto/user.dto.data.ts:72",{"_index":1099,"title":{},"body":{"classes/Rank.html":{}}}],["src/modules/user/dto/user.dto.data.ts:76",{"_index":1081,"title":{},"body":{"classes/Notifications.html":{}}}],["src/modules/user/dto/user.dto.data.ts:78",{"_index":1079,"title":{},"body":{"classes/Notifications.html":{}}}],["src/modules/user/dto/user.dto.data.ts:8",{"_index":855,"title":{},"body":{"classes/Market.html":{}}}],["src/modules/user/dto/user.dto.data.ts:80",{"_index":1080,"title":{},"body":{"classes/Notifications.html":{}}}],["src/modules/user/dto/user.dto.data.ts:84",{"_index":1087,"title":{},"body":{"classes/Online.html":{}}}],["src/modules/user/dto/user.dto.data.ts:86",{"_index":1086,"title":{},"body":{"classes/Online.html":{}}}],["src/modules/user/dto/user.dto.data.ts:88",{"_index":1085,"title":{},"body":{"classes/Online.html":{}}}],["src/modules/user/dto/user.dto.data.ts:93",{"_index":1182,"title":{},"body":{"classes/Sessions.html":{}}}],["src/modules/user/dto/user.dto.data.ts:95",{"_index":1183,"title":{},"body":{"classes/Sessions.html":{}}}],["src/modules/user/dto/user.dto.data.ts:97",{"_index":1184,"title":{},"body":{"classes/Sessions.html":{}}}],["src/modules/user/dto/user.dto.data.ts:99",{"_index":1185,"title":{},"body":{"classes/Sessions.html":{}}}],["src/modules/user/dto/user.dto.ts",{"_index":1396,"title":{},"body":{"classes/UserDto.html":{},"coverage.html":{}}}],["src/modules/user/dto/user.dto.ts:19",{"_index":1401,"title":{},"body":{"classes/UserDto.html":{}}}],["src/modules/user/dto/user.dto.ts:21",{"_index":1407,"title":{},"body":{"classes/UserDto.html":{}}}],["src/modules/user/dto/user.dto.ts:23",{"_index":1404,"title":{},"body":{"classes/UserDto.html":{}}}],["src/modules/user/dto/user.dto.ts:25",{"_index":1423,"title":{},"body":{"classes/UserDto.html":{}}}],["src/modules/user/dto/user.dto.ts:27",{"_index":1411,"title":{},"body":{"classes/UserDto.html":{}}}],["src/modules/user/dto/user.dto.ts:29",{"_index":1409,"title":{},"body":{"classes/UserDto.html":{}}}],["src/modules/user/dto/user.dto.ts:31",{"_index":1418,"title":{},"body":{"classes/UserDto.html":{}}}],["src/modules/user/dto/user.dto.ts:33",{"_index":1412,"title":{},"body":{"classes/UserDto.html":{}}}],["src/modules/user/dto/user.dto.ts:35",{"_index":1402,"title":{},"body":{"classes/UserDto.html":{}}}],["src/modules/user/dto/user.dto.ts:37",{"_index":1405,"title":{},"body":{"classes/UserDto.html":{}}}],["src/modules/user/dto/user.dto.ts:39",{"_index":1403,"title":{},"body":{"classes/UserDto.html":{}}}],["src/modules/user/dto/user.dto.ts:41",{"_index":1421,"title":{},"body":{"classes/UserDto.html":{}}}],["src/modules/user/dto/user.dto.ts:43",{"_index":1419,"title":{},"body":{"classes/UserDto.html":{}}}],["src/modules/user/dto/user.dto.ts:45",{"_index":1416,"title":{},"body":{"classes/UserDto.html":{}}}],["src/modules/user/dto/user.dto.ts:47",{"_index":1420,"title":{},"body":{"classes/UserDto.html":{}}}],["src/modules/user/dto/user.dto.ts:49",{"_index":1413,"title":{},"body":{"classes/UserDto.html":{}}}],["src/modules/user/dto/user.dto.ts:51",{"_index":1414,"title":{},"body":{"classes/UserDto.html":{}}}],["src/modules/user/dto/user.dto.ts:53",{"_index":1408,"title":{},"body":{"classes/UserDto.html":{}}}],["src/modules/user/dto/user.dto.ts:55",{"_index":1410,"title":{},"body":{"classes/UserDto.html":{}}}],["src/modules/user/dto/user.dto.ts:57",{"_index":1422,"title":{},"body":{"classes/UserDto.html":{}}}],["src/modules/user/dto/user.dto.ts:59",{"_index":1406,"title":{},"body":{"classes/UserDto.html":{}}}],["src/modules/user/dto/user.dto.ts:61",{"_index":1415,"title":{},"body":{"classes/UserDto.html":{}}}],["src/modules/user/dto/user.dto.ts:63",{"_index":1417,"title":{},"body":{"classes/UserDto.html":{}}}],["src/modules/user/models/user.model.data.ts",{"_index":768,"title":{},"body":{"classes/Email-1.html":{},"classes/Membership-1.html":{},"classes/Notifications-1.html":{},"classes/Online-1.html":{},"classes/Password-1.html":{},"classes/Rank-1.html":{},"classes/Reactions-1.html":{},"classes/Security-1.html":{},"classes/Sessions-1.html":{},"classes/Stats-1.html":{},"classes/Suspension-1.html":{},"classes/Transaction-1.html":{},"classes/TransactionInfo.html":{},"coverage.html":{}}}],["src/modules/user/models/user.model.data.ts:100",{"_index":1083,"title":{},"body":{"classes/Notifications-1.html":{}}}],["src/modules/user/models/user.model.data.ts:105",{"_index":1090,"title":{},"body":{"classes/Online-1.html":{}}}],["src/modules/user/models/user.model.data.ts:108",{"_index":1089,"title":{},"body":{"classes/Online-1.html":{}}}],["src/modules/user/models/user.model.data.ts:111",{"_index":1088,"title":{},"body":{"classes/Online-1.html":{}}}],["src/modules/user/models/user.model.data.ts:116",{"_index":1186,"title":{},"body":{"classes/Sessions-1.html":{}}}],["src/modules/user/models/user.model.data.ts:119",{"_index":1187,"title":{},"body":{"classes/Sessions-1.html":{}}}],["src/modules/user/models/user.model.data.ts:122",{"_index":1188,"title":{},"body":{"classes/Sessions-1.html":{}}}],["src/modules/user/models/user.model.data.ts:125",{"_index":1189,"title":{},"body":{"classes/Sessions-1.html":{}}}],["src/modules/user/models/user.model.data.ts:13",{"_index":1134,"title":{},"body":{"classes/Reactions-1.html":{}}}],["src/modules/user/models/user.model.data.ts:130",{"_index":772,"title":{},"body":{"classes/Email-1.html":{}}}],["src/modules/user/models/user.model.data.ts:133",{"_index":773,"title":{},"body":{"classes/Email-1.html":{}}}],["src/modules/user/models/user.model.data.ts:136",{"_index":774,"title":{},"body":{"classes/Email-1.html":{}}}],["src/modules/user/models/user.model.data.ts:139",{"_index":770,"title":{},"body":{"classes/Email-1.html":{}}}],["src/modules/user/models/user.model.data.ts:144",{"_index":1096,"title":{},"body":{"classes/Password-1.html":{}}}],["src/modules/user/models/user.model.data.ts:147",{"_index":1097,"title":{},"body":{"classes/Password-1.html":{}}}],["src/modules/user/models/user.model.data.ts:150",{"_index":1098,"title":{},"body":{"classes/Password-1.html":{}}}],["src/modules/user/models/user.model.data.ts:153",{"_index":1095,"title":{},"body":{"classes/Password-1.html":{}}}],["src/modules/user/models/user.model.data.ts:158",{"_index":1263,"title":{},"body":{"classes/TransactionInfo.html":{}}}],["src/modules/user/models/user.model.data.ts:161",{"_index":1264,"title":{},"body":{"classes/TransactionInfo.html":{}}}],["src/modules/user/models/user.model.data.ts:164",{"_index":1262,"title":{},"body":{"classes/TransactionInfo.html":{}}}],["src/modules/user/models/user.model.data.ts:169",{"_index":1219,"title":{},"body":{"classes/Transaction-1.html":{}}}],["src/modules/user/models/user.model.data.ts:172",{"_index":1221,"title":{},"body":{"classes/Transaction-1.html":{}}}],["src/modules/user/models/user.model.data.ts:175",{"_index":1226,"title":{},"body":{"classes/Transaction-1.html":{}}}],["src/modules/user/models/user.model.data.ts:178",{"_index":1225,"title":{},"body":{"classes/Transaction-1.html":{}}}],["src/modules/user/models/user.model.data.ts:18",{"_index":1210,"title":{},"body":{"classes/Suspension-1.html":{}}}],["src/modules/user/models/user.model.data.ts:181",{"_index":1227,"title":{},"body":{"classes/Transaction-1.html":{}}}],["src/modules/user/models/user.model.data.ts:184",{"_index":1224,"title":{},"body":{"classes/Transaction-1.html":{}}}],["src/modules/user/models/user.model.data.ts:187",{"_index":1222,"title":{},"body":{"classes/Transaction-1.html":{}}}],["src/modules/user/models/user.model.data.ts:190",{"_index":1223,"title":{},"body":{"classes/Transaction-1.html":{}}}],["src/modules/user/models/user.model.data.ts:27",{"_index":1209,"title":{},"body":{"classes/Suspension-1.html":{}}}],["src/modules/user/models/user.model.data.ts:32",{"_index":1205,"title":{},"body":{"classes/Stats-1.html":{}}}],["src/modules/user/models/user.model.data.ts:35",{"_index":1206,"title":{},"body":{"classes/Stats-1.html":{}}}],["src/modules/user/models/user.model.data.ts:38",{"_index":1204,"title":{},"body":{"classes/Stats-1.html":{}}}],["src/modules/user/models/user.model.data.ts:41",{"_index":1203,"title":{},"body":{"classes/Stats-1.html":{}}}],["src/modules/user/models/user.model.data.ts:44",{"_index":1202,"title":{},"body":{"classes/Stats-1.html":{}}}],["src/modules/user/models/user.model.data.ts:49",{"_index":1159,"title":{},"body":{"classes/Security-1.html":{}}}],["src/modules/user/models/user.model.data.ts:52",{"_index":1154,"title":{},"body":{"classes/Security-1.html":{}}}],["src/modules/user/models/user.model.data.ts:55",{"_index":1155,"title":{},"body":{"classes/Security-1.html":{}}}],["src/modules/user/models/user.model.data.ts:58",{"_index":1156,"title":{},"body":{"classes/Security-1.html":{}}}],["src/modules/user/models/user.model.data.ts:61",{"_index":1157,"title":{},"body":{"classes/Security-1.html":{}}}],["src/modules/user/models/user.model.data.ts:64",{"_index":1158,"title":{},"body":{"classes/Security-1.html":{}}}],["src/modules/user/models/user.model.data.ts:67",{"_index":1160,"title":{},"body":{"classes/Security-1.html":{}}}],["src/modules/user/models/user.model.data.ts:72",{"_index":1077,"title":{},"body":{"classes/Membership-1.html":{}}}],["src/modules/user/models/user.model.data.ts:75",{"_index":1076,"title":{},"body":{"classes/Membership-1.html":{}}}],["src/modules/user/models/user.model.data.ts:78",{"_index":1078,"title":{},"body":{"classes/Membership-1.html":{}}}],["src/modules/user/models/user.model.data.ts:83",{"_index":1104,"title":{},"body":{"classes/Rank-1.html":{}}}],["src/modules/user/models/user.model.data.ts:86",{"_index":1103,"title":{},"body":{"classes/Rank-1.html":{}}}],["src/modules/user/models/user.model.data.ts:89",{"_index":1102,"title":{},"body":{"classes/Rank-1.html":{}}}],["src/modules/user/models/user.model.data.ts:94",{"_index":1084,"title":{},"body":{"classes/Notifications-1.html":{}}}],["src/modules/user/models/user.model.data.ts:97",{"_index":1082,"title":{},"body":{"classes/Notifications-1.html":{}}}],["src/modules/user/models/user.model.ts",{"_index":1425,"title":{},"body":{"classes/UserModel.html":{},"coverage.html":{}}}],["src/modules/user/models/user.model.ts:102",{"_index":1434,"title":{},"body":{"classes/UserModel.html":{}}}],["src/modules/user/models/user.model.ts:105",{"_index":1443,"title":{},"body":{"classes/UserModel.html":{}}}],["src/modules/user/models/user.model.ts:108",{"_index":1456,"title":{},"body":{"classes/UserModel.html":{}}}],["src/modules/user/models/user.model.ts:111",{"_index":1449,"title":{},"body":{"classes/UserModel.html":{}}}],["src/modules/user/models/user.model.ts:114",{"_index":1451,"title":{},"body":{"classes/UserModel.html":{}}}],["src/modules/user/models/user.model.ts:25",{"_index":1426,"title":{},"body":{"classes/UserModel.html":{}}}],["src/modules/user/models/user.model.ts:32",{"_index":1433,"title":{},"body":{"classes/UserModel.html":{}}}],["src/modules/user/models/user.model.ts:35",{"_index":1430,"title":{},"body":{"classes/UserModel.html":{}}}],["src/modules/user/models/user.model.ts:44",{"_index":1458,"title":{},"body":{"classes/UserModel.html":{}}}],["src/modules/user/models/user.model.ts:47",{"_index":1444,"title":{},"body":{"classes/UserModel.html":{}}}],["src/modules/user/models/user.model.ts:55",{"_index":1442,"title":{},"body":{"classes/UserModel.html":{}}}],["src/modules/user/models/user.model.ts:62",{"_index":1452,"title":{},"body":{"classes/UserModel.html":{}}}],["src/modules/user/models/user.model.ts:69",{"_index":1446,"title":{},"body":{"classes/UserModel.html":{}}}],["src/modules/user/models/user.model.ts:75",{"_index":1428,"title":{},"body":{"classes/UserModel.html":{}}}],["src/modules/user/models/user.model.ts:78",{"_index":1432,"title":{},"body":{"classes/UserModel.html":{}}}],["src/modules/user/models/user.model.ts:81",{"_index":1429,"title":{},"body":{"classes/UserModel.html":{}}}],["src/modules/user/models/user.model.ts:84",{"_index":1455,"title":{},"body":{"classes/UserModel.html":{}}}],["src/modules/user/models/user.model.ts:87",{"_index":1453,"title":{},"body":{"classes/UserModel.html":{}}}],["src/modules/user/models/user.model.ts:90",{"_index":1450,"title":{},"body":{"classes/UserModel.html":{}}}],["src/modules/user/models/user.model.ts:93",{"_index":1454,"title":{},"body":{"classes/UserModel.html":{}}}],["src/modules/user/models/user.model.ts:96",{"_index":1447,"title":{},"body":{"classes/UserModel.html":{}}}],["src/modules/user/models/user.model.ts:99",{"_index":1448,"title":{},"body":{"classes/UserModel.html":{}}}],["src/modules/user/user.controller.ts",{"_index":1316,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{}}}],["src/modules/user/user.controller.ts:139",{"_index":1327,"title":{},"body":{"controllers/UserController.html":{}}}],["src/modules/user/user.controller.ts:174",{"_index":1324,"title":{},"body":{"controllers/UserController.html":{}}}],["src/modules/user/user.controller.ts:194",{"_index":1337,"title":{},"body":{"controllers/UserController.html":{}}}],["src/modules/user/user.controller.ts:40",{"_index":1334,"title":{},"body":{"controllers/UserController.html":{}}}],["src/modules/user/user.controller.ts:48",{"_index":1340,"title":{},"body":{"controllers/UserController.html":{}}}],["src/modules/user/user.controller.ts:69",{"_index":1331,"title":{},"body":{"controllers/UserController.html":{}}}],["src/modules/user/user.controller.ts:89",{"_index":1330,"title":{},"body":{"controllers/UserController.html":{}}}],["src/modules/user/user.module.ts",{"_index":1464,"title":{},"body":{"modules/UserModule.html":{}}}],["src/modules/user/user.service.ts",{"_index":1467,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/modules/user/user.service.ts:100",{"_index":1479,"title":{},"body":{"injectables/UserService.html":{}}}],["src/modules/user/user.service.ts:120",{"_index":1488,"title":{},"body":{"injectables/UserService.html":{}}}],["src/modules/user/user.service.ts:20",{"_index":1472,"title":{},"body":{"injectables/UserService.html":{}}}],["src/modules/user/user.service.ts:213",{"_index":1483,"title":{},"body":{"injectables/UserService.html":{}}}],["src/modules/user/user.service.ts:224",{"_index":1487,"title":{},"body":{"injectables/UserService.html":{}}}],["src/modules/user/user.service.ts:28",{"_index":1478,"title":{},"body":{"injectables/UserService.html":{}}}],["src/modules/user/user.service.ts:304",{"_index":1474,"title":{},"body":{"injectables/UserService.html":{}}}],["src/modules/user/user.service.ts:355",{"_index":1481,"title":{},"body":{"injectables/UserService.html":{}}}],["src/modules/user/user.service.ts:375",{"_index":1476,"title":{},"body":{"injectables/UserService.html":{}}}],["standard",{"_index":1662,"title":{},"body":{"index.html":{}}}],["start",{"_index":1652,"title":{},"body":{"index.html":{}}}],["start:dev_",{"_index":1658,"title":{},"body":{"index.html":{}}}],["started",{"_index":1606,"title":{"index.html":{}},"body":{}}],["starting",{"_index":1296,"title":{},"body":{"injectables/TransactionService.html":{}}}],["statements",{"_index":1531,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":204,"title":{},"body":{"modules/AppModule.html":{}}}],["stats",{"_index":743,"title":{"classes/Stats.html":{},"classes/Stats-1.html":{}},"body":{"classes/Email.html":{},"classes/Email-1.html":{},"classes/Market.html":{},"classes/Membership.html":{},"classes/Membership-1.html":{},"classes/Notifications.html":{},"classes/Notifications-1.html":{},"classes/Online.html":{},"classes/Online-1.html":{},"classes/Password.html":{},"classes/Password-1.html":{},"classes/Rank.html":{},"classes/Rank-1.html":{},"classes/Reactions.html":{},"classes/Reactions-1.html":{},"classes/Security.html":{},"classes/Security-1.html":{},"classes/Sessions.html":{},"classes/Sessions-1.html":{},"classes/Stats.html":{},"classes/Stats-1.html":{},"classes/Suspension.html":{},"classes/Suspension-1.html":{},"classes/Transaction.html":{},"classes/Transaction-1.html":{},"classes/TransactionBuyer.html":{},"classes/TransactionInfo.html":{},"classes/UserDto.html":{},"classes/UserModel.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["status",{"_index":730,"title":{},"body":{"classes/Email.html":{},"classes/Email-1.html":{},"classes/Market.html":{},"classes/MarketModel.html":{},"injectables/MarketService.html":{},"classes/Membership.html":{},"classes/Membership-1.html":{},"classes/Notifications.html":{},"classes/Notifications-1.html":{},"classes/Online.html":{},"classes/Online-1.html":{},"classes/Password.html":{},"classes/Password-1.html":{},"classes/Rank.html":{},"classes/Rank-1.html":{},"classes/Reactions.html":{},"classes/Reactions-1.html":{},"classes/Security.html":{},"classes/Security-1.html":{},"classes/Sessions.html":{},"classes/Sessions-1.html":{},"classes/Stats.html":{},"classes/Stats-1.html":{},"classes/Suspension.html":{},"classes/Suspension-1.html":{},"classes/Transaction.html":{},"classes/Transaction-1.html":{},"classes/TransactionBuyer.html":{},"classes/TransactionInfo.html":{}}}],["statuscode",{"_index":56,"title":{},"body":{"controllers/AdminController.html":{},"controllers/AuthController.html":{},"controllers/MarketController.html":{},"controllers/TransactionController.html":{},"controllers/UserController.html":{}}}],["storage",{"_index":1361,"title":{},"body":{"controllers/UserController.html":{}}}],["strategies/jwt.strategy",{"_index":323,"title":{},"body":{"modules/AuthModule.html":{}}}],["strategy",{"_index":833,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["strict",{"_index":188,"title":{},"body":{"modules/AppModule.html":{}}}],["string",{"_index":25,"title":{},"body":{"controllers/AdminController.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BuyerAddMarketDto.html":{},"classes/BuyerMarket.html":{},"classes/BuyerRemoveMarketDto.html":{},"classes/ChangelogAuthor.html":{},"classes/ChangelogModel.html":{},"classes/CommentMarket.html":{},"classes/CommentMarketDto.html":{},"classes/CommentRemoveMarketDto.html":{},"classes/ConfigService.html":{},"classes/DiscountMarket.html":{},"classes/Email.html":{},"classes/Email-1.html":{},"classes/GeneralGateway.html":{},"interfaces/IJwtPayload.html":{},"classes/Market.html":{},"controllers/MarketController.html":{},"classes/MarketModel.html":{},"injectables/MarketService.html":{},"classes/Membership.html":{},"classes/Membership-1.html":{},"classes/Notifications.html":{},"classes/Notifications-1.html":{},"classes/Online.html":{},"classes/Online-1.html":{},"classes/Password.html":{},"classes/Password-1.html":{},"classes/Rank.html":{},"classes/Rank-1.html":{},"guards/RankGuard.html":{},"classes/ReactionAddMarketDto.html":{},"classes/ReactionRemoveMarketDto.html":{},"classes/Reactions.html":{},"classes/Reactions-1.html":{},"classes/ReactionsDto.html":{},"classes/ReactionsMarket.html":{},"classes/Security.html":{},"classes/Security-1.html":{},"classes/SecurityCode.html":{},"classes/SecurityDto.html":{},"classes/SecurityUpdateDto.html":{},"classes/Sessions.html":{},"classes/Sessions-1.html":{},"classes/SignInDto.html":{},"classes/Stats.html":{},"classes/Stats-1.html":{},"classes/Suspension.html":{},"classes/Suspension-1.html":{},"classes/Transaction.html":{},"classes/Transaction-1.html":{},"classes/TransactionBuyer.html":{},"controllers/TransactionController.html":{},"classes/TransactionDeleteDto.html":{},"classes/TransactionInfo.html":{},"classes/TransactionModel.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"classes/UserModel.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["structure",{"_index":1669,"title":{},"body":{"index.html":{}}}],["subject",{"_index":424,"title":{},"body":{"injectables/AuthService.html":{}}}],["submission",{"_index":573,"title":{},"body":{"injectables/AuthService.html":{}}}],["subscribemessage('message",{"_index":819,"title":{},"body":{"classes/GeneralGateway.html":{}}}],["successfully",{"_index":418,"title":{},"body":{"injectables/AuthService.html":{}}}],["sufficient",{"_index":851,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/UserService.html":{}}}],["super",{"_index":837,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["support",{"_index":1682,"title":{},"body":{"modules.html":{}}}],["suspension",{"_index":741,"title":{"classes/Suspension.html":{},"classes/Suspension-1.html":{}},"body":{"classes/Email.html":{},"classes/Email-1.html":{},"classes/Market.html":{},"classes/Membership.html":{},"classes/Membership-1.html":{},"classes/Notifications.html":{},"classes/Notifications-1.html":{},"classes/Online.html":{},"classes/Online-1.html":{},"classes/Password.html":{},"classes/Password-1.html":{},"classes/Rank.html":{},"classes/Rank-1.html":{},"classes/Reactions.html":{},"classes/Reactions-1.html":{},"classes/Security.html":{},"classes/Security-1.html":{},"classes/Sessions.html":{},"classes/Sessions-1.html":{},"classes/Stats.html":{},"classes/Stats-1.html":{},"classes/Suspension.html":{},"classes/Suspension-1.html":{},"classes/Transaction.html":{},"classes/Transaction-1.html":{},"classes/TransactionBuyer.html":{},"classes/TransactionInfo.html":{},"classes/UserDto.html":{},"classes/UserModel.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["svg",{"_index":1683,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":1013,"title":{},"body":{"injectables/MarketService.html":{}}}],["system",{"_index":778,"title":{},"body":{"classes/Email-1.html":{},"injectables/MarketService.html":{},"classes/Membership-1.html":{},"classes/Notifications-1.html":{},"classes/Online-1.html":{},"classes/Password-1.html":{},"classes/Rank-1.html":{},"classes/Reactions-1.html":{},"classes/Security-1.html":{},"classes/Sessions-1.html":{},"classes/Stats-1.html":{},"classes/Suspension-1.html":{},"classes/Transaction-1.html":{},"classes/TransactionInfo.html":{},"injectables/UserService.html":{}}}],["table",{"_index":1552,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1551,"title":{},"body":{"coverage.html":{}}}],["tachi",{"_index":1400,"title":{},"body":{"classes/UserDto.html":{},"classes/UserModel.html":{},"injectables/UserService.html":{}}}],["team",{"_index":1611,"title":{},"body":{"index.html":{}}}],["template",{"_index":182,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{}}}],["test",{"_index":1609,"title":{},"body":{"index.html":{}}}],["tested",{"_index":1629,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1612,"title":{},"body":{"index.html":{}}}],["this.adminservice.getchangelog",{"_index":61,"title":{},"body":{"controllers/AdminController.html":{}}}],["this.adminservice.newchangelog(changelog).then",{"_index":54,"title":{},"body":{"controllers/AdminController.html":{}}}],["this.authservice",{"_index":299,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.logout(userid",{"_index":314,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.sendpasswordreset(userid",{"_index":302,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.signin(user",{"_index":286,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.signup(user",{"_index":280,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.verifyemail(userid",{"_index":289,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.verifysecurity(security).then",{"_index":294,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.changelogmodel",{"_index":103,"title":{},"body":{"injectables/AdminService.html":{}}}],["this.changelogmodel.create(changelogmodel).catch",{"_index":99,"title":{},"body":{"injectables/AdminService.html":{}}}],["this.configservice.get",{"_index":435,"title":{},"body":{"injectables/AuthService.html":{},"controllers/UserController.html":{}}}],["this.configservice.get(configurationenum.port_api",{"_index":209,"title":{},"body":{"modules/AppModule.html":{}}}],["this.envconfig",{"_index":711,"title":{},"body":{"classes/ConfigService.html":{}}}],["this.envconfig[key",{"_index":725,"title":{},"body":{"classes/ConfigService.html":{}}}],["this.i18nservice.translate",{"_index":59,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/MarketController.html":{},"injectables/MarketService.html":{},"controllers/TransactionController.html":{},"injectables/TransactionService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["this.i18nservice.translate('translations.auth.service.error_signup",{"_index":456,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.i18nservice.translate('translations.auth.service.no_permission",{"_index":509,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.i18nservice.translate('translations.auth.service.session_invalid",{"_index":545,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.i18nservice.translate('translations.auth.service.user_not_found",{"_index":529,"title":{},"body":{"injectables/AuthService.html":{},"injectables/TransactionService.html":{},"injectables/UserService.html":{}}}],["this.i18nservice.translate('translations.general.process_failed",{"_index":592,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["this.i18nservice.translate('translations.general.saved",{"_index":1357,"title":{},"body":{"controllers/UserController.html":{}}}],["this.i18nservice.translate('translations.user.service.type_photo",{"_index":1512,"title":{},"body":{"injectables/UserService.html":{}}}],["this.jwtservice.sign(payload",{"_index":513,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.logger.error",{"_index":441,"title":{},"body":{"injectables/AuthService.html":{},"injectables/MarketService.html":{},"injectables/TransactionService.html":{},"injectables/UserService.html":{}}}],["this.logger.error('.env",{"_index":708,"title":{},"body":{"classes/ConfigService.html":{}}}],["this.logger.error(`eliminando",{"_index":1521,"title":{},"body":{"injectables/UserService.html":{}}}],["this.logger.log",{"_index":394,"title":{},"body":{"injectables/AuthService.html":{},"classes/GeneralGateway.html":{},"injectables/MarketService.html":{},"injectables/TransactionService.html":{},"injectables/UserService.html":{}}}],["this.logger.log(`verifying",{"_index":532,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.mailservice",{"_index":420,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.marketmodel",{"_index":1003,"title":{},"body":{"injectables/MarketService.html":{},"injectables/TransactionService.html":{}}}],["this.marketmodel.create(marketmodel).catch",{"_index":997,"title":{},"body":{"injectables/MarketService.html":{}}}],["this.marketmodel.findbyid",{"_index":1068,"title":{},"body":{"injectables/MarketService.html":{}}}],["this.marketmodel.findbyid(buyeraddmarketdto.product",{"_index":1024,"title":{},"body":{"injectables/MarketService.html":{}}}],["this.marketmodel.findbyid(commentmarketdto.product",{"_index":1037,"title":{},"body":{"injectables/MarketService.html":{}}}],["this.marketmodel.findbyid(commentremovemarketdto.product",{"_index":1055,"title":{},"body":{"injectables/MarketService.html":{}}}],["this.marketmodel.findbyid(product",{"_index":1298,"title":{},"body":{"injectables/TransactionService.html":{}}}],["this.marketmodel.findbyid(reactionaddmarketdto.product",{"_index":1046,"title":{},"body":{"injectables/MarketService.html":{}}}],["this.marketservice",{"_index":925,"title":{},"body":{"controllers/MarketController.html":{}}}],["this.marketservice.addcomment(commentmarketdto).then",{"_index":923,"title":{},"body":{"controllers/MarketController.html":{}}}],["this.marketservice.addproduct(marketmodel).then",{"_index":917,"title":{},"body":{"controllers/MarketController.html":{}}}],["this.marketservice.getallproducts",{"_index":922,"title":{},"body":{"controllers/MarketController.html":{}}}],["this.marketservice.getproduct",{"_index":920,"title":{},"body":{"controllers/MarketController.html":{}}}],["this.reflector.get",{"_index":1116,"title":{},"body":{"guards/RankGuard.html":{}}}],["this.server.emit(`user:${client.query.user}:online",{"_index":812,"title":{},"body":{"classes/GeneralGateway.html":{}}}],["this.transactionservice",{"_index":1254,"title":{},"body":{"controllers/TransactionController.html":{}}}],["this.transactionservice.getalltransactions",{"_index":1257,"title":{},"body":{"controllers/TransactionController.html":{}}}],["this.transactionservice.processtransaction(transactionmodel",{"_index":1252,"title":{},"body":{"controllers/TransactionController.html":{}}}],["this.usermodel",{"_index":547,"title":{},"body":{"injectables/AuthService.html":{},"injectables/TransactionService.html":{},"injectables/UserService.html":{}}}],["this.usermodel(user",{"_index":399,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usermodel.findbyid(buyer",{"_index":1297,"title":{},"body":{"injectables/TransactionService.html":{}}}],["this.usermodel.findbyid(id",{"_index":843,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/UserService.html":{}}}],["this.usermodel.findbyid(toid",{"_index":1514,"title":{},"body":{"injectables/UserService.html":{}}}],["this.usermodel.findbyid(userid",{"_index":527,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["this.usermodel.findbyid(usersellerid",{"_index":1303,"title":{},"body":{"injectables/TransactionService.html":{}}}],["this.usermodel.findbyidanddelete(id).catch",{"_index":1527,"title":{},"body":{"injectables/UserService.html":{}}}],["this.usermodel.findbyidandupdate(id",{"_index":1509,"title":{},"body":{"injectables/UserService.html":{}}}],["this.usermodel.findone",{"_index":460,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usermodel.findoneandupdate",{"_index":593,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.userservice",{"_index":1376,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.addreaction(reactionsdto).then",{"_index":1387,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.getpublicuser(userid",{"_index":1355,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.getusers",{"_index":1358,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.removereaction(ofid",{"_index":1392,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.updateonlineuser(client.query.user",{"_index":818,"title":{},"body":{"classes/GeneralGateway.html":{}}}],["this.userservice.updateuser",{"_index":1356,"title":{},"body":{"controllers/UserController.html":{}}}],["throw",{"_index":100,"title":{},"body":{"injectables/AdminService.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/MarketService.html":{},"injectables/TransactionService.html":{},"injectables/UserService.html":{}}}],["time",{"_index":405,"title":{},"body":{"injectables/AuthService.html":{},"classes/GeneralGateway.html":{},"index.html":{}}}],["timestamps",{"_index":775,"title":{},"body":{"classes/Email-1.html":{},"classes/MarketModel.html":{},"classes/Membership-1.html":{},"classes/Notifications-1.html":{},"classes/Online-1.html":{},"classes/Password-1.html":{},"classes/Rank-1.html":{},"classes/Reactions-1.html":{},"classes/Security-1.html":{},"classes/Sessions-1.html":{},"classes/Stats-1.html":{},"classes/Suspension-1.html":{},"classes/Transaction-1.html":{},"classes/TransactionInfo.html":{},"classes/TransactionModel.html":{},"classes/UserModel.html":{}}}],["timezone",{"_index":390,"title":{},"body":{"injectables/AuthService.html":{},"classes/GeneralGateway.html":{},"dependencies.html":{}}}],["title",{"_index":649,"title":{},"body":{"classes/ChangelogModel.html":{}}}],["todate",{"_index":409,"title":{},"body":{"injectables/AuthService.html":{},"classes/GeneralGateway.html":{}}}],["toid",{"_index":1138,"title":{},"body":{"classes/ReactionsDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["toid).then",{"_index":1393,"title":{},"body":{"controllers/UserController.html":{}}}],["token",{"_index":127,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/Email.html":{},"classes/Email-1.html":{},"classes/Market.html":{},"classes/Membership.html":{},"classes/Membership-1.html":{},"classes/Notifications.html":{},"classes/Notifications-1.html":{},"classes/Online.html":{},"classes/Online-1.html":{},"classes/Password.html":{},"classes/Password-1.html":{},"classes/Rank.html":{},"classes/Rank-1.html":{},"classes/Reactions.html":{},"classes/Reactions-1.html":{},"classes/Security.html":{},"classes/Security-1.html":{},"classes/Sessions.html":{},"classes/Sessions-1.html":{},"classes/Stats.html":{},"classes/Stats-1.html":{},"classes/Suspension.html":{},"classes/Suspension-1.html":{},"classes/Transaction.html":{},"classes/Transaction-1.html":{},"classes/TransactionBuyer.html":{},"classes/TransactionInfo.html":{},"dependencies.html":{}}}],["token).then",{"_index":290,"title":{},"body":{"controllers/AuthController.html":{}}}],["token_secret",{"_index":715,"title":{},"body":{"classes/ConfigService.html":{},"miscellaneous/enumerations.html":{}}}],["tokenemail",{"_index":363,"title":{},"body":{"injectables/AuthService.html":{}}}],["tokengenerator",{"_index":382,"title":{},"body":{"injectables/AuthService.html":{}}}],["tokengenerator().generate",{"_index":411,"title":{},"body":{"injectables/AuthService.html":{}}}],["tokenpassword",{"_index":235,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["tokenpasword",{"_index":349,"title":{},"body":{"injectables/AuthService.html":{}}}],["tokenuser",{"_index":512,"title":{},"body":{"injectables/AuthService.html":{}}}],["transaction",{"_index":754,"title":{"classes/Transaction.html":{},"classes/Transaction-1.html":{}},"body":{"classes/Email.html":{},"classes/Email-1.html":{},"classes/Market.html":{},"classes/Membership.html":{},"classes/Membership-1.html":{},"classes/Notifications.html":{},"classes/Notifications-1.html":{},"classes/Online.html":{},"classes/Online-1.html":{},"classes/Password.html":{},"classes/Password-1.html":{},"classes/Rank.html":{},"classes/Rank-1.html":{},"classes/Reactions.html":{},"classes/Reactions-1.html":{},"classes/Security.html":{},"classes/Security-1.html":{},"classes/Sessions.html":{},"classes/Sessions-1.html":{},"classes/Stats.html":{},"classes/Stats-1.html":{},"classes/Suspension.html":{},"classes/Suspension-1.html":{},"classes/Transaction.html":{},"classes/Transaction-1.html":{},"classes/TransactionBuyer.html":{},"controllers/TransactionController.html":{},"classes/TransactionInfo.html":{},"injectables/TransactionService.html":{},"classes/UserDto.html":{},"classes/UserModel.html":{},"coverage.html":{}}}],["transaction.controller",{"_index":1277,"title":{},"body":{"modules/TransactionModule.html":{}}}],["transaction.service",{"_index":1247,"title":{},"body":{"controllers/TransactionController.html":{},"modules/TransactionModule.html":{}}}],["transactionbuyer",{"_index":764,"title":{"classes/TransactionBuyer.html":{}},"body":{"classes/Email.html":{},"classes/Market.html":{},"classes/Membership.html":{},"classes/Notifications.html":{},"classes/Online.html":{},"classes/Password.html":{},"classes/Rank.html":{},"classes/Reactions.html":{},"classes/Security.html":{},"classes/Sessions.html":{},"classes/Stats.html":{},"classes/Suspension.html":{},"classes/Transaction.html":{},"classes/TransactionBuyer.html":{},"coverage.html":{}}}],["transactioncontroller",{"_index":1231,"title":{"controllers/TransactionController.html":{}},"body":{"controllers/TransactionController.html":{},"modules/TransactionModule.html":{},"coverage.html":{}}}],["transactiondeletedto",{"_index":1237,"title":{"classes/TransactionDeleteDto.html":{}},"body":{"controllers/TransactionController.html":{},"classes/TransactionDeleteDto.html":{},"injectables/TransactionService.html":{},"coverage.html":{}}}],["transactiondeletedto.buyer",{"_index":1290,"title":{},"body":{"injectables/TransactionService.html":{}}}],["transactiondeletedto.product",{"_index":1289,"title":{},"body":{"injectables/TransactionService.html":{}}}],["transactiondeletedto.seller",{"_index":1292,"title":{},"body":{"injectables/TransactionService.html":{}}}],["transactioninfo",{"_index":788,"title":{"classes/TransactionInfo.html":{}},"body":{"classes/Email-1.html":{},"classes/Membership-1.html":{},"classes/Notifications-1.html":{},"classes/Online-1.html":{},"classes/Password-1.html":{},"classes/Rank-1.html":{},"classes/Reactions-1.html":{},"classes/Security-1.html":{},"classes/Sessions-1.html":{},"classes/Stats-1.html":{},"classes/Suspension-1.html":{},"classes/Transaction-1.html":{},"classes/TransactionInfo.html":{},"coverage.html":{}}}],["transactionmodel",{"_index":1243,"title":{"classes/TransactionModel.html":{}},"body":{"controllers/TransactionController.html":{},"classes/TransactionModel.html":{},"modules/TransactionModule.html":{},"injectables/TransactionService.html":{},"coverage.html":{}}}],["transactionmodule",{"_index":136,"title":{"modules/TransactionModule.html":{}},"body":{"modules/AppModule.html":{},"modules/TransactionModule.html":{},"modules.html":{},"overview.html":{}}}],["transactions",{"_index":1272,"title":{},"body":{"classes/TransactionModel.html":{},"injectables/TransactionService.html":{},"classes/UserDto.html":{},"classes/UserModel.html":{},"injectables/UserService.html":{}}}],["transactionservice",{"_index":1246,"title":{"injectables/TransactionService.html":{}},"body":{"controllers/TransactionController.html":{},"modules/TransactionModule.html":{},"injectables/TransactionService.html":{},"coverage.html":{},"overview.html":{}}}],["transformer",{"_index":1566,"title":{},"body":{"dependencies.html":{}}}],["translations.admin.controller.changelog_added",{"_index":60,"title":{},"body":{"controllers/AdminController.html":{}}}],["translations.admin.service.changelog_error_add",{"_index":102,"title":{},"body":{"injectables/AdminService.html":{}}}],["translations.auth.controller.account_confirmation",{"_index":293,"title":{},"body":{"controllers/AuthController.html":{}}}],["translations.auth.controller.change_password",{"_index":308,"title":{},"body":{"controllers/AuthController.html":{}}}],["translations.auth.controller.password_reset",{"_index":304,"title":{},"body":{"controllers/AuthController.html":{}}}],["translations.auth.controller.security_challenge_completed",{"_index":295,"title":{},"body":{"controllers/AuthController.html":{}}}],["translations.auth.controller.security_updated",{"_index":312,"title":{},"body":{"controllers/AuthController.html":{}}}],["translations.auth.controller.session_confirmation",{"_index":300,"title":{},"body":{"controllers/AuthController.html":{}}}],["translations.auth.controller.session_logout",{"_index":316,"title":{},"body":{"controllers/AuthController.html":{}}}],["translations.auth.controller.user_created",{"_index":284,"title":{},"body":{"controllers/AuthController.html":{}}}],["translations.auth.service.confirmation_error_token",{"_index":543,"title":{},"body":{"injectables/AuthService.html":{}}}],["translations.auth.service.duplicate_user",{"_index":451,"title":{},"body":{"injectables/AuthService.html":{}}}],["translations.auth.service.invalid_credentials",{"_index":470,"title":{},"body":{"injectables/AuthService.html":{}}}],["translations.auth.service.password_error_reset_email",{"_index":586,"title":{},"body":{"injectables/AuthService.html":{}}}],["translations.auth.service.security_code_failed",{"_index":572,"title":{},"body":{"injectables/AuthService.html":{}}}],["translations.auth.service.security_no_enabled",{"_index":558,"title":{},"body":{"injectables/AuthService.html":{}}}],["translations.auth.service.send_email",{"_index":443,"title":{},"body":{"injectables/AuthService.html":{}}}],["translations.auth.service.session_already_exists",{"_index":500,"title":{},"body":{"injectables/AuthService.html":{}}}],["translations.auth.service.session_not_exists",{"_index":546,"title":{},"body":{"injectables/AuthService.html":{}}}],["translations.auth.service.user_not_found",{"_index":549,"title":{},"body":{"injectables/AuthService.html":{}}}],["translations.auth.service.user_session_error",{"_index":599,"title":{},"body":{"injectables/AuthService.html":{}}}],["translations.general.account_no_permission",{"_index":1505,"title":{},"body":{"injectables/UserService.html":{}}}],["translations.market.controller.buyer_deleted",{"_index":930,"title":{},"body":{"controllers/MarketController.html":{}}}],["translations.market.controller.comment_added",{"_index":924,"title":{},"body":{"controllers/MarketController.html":{}}}],["translations.market.controller.comment_deleted",{"_index":927,"title":{},"body":{"controllers/MarketController.html":{}}}],["translations.market.controller.product_added",{"_index":918,"title":{},"body":{"controllers/MarketController.html":{}}}],["translations.market.controller.reaction_added",{"_index":926,"title":{},"body":{"controllers/MarketController.html":{}}}],["translations.market.controller.reaction_deleted",{"_index":931,"title":{},"body":{"controllers/MarketController.html":{}}}],["translations.market.service.buyer_error_added",{"_index":1033,"title":{},"body":{"injectables/MarketService.html":{}}}],["translations.market.service.buyer_error_deleted",{"_index":1064,"title":{},"body":{"injectables/MarketService.html":{}}}],["translations.market.service.comment_error_added",{"_index":1042,"title":{},"body":{"injectables/MarketService.html":{}}}],["translations.market.service.comment_error_deleted",{"_index":1059,"title":{},"body":{"injectables/MarketService.html":{}}}],["translations.market.service.comment_only_delete_owned",{"_index":1057,"title":{},"body":{"injectables/MarketService.html":{}}}],["translations.market.service.product_error_added",{"_index":999,"title":{},"body":{"injectables/MarketService.html":{}}}],["translations.market.service.product_not_found",{"_index":1026,"title":{},"body":{"injectables/MarketService.html":{}}}],["translations.market.service.reaction_error_added",{"_index":1051,"title":{},"body":{"injectables/MarketService.html":{}}}],["translations.market.service.reaction_error_deleted",{"_index":1072,"title":{},"body":{"injectables/MarketService.html":{}}}],["translations.market.service.reaction_only_delete_owned",{"_index":1071,"title":{},"body":{"injectables/MarketService.html":{}}}],["translations.transactions.controller.product_not_found",{"_index":1300,"title":{},"body":{"injectables/TransactionService.html":{}}}],["translations.transactions.controller.transaction_error_deleted",{"_index":1291,"title":{},"body":{"injectables/TransactionService.html":{}}}],["translations.transactions.controller.transaction_error_process",{"_index":1299,"title":{},"body":{"injectables/TransactionService.html":{}}}],["translations.transactions.service.transaction_deleted",{"_index":1255,"title":{},"body":{"controllers/TransactionController.html":{}}}],["translations.user.controller.cover_photo_updated",{"_index":1385,"title":{},"body":{"controllers/UserController.html":{}}}],["translations.user.controller.profile_photo_updated",{"_index":1380,"title":{},"body":{"controllers/UserController.html":{}}}],["translations.user.controller.reaction_added",{"_index":1388,"title":{},"body":{"controllers/UserController.html":{}}}],["translations.user.controller.reactions_deleted",{"_index":1394,"title":{},"body":{"controllers/UserController.html":{}}}],["transport",{"_index":178,"title":{},"body":{"modules/AppModule.html":{}}}],["trim",{"_index":771,"title":{},"body":{"classes/Email-1.html":{},"classes/Membership-1.html":{},"classes/Notifications-1.html":{},"classes/Online-1.html":{},"classes/Password-1.html":{},"classes/Rank-1.html":{},"classes/Reactions-1.html":{},"classes/Security-1.html":{},"classes/Sessions-1.html":{},"classes/Stats-1.html":{},"classes/Suspension-1.html":{},"classes/Transaction-1.html":{},"classes/TransactionInfo.html":{},"classes/UserModel.html":{}}}],["true",{"_index":172,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"classes/BuyerMarket.html":{},"classes/ChangelogAuthor.html":{},"classes/ChangelogModel.html":{},"classes/CommentMarket.html":{},"classes/DiscountMarket.html":{},"classes/Email-1.html":{},"classes/GeneralGateway.html":{},"classes/MarketModel.html":{},"injectables/MarketService.html":{},"classes/Membership-1.html":{},"classes/Notifications-1.html":{},"classes/Online-1.html":{},"classes/Password-1.html":{},"classes/Rank-1.html":{},"guards/RankGuard.html":{},"classes/Reactions-1.html":{},"classes/ReactionsMarket.html":{},"classes/Security-1.html":{},"classes/Sessions-1.html":{},"classes/Stats-1.html":{},"classes/Suspension-1.html":{},"classes/Transaction-1.html":{},"classes/TransactionInfo.html":{},"classes/TransactionModel.html":{},"injectables/TransactionService.html":{},"classes/UserModel.html":{},"injectables/UserService.html":{}}}],["try",{"_index":526,"title":{},"body":{"injectables/AuthService.html":{},"injectables/MarketService.html":{},"injectables/TransactionService.html":{},"injectables/UserService.html":{}}}],["ts",{"_index":383,"title":{},"body":{"injectables/AuthService.html":{},"dependencies.html":{}}}],["tslint:disable",{"_index":761,"title":{},"body":{"classes/Email.html":{},"classes/Email-1.html":{},"classes/Market.html":{},"classes/Membership.html":{},"classes/Membership-1.html":{},"classes/Notifications.html":{},"classes/Notifications-1.html":{},"classes/Online.html":{},"classes/Online-1.html":{},"classes/Password.html":{},"classes/Password-1.html":{},"classes/Rank.html":{},"classes/Rank-1.html":{},"classes/Reactions.html":{},"classes/Reactions-1.html":{},"classes/Security.html":{},"classes/Security-1.html":{},"classes/Sessions.html":{},"classes/Sessions-1.html":{},"classes/Stats.html":{},"classes/Stats-1.html":{},"classes/Suspension.html":{},"classes/Suspension-1.html":{},"classes/Transaction.html":{},"classes/Transaction-1.html":{},"classes/TransactionBuyer.html":{},"classes/TransactionInfo.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"classes/UserModel.html":{}}}],["two",{"_index":556,"title":{},"body":{"injectables/AuthService.html":{}}}],["twofactor",{"_index":505,"title":{},"body":{"injectables/AuthService.html":{},"classes/Email.html":{},"classes/Email-1.html":{},"classes/Market.html":{},"classes/Membership.html":{},"classes/Membership-1.html":{},"classes/Notifications.html":{},"classes/Notifications-1.html":{},"classes/Online.html":{},"classes/Online-1.html":{},"classes/Password.html":{},"classes/Password-1.html":{},"classes/Rank.html":{},"classes/Rank-1.html":{},"classes/Reactions.html":{},"classes/Reactions-1.html":{},"classes/Security.html":{},"classes/Security-1.html":{},"classes/Sessions.html":{},"classes/Sessions-1.html":{},"classes/Stats.html":{},"classes/Stats-1.html":{},"classes/Suspension.html":{},"classes/Suspension-1.html":{},"classes/Transaction.html":{},"classes/Transaction-1.html":{},"classes/TransactionBuyer.html":{},"classes/TransactionInfo.html":{}}}],["type",{"_index":30,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BuyerAddMarketDto.html":{},"classes/BuyerMarket.html":{},"classes/BuyerRemoveMarketDto.html":{},"classes/ChangelogAuthor.html":{},"classes/ChangelogModel.html":{},"classes/CommentMarket.html":{},"classes/CommentMarketDto.html":{},"classes/CommentRemoveMarketDto.html":{},"classes/ConfigService.html":{},"classes/DiscountMarket.html":{},"classes/Email.html":{},"classes/Email-1.html":{},"classes/GeneralGateway.html":{},"interfaces/IJwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/Market.html":{},"controllers/MarketController.html":{},"classes/MarketModel.html":{},"injectables/MarketService.html":{},"classes/Membership.html":{},"classes/Membership-1.html":{},"classes/Notifications.html":{},"classes/Notifications-1.html":{},"classes/Online.html":{},"classes/Online-1.html":{},"classes/Password.html":{},"classes/Password-1.html":{},"classes/Rank.html":{},"classes/Rank-1.html":{},"guards/RankGuard.html":{},"classes/ReactionAddMarketDto.html":{},"classes/ReactionRemoveMarketDto.html":{},"classes/Reactions.html":{},"classes/Reactions-1.html":{},"classes/ReactionsDto.html":{},"classes/ReactionsMarket.html":{},"classes/Security.html":{},"classes/Security-1.html":{},"classes/SecurityCode.html":{},"classes/SecurityDto.html":{},"classes/SecurityUpdateDto.html":{},"classes/Sessions.html":{},"classes/Sessions-1.html":{},"classes/SignInDto.html":{},"classes/Stats.html":{},"classes/Stats-1.html":{},"classes/Suspension.html":{},"classes/Suspension-1.html":{},"classes/Transaction.html":{},"classes/Transaction-1.html":{},"classes/TransactionBuyer.html":{},"controllers/TransactionController.html":{},"classes/TransactionDeleteDto.html":{},"classes/TransactionInfo.html":{},"classes/TransactionModel.html":{},"injectables/TransactionService.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"classes/UserModel.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["typegoose",{"_index":82,"title":{},"body":{"modules/AdminModule.html":{},"injectables/AdminService.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"modules/MarketModule.html":{},"injectables/MarketService.html":{},"modules/TransactionModule.html":{},"injectables/TransactionService.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["typegoose/typegoose",{"_index":97,"title":{},"body":{"injectables/AdminService.html":{},"injectables/AuthService.html":{},"classes/BuyerAddMarketDto.html":{},"classes/BuyerMarket.html":{},"classes/ChangelogAuthor.html":{},"classes/ChangelogModel.html":{},"classes/CommentMarket.html":{},"classes/CommentMarketDto.html":{},"classes/DiscountMarket.html":{},"classes/Email-1.html":{},"injectables/JwtStrategy.html":{},"classes/MarketModel.html":{},"injectables/MarketService.html":{},"classes/Membership-1.html":{},"classes/Notifications-1.html":{},"classes/Online-1.html":{},"classes/Password-1.html":{},"classes/Rank-1.html":{},"classes/ReactionAddMarketDto.html":{},"classes/Reactions-1.html":{},"classes/ReactionsMarket.html":{},"classes/Security-1.html":{},"classes/Sessions-1.html":{},"classes/Stats-1.html":{},"classes/Suspension-1.html":{},"classes/Transaction-1.html":{},"classes/TransactionInfo.html":{},"classes/TransactionModel.html":{},"injectables/TransactionService.html":{},"classes/UserModel.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["typegoose/typegoose/lib/defaultclasses",{"_index":776,"title":{},"body":{"classes/Email-1.html":{},"classes/MarketModel.html":{},"classes/Membership-1.html":{},"classes/Notifications-1.html":{},"classes/Online-1.html":{},"classes/Password-1.html":{},"classes/Rank-1.html":{},"classes/Reactions-1.html":{},"classes/Security-1.html":{},"classes/Sessions-1.html":{},"classes/Stats-1.html":{},"classes/Suspension-1.html":{},"classes/Transaction-1.html":{},"classes/TransactionInfo.html":{},"classes/TransactionModel.html":{},"classes/UserModel.html":{}}}],["typegoosemodule",{"_index":81,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/MarketModule.html":{},"modules/TransactionModule.html":{},"modules/UserModule.html":{}}}],["typegoosemodule.forfeature([changelogmodel",{"_index":84,"title":{},"body":{"modules/AdminModule.html":{}}}],["typegoosemodule.forfeature([marketmodel",{"_index":970,"title":{},"body":{"modules/MarketModule.html":{}}}],["typegoosemodule.forfeature([transactionmodel",{"_index":1279,"title":{},"body":{"modules/TransactionModule.html":{}}}],["typegoosemodule.forfeature([usermodel",{"_index":327,"title":{},"body":{"modules/AuthModule.html":{},"modules/UserModule.html":{}}}],["typegoosemodule.forrootasync",{"_index":166,"title":{},"body":{"modules/AppModule.html":{}}}],["types/moment",{"_index":1560,"title":{},"body":{"dependencies.html":{}}}],["tz('america/new_york",{"_index":402,"title":{},"body":{"injectables/AuthService.html":{},"classes/GeneralGateway.html":{}}}],["unauthorizedexception",{"_index":375,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/UserService.html":{}}}],["undefined",{"_index":769,"title":{},"body":{"classes/Email-1.html":{},"classes/Membership-1.html":{},"classes/Online-1.html":{},"classes/Password-1.html":{},"classes/Transaction-1.html":{},"classes/UserModel.html":{}}}],["unique",{"_index":963,"title":{},"body":{"classes/MarketModel.html":{},"classes/UserModel.html":{}}}],["unwanted",{"_index":1634,"title":{},"body":{"index.html":{}}}],["update",{"_index":1503,"title":{},"body":{"injectables/UserService.html":{}}}],["updatedat",{"_index":507,"title":{},"body":{"injectables/AuthService.html":{},"injectables/MarketService.html":{},"injectables/UserService.html":{}}}],["updateonlineuser",{"_index":1471,"title":{},"body":{"injectables/UserService.html":{}}}],["updateonlineuser(id",{"_index":1482,"title":{},"body":{"injectables/UserService.html":{}}}],["updatephoto",{"_index":1377,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["updatephoto(userid",{"_index":1484,"title":{},"body":{"injectables/UserService.html":{}}}],["updateuser",{"_index":1321,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["updateuser(updateuserdto",{"_index":1338,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["updateuserdto",{"_index":1309,"title":{"classes/UpdateUserDto.html":{}},"body":{"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["updateuserdto.id",{"_index":1494,"title":{},"body":{"injectables/UserService.html":{}}}],["updating",{"_index":1493,"title":{},"body":{"injectables/UserService.html":{}}}],["uploadedfile",{"_index":1342,"title":{},"body":{"controllers/UserController.html":{}}}],["uploads/${id}/cover_photo/${file.filename",{"_index":1384,"title":{},"body":{"controllers/UserController.html":{}}}],["uploads/cover_photo",{"_index":1382,"title":{},"body":{"controllers/UserController.html":{}}}],["uploads/cover_photo/${file.filename",{"_index":1386,"title":{},"body":{"controllers/UserController.html":{}}}],["uploads/profile_photo",{"_index":1363,"title":{},"body":{"controllers/UserController.html":{}}}],["uploads/profile_photo/${file.filename",{"_index":1378,"title":{},"body":{"controllers/UserController.html":{}}}],["upvote",{"_index":1515,"title":{},"body":{"injectables/UserService.html":{}}}],["uri",{"_index":169,"title":{},"body":{"modules/AppModule.html":{}}}],["use",{"_index":852,"title":{},"body":{"injectables/JwtStrategy.html":{},"index.html":{}}}],["useclass",{"_index":203,"title":{},"body":{"modules/AppModule.html":{}}}],["usecreateindex",{"_index":174,"title":{},"body":{"modules/AppModule.html":{}}}],["usefactory",{"_index":168,"title":{},"body":{"modules/AppModule.html":{}}}],["usefactory(configservice",{"_index":332,"title":{},"body":{"modules/AuthModule.html":{}}}],["usefindandmodify",{"_index":175,"title":{},"body":{"modules/AppModule.html":{}}}],["useguards",{"_index":118,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/MarketController.html":{},"controllers/TransactionController.html":{},"controllers/UserController.html":{}}}],["useguards(authguard",{"_index":124,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/MarketController.html":{},"controllers/TransactionController.html":{},"controllers/UserController.html":{}}}],["useguards(undefined)@get('/token",{"_index":116,"title":{},"body":{"controllers/AppController.html":{}}}],["useguards(undefined)@patch('/account/security/change",{"_index":226,"title":{},"body":{"controllers/AuthController.html":{}}}],["useinterceptors",{"_index":1341,"title":{},"body":{"controllers/UserController.html":{}}}],["useinterceptors(undefined)@post('/upload/cover/:id",{"_index":1326,"title":{},"body":{"controllers/UserController.html":{}}}],["usenewurlparser",{"_index":171,"title":{},"body":{"modules/AppModule.html":{}}}],["usepipes",{"_index":266,"title":{},"body":{"controllers/AuthController.html":{}}}],["usepipes(new",{"_index":279,"title":{},"body":{"controllers/AuthController.html":{}}}],["user",{"_index":126,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BuyerAddMarketDto.html":{},"classes/BuyerMarket.html":{},"classes/BuyerRemoveMarketDto.html":{},"classes/CommentMarket.html":{},"classes/CommentMarketDto.html":{},"classes/DiscountMarket.html":{},"classes/GeneralGateway.html":{},"injectables/JwtStrategy.html":{},"injectables/MarketService.html":{},"guards/RankGuard.html":{},"classes/ReactionAddMarketDto.html":{},"classes/ReactionRemoveMarketDto.html":{},"classes/ReactionsMarket.html":{},"injectables/TransactionService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["user.controller",{"_index":1465,"title":{},"body":{"modules/UserModule.html":{}}}],["user.dto",{"_index":1348,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["user.dto.data",{"_index":1424,"title":{},"body":{"classes/UserDto.html":{}}}],["user.dto.ts",{"_index":1311,"title":{},"body":{"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["user.dto.ts:10",{"_index":1313,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["user.dto.ts:13",{"_index":1314,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["user.dto.ts:6",{"_index":1312,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["user.email",{"_index":283,"title":{},"body":{"controllers/AuthController.html":{}}}],["user.email.expiration",{"_index":538,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.email.key",{"_index":396,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.email.status",{"_index":537,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.email.token",{"_index":534,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.ip",{"_index":416,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.model.data",{"_index":1459,"title":{},"body":{"classes/UserModel.html":{}}}],["user.name",{"_index":581,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.password.expiration",{"_index":584,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.password.key",{"_index":433,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.password.status",{"_index":583,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.password.token",{"_index":585,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.rank",{"_index":1122,"title":{},"body":{"guards/RankGuard.html":{}}}],["user.rank.some((rank",{"_index":1120,"title":{},"body":{"guards/RankGuard.html":{}}}],["user.reactions.push",{"_index":1516,"title":{},"body":{"injectables/UserService.html":{}}}],["user.save",{"_index":539,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.save().catch",{"_index":1520,"title":{},"body":{"injectables/UserService.html":{}}}],["user.save().catch(error",{"_index":1517,"title":{},"body":{"injectables/UserService.html":{}}}],["user.security.code1",{"_index":560,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.security.code2",{"_index":562,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.security.code3",{"_index":564,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.security.code4",{"_index":566,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.security.code5",{"_index":568,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.security.enabled",{"_index":554,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.service",{"_index":1346,"title":{},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{}}}],["user.username",{"_index":281,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["user/models/user.model",{"_index":676,"title":{},"body":{"classes/CommentMarketDto.html":{},"modules/TransactionModule.html":{},"injectables/TransactionService.html":{}}}],["user_id",{"_index":517,"title":{},"body":{"injectables/AuthService.html":{}}}],["userbuyer",{"_index":1294,"title":{},"body":{"injectables/TransactionService.html":{}}}],["userbuyer.tachi",{"_index":1308,"title":{},"body":{"injectables/TransactionService.html":{}}}],["usercontroller",{"_index":1315,"title":{"controllers/UserController.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["usercreated",{"_index":398,"title":{},"body":{"injectables/AuthService.html":{}}}],["usercreated.email.expiration",{"_index":412,"title":{},"body":{"injectables/AuthService.html":{}}}],["usercreated.email.key",{"_index":422,"title":{},"body":{"injectables/AuthService.html":{}}}],["usercreated.email.token",{"_index":410,"title":{},"body":{"injectables/AuthService.html":{}}}],["usercreated.ip",{"_index":415,"title":{},"body":{"injectables/AuthService.html":{}}}],["usercreated.name",{"_index":431,"title":{},"body":{"injectables/AuthService.html":{}}}],["usercreated.password.key",{"_index":413,"title":{},"body":{"injectables/AuthService.html":{}}}],["usercreated.password.token",{"_index":414,"title":{},"body":{"injectables/AuthService.html":{}}}],["userdto",{"_index":1395,"title":{"classes/UserDto.html":{}},"body":{"classes/UserDto.html":{},"coverage.html":{}}}],["userexists",{"_index":842,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["userexists.email.key",{"_index":846,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["userexists.email.status",{"_index":847,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["userexists.password.status",{"_index":848,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["userexists.suspension.status",{"_index":849,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["userexists.username",{"_index":845,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["userid",{"_index":233,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["useridrequest",{"_index":224,"title":{},"body":{"controllers/AuthController.html":{}}}],["userip",{"_index":240,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["userip).then",{"_index":303,"title":{},"body":{"controllers/AuthController.html":{}}}],["usermodel",{"_index":248,"title":{"classes/UserModel.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BuyerAddMarketDto.html":{},"classes/BuyerMarket.html":{},"classes/ChangelogAuthor.html":{},"classes/CommentMarket.html":{},"classes/CommentMarketDto.html":{},"classes/DiscountMarket.html":{},"injectables/JwtStrategy.html":{},"classes/MarketModel.html":{},"classes/ReactionAddMarketDto.html":{},"classes/ReactionsMarket.html":{},"classes/TransactionModel.html":{},"modules/TransactionModule.html":{},"injectables/TransactionService.html":{},"classes/UserModel.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["usermodule",{"_index":137,"title":{"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["username",{"_index":106,"title":{},"body":{"injectables/AdminService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/IJwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/UserDto.html":{},"classes/UserModel.html":{},"injectables/UserService.html":{}}}],["userrankrequest",{"_index":225,"title":{},"body":{"controllers/AuthController.html":{}}}],["userrequestid",{"_index":352,"title":{},"body":{"injectables/AuthService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["userrequestrank",{"_index":353,"title":{},"body":{"injectables/AuthService.html":{},"controllers/UserController.html":{}}}],["users",{"_index":618,"title":{},"body":{"classes/BuyerMarket.html":{},"classes/ChangelogAuthor.html":{},"classes/CommentMarket.html":{},"classes/DiscountMarket.html":{},"classes/MarketModel.html":{},"classes/ReactionsMarket.html":{},"classes/TransactionModel.html":{},"classes/UserModel.html":{},"injectables/UserService.html":{}}}],["userseller",{"_index":1295,"title":{},"body":{"injectables/TransactionService.html":{}}}],["usersellerid",{"_index":1301,"title":{},"body":{"injectables/TransactionService.html":{}}}],["userservice",{"_index":797,"title":{"injectables/UserService.html":{}},"body":{"classes/GeneralGateway.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["usersessiondexists",{"_index":491,"title":{},"body":{"injectables/AuthService.html":{}}}],["usersessionsdoc",{"_index":490,"title":{},"body":{"injectables/AuthService.html":{}}}],["usersessionsdoc.save",{"_index":508,"title":{},"body":{"injectables/AuthService.html":{}}}],["usersessionsdoc.sessions.push",{"_index":504,"title":{},"body":{"injectables/AuthService.html":{}}}],["usersessionsdoc.sessions[usersessionsdoc.sessions.length",{"_index":510,"title":{},"body":{"injectables/AuthService.html":{}}}],["usersignin",{"_index":459,"title":{},"body":{"injectables/AuthService.html":{}}}],["usersignin._id",{"_index":488,"title":{},"body":{"injectables/AuthService.html":{}}}],["usersignin.email.key",{"_index":489,"title":{},"body":{"injectables/AuthService.html":{}}}],["usersignin.email.status",{"_index":501,"title":{},"body":{"injectables/AuthService.html":{}}}],["usersignin.password.key",{"_index":473,"title":{},"body":{"injectables/AuthService.html":{}}}],["usersignin.password.status",{"_index":502,"title":{},"body":{"injectables/AuthService.html":{}}}],["usersignin.premium.status",{"_index":482,"title":{},"body":{"injectables/AuthService.html":{}}}],["usersignin.rank.admin",{"_index":476,"title":{},"body":{"injectables/AuthService.html":{}}}],["usersignin.rank.mod",{"_index":478,"title":{},"body":{"injectables/AuthService.html":{}}}],["usersignin.rank.seller",{"_index":480,"title":{},"body":{"injectables/AuthService.html":{}}}],["usersignin.suspension.reason",{"_index":525,"title":{},"body":{"injectables/AuthService.html":{}}}],["usersignin.suspension.status",{"_index":503,"title":{},"body":{"injectables/AuthService.html":{}}}],["usersignin.username",{"_index":474,"title":{},"body":{"injectables/AuthService.html":{}}}],["useunifiedtopology",{"_index":173,"title":{},"body":{"modules/AppModule.html":{}}}],["usevalue",{"_index":685,"title":{},"body":{"modules/ConfigModule.html":{}}}],["usuario",{"_index":1526,"title":{},"body":{"injectables/UserService.html":{}}}],["utc",{"_index":403,"title":{},"body":{"injectables/AuthService.html":{},"classes/GeneralGateway.html":{}}}],["validate",{"_index":828,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validate(payload",{"_index":830,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validationpipe",{"_index":250,"title":{},"body":{"controllers/AuthController.html":{}}}],["validator",{"_index":612,"title":{},"body":{"classes/BuyerAddMarketDto.html":{},"classes/BuyerRemoveMarketDto.html":{},"classes/CommentMarketDto.html":{},"classes/CommentRemoveMarketDto.html":{},"classes/ReactionAddMarketDto.html":{},"classes/ReactionRemoveMarketDto.html":{},"classes/ReactionsDto.html":{},"classes/SecurityCode.html":{},"classes/SecurityDto.html":{},"classes/SecurityUpdateDto.html":{},"classes/SignInDto.html":{},"classes/TransactionDeleteDto.html":{},"classes/UpdateUserDto.html":{},"dependencies.html":{}}}],["value",{"_index":371,"title":{},"body":{"injectables/AuthService.html":{},"classes/ConfigService.html":{},"classes/GeneralGateway.html":{},"injectables/MarketService.html":{},"injectables/TransactionService.html":{},"classes/UpdateUserDto.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":1364,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{}}}],["variables",{"_index":1689,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["verification",{"_index":425,"title":{},"body":{"injectables/AuthService.html":{}}}],["verify",{"_index":844,"title":{},"body":{"injectables/JwtStrategy.html":{},"index.html":{}}}],["verify_email_request",{"_index":429,"title":{},"body":{"injectables/AuthService.html":{}}}],["verifyaccount",{"_index":219,"title":{},"body":{"controllers/AuthController.html":{}}}],["verifyaccount(userid",{"_index":252,"title":{},"body":{"controllers/AuthController.html":{}}}],["verifyapi",{"_index":113,"title":{},"body":{"controllers/AppController.html":{}}}],["verifyemail",{"_index":343,"title":{},"body":{"injectables/AuthService.html":{}}}],["verifyemail(userid",{"_index":362,"title":{},"body":{"injectables/AuthService.html":{}}}],["verifying",{"_index":551,"title":{},"body":{"injectables/AuthService.html":{}}}],["verifysecurity",{"_index":220,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["verifysecurity(security",{"_index":255,"title":{},"body":{"controllers/AuthController.html":{}}}],["verifysecurity(securitydto",{"_index":365,"title":{},"body":{"injectables/AuthService.html":{}}}],["verifysession",{"_index":221,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["verifysession(userid",{"_index":260,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["verifytoken",{"_index":114,"title":{},"body":{"controllers/AppController.html":{}}}],["version",{"_index":650,"title":{},"body":{"classes/ChangelogModel.html":{}}}],["views/email",{"_index":185,"title":{},"body":{"modules/AppModule.html":{}}}],["websocketgateway",{"_index":808,"title":{},"body":{"classes/GeneralGateway.html":{}}}],["websocketserver",{"_index":802,"title":{},"body":{"classes/GeneralGateway.html":{}}}],["welcome",{"_index":1435,"title":{},"body":{"classes/UserModel.html":{}}}],["without",{"_index":1619,"title":{},"body":{"index.html":{}}}],["won",{"_index":745,"title":{},"body":{"classes/Email.html":{},"classes/Email-1.html":{},"classes/Market.html":{},"classes/Membership.html":{},"classes/Membership-1.html":{},"classes/Notifications.html":{},"classes/Notifications-1.html":{},"classes/Online.html":{},"classes/Online-1.html":{},"classes/Password.html":{},"classes/Password-1.html":{},"classes/Rank.html":{},"classes/Rank-1.html":{},"classes/Reactions.html":{},"classes/Reactions-1.html":{},"classes/Security.html":{},"classes/Security-1.html":{},"classes/Sessions.html":{},"classes/Sessions-1.html":{},"classes/Stats.html":{},"classes/Stats-1.html":{},"classes/Suspension.html":{},"classes/Suspension-1.html":{},"classes/Transaction.html":{},"classes/Transaction-1.html":{},"classes/TransactionBuyer.html":{},"classes/TransactionInfo.html":{}}}],["works",{"_index":128,"title":{},"body":{"controllers/AppController.html":{},"index.html":{}}}],["world",{"_index":822,"title":{},"body":{"classes/GeneralGateway.html":{}}}],["yarn",{"_index":1653,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":76,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ConfigModule.html":{},"modules/MarketModule.html":{},"modules/TransactionModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AdminController.html":{"url":"controllers/AdminController.html","title":"controller - AdminController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AdminController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/admin/admin.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                admin\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                GetChangelog\n                            \n                            \n                                    Public\n                                    Async\n                                NewChangelog\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            GetChangelog\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    GetChangelog()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/get/changelog')\n                \n            \n\n            \n                \n                    Defined in src/modules/admin/admin.controller.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            NewChangelog\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    NewChangelog(changelog: ChangelogModel, response, lang: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put('/new/changelog')\n                \n            \n\n            \n                \n                    Defined in src/modules/admin/admin.controller.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changelog\n                                    \n                                                ChangelogModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    response\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    lang\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Put, Body, Res, HttpStatus, Get } from '@nestjs/common';\nimport { AdminService } from './admin.service';\nimport { ChangelogModel } from './models/changelog.model';\nimport { I18nService, I18nLang } from 'nestjs-i18n';\n\n@Controller('admin')\nexport class AdminController {\n  constructor(\n    private readonly adminService: AdminService,\n    private readonly i18nService: I18nService,\n  ) {}\n\n  @Put('/new/changelog')\n  public async NewChangelog(\n    @Body() changelog: ChangelogModel,\n    @Res() response,\n    @I18nLang() lang: string,\n  ) {\n    return await this.adminService.NewChangelog(changelog).then(() => {\n      response.status(HttpStatus.CREATED).json({\n        statusCode: HttpStatus.CREATED,\n        message: this.i18nService.translate(\n          'translations.admin.controller.changelog_added',\n          {\n            lang,\n          },\n        ),\n      });\n    });\n  }\n\n  @Get('/get/changelog')\n  public async GetChangelog() {\n    return await this.adminService.GetChangelog();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AdminModule.html":{"url":"modules/AdminModule.html","title":"module - AdminModule","body":"\n                   \n\n\n\n\n    Modules\n    AdminModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AdminModule\n\n\n\ncluster_AdminModule_providers\n\n\n\n\nAdminService\n\nAdminService\n\n\n\nAdminModule\n\nAdminModule\n\nAdminModule -->\n\nAdminService->AdminModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/admin/admin.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AdminService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AdminController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AdminController } from './admin.controller';\nimport { AdminService } from './admin.service';\nimport { TypegooseModule } from 'nestjs-typegoose';\nimport { ChangelogModel } from './models/changelog.model';\n\n@Module({\n  imports: [TypegooseModule.forFeature([ChangelogModel])],\n  controllers: [AdminController],\n  providers: [AdminService],\n})\nexport class AdminModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AdminService.html":{"url":"injectables/AdminService.html","title":"injectable - AdminService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AdminService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/admin/admin.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                GetChangelog\n                            \n                            \n                                    Public\n                                    Async\n                                NewChangelog\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(changelogModel: ReturnModelType<>, i18nService: I18nRequestScopeService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/admin/admin.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        changelogModel\n                                                  \n                                                        \n                                                                    ReturnModelType<>\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        i18nService\n                                                  \n                                                        \n                                                                    I18nRequestScopeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            GetChangelog\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    GetChangelog()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/admin/admin.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            NewChangelog\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    NewChangelog(changelogModel: ChangelogModel)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/admin/admin.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changelogModel\n                                    \n                                                ChangelogModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, BadRequestException } from '@nestjs/common';\nimport { ChangelogModel } from './models/changelog.model';\nimport { InjectModel } from 'nestjs-typegoose';\nimport { ReturnModelType } from '@typegoose/typegoose';\nimport { I18nRequestScopeService } from 'nestjs-i18n';\n\n@Injectable()\nexport class AdminService {\n  constructor(\n    @InjectModel(ChangelogModel)\n    private readonly changelogModel: ReturnModelType,\n    private readonly i18nService: I18nRequestScopeService,\n  ) {}\n\n  public async NewChangelog(changelogModel: ChangelogModel) {\n    return this.changelogModel.create(changelogModel).catch(() => {\n      throw new BadRequestException(\n        this.i18nService.translate(\n          'translations.admin.service.changelog_error_add',\n        ),\n      );\n    });\n  }\n\n  public async GetChangelog() {\n    return await this.changelogModel\n      .find()\n      .populate('author.info', 'username name photo cover rank')\n      .exec();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                verifyApi\n                            \n                            \n                                verifyToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            verifyApi\n                        \n                        \n                    \n                \n            \n            \n                \nverifyApi()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            verifyToken\n                        \n                        \n                    \n                \n            \n            \n                \nverifyToken()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(undefined)@Get('/token')\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, UseGuards } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Controller()\nexport class AppController {\n  constructor() {}\n\n  @Get()\n  verifyApi(): string {\n    return 'The Connection to the APi is correct.';\n  }\n\n  @UseGuards(AuthGuard())\n  @Get('/token')\n  verifyToken(): string {\n    return 'The user token works correctly.';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAdminModule\n\nAdminModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAdminModule->AppModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nConfigModule\n\nConfigModule\n\nAppModule -->\n\nConfigModule->AppModule\n\n\n\n\n\nMarketModule\n\nMarketModule\n\nAppModule -->\n\nMarketModule->AppModule\n\n\n\n\n\nTransactionModule\n\nTransactionModule\n\nAppModule -->\n\nTransactionModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AdminModule\n                        \n                        \n                            AuthModule\n                        \n                        \n                            ConfigModule\n                        \n                        \n                            MarketModule\n                        \n                        \n                            TransactionModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module, CacheModule, CacheInterceptor } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { ConfigModule } from './config/config.module';\nimport { ConfigService } from './config/config.service';\nimport { ConfigurationEnum } from './keys/configuration.enum';\nimport { TypegooseModule } from 'nestjs-typegoose';\nimport { MailerModule, HandlebarsAdapter } from '@nest-modules/mailer';\nimport {\n  I18nModule,\n  QueryResolver,\n  HeaderResolver,\n  CookieResolver,\n} from 'nestjs-i18n';\nimport { join } from 'path';\nimport { UserModule } from './modules/user/user.module';\nimport { AuthModule } from './auth/auth.module';\nimport { GeneralGateway } from './gateways/general.gateway';\nimport { APP_INTERCEPTOR } from '@nestjs/core';\nimport { AdminModule } from './modules/admin/admin.module';\nimport { MarketModule } from './modules/market/market.module';\nimport { TransactionModule } from './modules/transaction/transaction.module';\n\n@Module({\n  imports: [\n    TypegooseModule.forRootAsync({\n      imports: [ConfigModule],\n      inject: [ConfigService],\n      useFactory: async (configService: ConfigService) => ({\n        uri: configService.get(ConfigurationEnum.DB_HOST),\n        useNewUrlParser: true,\n        useUnifiedTopology: true,\n        useCreateIndex: true,\n        useFindAndModify: false,\n      }),\n    }),\n    MailerModule.forRootAsync({\n      imports: [ConfigModule],\n      inject: [ConfigService],\n      useFactory: async (configService: ConfigService) => ({\n        transport: configService.get(ConfigurationEnum.EMAIL_HOST),\n        defaults: {\n          from: configService.get(ConfigurationEnum.EMAIL_FROM),\n        },\n        template: {\n          dir: __dirname + '/views/email/',\n          adapter: new HandlebarsAdapter(),\n          options: {\n            strict: true,\n          },\n        },\n      }),\n    }),\n    I18nModule.forRoot({\n      path: join(__dirname, '/i18n'),\n      filePattern: '*.json',\n      fallbackLanguage: 'en_US',\n      saveMissing: false,\n      resolvers: [\n        new QueryResolver(['lang', 'locale', 'l']),\n        new HeaderResolver(),\n        new CookieResolver(['lang', 'locale', 'l']),\n      ],\n    }),\n    ConfigModule,\n    UserModule,\n    AuthModule,\n    CacheModule.register(),\n    AdminModule,\n    MarketModule,\n    TransactionModule,\n  ],\n  controllers: [AppController],\n  providers: [\n    GeneralGateway,\n    {\n      provide: APP_INTERCEPTOR,\n      useClass: CacheInterceptor,\n    },\n  ],\n})\nexport class AppModule {\n  static port: number | string;\n  constructor(private readonly configService: ConfigService) {\n    AppModule.port = this.configService.get(ConfigurationEnum.PORT_API);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                ChangeSecurity\n                            \n                            \n                                    Public\n                                    Async\n                                LogOut\n                            \n                            \n                                    Public\n                                    Async\n                                PasswordChange\n                            \n                            \n                                    Public\n                                    Async\n                                PasswordResetRequest\n                            \n                            \n                                    Public\n                                    Async\n                                SignIn\n                            \n                            \n                                    Public\n                                    Async\n                                SignUp\n                            \n                            \n                                    Public\n                                    Async\n                                VerifyAccount\n                            \n                            \n                                    Public\n                                    Async\n                                VerifySecurity\n                            \n                            \n                                    Public\n                                    Async\n                                VerifySession\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            ChangeSecurity\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ChangeSecurity(securityUpdate: SecurityUpdateDto, userIdRequest: string, userRankRequest: string[], lang: string, response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(undefined)@Patch('/account/security/change')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:164\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    securityUpdate\n                                    \n                                                SecurityUpdateDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userIdRequest\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userRankRequest\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    lang\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    response\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            LogOut\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    LogOut(userId: string, sesionId: string, lang: string, response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/account/logout')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:187\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    sesionId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    lang\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    response\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            PasswordChange\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    PasswordChange(userId: string, tokenPassword: string, newPassword: string, lang: string, response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch('/account/password/change')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:140\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    tokenPassword\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    newPassword\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    lang\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    response\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            PasswordResetRequest\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    PasswordResetRequest(userId: string, userIp: string, lang: string, response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/account/password/reset')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:120\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userIp\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    lang\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    response\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            SignIn\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    SignIn(user: SignInDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/signin')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                SignInDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            SignUp\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    SignUp(user: UserModel, response, lang: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put('/signup')@UsePipes(new ValidationPipe())\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                UserModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    response\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    lang\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            VerifyAccount\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    VerifyAccount(userId: string, token: string, lang: string, response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch('/account/verify/email')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    lang\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    response\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            VerifySecurity\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    VerifySecurity(security: SecurityDto, lang: string, response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/account/verify/security')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    security\n                                    \n                                                SecurityDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    lang\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    response\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            VerifySession\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    VerifySession(userId: string, sessioId: string, sessioIp: string, sessioDevice: string, lang: string, response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/account/verify/session')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:96\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    sessioId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    sessioIp\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    sessioDevice\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    lang\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    response\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Put,\n  UsePipes,\n  ValidationPipe,\n  Body,\n  Res,\n  HttpStatus,\n  Get,\n  Patch,\n  Post,\n  UseGuards,\n} from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { I18nService, I18nLang } from 'nestjs-i18n';\nimport { UserModel } from '../modules/user/models/user.model';\nimport { SignInDto } from './dto/signin.dto';\nimport { SecurityDto } from './dto/security.dto';\nimport { SecurityUpdateDto } from './dto/security.update.dto';\nimport { AuthGuard } from '@nestjs/passport';\nimport { GetUser } from '../decorators/user.decorator';\n\n@Controller('auth')\nexport class AuthController {\n  constructor(\n    private readonly authService: AuthService,\n    private readonly i18nService: I18nService,\n  ) {}\n\n  @Put('/signup')\n  @UsePipes(new ValidationPipe())\n  public async SignUp(\n    @Body() user: UserModel,\n    @Res() response,\n    @I18nLang() lang: string,\n  ) {\n    await this.authService.SignUp(user);\n    response.status(HttpStatus.CREATED).json({\n      statusCode: HttpStatus.CREATED,\n      username: user.username,\n      email: user.email,\n      message: this.i18nService.translate(\n        'translations.auth.controller.user_created',\n        {\n          lang,\n        },\n      ),\n    });\n  }\n\n  @Post('/signin')\n  public async SignIn(@Body() user: SignInDto) {\n    return await this.authService.SignIn(user);\n  }\n\n  @Patch('/account/verify/email')\n  public async VerifyAccount(\n    @Body('userId') userId: string,\n    @Body('token') token: string,\n    @I18nLang() lang: string,\n    @Res() response,\n  ) {\n    return await this.authService.VerifyEmail(userId, token).then(() => {\n      response.status(HttpStatus.OK).json({\n        statusCode: HttpStatus.OK,\n        message: this.i18nService.translate(\n          'translations.auth.controller.account_confirmation',\n          {\n            lang,\n          },\n        ),\n      });\n    });\n  }\n\n  @Post('/account/verify/security')\n  public async VerifySecurity(\n    @Body() security: SecurityDto,\n    @I18nLang() lang: string,\n    @Res() response,\n  ) {\n    return await this.authService.VerifySecurity(security).then(() => {\n      response.status(HttpStatus.OK).json({\n        statusCode: HttpStatus.OK,\n        message: this.i18nService.translate(\n          'translations.auth.controller.security_challenge_completed',\n          {\n            lang,\n          },\n        ),\n      });\n    });\n  }\n\n  @Post('/account/verify/session')\n  public async VerifySession(\n    @Body('userId') userId: string,\n    @Body('sessioId') sessioId: string,\n    @Body('sessionIp') sessioIp: string,\n    @Body('sessionDevice') sessioDevice: string,\n    @I18nLang() lang: string,\n    @Res() response,\n  ) {\n    return await this.authService\n      .VerifySession(userId, sessioDevice, sessioIp, sessioId)\n      .then(() => {\n        response.status(HttpStatus.OK).json({\n          statusCode: HttpStatus.OK,\n          message: this.i18nService.translate(\n            'translations.auth.controller.session_confirmation',\n            {\n              lang,\n            },\n          ),\n        });\n      });\n  }\n\n  @Post('/account/password/reset')\n  public async PasswordResetRequest(\n    @Body('userId') userId: string,\n    @Body('userIp') userIp: string,\n    @I18nLang() lang: string,\n    @Res() response,\n  ) {\n    return await this.authService.SendPasswordReset(userId, userIp).then(() => {\n      response.status(HttpStatus.OK).json({\n        statusCode: HttpStatus.OK,\n        message: this.i18nService.translate(\n          'translations.auth.controller.password_reset',\n          {\n            lang,\n          },\n        ),\n      });\n    });\n  }\n\n  @Patch('/account/password/change')\n  public async PasswordChange(\n    @Body('userId') userId: string,\n    @Body('tokenPassword') tokenPassword: string,\n    @Body('newPassword') newPassword: string,\n    @I18nLang() lang: string,\n    @Res() response,\n  ) {\n    return await this.authService\n      .ChangePassword(userId, tokenPassword, newPassword)\n      .then(() => {\n        response.status(HttpStatus.OK).json({\n          statusCode: HttpStatus.OK,\n          message: this.i18nService.translate(\n            'translations.auth.controller.change_password',\n            {\n              lang,\n            },\n          ),\n        });\n      });\n  }\n\n  @UseGuards(AuthGuard())\n  @Patch('/account/security/change')\n  public async ChangeSecurity(\n    @Body() securityUpdate: SecurityUpdateDto,\n    @GetUser('id') userIdRequest: string,\n    @GetUser('rank') userRankRequest: string[],\n    @I18nLang() lang: string,\n    @Res() response,\n  ) {\n    return await this.authService\n      .ChangeSecurity(securityUpdate, userIdRequest, userRankRequest)\n      .then(() => {\n        response.status(HttpStatus.OK).json({\n          statusCode: HttpStatus.OK,\n          message: this.i18nService.translate(\n            'translations.auth.controller.security_updated',\n            {\n              lang,\n            },\n          ),\n        });\n      });\n  }\n\n  @Post('/account/logout')\n  public async LogOut(\n    @Body('userId') userId: string,\n    @Body('sesionId') sesionId: string,\n    @I18nLang() lang: string,\n    @Res() response,\n  ) {\n    return await this.authService.LogOut(userId, sesionId).then(() => {\n      response.status(HttpStatus.OK).json({\n        statusCode: HttpStatus.OK,\n        message: this.i18nService.translate(\n          'translations.auth.controller.session_logout',\n          {\n            lang,\n          },\n        ),\n      });\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nJwtStrategy \n\nJwtStrategy \n\n\n\nAuthModule\n\nAuthModule\n\nJwtStrategy  -->\n\nAuthModule->JwtStrategy \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            JwtStrategy\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { AuthController } from './auth.controller';\nimport { TypegooseModule } from 'nestjs-typegoose';\nimport { UserModel } from '../modules/user/models/user.model';\nimport { ConfigService } from '../config/config.service';\nimport { JwtStrategy } from './strategies/jwt.strategy';\nimport { PassportModule } from '@nestjs/passport';\nimport { ConfigModule } from '../config/config.module';\nimport { JwtModule } from '@nestjs/jwt';\nimport { ConfigurationEnum } from '../keys/configuration.enum';\n\n@Module({\n  imports: [\n    TypegooseModule.forFeature([UserModel]),\n    PassportModule.register({\n      defaultStrategy: 'jwt',\n    }),\n    JwtModule.registerAsync({\n      imports: [ConfigModule],\n      inject: [ConfigService],\n      useFactory(configService: ConfigService) {\n        return {\n          secret: configService.get(ConfigurationEnum.TOKEN_SECRET),\n          signOptions: {\n            expiresIn: '15d',\n          },\n        };\n      },\n    }),\n  ],\n  providers: [AuthService, ConfigService, JwtStrategy],\n  controllers: [AuthController],\n  exports: [JwtStrategy, PassportModule],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                ChangePassword\n                            \n                            \n                                    Public\n                                    Async\n                                ChangeSecurity\n                            \n                            \n                                    Public\n                                    Async\n                                LogOut\n                            \n                            \n                                    Public\n                                    Async\n                                SendPasswordReset\n                            \n                            \n                                    Public\n                                    Async\n                                SignIn\n                            \n                            \n                                    Public\n                                    Async\n                                SignUp\n                            \n                            \n                                    Public\n                                    Async\n                                VerifyEmail\n                            \n                            \n                                    Public\n                                    Async\n                                VerifySecurity\n                            \n                            \n                                    Public\n                                    Async\n                                VerifySession\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userModel: ReturnModelType<>, mailService: MailerService, configService: ConfigService, jwtService: JwtService, i18nService: I18nRequestScopeService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userModel\n                                                  \n                                                        \n                                                                    ReturnModelType<>\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mailService\n                                                  \n                                                        \n                                                                    MailerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        i18nService\n                                                  \n                                                        \n                                                                    I18nRequestScopeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            ChangePassword\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ChangePassword(userId: string, tokenPasword: string, newPassword: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:500\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    tokenPasword\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    newPassword\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            ChangeSecurity\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ChangeSecurity(securityUpdate: SecurityUpdateDto, userRequestId: string, userRequestRank: string[])\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:564\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    securityUpdate\n                                    \n                                                SecurityUpdateDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userRequestId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userRequestRank\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            LogOut\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    LogOut(userId: string, sessionId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:615\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    sessionId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            SendPasswordReset\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    SendPasswordReset(userId: string, userIp: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:430\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userIp\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            SignIn\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    SignIn(signInDto: SignInDto)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:122\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    signInDto\n                                    \n                                                SignInDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            SignUp\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    SignUp(user: UserModel)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                UserModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            VerifyEmail\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    VerifyEmail(userId: string, tokenEmail: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:292\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    tokenEmail\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            VerifySecurity\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    VerifySecurity(securityDto: SecurityDto)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:374\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    securityDto\n                                    \n                                                SecurityDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            VerifySession\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    VerifySession(userId: string, sessionDevice: string, sessionIp: string, sessionId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:344\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    sessionDevice\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    sessionIp\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    sessionId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            logger\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Logger\n\n                        \n                    \n                    \n                        \n                            Default value : new Logger('Authentication')\n                        \n                    \n                        \n                            \n                                    Defined in src/auth/auth.service.ts:31\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {\n  Injectable,\n  Logger,\n  BadGatewayException,\n  ConflictException,\n  BadRequestException,\n  UnauthorizedException,\n  NotFoundException,\n  ForbiddenException,\n} from '@nestjs/common';\nimport { InjectModel } from 'nestjs-typegoose';\nimport { JwtService } from '@nestjs/jwt';\nimport { UserModel } from '../modules/user/models/user.model';\nimport { ReturnModelType } from '@typegoose/typegoose';\nimport { genSalt, hash, compare } from 'bcryptjs';\nimport { TokenGenerator } from 'ts-token-generator';\nimport { MailerService } from '@nest-modules/mailer';\nimport { ConfigService } from '../config/config.service';\nimport { RanksEnum } from '../keys/ranks.enum';\nimport { I18nRequestScopeService } from 'nestjs-i18n';\nimport * as moments from 'moment';\nimport * as momentstz from 'moment-timezone';\nimport { SignInDto } from './dto/signin.dto';\nimport { SecurityDto } from './dto/security.dto';\nimport { ConfigurationEnum } from '../keys/configuration.enum';\nimport { IJwtPayload } from './jwt.payload.interface';\nimport { SecurityUpdateDto } from './dto/security.update.dto';\n\n@Injectable()\nexport class AuthService {\n  private readonly logger: Logger = new Logger('Authentication');\n\n  constructor(\n    @InjectModel(UserModel)\n    private readonly userModel: ReturnModelType,\n    private readonly mailService: MailerService,\n    private readonly configService: ConfigService,\n    private readonly jwtService: JwtService,\n    private readonly i18nService: I18nRequestScopeService,\n  ) {}\n\n  public async SignUp(user: UserModel): Promise {\n    this.logger.log(\n      `Creating a new user with username ${user.username} and with email ${user.email.key}.`,\n    );\n    const userCreated = new this.userModel(user);\n    const passwordSalt = await genSalt(10);\n\n    const timezone = momentstz()\n      .tz('America/New_York')\n      .utc()\n      .format();\n\n    const time = moments(timezone)\n      .add(15, 'minutes')\n      .toDate();\n\n    userCreated.email.token = new TokenGenerator().generate();\n    userCreated.email.expiration = time;\n    userCreated.password.key = await hash(\n      userCreated.password.key,\n      passwordSalt,\n    );\n    userCreated.password.token = new TokenGenerator().generate();\n    userCreated.ip = user.ip;\n    await userCreated\n      .save()\n      .then(() => {\n        this.logger.log(\n          `User successfully created with username ${user.username}`,\n        );\n        this.mailService\n          .sendMail({\n            to: userCreated.email.key,\n            from: 'saturnoxspace@outlook.com',\n            subject: 'Verification account | Akatsuki Project',\n            template: 'verify_email_request',\n            context: {\n              name: userCreated.name,\n              username: user.username,\n              password: user.password.key,\n              confirm_account: `${this.configService.get(\n                ConfigurationEnum.SERVER_HOST,\n              )}auth/email/verification/${userCreated._id}/${\n                userCreated.email.token\n              }`,\n              google_play_app: 'https://play.google.com/akatsukiapp_',\n            },\n          })\n          .catch(() => {\n            this.logger.error(\n              `Could not send email to user ${user.username} with email ${user.email.key}.`,\n            );\n            throw new BadGatewayException(\n              this.i18nService.translate(\n                'translations.auth.service.send_email',\n              ),\n            );\n          });\n      })\n      .catch((error: any) => {\n        if (error.code === 11000) {\n          this.logger.error(\n            `Could not create user ${user.username} because a user with this data already exists.`,\n          );\n          throw new ConflictException(\n            this.i18nService.translate(\n              'translations.auth.service.duplicate_user',\n            ),\n          );\n        }\n\n        this.logger.error(\n          `There was a problem processing the user registration request for ${user.username}.`,\n        );\n        throw new BadRequestException(\n          this.i18nService.translate('translations.auth.service.error_signup'),\n        );\n      });\n  }\n\n  public async SignIn(\n    signInDto: SignInDto,\n  ): Promise {\n    const { email, password, device, ip } = signInDto;\n    const userSignIn = await this.userModel.findOne({\n      'email.key': email,\n    });\n    this.logger.log(\n      `Logging into the account on the device ${device} with IP ${ip}.`,\n    );\n    const timezone = momentstz()\n      .tz('America/New_York')\n      .utc()\n      .format();\n\n    const time = moments(timezone).toDate();\n\n    if (!userSignIn) {\n      this.logger.error(\n        `The attempt to login to the account on the device ${device} with IP ${ip} was rejected due to incorrect cdentials.`,\n      );\n\n      throw new UnauthorizedException(\n        this.i18nService.translate(\n          'translations.auth.service.invalid_credentials',\n        ),\n      );\n    }\n\n    const isPasswordMatch = await compare(password, userSignIn.password.key);\n    if (!isPasswordMatch) {\n      this.logger.error(\n        `The attempt to login to the account ${userSignIn.username} on the device ${device} with IP ${ip} was rejected due to incorrect cdentials.`,\n      );\n\n      throw new UnauthorizedException(\n        this.i18nService.translate(\n          'translations.auth.service.invalid_credentials',\n        ),\n      );\n    }\n\n    const rankData: string[] = [];\n    if (userSignIn.rank.admin) {\n      rankData.push(RanksEnum.ADMINISTRATOR);\n    }\n\n    if (userSignIn.rank.mod) {\n      rankData.push(RanksEnum.MODERATOR);\n    }\n\n    if (userSignIn.rank.seller) {\n      rankData.push(RanksEnum.SELLER);\n    }\n\n    if (userSignIn.premium.status) {\n      rankData.push(RanksEnum.PREMIUM);\n    }\n\n    this.logger.log(\n      `Generating ${userSignIn.username} access token for device ${device} with IP ${ip}.`,\n    );\n\n    const payload: IJwtPayload = {\n      id: userSignIn._id,\n      email: userSignIn.email.key,\n      username: userSignIn.username,\n      rank: rankData,\n    };\n\n    const userSessionsDoc = await this.userModel.findOne({\n      'email.key': email,\n    });\n\n    if (!userSessionsDoc) {\n      this.logger.error(\n        `The attempt to login to the account ${userSignIn.username} on the device ${device} with IP ${ip} was rejected due to incorrect cdentials.`,\n      );\n\n      throw new UnauthorizedException(\n        this.i18nService.translate(\n          'translations.auth.service.invalid_credentials',\n        ),\n      );\n    }\n\n    const userSessiondExists = await this.userModel.findOne({\n      // prettier-ignore\n      '_id': userSignIn._id,\n      'sessions.device': device,\n      'sessions.ip': ip,\n    });\n\n    if (userSessiondExists) {\n      this.logger.error(\n        `The attempt to log on to the account ${userSignIn.username} on the device ${device} with IP ${ip} was rejected because there is already a session registered on that device.`,\n      );\n\n      throw new UnauthorizedException(\n        this.i18nService.translate(\n          'translations.auth.service.session_already_exists',\n        ),\n      );\n    } else {\n      if (\n        userSignIn.email.status &&\n        userSignIn.password.status &&\n        !userSignIn.suspension.status\n      ) {\n        userSessionsDoc.sessions.push({\n          device,\n          ip,\n          twofactor: false,\n          createdAt: time,\n          updatedAt: time,\n        });\n        await userSessionsDoc.save();\n      } else {\n        throw new UnauthorizedException(\n          this.i18nService.translate('translations.auth.service.no_permission'),\n        );\n      }\n    }\n\n    const sessionId =\n      userSessionsDoc.sessions[userSessionsDoc.sessions.length - 1]._id;\n    const tokenUser = this.jwtService.sign(payload);\n    if (\n      tokenUser &&\n      userSignIn.email.status &&\n      userSignIn.password.status &&\n      !userSignIn.suspension.status &&\n      sessionId\n    ) {\n      this.logger.log(\n        `The attempt to log in to the account ${userSignIn.username} in the disposition ${device} with IP ${ip} was successfully completed and the session was logged into the account.`,\n      );\n      return {\n        user_id: userSignIn._id,\n        session_id: sessionId,\n        confirmation: userSignIn.email.status,\n        password: userSignIn.password.status,\n        ban: userSignIn.suspension.status,\n        ban_reason: '',\n        token: tokenUser,\n      };\n    } else {\n      this.logger.error(\n        `The attempt to log in to the account ${userSignIn.username} in the disposition ${device} with IP ${ip} was rejected because the account has insufficient permissions to generate an access token and a session.`,\n      );\n      return {\n        user_id: userSignIn._id,\n        session_id: '',\n        confirmation: userSignIn.email.status,\n        password: userSignIn.password.status,\n        ban: userSignIn.suspension.status,\n        ban_reason: userSignIn.suspension.reason,\n        token: '',\n      };\n    }\n  }\n\n  public async VerifyEmail(userId: string, tokenEmail: string): Promise {\n    let user;\n    try {\n      user = await this.userModel.findById(userId);\n    } catch (error) {\n      throw new ConflictException(\n        this.i18nService.translate('translations.auth.service.user_not_found'),\n      );\n    }\n\n    if (!user) {\n      this.logger.error(\n        `The request for confirmation of electronic corrode could not be completed because there is no user with this data.`,\n      );\n\n      throw new NotFoundException(\n        this.i18nService.translate('translations.auth.service.user_not_found'),\n      );\n    }\n\n    this.logger.log(`Verifying email address for account ${user.username}.`);\n\n    const timezone = momentstz()\n      .tz('America/New_York')\n      .utc()\n      .format();\n\n    const time = moments(timezone)\n      .add(15, 'minutes')\n      .toDate();\n\n    if (tokenEmail === user.email.token) {\n      this.logger.log(\n        `Email address for the account ${user.username} has been successfully confirmed and the account login was enabled.`,\n      );\n\n      user.email.status = true;\n      user.email.expiration = time;\n      user.email.token = new TokenGenerator().generate();\n      user.save();\n    } else {\n      this.logger.error(\n        `The email activation of ${user.username} could not be completed because the Token is invalid or has expired.`,\n      );\n      throw new BadRequestException(\n        this.i18nService.translate(\n          'translations.auth.service.confirmation_error_token',\n        ),\n      );\n    }\n  }\n\n  public async VerifySession(\n    userId: string,\n    sessionDevice: string,\n    sessionIp: string,\n    sessionId: string,\n  ): Promise {\n    let userSessiondExists;\n    try {\n      userSessiondExists = await this.userModel.findOne({\n        // prettier-ignore\n        '_id': userId,\n        'sessions._id': sessionId,\n        'sessions.device': sessionDevice,\n        'sessions.ip': sessionIp,\n      });\n    } catch (error) {\n      throw new BadRequestException(\n        this.i18nService.translate('translations.auth.service.session_invalid'),\n      );\n    }\n\n    if (!userSessiondExists) {\n      throw new UnauthorizedException(\n        this.i18nService.translate(\n          'translations.auth.service.session_not_exists',\n        ),\n      );\n    }\n  }\n\n  public async VerifySecurity(securityDto: SecurityDto) {\n    const user: UserModel = await this.userModel\n      .findById(securityDto.id)\n      .catch(() => {\n        throw new ConflictException(\n          this.i18nService.translate(\n            'translations.auth.service.user_not_found',\n          ),\n        );\n      });\n\n    if (!user) {\n      this.logger.error(\n        `The security challenge could not be completed because there is no account with this data.`,\n      );\n\n      throw new NotFoundException(\n        this.i18nService.translate('translations.auth.service.user_not_found'),\n      );\n    }\n\n    this.logger.log(\n      `Verifying security codes to be able to complete the login in the account ${user.username}.`,\n    );\n\n    if (!user.security.enabled) {\n      this.logger.error(\n        `The security challenge could not be processed because the ${user.username} account does not have two-factor security enabled.`,\n      );\n\n      throw new ConflictException(\n        this.i18nService.translate(\n          'translations.auth.service.security_no_enabled',\n        ),\n      );\n    }\n\n    if (\n      securityDto.code1 !== user.security.code1 ||\n      securityDto.code2 !== user.security.code2 ||\n      securityDto.code3 !== user.security.code3 ||\n      securityDto.code4 !== user.security.code4 ||\n      securityDto.code5 !== user.security.code5\n    ) {\n      this.logger.error(\n        `Security check for account ${user.username} rejected due to incorrectly entered codes.`,\n      );\n\n      throw new UnauthorizedException(\n        this.i18nService.translate(\n          'translations.auth.service.security_code_failed',\n        ),\n      );\n    }\n  }\n\n  public async SendPasswordReset(userId: string, userIp: string) {\n    let user;\n    try {\n      user = await this.userModel.findById(userId);\n    } catch (error) {\n      throw new ConflictException(\n        this.i18nService.translate('translations.auth.service.user_not_found'),\n      );\n    }\n    const tokenPassword = new TokenGenerator().generate();\n\n    if (!user) {\n      this.logger.error(\n        `The request for password submission could not be completed because there is no account with this data.`,\n      );\n\n      throw new NotFoundException(\n        this.i18nService.translate('translations.auth.service.user_not_found'),\n      );\n    }\n\n    const timezone = momentstz()\n      .tz('America/New_York')\n      .utc()\n      .format();\n\n    const time = moments(timezone)\n      .add(15, 'minutes')\n      .toDate();\n\n    this.logger.log(\n      `Sending password change confirmation email to the associated email in the ${user.username} account.`,\n    );\n\n    await this.mailService\n      .sendMail({\n        to: user.email.key,\n        from: 'saturnoxspace@outlook.com',\n        subject: 'Resed password | Akatsuki Project',\n        template: 'password_reset_request',\n        context: {\n          reset_password: 'https://akatsukiapp.com/password/reset',\n          name: user.name,\n          ip: userIp,\n          token: tokenPassword,\n        },\n      })\n      .then(() => {\n        this.logger.log(\n          `A password change confirmation email was successfully sent to ${user.username}.`,\n        );\n\n        user.password.status = false;\n        user.password.expiration = time;\n        user.password.token = tokenPassword;\n        user.save();\n      })\n      .catch(() => {\n        this.logger.error(\n          `There was a problem sending the password change confirmation email to ${user.username}.`,\n        );\n\n        throw new BadRequestException(\n          this.i18nService.translate(\n            'translations.auth.service.password_error_reset_email',\n          ),\n        );\n      });\n  }\n\n  public async ChangePassword(\n    userId: string,\n    tokenPasword: string,\n    newPassword: string,\n  ): Promise {\n    let user;\n    try {\n      user = await this.userModel.findById(userId);\n    } catch (error) {\n      throw new ConflictException(\n        this.i18nService.translate('translations.auth.service.user_not_found'),\n      );\n    }\n\n    if (!user) {\n      this.logger.error(\n        `The password change process could not be completed because there is no account with this data.`,\n      );\n\n      throw new NotFoundException(\n        this.i18nService.translate('translations.auth.service.user_not_found'),\n      );\n    }\n\n    this.logger.log(\n      `Changing the account password ${user.username} with code Token ${tokenPasword}.`,\n    );\n\n    const salt = await genSalt(10);\n    const timezone = momentstz()\n      .tz('America/New_York')\n      .utc()\n      .format();\n\n    const time = moments(timezone)\n      .add(15, 'minutes')\n      .toDate();\n\n    if (\n      moments().toDate()  {\n        throw new BadRequestException(\n          this.i18nService.translate('translations.general.process_failed'),\n        );\n      });\n  }\n\n  public async LogOut(userId: string, sessionId: string) {\n    this.logger.log(\n      `Logging off the user with Id ${userId} and with session Id ${sessionId}.`,\n    );\n\n    try {\n      await this.userModel.findOneAndUpdate(\n        { _id: userId },\n        { $pull: { sessions: { _id: sessionId } } },\n      );\n    } catch (error) {\n      this.logger.error(\n        `The session could not be closed with Id ${sessionId} for the user with Id ${userId} because there is no session with that Id or a problem has occurred in the database.`,\n      );\n\n      throw new BadRequestException(\n        this.i18nService.translate(\n          'translations.auth.service.user_session_error',\n        ),\n      );\n    }\n\n    this.logger.log(\n      `Successfully closed session for the account with Id ${userId} and with session number ${sessionId}.`,\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BuyerAddMarketDto.html":{"url":"classes/BuyerAddMarketDto.html","title":"class - BuyerAddMarketDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BuyerAddMarketDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/market/dto/buyer.add.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                device\n                            \n                            \n                                    Public\n                                ip\n                            \n                            \n                                    Public\n                                product\n                            \n                            \n                                    Public\n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            device\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string | number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/market/dto/buyer.add.dto.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ip\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/market/dto/buyer.add.dto.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            product\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/market/dto/buyer.add.dto.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/market/dto/buyer.add.dto.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Ref } from '@typegoose/typegoose';\n\nimport { UserModel } from '../../../modules/user/models/user.model';\nimport { IsString, IsNotEmpty } from 'class-validator';\n\nexport class BuyerAddMarketDto {\n  @IsNotEmpty()\n  @IsString()\n  public product: string;\n\n  @IsNotEmpty()\n  @IsString()\n  public user: Ref;\n\n  @IsNotEmpty()\n  public device: string | number;\n\n  @IsNotEmpty()\n  @IsString()\n  public ip: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BuyerMarket.html":{"url":"classes/BuyerMarket.html","title":"class - BuyerMarket","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BuyerMarket\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/market/models/market.data.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                device\n                            \n                            \n                                    Public\n                                ip\n                            \n                            \n                                    Public\n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            device\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string | number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/market/models/market.data.model.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ip\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/market/models/market.data.model.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, ref: 'Users'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/market/models/market.data.model.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { prop, Ref } from '@typegoose/typegoose';\nimport { UserModel } from '../../../modules/user/models/user.model';\n\nexport class DiscountMarket {\n  @prop({ required: true, min: 0, max: 99 })\n  public percentage: number;\n\n  @prop({ required: true })\n  public exp: Date;\n}\n\nexport class BuyerMarket {\n  @prop({\n    required: true,\n    ref: 'Users',\n  })\n  public user: Ref;\n\n  @prop({ required: true })\n  public device: string | number;\n\n  @prop({ required: true })\n  public ip: string;\n}\n\nexport class CommentMarket {\n  @prop({\n    required: true,\n    ref: 'Users',\n  })\n  public author: Ref;\n\n  @prop({ required: true })\n  public device: string | number;\n\n  @prop({ required: true })\n  public ip: string;\n\n  @prop({ required: true, minlength: 50, maxlength: 500 })\n  public content: string;\n}\n\nexport class ReactionsMarket {\n  @prop({\n    required: true,\n    ref: 'Users',\n  })\n  public user: Ref;\n\n  @prop({ required: true })\n  public device: string | number;\n\n  @prop({ required: true })\n  public ip: string;\n\n  @prop({ required: true })\n  public type: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BuyerRemoveMarketDto.html":{"url":"classes/BuyerRemoveMarketDto.html","title":"class - BuyerRemoveMarketDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BuyerRemoveMarketDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/market/dto/buyer.remove.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                product\n                            \n                            \n                                    Public\n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            product\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/market/dto/buyer.remove.dto.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/market/dto/buyer.remove.dto.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsString } from 'class-validator';\n\nexport class BuyerRemoveMarketDto {\n  @IsNotEmpty()\n  @IsString()\n  public product: string;\n\n  @IsNotEmpty()\n  @IsString()\n  public user: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ChangelogAuthor.html":{"url":"classes/ChangelogAuthor.html","title":"class - ChangelogAuthor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ChangelogAuthor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/admin/models/changelog.data.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                device\n                            \n                            \n                                    Public\n                                info\n                            \n                            \n                                    Public\n                                ip\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            device\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string | number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/admin/models/changelog.data.model.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            info\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, ref: 'Users'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/admin/models/changelog.data.model.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ip\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/admin/models/changelog.data.model.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { prop, Ref } from '@typegoose/typegoose';\nimport { UserModel } from '../../../modules/user/models/user.model';\n\nexport class ChangelogAuthor {\n  @prop({\n    required: true,\n    ref: 'Users',\n  })\n  public info: Ref;\n\n  @prop({ required: true })\n  public device: string | number;\n\n  @prop({ required: true })\n  public ip: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ChangelogModel.html":{"url":"classes/ChangelogModel.html","title":"class - ChangelogModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ChangelogModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/admin/models/changelog.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                author\n                            \n                            \n                                    Public\n                                description\n                            \n                            \n                                    Public\n                                hash\n                            \n                            \n                                    Public\n                                title\n                            \n                            \n                                    Public\n                                version\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            author\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ChangelogAuthor\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, _id: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/admin/models/changelog.model.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, minlength: 50, maxlength: 3000})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/admin/models/changelog.model.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hash\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, minlength: 10, maxlength: 30})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/admin/models/changelog.model.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, minlength: 10, maxlength: 250})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/admin/models/changelog.model.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            version\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, minlength: 5, maxlength: 30})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/admin/models/changelog.model.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ChangelogAuthor } from './changelog.data.model';\nimport { prop, modelOptions } from '@typegoose/typegoose';\n\n@modelOptions({\n  options: {\n    customName: 'Changelogs',\n  },\n})\nexport class ChangelogModel {\n  @prop({ required: true, minlength: 10, maxlength: 250 })\n  public title: string;\n\n  @prop({ required: true, minlength: 5, maxlength: 30 })\n  public version: string;\n\n  @prop({ required: true, minlength: 10, maxlength: 30 })\n  public hash: string;\n\n  @prop({ required: true, minlength: 50, maxlength: 3000 })\n  public description: string;\n\n  @prop({ required: true, _id: false })\n  public author: ChangelogAuthor;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CommentMarket.html":{"url":"classes/CommentMarket.html","title":"class - CommentMarket","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CommentMarket\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/market/models/market.data.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                author\n                            \n                            \n                                    Public\n                                content\n                            \n                            \n                                    Public\n                                device\n                            \n                            \n                                    Public\n                                ip\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            author\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, ref: 'Users'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/market/models/market.data.model.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            content\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, minlength: 50, maxlength: 500})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/market/models/market.data.model.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            device\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string | number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/market/models/market.data.model.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ip\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/market/models/market.data.model.ts:37\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { prop, Ref } from '@typegoose/typegoose';\nimport { UserModel } from '../../../modules/user/models/user.model';\n\nexport class DiscountMarket {\n  @prop({ required: true, min: 0, max: 99 })\n  public percentage: number;\n\n  @prop({ required: true })\n  public exp: Date;\n}\n\nexport class BuyerMarket {\n  @prop({\n    required: true,\n    ref: 'Users',\n  })\n  public user: Ref;\n\n  @prop({ required: true })\n  public device: string | number;\n\n  @prop({ required: true })\n  public ip: string;\n}\n\nexport class CommentMarket {\n  @prop({\n    required: true,\n    ref: 'Users',\n  })\n  public author: Ref;\n\n  @prop({ required: true })\n  public device: string | number;\n\n  @prop({ required: true })\n  public ip: string;\n\n  @prop({ required: true, minlength: 50, maxlength: 500 })\n  public content: string;\n}\n\nexport class ReactionsMarket {\n  @prop({\n    required: true,\n    ref: 'Users',\n  })\n  public user: Ref;\n\n  @prop({ required: true })\n  public device: string | number;\n\n  @prop({ required: true })\n  public ip: string;\n\n  @prop({ required: true })\n  public type: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CommentMarketDto.html":{"url":"classes/CommentMarketDto.html","title":"class - CommentMarketDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CommentMarketDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/market/dto/comment.add.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                content\n                            \n                            \n                                    Public\n                                device\n                            \n                            \n                                    Public\n                                ip\n                            \n                            \n                                    Public\n                                product\n                            \n                            \n                                    Public\n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            content\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/market/dto/comment.add.dto.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            device\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string | number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/market/dto/comment.add.dto.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ip\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/market/dto/comment.add.dto.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            product\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/market/dto/comment.add.dto.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/market/dto/comment.add.dto.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Ref } from '@typegoose/typegoose';\n\nimport { UserModel } from '../../user/models/user.model';\nimport { IsNotEmpty, IsString } from 'class-validator';\n\nexport class CommentMarketDto {\n  @IsNotEmpty()\n  @IsString()\n  public product: string;\n\n  @IsNotEmpty()\n  @IsString()\n  public user: Ref;\n\n  @IsNotEmpty()\n  public device: string | number;\n\n  @IsNotEmpty()\n  @IsString()\n  public ip: string;\n\n  @IsNotEmpty()\n  @IsString()\n  public content: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CommentRemoveMarketDto.html":{"url":"classes/CommentRemoveMarketDto.html","title":"class - CommentRemoveMarketDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CommentRemoveMarketDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/market/dto/comment.remove.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                author\n                            \n                            \n                                product\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            author\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/market/dto/comment.remove.dto.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            product\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/market/dto/comment.remove.dto.ts:6\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsString } from 'class-validator';\n\nexport class CommentRemoveMarketDto {\n  @IsNotEmpty()\n  @IsString()\n  product: string;\n\n  @IsNotEmpty()\n  @IsString()\n  author: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ConfigModule.html":{"url":"modules/ConfigModule.html","title":"module - ConfigModule","body":"\n                   \n\n\n\n\n    Modules\n    ConfigModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ConfigModule\n\n\n\ncluster_ConfigModule_exports\n\n\n\n\nConfigService \n\nConfigService \n\n\n\nConfigModule\n\nConfigModule\n\nConfigService  -->\n\nConfigModule->ConfigService \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/config/config.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Exports\n                    \n                        \n                            ConfigService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ConfigService } from './config.service';\n\n@Module({\n  providers: [\n    {\n      provide: ConfigService,\n      useValue: new ConfigService(),\n    },\n  ],\n  exports: [ConfigService],\n})\nexport class ConfigModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ConfigService.html":{"url":"classes/ConfigService.html","title":"class - ConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/config/config.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                envConfig\n                            \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                get\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/config/config.service.ts:7\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            envConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/config/config.service.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            logger\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Logger\n\n                        \n                    \n                    \n                        \n                            Default value : new Logger('Configuration')\n                        \n                    \n                        \n                            \n                                    Defined in src/config/config.service.ts:7\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            get\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    get(key: string)\n                \n            \n\n\n            \n                \n                    Defined in src/config/config.service.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { existsSync, readFileSync } from 'fs';\nimport { Logger } from '@nestjs/common';\nimport { parse } from 'dotenv';\n\nexport class ConfigService {\n  readonly envConfig: { [ket: string]: string };\n  private readonly logger: Logger = new Logger('Configuration');\n\n  constructor() {\n    const isDevEnv = process.env.NODE_NEV !== 'production';\n    if (isDevEnv) {\n      const envFilePath = __dirname + '/../../.env';\n      const existPath = existsSync(envFilePath);\n\n      if (!existPath) {\n        this.logger.error('.env file does not exist.');\n        process.exit(0);\n      }\n\n      this.envConfig = parse(readFileSync(envFilePath));\n    } else {\n      this.envConfig = {\n        PORT_API: process.env.PORT,\n        TOKEN_SECRET: 'S9SDNXC9SM',\n        EMAIL_HOST:\n          'smtp://saturnoxspace@outlook.com:efhdmhtdxblafvjj@smtp.office365.com',\n        EMAIL_FROM: '\"Akatsuki Network\" ',\n        DB_HOST: 'mongodb://localhost:27017/akatsuki',\n        SERVER_HOST: 'https://api.akatsukiapp.com:3678/v1',\n      };\n    }\n  }\n\n  public get(key: string): string {\n    return this.envConfig[key];\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DiscountMarket.html":{"url":"classes/DiscountMarket.html","title":"class - DiscountMarket","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DiscountMarket\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/market/models/market.data.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                exp\n                            \n                            \n                                    Public\n                                percentage\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            exp\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/market/models/market.data.model.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            percentage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, min: 0, max: 99})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/market/models/market.data.model.ts:6\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { prop, Ref } from '@typegoose/typegoose';\nimport { UserModel } from '../../../modules/user/models/user.model';\n\nexport class DiscountMarket {\n  @prop({ required: true, min: 0, max: 99 })\n  public percentage: number;\n\n  @prop({ required: true })\n  public exp: Date;\n}\n\nexport class BuyerMarket {\n  @prop({\n    required: true,\n    ref: 'Users',\n  })\n  public user: Ref;\n\n  @prop({ required: true })\n  public device: string | number;\n\n  @prop({ required: true })\n  public ip: string;\n}\n\nexport class CommentMarket {\n  @prop({\n    required: true,\n    ref: 'Users',\n  })\n  public author: Ref;\n\n  @prop({ required: true })\n  public device: string | number;\n\n  @prop({ required: true })\n  public ip: string;\n\n  @prop({ required: true, minlength: 50, maxlength: 500 })\n  public content: string;\n}\n\nexport class ReactionsMarket {\n  @prop({\n    required: true,\n    ref: 'Users',\n  })\n  public user: Ref;\n\n  @prop({ required: true })\n  public device: string | number;\n\n  @prop({ required: true })\n  public ip: string;\n\n  @prop({ required: true })\n  public type: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Email.html":{"url":"classes/Email.html","title":"class - Email","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Email\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/dto/user.dto.data.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                expiration\n                            \n                            \n                                    Public\n                                key\n                            \n                            \n                                    Public\n                                status\n                            \n                            \n                                    Public\n                                token\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            expiration\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/dto/user.dto.data.ts:109\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            key\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/dto/user.dto.data.ts:103\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/dto/user.dto.data.ts:105\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/dto/user.dto.data.ts:107\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Market {\n  public description: string;\n\n  public price: number;\n\n  public type: number;\n\n  public discount: number;\n\n  public seller: string;\n\n  public device: number;\n\n  public ip: string;\n\n  public market: number;\n}\n\nexport class Reactions {\n  public author: string;\n\n  public type: number;\n}\n\nexport class Suspension {\n  public status: boolean;\n\n  public reason: string;\n}\n\nexport class Stats {\n  public spent: number;\n\n  public won: number;\n\n  public rewards: number;\n\n  public rep: number;\n\n  public exp: number;\n}\n\nexport class Security {\n  public enabled: boolean;\n\n  public code1: number;\n\n  public code2: number;\n\n  public code3: number;\n\n  public code4: number;\n\n  public code5: number;\n\n  public twofactor: number;\n}\n\nexport class Membership {\n  public status: false;\n\n  public expiration: Date;\n\n  public transaction: Date;\n}\n\nexport class Rank {\n  public seller: boolean;\n\n  public mod: boolean;\n\n  public admin: boolean;\n}\n\nexport class Notifications {\n  public social: boolean;\n\n  public market: boolean;\n\n  public message: boolean;\n}\n\nexport class Online {\n  public online: boolean;\n\n  public mode: number;\n\n  public last: Date;\n}\n\nexport class Sessions {\n  // tslint:disable-next-line\n  public _id?: string;\n\n  public device: string | number;\n\n  public ip: string;\n\n  public twofactor: boolean;\n}\n\nexport class Email {\n  public key: string;\n\n  public status: boolean;\n\n  public token: string;\n\n  public expiration?: Date;\n}\n\nexport class Password {\n  public key: string;\n\n  public status?: boolean;\n\n  public token?: string;\n\n  public expiration?: Date;\n}\n\nexport class TransactionBuyer {\n  public id: string;\n\n  public ip: string;\n\n  public device: string;\n}\nexport class Transaction {\n  // tslint:disable-next-line\n  public _id?: string;\n\n  public seller: string;\n\n  public buyer: TransactionBuyer;\n\n  public item: string;\n\n  public type: number;\n\n  public price: number;\n\n  public discount: number;\n\n  public market: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Email-1.html":{"url":"classes/Email-1.html","title":"class - Email-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Email\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/models/user.model.data.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                expiration\n                            \n                            \n                                    Public\n                                key\n                            \n                            \n                                    Public\n                                status\n                            \n                            \n                                    Public\n                                token\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            expiration\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/models/user.model.data.ts:139\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            key\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, trim: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/models/user.model.data.ts:130\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/models/user.model.data.ts:133\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/models/user.model.data.ts:136\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { prop, index } from '@typegoose/typegoose';\nimport { TimeStamps } from '@typegoose/typegoose/lib/defaultClasses';\n\nexport class Reactions {\n  /*@prop({\n    required: true,\n    lowercase: true,\n    trim: true,\n  })\n  public author: string;*/\n\n  @prop({ required: true, min: 0, max: 1 })\n  public type: number;\n}\n\nexport class Suspension {\n  @prop({ required: true, default: false })\n  public status: boolean;\n\n  @prop({\n    required: true,\n    default:\n      '[System]: The reason for suspension has not been specified. Please contact us for more information.',\n    minlength: 90,\n    maxlength: 200,\n  })\n  public reason: string;\n}\n\nexport class Stats {\n  @prop({ required: true, default: 0 })\n  public spent: number;\n\n  @prop({ required: true, default: 0 })\n  public won: number;\n\n  @prop({ required: true, default: 0 })\n  public rewards: number;\n\n  @prop({ required: true, default: 0 })\n  public rep: number;\n\n  @prop({ required: true, default: 0 })\n  public exp: number;\n}\n\nexport class Security {\n  @prop({ required: true, default: false })\n  public enabled: boolean;\n\n  @prop({ required: true, default: 0 })\n  public code1: number;\n\n  @prop({ required: true, default: 0 })\n  public code2: number;\n\n  @prop({ required: true, default: 0 })\n  public code3: number;\n\n  @prop({ required: true, default: 0 })\n  public code4: number;\n\n  @prop({ required: true, default: 0 })\n  public code5: number;\n\n  @prop({ required: true, default: 0 })\n  public twofactor: number;\n}\n\nexport class Membership {\n  @prop({ required: true, default: false })\n  public status: false;\n\n  @prop({ required: true, default: Date.now() })\n  public expiration: Date;\n\n  @prop({ required: true, default: Date.now() })\n  public transaction: Date;\n}\n\nexport class Rank {\n  @prop({ required: true, default: false })\n  public seller: boolean;\n\n  @prop({ required: true, default: false })\n  public mod: boolean;\n\n  @prop({ required: true, default: false })\n  public admin: boolean;\n}\n\nexport class Notifications {\n  @prop({ required: true, default: false })\n  public social: boolean;\n\n  @prop({ required: true, default: false })\n  public market: boolean;\n\n  @prop({ required: true, default: false })\n  public message: boolean;\n}\n\nexport class Online {\n  @prop({ required: true, default: false })\n  public online: boolean;\n\n  @prop({ required: true, default: 0 })\n  public mode: number;\n\n  @prop({ required: true, default: Date.now() })\n  public last: Date;\n}\n\nexport class Sessions extends TimeStamps {\n  // tslint:disable-next-line\n  public _id?: string;\n\n  @prop({ required: true })\n  public device: string | number;\n\n  @prop({ required: true })\n  public ip: string;\n\n  @prop({ required: true, default: false })\n  public twofactor: boolean;\n}\n\nexport class Email {\n  @prop({ required: true, trim: true })\n  public key: string;\n\n  @prop({ required: true, default: false })\n  public status: boolean;\n\n  @prop({ required: true })\n  public token: string;\n\n  @prop({ required: true, default: Date.now() })\n  public expiration?: Date;\n}\n\nexport class Password {\n  @prop({ required: true, trim: true })\n  public key: string;\n\n  @prop({ required: true, default: true })\n  public status?: boolean;\n\n  @prop({ required: true })\n  public token?: string;\n\n  @prop({ required: true, default: Date.now() })\n  public expiration?: Date;\n}\n\nexport class TransactionInfo {\n  @prop({ required: true })\n  public id: string;\n\n  @prop({ required: true })\n  public ip: string;\n\n  @prop({ required: true })\n  public device: string;\n}\n\nexport class Transaction extends TimeStamps {\n  // tslint:disable-next-line\n  public _id?: string;\n\n  @prop({ default: new TransactionInfo(), _id: false })\n  public buyer: TransactionInfo;\n\n  @prop({ required: true })\n  public seller: string;\n\n  @prop({ required: true })\n  public product: string;\n\n  @prop({ required: true })\n  public type: number;\n\n  @prop({ required: true })\n  public price: number;\n\n  @prop({ required: true })\n  public discount: number;\n\n  @prop({ required: true })\n  public market: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GeneralGateway.html":{"url":"classes/GeneralGateway.html","title":"class - GeneralGateway","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GeneralGateway\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/gateways/general.gateway.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        OnGatewayConnection\n                        OnGatewayDisconnect\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                            \n                                    Private\n                                    Readonly\n                                server\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleConnection\n                            \n                            \n                                handleDisconnect\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/gateways/general.gateway.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            logger\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Logger\n\n                        \n                    \n                    \n                        \n                            Default value : new Logger('Gateway: General')\n                        \n                    \n                        \n                            \n                                    Defined in src/gateways/general.gateway.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            server\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @WebSocketServer()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/gateways/general.gateway.ts:17\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleConnection\n                        \n                        \n                    \n                \n            \n            \n                \nhandleConnection(client: any)\n                \n            \n\n\n            \n                \n                    Defined in src/gateways/general.gateway.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    client\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleDisconnect\n                        \n                        \n                    \n                \n            \n            \n                \nhandleDisconnect(client: any)\n                \n            \n\n\n            \n                \n                    Defined in src/gateways/general.gateway.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    client\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  WebSocketGateway,\n  OnGatewayConnection,\n  OnGatewayDisconnect,\n  WebSocketServer,\n} from '@nestjs/websockets';\nimport { Logger } from '@nestjs/common';\nimport { UserService } from '../modules/user/user.service';\nimport * as moments from 'moment';\nimport * as momentstz from 'moment-timezone';\n\n@WebSocketGateway()\nexport class GeneralGateway\n  implements OnGatewayConnection, OnGatewayDisconnect {\n  private readonly logger: Logger = new Logger('Gateway: General');\n\n  @WebSocketServer() private readonly server: any;\n  constructor(private readonly userService: UserService) {}\n\n  handleDisconnect(client: any) {\n    const timezone = momentstz()\n      .tz('America/New_York')\n      .utc()\n      .format();\n\n    const time = moments(timezone)\n      .add(15, 'minutes')\n      .toDate();\n\n    if (client.query.online === 1) {\n      this.server.emit(`USER:${client.query.USER}:ONLINE`, { online: false });\n      this.logger.log(\n        `User ${client.query.user} with session ID ${client.query.session} and with Socket Id ${client.id} has been disconnected.`,\n      );\n      return this.userService.updateOnlineUser(client.query.user, {\n        online: {\n          online: false,\n          mode: 1,\n          last: time,\n        },\n      });\n    }\n  }\n\n  handleConnection(client: any) {\n    const timezone = momentstz()\n      .tz('America/New_York')\n      .utc()\n      .format();\n\n    const time = moments(timezone)\n      .add(15, 'minutes')\n      .toDate();\n\n    if (client.query.online === 1) {\n      this.server.emit(`USER:${client.query.USER}:ONLINE`, { online: true });\n      this.logger.log(\n        `User ${client.query.user} has been logged in with session ID ${client.query.session} and with Socket Id ${client.id}.`,\n      );\n      return this.userService.updateOnlineUser(client.query.user, {\n        online: {\n          online: true,\n          mode: 1,\n          last: time,\n        },\n      });\n    }\n  }\n\n  /*@SubscribeMessage('message')\n  handleMessage(client: any, payload: any): string {\n    return 'Hello world!';\n  }*/\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IJwtPayload.html":{"url":"interfaces/IJwtPayload.html","title":"interface - IJwtPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IJwtPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/jwt.payload.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        email\n                                \n                                \n                                        id\n                                \n                                \n                                            Optional\n                                        lat\n                                \n                                \n                                        rank\n                                \n                                \n                                        username\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lat\n                                    \n                                \n                                \n                                    \n                                        lat:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rank\n                                    \n                                \n                                \n                                    \n                                        rank:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IJwtPayload {\n  id: string;\n  email: string;\n  username: string;\n  rank: string[];\n  lat?: Date;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/strategies/jwt.strategy.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userModel: ReturnModelType<>, configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/strategies/jwt.strategy.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userModel\n                                                  \n                                                        \n                                                                    ReturnModelType<>\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload: IJwtPayload)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/strategies/jwt.strategy.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                IJwtPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { PassportStrategy } from '@nestjs/passport';\nimport { Strategy, ExtractJwt } from 'passport-jwt';\nimport { InjectModel } from 'nestjs-typegoose';\nimport { UserModel } from '../../modules/user/models/user.model';\nimport { ReturnModelType } from '@typegoose/typegoose';\nimport { ConfigService } from '../../config/config.service';\nimport { ConfigurationEnum } from '../../keys/configuration.enum';\nimport { UnauthorizedException, Injectable } from '@nestjs/common';\nimport { IJwtPayload } from '../jwt.payload.interface';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  constructor(\n    @InjectModel(UserModel)\n    private readonly userModel: ReturnModelType,\n    readonly configService: ConfigService,\n  ) {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ignoreExpiration: false,\n      secretOrKey: configService.get(ConfigurationEnum.TOKEN_SECRET),\n    });\n  }\n\n  async validate(payload: IJwtPayload) {\n    const { id, username, email } = payload;\n    const userExists = await this.userModel.findById(id);\n\n    if (!userExists) {\n      throw new UnauthorizedException(\n        'This user does not exist. Please verify that the request is correct.',\n      );\n    }\n\n    if (userExists.username !== username) {\n      throw new UnauthorizedException();\n    }\n\n    if (userExists.email.key !== email && !userExists.email.status) {\n      throw new UnauthorizedException();\n    }\n\n    if (!userExists.password.status) {\n      throw new UnauthorizedException();\n    }\n\n    if (userExists.suspension.status) {\n      throw new UnauthorizedException(\n        'We are sorry but this account does not have sufficient permissions to use Akatsuki Project.',\n      );\n    }\n\n    return payload;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Market.html":{"url":"classes/Market.html","title":"class - Market","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Market\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/dto/user.dto.data.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                description\n                            \n                            \n                                    Public\n                                device\n                            \n                            \n                                    Public\n                                discount\n                            \n                            \n                                    Public\n                                ip\n                            \n                            \n                                    Public\n                                market\n                            \n                            \n                                    Public\n                                price\n                            \n                            \n                                    Public\n                                seller\n                            \n                            \n                                    Public\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/dto/user.dto.data.ts:2\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            device\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/dto/user.dto.data.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            discount\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/dto/user.dto.data.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ip\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/dto/user.dto.data.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            market\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/dto/user.dto.data.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            price\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/dto/user.dto.data.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            seller\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/dto/user.dto.data.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/dto/user.dto.data.ts:6\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Market {\n  public description: string;\n\n  public price: number;\n\n  public type: number;\n\n  public discount: number;\n\n  public seller: string;\n\n  public device: number;\n\n  public ip: string;\n\n  public market: number;\n}\n\nexport class Reactions {\n  public author: string;\n\n  public type: number;\n}\n\nexport class Suspension {\n  public status: boolean;\n\n  public reason: string;\n}\n\nexport class Stats {\n  public spent: number;\n\n  public won: number;\n\n  public rewards: number;\n\n  public rep: number;\n\n  public exp: number;\n}\n\nexport class Security {\n  public enabled: boolean;\n\n  public code1: number;\n\n  public code2: number;\n\n  public code3: number;\n\n  public code4: number;\n\n  public code5: number;\n\n  public twofactor: number;\n}\n\nexport class Membership {\n  public status: false;\n\n  public expiration: Date;\n\n  public transaction: Date;\n}\n\nexport class Rank {\n  public seller: boolean;\n\n  public mod: boolean;\n\n  public admin: boolean;\n}\n\nexport class Notifications {\n  public social: boolean;\n\n  public market: boolean;\n\n  public message: boolean;\n}\n\nexport class Online {\n  public online: boolean;\n\n  public mode: number;\n\n  public last: Date;\n}\n\nexport class Sessions {\n  // tslint:disable-next-line\n  public _id?: string;\n\n  public device: string | number;\n\n  public ip: string;\n\n  public twofactor: boolean;\n}\n\nexport class Email {\n  public key: string;\n\n  public status: boolean;\n\n  public token: string;\n\n  public expiration?: Date;\n}\n\nexport class Password {\n  public key: string;\n\n  public status?: boolean;\n\n  public token?: string;\n\n  public expiration?: Date;\n}\n\nexport class TransactionBuyer {\n  public id: string;\n\n  public ip: string;\n\n  public device: string;\n}\nexport class Transaction {\n  // tslint:disable-next-line\n  public _id?: string;\n\n  public seller: string;\n\n  public buyer: TransactionBuyer;\n\n  public item: string;\n\n  public type: number;\n\n  public price: number;\n\n  public discount: number;\n\n  public market: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/MarketController.html":{"url":"controllers/MarketController.html","title":"controller - MarketController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  MarketController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/market/market.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                market\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                AddComment\n                            \n                            \n                                    Public\n                                    Async\n                                AddProduct\n                            \n                            \n                                    Public\n                                    Async\n                                AddReaction\n                            \n                            \n                                    Public\n                                    Async\n                                GetAllProducts\n                            \n                            \n                                    Public\n                                    Async\n                                GetProduct\n                            \n                            \n                                    Public\n                                    Async\n                                RemoveBuyer\n                            \n                            \n                                    Public\n                                    Async\n                                RemoveComment\n                            \n                            \n                                    Public\n                                    Async\n                                RemoveReaction\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            AddComment\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    AddComment(commentMarketDto: CommentMarketDto, response, lang: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put('/add/comment')\n                \n            \n\n            \n                \n                    Defined in src/modules/market/market.controller.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    commentMarketDto\n                                    \n                                                CommentMarketDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    response\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    lang\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            AddProduct\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    AddProduct(marketModel: MarketModel, response, lang: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put('/add/product')\n                \n            \n\n            \n                \n                    Defined in src/modules/market/market.controller.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    marketModel\n                                    \n                                                MarketModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    response\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    lang\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            AddReaction\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    AddReaction(reactionAddMarketDto: ReactionAddMarketDto, response, lang: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put('/add/reaction')\n                \n            \n\n            \n                \n                    Defined in src/modules/market/market.controller.ts:100\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    reactionAddMarketDto\n                                    \n                                                ReactionAddMarketDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    response\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    lang\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            GetAllProducts\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    GetAllProducts(productId: number, rankUserRequest: string[], idUserRequest: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/get/products/:filter')\n                \n            \n\n            \n                \n                    Defined in src/modules/market/market.controller.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    productId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    rankUserRequest\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    idUserRequest\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            GetProduct\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    GetProduct(productId: string, rankUserRequest: string[], idUserRequest: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/get/product/:id')\n                \n            \n\n            \n                \n                    Defined in src/modules/market/market.controller.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    productId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    rankUserRequest\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    idUserRequest\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            RemoveBuyer\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    RemoveBuyer(buyerRemoveMarketDto: BuyerRemoveMarketDto, response, lang: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Rank(RanksEnum.ADMINISTRATOR, RanksEnum.MODERATOR)@Delete('/delete/buyer')\n                \n            \n\n            \n                \n                    Defined in src/modules/market/market.controller.ts:144\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    buyerRemoveMarketDto\n                                    \n                                                BuyerRemoveMarketDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    response\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    lang\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            RemoveComment\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    RemoveComment(commentRemoveMarketDto: CommentRemoveMarketDto, response, idUserRequest: string, lang: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('/delete/comment')\n                \n            \n\n            \n                \n                    Defined in src/modules/market/market.controller.ts:121\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    commentRemoveMarketDto\n                                    \n                                                CommentRemoveMarketDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    response\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    idUserRequest\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    lang\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            RemoveReaction\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    RemoveReaction(reactionRemoveMarketDto: ReactionRemoveMarketDto, response, idUserRequest: string, lang: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('/delete/reaction')\n                \n            \n\n            \n                \n                    Defined in src/modules/market/market.controller.ts:165\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    reactionRemoveMarketDto\n                                    \n                                                ReactionRemoveMarketDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    response\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    idUserRequest\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    lang\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Put,\n  Body,\n  Res,\n  HttpStatus,\n  UseGuards,\n  Get,\n  Param,\n  ParseIntPipe,\n  Delete,\n} from '@nestjs/common';\nimport { MarketService } from './market.service';\nimport { MarketModel } from './models/market.model';\nimport { AuthGuard } from '@nestjs/passport';\nimport { GetUser } from '../../decorators/user.decorator';\nimport { CommentMarketDto } from './dto/comment.add.dto';\nimport { CommentRemoveMarketDto } from './dto/comment.remove.dto';\nimport { BuyerRemoveMarketDto } from './dto/buyer.remove.dto';\nimport { Rank } from '../../decorators/rank.decorator';\nimport { RanksEnum } from '../../keys/ranks.enum';\nimport { RankGuard } from '../../guards/rank.guard';\nimport { ReactionAddMarketDto } from './dto/reaction.add.dto';\nimport { ReactionRemoveMarketDto } from './dto/reaction.remove.dto';\nimport { I18nService, I18nLang } from 'nestjs-i18n';\n\n@UseGuards(AuthGuard(), RankGuard)\n@Controller('market')\nexport class MarketController {\n  constructor(\n    private readonly marketService: MarketService,\n    private readonly i18nService: I18nService,\n  ) {}\n\n  @Put('/add/product')\n  public async AddProduct(\n    @Body() marketModel: MarketModel,\n    @Res() response,\n    @I18nLang() lang: string,\n  ) {\n    return await this.marketService.AddProduct(marketModel).then(() => {\n      response.status(HttpStatus.CREATED).json({\n        statusCode: HttpStatus.CREATED,\n        message: this.i18nService.translate(\n          'translations.market.controller.product_added',\n          {\n            lang,\n          },\n        ),\n      });\n    });\n  }\n\n  @Get('/get/product/:id')\n  public async GetProduct(\n    @Param('id') productId: string,\n    @GetUser('rank') rankUserRequest: string[],\n    @GetUser('id') idUserRequest: string,\n  ) {\n    return await this.marketService.GetProduct(\n      productId,\n      rankUserRequest,\n      idUserRequest,\n    );\n  }\n\n  @Get('/get/products/:filter')\n  public async GetAllProducts(\n    @Param('filter', ParseIntPipe) productId: number,\n    @GetUser('rank') rankUserRequest: string[],\n    @GetUser('id') idUserRequest: string,\n  ) {\n    return await this.marketService.GetAllProducts(\n      productId,\n      rankUserRequest,\n      idUserRequest,\n    );\n  }\n\n  @Put('/add/comment')\n  public async AddComment(\n    @Body() commentMarketDto: CommentMarketDto,\n    @Res() response,\n    @I18nLang() lang: string,\n  ) {\n    return await this.marketService.AddComment(commentMarketDto).then(() => {\n      response.status(HttpStatus.OK).json({\n        statusCode: HttpStatus.OK,\n        message: this.i18nService.translate(\n          'translations.market.controller.comment_added',\n          {\n            lang,\n          },\n        ),\n      });\n    });\n  }\n\n  @Put('/add/reaction')\n  public async AddReaction(\n    @Body() reactionAddMarketDto: ReactionAddMarketDto,\n    @Res() response,\n    @I18nLang() lang: string,\n  ) {\n    return await this.marketService\n      .AddReaction(reactionAddMarketDto)\n      .then(() => {\n        response.status(HttpStatus.OK).json({\n          statusCode: HttpStatus.OK,\n          message: this.i18nService.translate(\n            'translations.market.controller.reaction_added',\n            {\n              lang,\n            },\n          ),\n        });\n      });\n  }\n\n  @Delete('/delete/comment')\n  public async RemoveComment(\n    @Body() commentRemoveMarketDto: CommentRemoveMarketDto,\n    @Res() response,\n    @GetUser('id') idUserRequest: string,\n    @I18nLang() lang: string,\n  ) {\n    return await this.marketService\n      .RemoveComment(commentRemoveMarketDto, idUserRequest)\n      .then(() => {\n        response.status(HttpStatus.OK).json({\n          statusCode: HttpStatus.OK,\n          message: this.i18nService.translate(\n            'translations.market.controller.comment_deleted',\n            {\n              lang,\n            },\n          ),\n        });\n      });\n  }\n\n  @Rank(RanksEnum.ADMINISTRATOR, RanksEnum.MODERATOR)\n  @Delete('/delete/buyer')\n  public async RemoveBuyer(\n    @Body() buyerRemoveMarketDto: BuyerRemoveMarketDto,\n    @Res() response,\n    @I18nLang() lang: string,\n  ) {\n    return await this.marketService\n      .RemoveBuyer(buyerRemoveMarketDto)\n      .then(() => {\n        response.status(HttpStatus.OK).json({\n          statusCode: HttpStatus.OK,\n          message: this.i18nService.translate(\n            'translations.market.controller.buyer_deleted',\n            {\n              lang,\n            },\n          ),\n        });\n      });\n  }\n\n  @Delete('/delete/reaction')\n  public async RemoveReaction(\n    @Body() reactionRemoveMarketDto: ReactionRemoveMarketDto,\n    @Res() response,\n    @GetUser('id') idUserRequest: string,\n    @I18nLang() lang: string,\n  ) {\n    return await this.marketService\n      .RemoveReaction(reactionRemoveMarketDto, idUserRequest)\n      .then(() => {\n        response.status(HttpStatus.OK).json({\n          statusCode: HttpStatus.OK,\n          message: this.i18nService.translate(\n            'translations.market.controller.reaction_deleted',\n            {\n              lang,\n            },\n          ),\n        });\n      });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MarketModel.html":{"url":"classes/MarketModel.html","title":"class - MarketModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MarketModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/market/models/market.model.ts\n        \n\n\n            \n                Extends\n            \n            \n                    TimeStamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                author\n                            \n                            \n                                    Public\n                                available\n                            \n                            \n                                    Public\n                                buyers\n                            \n                            \n                                    Public\n                                comments\n                            \n                            \n                                    Public\n                                description\n                            \n                            \n                                    Public\n                                device\n                            \n                            \n                                    Public\n                                discount\n                            \n                            \n                                    Public\n                                ip\n                            \n                            \n                                    Public\n                                market\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                price\n                            \n                            \n                                    Public\n                                reactions\n                            \n                            \n                                    Public\n                                status\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            author\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, ref: 'Users'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/market/models/market.model.ts:77\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            available\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/market/models/market.model.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            buyers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     BuyerMarket[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @arrayProp({items: BuyerMarket})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/market/models/market.model.ts:65\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            comments\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     CommentMarket[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @arrayProp({items: CommentMarket})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/market/models/market.model.ts:68\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, minlength: 100, maxlength: 1000})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/market/models/market.model.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            device\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string | number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/market/models/market.model.ts:62\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            discount\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         DiscountMarket\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, _id: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/market/models/market.model.ts:53\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ip\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/market/models/market.model.ts:59\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            market\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/market/models/market.model.ts:56\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, minlength: 10, maxlength: 30})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/market/models/market.model.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            price\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, min: 1, max: 9999})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/market/models/market.model.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            reactions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ReactionsMarket[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @arrayProp({items: ReactionsMarket})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/market/models/market.model.ts:71\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/market/models/market.model.ts:50\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  modelOptions,\n  prop,\n  Ref,\n  arrayProp,\n  index,\n} from '@typegoose/typegoose';\nimport { TimeStamps } from '@typegoose/typegoose/lib/defaultClasses';\nimport { UserModel } from '../../../modules/user/models/user.model';\nimport {\n  DiscountMarket,\n  BuyerMarket,\n  CommentMarket,\n  ReactionsMarket,\n} from './market.data.model';\n\n@modelOptions({\n  options: {\n    customName: 'Market',\n  },\n  schemaOptions: {\n    collection: 'market',\n  },\n})\n@index(\n  {\n    'buyer.device': 1,\n    'buyer.ip': 1,\n    'buyer.user._id': 1,\n    'reactions.device': 1,\n    'reactions.ip': 1,\n    'reactions.user': 1,\n  },\n  { unique: true },\n)\nexport class MarketModel extends TimeStamps {\n  @prop({ required: true, minlength: 10, maxlength: 30 })\n  public name: string;\n\n  @prop({ required: true, minlength: 100, maxlength: 1000 })\n  public description: string;\n\n  @prop({ required: true, min: 1, max: 9999 })\n  public price: number;\n\n  @prop({ required: true })\n  public available: boolean;\n\n  @prop({ required: true })\n  public status: boolean;\n\n  @prop({ required: true, _id: false })\n  public discount: DiscountMarket;\n\n  @prop({ required: true })\n  public market: number;\n\n  @prop({ required: true })\n  public ip: string;\n\n  @prop({ required: true })\n  public device: string | number;\n\n  @arrayProp({ items: BuyerMarket })\n  public buyers: BuyerMarket[];\n\n  @arrayProp({ items: CommentMarket })\n  public comments: CommentMarket[];\n\n  @arrayProp({ items: ReactionsMarket })\n  public reactions: ReactionsMarket[];\n\n  @prop({\n    required: true,\n    ref: 'Users',\n  })\n  public author: Ref;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MarketModule.html":{"url":"modules/MarketModule.html","title":"module - MarketModule","body":"\n                   \n\n\n\n\n    Modules\n    MarketModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MarketModule\n\n\n\ncluster_MarketModule_imports\n\n\n\ncluster_MarketModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nMarketModule\n\nMarketModule\n\nMarketModule -->\n\nAuthModule->MarketModule\n\n\n\n\n\nMarketService\n\nMarketService\n\nMarketModule -->\n\nMarketService->MarketModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/market/market.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            MarketService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            MarketController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MarketController } from './market.controller';\nimport { MarketService } from './market.service';\nimport { MarketModel } from './models/market.model';\nimport { TypegooseModule } from 'nestjs-typegoose';\nimport { AuthModule } from '../../auth/auth.module';\n\n@Module({\n  imports: [TypegooseModule.forFeature([MarketModel]), AuthModule],\n  controllers: [MarketController],\n  providers: [MarketService],\n})\nexport class MarketModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MarketService.html":{"url":"injectables/MarketService.html","title":"injectable - MarketService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MarketService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/market/market.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                AddBuyerToProduct\n                            \n                            \n                                    Public\n                                    Async\n                                AddComment\n                            \n                            \n                                    Public\n                                    Async\n                                AddProduct\n                            \n                            \n                                    Public\n                                    Async\n                                AddReaction\n                            \n                            \n                                    Public\n                                    Async\n                                GetAllProducts\n                            \n                            \n                                    Public\n                                    Async\n                                GetProduct\n                            \n                            \n                                    Public\n                                    Async\n                                RemoveBuyer\n                            \n                            \n                                    Public\n                                    Async\n                                RemoveComment\n                            \n                            \n                                    Public\n                                    Async\n                                RemoveReaction\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(marketModel: ReturnModelType<>, i18nService: I18nRequestScopeService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/market/market.service.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        marketModel\n                                                  \n                                                        \n                                                                    ReturnModelType<>\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        i18nService\n                                                  \n                                                        \n                                                                    I18nRequestScopeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            AddBuyerToProduct\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    AddBuyerToProduct(buyerAddMarketDto: BuyerAddMarketDto)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/market/market.service.ts:146\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    buyerAddMarketDto\n                                    \n                                                BuyerAddMarketDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            AddComment\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    AddComment(commentMarketDto: CommentMarketDto)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/market/market.service.ts:198\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    commentMarketDto\n                                    \n                                                CommentMarketDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            AddProduct\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    AddProduct(marketModel: MarketModel)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/market/market.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    marketModel\n                                    \n                                                MarketModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            AddReaction\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    AddReaction(reactionAddMarketDto: ReactionAddMarketDto)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/market/market.service.ts:251\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    reactionAddMarketDto\n                                    \n                                                ReactionAddMarketDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            GetAllProducts\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    GetAllProducts(filter: number, rankUserRequest: string[], idUserRequest: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/market/market.service.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    rankUserRequest\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    idUserRequest\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            GetProduct\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    GetProduct(productId: string, rankUserRequest: string[], idUserRequest: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/market/market.service.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    productId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    rankUserRequest\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    idUserRequest\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            RemoveBuyer\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    RemoveBuyer(buyerRemoveMarketDto: BuyerRemoveMarketDto)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/market/market.service.ts:377\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    buyerRemoveMarketDto\n                                    \n                                                BuyerRemoveMarketDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            RemoveComment\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    RemoveComment(commentRemoveMarketDto: CommentRemoveMarketDto, idUserRequest: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/market/market.service.ts:304\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    commentRemoveMarketDto\n                                    \n                                                CommentRemoveMarketDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    idUserRequest\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            RemoveReaction\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    RemoveReaction(reactionRemoveMarketDto: ReactionRemoveMarketDto, idUserRequest: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/market/market.service.ts:407\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    reactionRemoveMarketDto\n                                    \n                                                ReactionRemoveMarketDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    idUserRequest\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            logger\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Logger\n\n                        \n                    \n                    \n                        \n                            Default value : new Logger('Market')\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/market/market.service.ts:22\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {\n  Injectable,\n  BadRequestException,\n  ConflictException,\n  NotFoundException,\n  Logger,\n} from '@nestjs/common';\nimport { InjectModel } from 'nestjs-typegoose';\nimport { MarketModel } from './models/market.model';\nimport { ReturnModelType } from '@typegoose/typegoose';\nimport { RanksEnum } from '../../keys/ranks.enum';\nimport { CommentMarketDto } from './dto/comment.add.dto';\nimport { CommentRemoveMarketDto } from './dto/comment.remove.dto';\nimport { BuyerAddMarketDto } from './dto/buyer.add.dto';\nimport { BuyerRemoveMarketDto } from './dto/buyer.remove.dto';\nimport { ReactionAddMarketDto } from './dto/reaction.add.dto';\nimport { ReactionRemoveMarketDto } from './dto/reaction.remove.dto';\nimport { I18nRequestScopeService } from 'nestjs-i18n';\n\n@Injectable()\nexport class MarketService {\n  private readonly logger: Logger = new Logger('Market');\n\n  constructor(\n    @InjectModel(MarketModel)\n    private readonly marketModel: ReturnModelType,\n    private readonly i18nService: I18nRequestScopeService,\n  ) {}\n\n  public async AddProduct(marketModel: MarketModel) {\n    this.logger.log(\n      `Creating a new product for the market with the name of ${marketModel.name} with a value of ${marketModel.price} and with a discount of ${marketModel.discount.percentage}%. This product is published by ${marketModel.author} on the device ${marketModel.device} with IP ${marketModel.ip}.`,\n    );\n\n    return await this.marketModel.create(marketModel).catch(() => {\n      this.logger.error(\n        `The product with name ${marketModel.name} could not be processed by user ${marketModel.author} due to a database failure.`,\n      );\n\n      throw new BadRequestException(\n        this.i18nService.translate(\n          'translations.market.service.product_error_added',\n        ),\n      );\n    });\n  }\n\n  public async GetProduct(\n    productId: string,\n    rankUserRequest: string[],\n    idUserRequest: string,\n  ) {\n    this.logger.log(\n      `Obtaining product data ${productId} by user ${idUserRequest}.`,\n    );\n\n    if (\n      !rankUserRequest.includes(RanksEnum.ADMINISTRATOR) &&\n      !rankUserRequest.includes(RanksEnum.MODERATOR)\n    ) {\n      return await this.marketModel\n        .findById(productId)\n        .select([\n          'name',\n          'description',\n          'price',\n          'available',\n          'status',\n          'discount',\n          'author',\n          'buyers',\n          'reactions',\n          'comments',\n          'createdAt',\n          'updatedAt',\n        ])\n        .populate('author', 'name photo rank premium.status')\n        .populate('buyers.user', 'name photo rank premium.status')\n        .populate('reactions.user', 'name photo rank premium.status')\n        .populate('comments.author', 'name photo rank premium.status')\n        .exec();\n    }\n  }\n\n  public async GetAllProducts(\n    filter: number,\n    rankUserRequest: string[],\n    idUserRequest: string,\n  ) {\n    let order = '-createdAt';\n\n    this.logger.log(\n      `Obtaining data of all products with the filter ${filter} by the user ${idUserRequest}.`,\n    );\n\n    if (\n      !rankUserRequest.includes(RanksEnum.ADMINISTRATOR) &&\n      !rankUserRequest.includes(RanksEnum.MODERATOR)\n    ) {\n      switch (filter) {\n        case 1:\n          order = '-createdAt';\n          break;\n        case 2:\n          order = '-price';\n          break;\n        case 3:\n          order = '-discount.percentage';\n          break;\n        case 3:\n          order = 'createdAt';\n          break;\n        case 4:\n          order = 'price';\n          break;\n        case 5:\n          order = 'discount.percentage';\n          break;\n      }\n\n      return await this.marketModel\n        .find({})\n        .sort(order)\n        .select([\n          'name',\n          'description',\n          'price',\n          'available',\n          'status',\n          'discount',\n          'author',\n          'buyers',\n          'reactions',\n          'comments',\n          'createdAt',\n          'updatedAt',\n        ])\n        .populate('author', 'name photo rank premium.status')\n        .populate('buyers.user', 'name photo rank premium.status')\n        .populate('reactions.user', 'name photo rank premium.status')\n        .populate('comments.author', 'name photo rank premium.status')\n        .exec();\n    }\n  }\n\n  public async AddBuyerToProduct(buyerAddMarketDto: BuyerAddMarketDto) {\n    let product;\n\n    this.logger.log(\n      `Adding the user ${buyerAddMarketDto.user} as a new buyer of the product ${buyerAddMarketDto.product}.`,\n    );\n\n    try {\n      product = await this.marketModel.findById(buyerAddMarketDto.product);\n    } catch (error) {\n      this.logger.error(\n        `The user ${buyerAddMarketDto.user} could not be added as a new buyer of the product ${buyerAddMarketDto.product} due to an error in the database.`,\n      );\n\n      throw new NotFoundException(\n        this.i18nService.translate(\n          'translations.market.service.product_not_found',\n        ),\n      );\n    }\n\n    if (!product) {\n      this.logger.error(\n        `The user ${buyerAddMarketDto.user} could not be added as a new buyer of the product ${buyerAddMarketDto.product} because the product does not exist.`,\n      );\n\n      throw new NotFoundException(\n        this.i18nService.translate(\n          'translations.market.service.product_not_found',\n        ),\n      );\n    }\n\n    product.buyers.push({\n      user: buyerAddMarketDto.user,\n      device: buyerAddMarketDto.device,\n      ip: buyerAddMarketDto.ip,\n    });\n\n    return await product.save().catch(() => {\n      this.logger.error(\n        `The user ${buyerAddMarketDto.user} could not be added as a new buyer of the product ${buyerAddMarketDto.product} because the changes could not be saved.`,\n      );\n\n      throw new BadRequestException(\n        this.i18nService.translate(\n          'translations.market.service.buyer_error_added',\n        ),\n      );\n    });\n  }\n\n  public async AddComment(commentMarketDto: CommentMarketDto) {\n    let product;\n\n    this.logger.log(\n      `Adding a new comment for ${commentMarketDto.user} to the product ${commentMarketDto.product}.`,\n    );\n\n    try {\n      product = await this.marketModel.findById(commentMarketDto.product);\n    } catch (error) {\n      this.logger.error(\n        `A new comment for ${commentMarketDto.user} could not be added to the product ${commentMarketDto.product} due to a system error.`,\n      );\n\n      throw new NotFoundException(\n        this.i18nService.translate(\n          'translations.market.service.product_not_found',\n        ),\n      );\n    }\n\n    if (!product) {\n      this.logger.error(\n        `A new comment for ${commentMarketDto.user} could not be added to the product ${commentMarketDto.product} because the product does not exist.`,\n      );\n\n      throw new NotFoundException(\n        this.i18nService.translate(\n          'translations.market.service.product_not_found',\n        ),\n      );\n    }\n\n    product.comments.push({\n      author: commentMarketDto.user,\n      device: commentMarketDto.device,\n      ip: commentMarketDto.ip,\n      content: commentMarketDto.content,\n    });\n\n    return await product.save().catch(() => {\n      this.logger.error(\n        `A new comment for ${commentMarketDto.user} could not be added to the product ${commentMarketDto.product} because the changes could not be saved.`,\n      );\n\n      throw new BadRequestException(\n        this.i18nService.translate(\n          'translations.market.service.comment_error_added',\n        ),\n      );\n    });\n  }\n\n  public async AddReaction(reactionAddMarketDto: ReactionAddMarketDto) {\n    let product;\n\n    this.logger.log(\n      `Adding a new reaction for ${reactionAddMarketDto.user} to the product ${reactionAddMarketDto.product}.`,\n    );\n\n    try {\n      product = await this.marketModel.findById(reactionAddMarketDto.product);\n    } catch (error) {\n      this.logger.error(\n        `A new reaction for ${reactionAddMarketDto.user} could not be added to the product ${reactionAddMarketDto.product} due to an error in the database.`,\n      );\n\n      throw new NotFoundException(\n        this.i18nService.translate(\n          'translations.market.service.product_not_found',\n        ),\n      );\n    }\n\n    if (!product) {\n      this.logger.error(\n        `A new reaction for ${reactionAddMarketDto.user} could not be added to the product ${reactionAddMarketDto.product} because the product does not exist.`,\n      );\n\n      throw new NotFoundException(\n        this.i18nService.translate(\n          'translations.market.service.product_not_found',\n        ),\n      );\n    }\n\n    product.reactions.push({\n      user: reactionAddMarketDto.user,\n      device: reactionAddMarketDto.device,\n      ip: reactionAddMarketDto.ip,\n      type: reactionAddMarketDto.type,\n    });\n\n    return await product.save().catch(() => {\n      this.logger.error(\n        `A new reaction for ${reactionAddMarketDto.user} could not be added to the product ${reactionAddMarketDto.product} because the changes could not be saved.`,\n      );\n\n      throw new BadRequestException(\n        this.i18nService.translate(\n          'translations.market.service.reaction_error_added',\n        ),\n      );\n    });\n  }\n\n  public async RemoveComment(\n    commentRemoveMarketDto: CommentRemoveMarketDto,\n    idUserRequest: string,\n  ) {\n    let product;\n\n    this.logger.log(\n      `Deleting comment by ${commentRemoveMarketDto.author} in the product ${commentRemoveMarketDto.product}.`,\n    );\n\n    try {\n      product = await this.marketModel.findById(commentRemoveMarketDto.product);\n    } catch (error) {\n      this.logger.error(\n        `Could not delete comment for ${commentRemoveMarketDto.author} in product ${commentRemoveMarketDto.product} due to an error in the database.`,\n      );\n\n      throw new NotFoundException(\n        this.i18nService.translate(\n          'translations.market.service.product_not_found',\n        ),\n      );\n    }\n\n    if (!product) {\n      this.logger.error(\n        `Could not delete comment for ${commentRemoveMarketDto.author} in product ${commentRemoveMarketDto.product} because the product does not exist.`,\n      );\n\n      throw new NotFoundException(\n        this.i18nService.translate(\n          'translations.market.service.product_not_found',\n        ),\n      );\n    }\n\n    if (idUserRequest !== product.reaction.user) {\n      this.logger.error(\n        `Could not delete comment for ${commentRemoveMarketDto.author} on product ${commentRemoveMarketDto.product} because user ${idUserRequest} is not the author of the comment.`,\n      );\n\n      throw new ConflictException(\n        this.i18nService.translate(\n          'translations.market.service.comment_only_delete_owned',\n        ),\n      );\n    }\n\n    return await this.marketModel\n      .findOneAndUpdate(\n        commentRemoveMarketDto.product,\n        {\n          $pull: {\n            comments: {\n              author: commentRemoveMarketDto.author,\n            },\n          },\n        },\n        { new: true },\n      )\n      .catch(() => {\n        this.logger.error(\n          `Could not delete comment for ${commentRemoveMarketDto.author} in product ${commentRemoveMarketDto.product} because the changes could not be saved.`,\n        );\n\n        throw new BadRequestException(\n          this.i18nService.translate(\n            'translations.market.service.comment_error_deleted',\n          ),\n        );\n      });\n  }\n\n  public async RemoveBuyer(buyerRemoveMarketDto: BuyerRemoveMarketDto) {\n    this.logger.log(\n      `Removing buyer ${buyerRemoveMarketDto.user} from product ${buyerRemoveMarketDto.product}.`,\n    );\n\n    return await this.marketModel\n      .findOneAndUpdate(\n        buyerRemoveMarketDto.product,\n        {\n          $pull: {\n            buyers: {\n              user: buyerRemoveMarketDto.user,\n            },\n          },\n        },\n        { new: true },\n      )\n      .catch(() => {\n        this.logger.error(\n          `Could not remove buyer ${buyerRemoveMarketDto.user} from product ${buyerRemoveMarketDto.product} because the changes could not be saved.`,\n        );\n\n        throw new BadRequestException(\n          this.i18nService.translate(\n            'translations.market.service.buyer_error_deleted',\n          ),\n        );\n      });\n  }\n\n  public async RemoveReaction(\n    reactionRemoveMarketDto: ReactionRemoveMarketDto,\n    idUserRequest: string,\n  ) {\n    let product;\n\n    this.logger.log(\n      `Eliminating reaction for ${reactionRemoveMarketDto.user} in the product ${reactionRemoveMarketDto.product}.`,\n    );\n\n    try {\n      product = await this.marketModel.findById(\n        reactionRemoveMarketDto.product,\n      );\n    } catch (error) {\n      this.logger.error(\n        `The reaction could not be deleted for ${reactionRemoveMarketDto.user} in product ${reactionRemoveMarketDto.product} due to a database failure.`,\n      );\n\n      throw new NotFoundException(\n        this.i18nService.translate(\n          'translations.market.service.product_not_found',\n        ),\n      );\n    }\n\n    if (!product) {\n      this.logger.error(\n        `The reaction could not be removed for ${reactionRemoveMarketDto.user} in the product ${reactionRemoveMarketDto.product} because the product does not exist.`,\n      );\n\n      throw new NotFoundException(\n        this.i18nService.translate(\n          'translations.market.service.product_not_found',\n        ),\n      );\n    }\n\n    if (idUserRequest !== product.reaction.user) {\n      this.logger.error(\n        `The reaction could not be deleted for ${reactionRemoveMarketDto.user} in the product ${reactionRemoveMarketDto.product} because the user ${idUserRequest} is not the author of the reaction.`,\n      );\n\n      throw new ConflictException(\n        this.i18nService.translate(\n          'translations.market.service.reaction_only_delete_owned',\n        ),\n      );\n    }\n\n    return await this.marketModel\n      .findOneAndUpdate(\n        reactionRemoveMarketDto.product,\n        {\n          $pull: {\n            reactions: {\n              user: reactionRemoveMarketDto.user,\n            },\n          },\n        },\n        { new: true },\n      )\n      .catch(() => {\n        this.logger.error(\n          `The reaction could not be deleted for ${reactionRemoveMarketDto.user} in the product ${reactionRemoveMarketDto.product} because the changes could not be saved.`,\n        );\n\n        throw new BadRequestException(\n          this.i18nService.translate(\n            'translations.market.service.reaction_error_deleted',\n          ),\n        );\n      });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Membership.html":{"url":"classes/Membership.html","title":"class - Membership","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Membership\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/dto/user.dto.data.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                expiration\n                            \n                            \n                                    Public\n                                status\n                            \n                            \n                                    Public\n                                transaction\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            expiration\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/dto/user.dto.data.ts:62\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            status\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/modules/user/dto/user.dto.data.ts:60\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            transaction\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/dto/user.dto.data.ts:64\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Market {\n  public description: string;\n\n  public price: number;\n\n  public type: number;\n\n  public discount: number;\n\n  public seller: string;\n\n  public device: number;\n\n  public ip: string;\n\n  public market: number;\n}\n\nexport class Reactions {\n  public author: string;\n\n  public type: number;\n}\n\nexport class Suspension {\n  public status: boolean;\n\n  public reason: string;\n}\n\nexport class Stats {\n  public spent: number;\n\n  public won: number;\n\n  public rewards: number;\n\n  public rep: number;\n\n  public exp: number;\n}\n\nexport class Security {\n  public enabled: boolean;\n\n  public code1: number;\n\n  public code2: number;\n\n  public code3: number;\n\n  public code4: number;\n\n  public code5: number;\n\n  public twofactor: number;\n}\n\nexport class Membership {\n  public status: false;\n\n  public expiration: Date;\n\n  public transaction: Date;\n}\n\nexport class Rank {\n  public seller: boolean;\n\n  public mod: boolean;\n\n  public admin: boolean;\n}\n\nexport class Notifications {\n  public social: boolean;\n\n  public market: boolean;\n\n  public message: boolean;\n}\n\nexport class Online {\n  public online: boolean;\n\n  public mode: number;\n\n  public last: Date;\n}\n\nexport class Sessions {\n  // tslint:disable-next-line\n  public _id?: string;\n\n  public device: string | number;\n\n  public ip: string;\n\n  public twofactor: boolean;\n}\n\nexport class Email {\n  public key: string;\n\n  public status: boolean;\n\n  public token: string;\n\n  public expiration?: Date;\n}\n\nexport class Password {\n  public key: string;\n\n  public status?: boolean;\n\n  public token?: string;\n\n  public expiration?: Date;\n}\n\nexport class TransactionBuyer {\n  public id: string;\n\n  public ip: string;\n\n  public device: string;\n}\nexport class Transaction {\n  // tslint:disable-next-line\n  public _id?: string;\n\n  public seller: string;\n\n  public buyer: TransactionBuyer;\n\n  public item: string;\n\n  public type: number;\n\n  public price: number;\n\n  public discount: number;\n\n  public market: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Membership-1.html":{"url":"classes/Membership-1.html","title":"class - Membership-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Membership\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/models/user.model.data.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                expiration\n                            \n                            \n                                    Public\n                                status\n                            \n                            \n                                    Public\n                                transaction\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            expiration\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/models/user.model.data.ts:75\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/models/user.model.data.ts:72\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            transaction\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/models/user.model.data.ts:78\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { prop, index } from '@typegoose/typegoose';\nimport { TimeStamps } from '@typegoose/typegoose/lib/defaultClasses';\n\nexport class Reactions {\n  /*@prop({\n    required: true,\n    lowercase: true,\n    trim: true,\n  })\n  public author: string;*/\n\n  @prop({ required: true, min: 0, max: 1 })\n  public type: number;\n}\n\nexport class Suspension {\n  @prop({ required: true, default: false })\n  public status: boolean;\n\n  @prop({\n    required: true,\n    default:\n      '[System]: The reason for suspension has not been specified. Please contact us for more information.',\n    minlength: 90,\n    maxlength: 200,\n  })\n  public reason: string;\n}\n\nexport class Stats {\n  @prop({ required: true, default: 0 })\n  public spent: number;\n\n  @prop({ required: true, default: 0 })\n  public won: number;\n\n  @prop({ required: true, default: 0 })\n  public rewards: number;\n\n  @prop({ required: true, default: 0 })\n  public rep: number;\n\n  @prop({ required: true, default: 0 })\n  public exp: number;\n}\n\nexport class Security {\n  @prop({ required: true, default: false })\n  public enabled: boolean;\n\n  @prop({ required: true, default: 0 })\n  public code1: number;\n\n  @prop({ required: true, default: 0 })\n  public code2: number;\n\n  @prop({ required: true, default: 0 })\n  public code3: number;\n\n  @prop({ required: true, default: 0 })\n  public code4: number;\n\n  @prop({ required: true, default: 0 })\n  public code5: number;\n\n  @prop({ required: true, default: 0 })\n  public twofactor: number;\n}\n\nexport class Membership {\n  @prop({ required: true, default: false })\n  public status: false;\n\n  @prop({ required: true, default: Date.now() })\n  public expiration: Date;\n\n  @prop({ required: true, default: Date.now() })\n  public transaction: Date;\n}\n\nexport class Rank {\n  @prop({ required: true, default: false })\n  public seller: boolean;\n\n  @prop({ required: true, default: false })\n  public mod: boolean;\n\n  @prop({ required: true, default: false })\n  public admin: boolean;\n}\n\nexport class Notifications {\n  @prop({ required: true, default: false })\n  public social: boolean;\n\n  @prop({ required: true, default: false })\n  public market: boolean;\n\n  @prop({ required: true, default: false })\n  public message: boolean;\n}\n\nexport class Online {\n  @prop({ required: true, default: false })\n  public online: boolean;\n\n  @prop({ required: true, default: 0 })\n  public mode: number;\n\n  @prop({ required: true, default: Date.now() })\n  public last: Date;\n}\n\nexport class Sessions extends TimeStamps {\n  // tslint:disable-next-line\n  public _id?: string;\n\n  @prop({ required: true })\n  public device: string | number;\n\n  @prop({ required: true })\n  public ip: string;\n\n  @prop({ required: true, default: false })\n  public twofactor: boolean;\n}\n\nexport class Email {\n  @prop({ required: true, trim: true })\n  public key: string;\n\n  @prop({ required: true, default: false })\n  public status: boolean;\n\n  @prop({ required: true })\n  public token: string;\n\n  @prop({ required: true, default: Date.now() })\n  public expiration?: Date;\n}\n\nexport class Password {\n  @prop({ required: true, trim: true })\n  public key: string;\n\n  @prop({ required: true, default: true })\n  public status?: boolean;\n\n  @prop({ required: true })\n  public token?: string;\n\n  @prop({ required: true, default: Date.now() })\n  public expiration?: Date;\n}\n\nexport class TransactionInfo {\n  @prop({ required: true })\n  public id: string;\n\n  @prop({ required: true })\n  public ip: string;\n\n  @prop({ required: true })\n  public device: string;\n}\n\nexport class Transaction extends TimeStamps {\n  // tslint:disable-next-line\n  public _id?: string;\n\n  @prop({ default: new TransactionInfo(), _id: false })\n  public buyer: TransactionInfo;\n\n  @prop({ required: true })\n  public seller: string;\n\n  @prop({ required: true })\n  public product: string;\n\n  @prop({ required: true })\n  public type: number;\n\n  @prop({ required: true })\n  public price: number;\n\n  @prop({ required: true })\n  public discount: number;\n\n  @prop({ required: true })\n  public market: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Notifications.html":{"url":"classes/Notifications.html","title":"class - Notifications","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Notifications\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/dto/user.dto.data.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                market\n                            \n                            \n                                    Public\n                                message\n                            \n                            \n                                    Public\n                                social\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            market\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/dto/user.dto.data.ts:78\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            message\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/dto/user.dto.data.ts:80\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            social\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/dto/user.dto.data.ts:76\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Market {\n  public description: string;\n\n  public price: number;\n\n  public type: number;\n\n  public discount: number;\n\n  public seller: string;\n\n  public device: number;\n\n  public ip: string;\n\n  public market: number;\n}\n\nexport class Reactions {\n  public author: string;\n\n  public type: number;\n}\n\nexport class Suspension {\n  public status: boolean;\n\n  public reason: string;\n}\n\nexport class Stats {\n  public spent: number;\n\n  public won: number;\n\n  public rewards: number;\n\n  public rep: number;\n\n  public exp: number;\n}\n\nexport class Security {\n  public enabled: boolean;\n\n  public code1: number;\n\n  public code2: number;\n\n  public code3: number;\n\n  public code4: number;\n\n  public code5: number;\n\n  public twofactor: number;\n}\n\nexport class Membership {\n  public status: false;\n\n  public expiration: Date;\n\n  public transaction: Date;\n}\n\nexport class Rank {\n  public seller: boolean;\n\n  public mod: boolean;\n\n  public admin: boolean;\n}\n\nexport class Notifications {\n  public social: boolean;\n\n  public market: boolean;\n\n  public message: boolean;\n}\n\nexport class Online {\n  public online: boolean;\n\n  public mode: number;\n\n  public last: Date;\n}\n\nexport class Sessions {\n  // tslint:disable-next-line\n  public _id?: string;\n\n  public device: string | number;\n\n  public ip: string;\n\n  public twofactor: boolean;\n}\n\nexport class Email {\n  public key: string;\n\n  public status: boolean;\n\n  public token: string;\n\n  public expiration?: Date;\n}\n\nexport class Password {\n  public key: string;\n\n  public status?: boolean;\n\n  public token?: string;\n\n  public expiration?: Date;\n}\n\nexport class TransactionBuyer {\n  public id: string;\n\n  public ip: string;\n\n  public device: string;\n}\nexport class Transaction {\n  // tslint:disable-next-line\n  public _id?: string;\n\n  public seller: string;\n\n  public buyer: TransactionBuyer;\n\n  public item: string;\n\n  public type: number;\n\n  public price: number;\n\n  public discount: number;\n\n  public market: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Notifications-1.html":{"url":"classes/Notifications-1.html","title":"class - Notifications-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Notifications\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/models/user.model.data.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                market\n                            \n                            \n                                    Public\n                                message\n                            \n                            \n                                    Public\n                                social\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            market\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/models/user.model.data.ts:97\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            message\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/models/user.model.data.ts:100\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            social\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/models/user.model.data.ts:94\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { prop, index } from '@typegoose/typegoose';\nimport { TimeStamps } from '@typegoose/typegoose/lib/defaultClasses';\n\nexport class Reactions {\n  /*@prop({\n    required: true,\n    lowercase: true,\n    trim: true,\n  })\n  public author: string;*/\n\n  @prop({ required: true, min: 0, max: 1 })\n  public type: number;\n}\n\nexport class Suspension {\n  @prop({ required: true, default: false })\n  public status: boolean;\n\n  @prop({\n    required: true,\n    default:\n      '[System]: The reason for suspension has not been specified. Please contact us for more information.',\n    minlength: 90,\n    maxlength: 200,\n  })\n  public reason: string;\n}\n\nexport class Stats {\n  @prop({ required: true, default: 0 })\n  public spent: number;\n\n  @prop({ required: true, default: 0 })\n  public won: number;\n\n  @prop({ required: true, default: 0 })\n  public rewards: number;\n\n  @prop({ required: true, default: 0 })\n  public rep: number;\n\n  @prop({ required: true, default: 0 })\n  public exp: number;\n}\n\nexport class Security {\n  @prop({ required: true, default: false })\n  public enabled: boolean;\n\n  @prop({ required: true, default: 0 })\n  public code1: number;\n\n  @prop({ required: true, default: 0 })\n  public code2: number;\n\n  @prop({ required: true, default: 0 })\n  public code3: number;\n\n  @prop({ required: true, default: 0 })\n  public code4: number;\n\n  @prop({ required: true, default: 0 })\n  public code5: number;\n\n  @prop({ required: true, default: 0 })\n  public twofactor: number;\n}\n\nexport class Membership {\n  @prop({ required: true, default: false })\n  public status: false;\n\n  @prop({ required: true, default: Date.now() })\n  public expiration: Date;\n\n  @prop({ required: true, default: Date.now() })\n  public transaction: Date;\n}\n\nexport class Rank {\n  @prop({ required: true, default: false })\n  public seller: boolean;\n\n  @prop({ required: true, default: false })\n  public mod: boolean;\n\n  @prop({ required: true, default: false })\n  public admin: boolean;\n}\n\nexport class Notifications {\n  @prop({ required: true, default: false })\n  public social: boolean;\n\n  @prop({ required: true, default: false })\n  public market: boolean;\n\n  @prop({ required: true, default: false })\n  public message: boolean;\n}\n\nexport class Online {\n  @prop({ required: true, default: false })\n  public online: boolean;\n\n  @prop({ required: true, default: 0 })\n  public mode: number;\n\n  @prop({ required: true, default: Date.now() })\n  public last: Date;\n}\n\nexport class Sessions extends TimeStamps {\n  // tslint:disable-next-line\n  public _id?: string;\n\n  @prop({ required: true })\n  public device: string | number;\n\n  @prop({ required: true })\n  public ip: string;\n\n  @prop({ required: true, default: false })\n  public twofactor: boolean;\n}\n\nexport class Email {\n  @prop({ required: true, trim: true })\n  public key: string;\n\n  @prop({ required: true, default: false })\n  public status: boolean;\n\n  @prop({ required: true })\n  public token: string;\n\n  @prop({ required: true, default: Date.now() })\n  public expiration?: Date;\n}\n\nexport class Password {\n  @prop({ required: true, trim: true })\n  public key: string;\n\n  @prop({ required: true, default: true })\n  public status?: boolean;\n\n  @prop({ required: true })\n  public token?: string;\n\n  @prop({ required: true, default: Date.now() })\n  public expiration?: Date;\n}\n\nexport class TransactionInfo {\n  @prop({ required: true })\n  public id: string;\n\n  @prop({ required: true })\n  public ip: string;\n\n  @prop({ required: true })\n  public device: string;\n}\n\nexport class Transaction extends TimeStamps {\n  // tslint:disable-next-line\n  public _id?: string;\n\n  @prop({ default: new TransactionInfo(), _id: false })\n  public buyer: TransactionInfo;\n\n  @prop({ required: true })\n  public seller: string;\n\n  @prop({ required: true })\n  public product: string;\n\n  @prop({ required: true })\n  public type: number;\n\n  @prop({ required: true })\n  public price: number;\n\n  @prop({ required: true })\n  public discount: number;\n\n  @prop({ required: true })\n  public market: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Online.html":{"url":"classes/Online.html","title":"class - Online","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Online\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/dto/user.dto.data.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                last\n                            \n                            \n                                    Public\n                                mode\n                            \n                            \n                                    Public\n                                online\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            last\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/dto/user.dto.data.ts:88\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            mode\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/dto/user.dto.data.ts:86\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            online\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/dto/user.dto.data.ts:84\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Market {\n  public description: string;\n\n  public price: number;\n\n  public type: number;\n\n  public discount: number;\n\n  public seller: string;\n\n  public device: number;\n\n  public ip: string;\n\n  public market: number;\n}\n\nexport class Reactions {\n  public author: string;\n\n  public type: number;\n}\n\nexport class Suspension {\n  public status: boolean;\n\n  public reason: string;\n}\n\nexport class Stats {\n  public spent: number;\n\n  public won: number;\n\n  public rewards: number;\n\n  public rep: number;\n\n  public exp: number;\n}\n\nexport class Security {\n  public enabled: boolean;\n\n  public code1: number;\n\n  public code2: number;\n\n  public code3: number;\n\n  public code4: number;\n\n  public code5: number;\n\n  public twofactor: number;\n}\n\nexport class Membership {\n  public status: false;\n\n  public expiration: Date;\n\n  public transaction: Date;\n}\n\nexport class Rank {\n  public seller: boolean;\n\n  public mod: boolean;\n\n  public admin: boolean;\n}\n\nexport class Notifications {\n  public social: boolean;\n\n  public market: boolean;\n\n  public message: boolean;\n}\n\nexport class Online {\n  public online: boolean;\n\n  public mode: number;\n\n  public last: Date;\n}\n\nexport class Sessions {\n  // tslint:disable-next-line\n  public _id?: string;\n\n  public device: string | number;\n\n  public ip: string;\n\n  public twofactor: boolean;\n}\n\nexport class Email {\n  public key: string;\n\n  public status: boolean;\n\n  public token: string;\n\n  public expiration?: Date;\n}\n\nexport class Password {\n  public key: string;\n\n  public status?: boolean;\n\n  public token?: string;\n\n  public expiration?: Date;\n}\n\nexport class TransactionBuyer {\n  public id: string;\n\n  public ip: string;\n\n  public device: string;\n}\nexport class Transaction {\n  // tslint:disable-next-line\n  public _id?: string;\n\n  public seller: string;\n\n  public buyer: TransactionBuyer;\n\n  public item: string;\n\n  public type: number;\n\n  public price: number;\n\n  public discount: number;\n\n  public market: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Online-1.html":{"url":"classes/Online-1.html","title":"class - Online-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Online\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/models/user.model.data.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                last\n                            \n                            \n                                    Public\n                                mode\n                            \n                            \n                                    Public\n                                online\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            last\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/models/user.model.data.ts:111\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            mode\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: 0})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/models/user.model.data.ts:108\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            online\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/models/user.model.data.ts:105\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { prop, index } from '@typegoose/typegoose';\nimport { TimeStamps } from '@typegoose/typegoose/lib/defaultClasses';\n\nexport class Reactions {\n  /*@prop({\n    required: true,\n    lowercase: true,\n    trim: true,\n  })\n  public author: string;*/\n\n  @prop({ required: true, min: 0, max: 1 })\n  public type: number;\n}\n\nexport class Suspension {\n  @prop({ required: true, default: false })\n  public status: boolean;\n\n  @prop({\n    required: true,\n    default:\n      '[System]: The reason for suspension has not been specified. Please contact us for more information.',\n    minlength: 90,\n    maxlength: 200,\n  })\n  public reason: string;\n}\n\nexport class Stats {\n  @prop({ required: true, default: 0 })\n  public spent: number;\n\n  @prop({ required: true, default: 0 })\n  public won: number;\n\n  @prop({ required: true, default: 0 })\n  public rewards: number;\n\n  @prop({ required: true, default: 0 })\n  public rep: number;\n\n  @prop({ required: true, default: 0 })\n  public exp: number;\n}\n\nexport class Security {\n  @prop({ required: true, default: false })\n  public enabled: boolean;\n\n  @prop({ required: true, default: 0 })\n  public code1: number;\n\n  @prop({ required: true, default: 0 })\n  public code2: number;\n\n  @prop({ required: true, default: 0 })\n  public code3: number;\n\n  @prop({ required: true, default: 0 })\n  public code4: number;\n\n  @prop({ required: true, default: 0 })\n  public code5: number;\n\n  @prop({ required: true, default: 0 })\n  public twofactor: number;\n}\n\nexport class Membership {\n  @prop({ required: true, default: false })\n  public status: false;\n\n  @prop({ required: true, default: Date.now() })\n  public expiration: Date;\n\n  @prop({ required: true, default: Date.now() })\n  public transaction: Date;\n}\n\nexport class Rank {\n  @prop({ required: true, default: false })\n  public seller: boolean;\n\n  @prop({ required: true, default: false })\n  public mod: boolean;\n\n  @prop({ required: true, default: false })\n  public admin: boolean;\n}\n\nexport class Notifications {\n  @prop({ required: true, default: false })\n  public social: boolean;\n\n  @prop({ required: true, default: false })\n  public market: boolean;\n\n  @prop({ required: true, default: false })\n  public message: boolean;\n}\n\nexport class Online {\n  @prop({ required: true, default: false })\n  public online: boolean;\n\n  @prop({ required: true, default: 0 })\n  public mode: number;\n\n  @prop({ required: true, default: Date.now() })\n  public last: Date;\n}\n\nexport class Sessions extends TimeStamps {\n  // tslint:disable-next-line\n  public _id?: string;\n\n  @prop({ required: true })\n  public device: string | number;\n\n  @prop({ required: true })\n  public ip: string;\n\n  @prop({ required: true, default: false })\n  public twofactor: boolean;\n}\n\nexport class Email {\n  @prop({ required: true, trim: true })\n  public key: string;\n\n  @prop({ required: true, default: false })\n  public status: boolean;\n\n  @prop({ required: true })\n  public token: string;\n\n  @prop({ required: true, default: Date.now() })\n  public expiration?: Date;\n}\n\nexport class Password {\n  @prop({ required: true, trim: true })\n  public key: string;\n\n  @prop({ required: true, default: true })\n  public status?: boolean;\n\n  @prop({ required: true })\n  public token?: string;\n\n  @prop({ required: true, default: Date.now() })\n  public expiration?: Date;\n}\n\nexport class TransactionInfo {\n  @prop({ required: true })\n  public id: string;\n\n  @prop({ required: true })\n  public ip: string;\n\n  @prop({ required: true })\n  public device: string;\n}\n\nexport class Transaction extends TimeStamps {\n  // tslint:disable-next-line\n  public _id?: string;\n\n  @prop({ default: new TransactionInfo(), _id: false })\n  public buyer: TransactionInfo;\n\n  @prop({ required: true })\n  public seller: string;\n\n  @prop({ required: true })\n  public product: string;\n\n  @prop({ required: true })\n  public type: number;\n\n  @prop({ required: true })\n  public price: number;\n\n  @prop({ required: true })\n  public discount: number;\n\n  @prop({ required: true })\n  public market: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Password.html":{"url":"classes/Password.html","title":"class - Password","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Password\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/dto/user.dto.data.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                expiration\n                            \n                            \n                                    Public\n                                key\n                            \n                            \n                                    Public\n                                    Optional\n                                status\n                            \n                            \n                                    Public\n                                    Optional\n                                token\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            expiration\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/dto/user.dto.data.ts:119\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            key\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/dto/user.dto.data.ts:113\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/dto/user.dto.data.ts:115\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/dto/user.dto.data.ts:117\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Market {\n  public description: string;\n\n  public price: number;\n\n  public type: number;\n\n  public discount: number;\n\n  public seller: string;\n\n  public device: number;\n\n  public ip: string;\n\n  public market: number;\n}\n\nexport class Reactions {\n  public author: string;\n\n  public type: number;\n}\n\nexport class Suspension {\n  public status: boolean;\n\n  public reason: string;\n}\n\nexport class Stats {\n  public spent: number;\n\n  public won: number;\n\n  public rewards: number;\n\n  public rep: number;\n\n  public exp: number;\n}\n\nexport class Security {\n  public enabled: boolean;\n\n  public code1: number;\n\n  public code2: number;\n\n  public code3: number;\n\n  public code4: number;\n\n  public code5: number;\n\n  public twofactor: number;\n}\n\nexport class Membership {\n  public status: false;\n\n  public expiration: Date;\n\n  public transaction: Date;\n}\n\nexport class Rank {\n  public seller: boolean;\n\n  public mod: boolean;\n\n  public admin: boolean;\n}\n\nexport class Notifications {\n  public social: boolean;\n\n  public market: boolean;\n\n  public message: boolean;\n}\n\nexport class Online {\n  public online: boolean;\n\n  public mode: number;\n\n  public last: Date;\n}\n\nexport class Sessions {\n  // tslint:disable-next-line\n  public _id?: string;\n\n  public device: string | number;\n\n  public ip: string;\n\n  public twofactor: boolean;\n}\n\nexport class Email {\n  public key: string;\n\n  public status: boolean;\n\n  public token: string;\n\n  public expiration?: Date;\n}\n\nexport class Password {\n  public key: string;\n\n  public status?: boolean;\n\n  public token?: string;\n\n  public expiration?: Date;\n}\n\nexport class TransactionBuyer {\n  public id: string;\n\n  public ip: string;\n\n  public device: string;\n}\nexport class Transaction {\n  // tslint:disable-next-line\n  public _id?: string;\n\n  public seller: string;\n\n  public buyer: TransactionBuyer;\n\n  public item: string;\n\n  public type: number;\n\n  public price: number;\n\n  public discount: number;\n\n  public market: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Password-1.html":{"url":"classes/Password-1.html","title":"class - Password-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Password\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/models/user.model.data.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                expiration\n                            \n                            \n                                    Public\n                                key\n                            \n                            \n                                    Public\n                                    Optional\n                                status\n                            \n                            \n                                    Public\n                                    Optional\n                                token\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            expiration\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/models/user.model.data.ts:153\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            key\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, trim: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/models/user.model.data.ts:144\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/models/user.model.data.ts:147\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/models/user.model.data.ts:150\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { prop, index } from '@typegoose/typegoose';\nimport { TimeStamps } from '@typegoose/typegoose/lib/defaultClasses';\n\nexport class Reactions {\n  /*@prop({\n    required: true,\n    lowercase: true,\n    trim: true,\n  })\n  public author: string;*/\n\n  @prop({ required: true, min: 0, max: 1 })\n  public type: number;\n}\n\nexport class Suspension {\n  @prop({ required: true, default: false })\n  public status: boolean;\n\n  @prop({\n    required: true,\n    default:\n      '[System]: The reason for suspension has not been specified. Please contact us for more information.',\n    minlength: 90,\n    maxlength: 200,\n  })\n  public reason: string;\n}\n\nexport class Stats {\n  @prop({ required: true, default: 0 })\n  public spent: number;\n\n  @prop({ required: true, default: 0 })\n  public won: number;\n\n  @prop({ required: true, default: 0 })\n  public rewards: number;\n\n  @prop({ required: true, default: 0 })\n  public rep: number;\n\n  @prop({ required: true, default: 0 })\n  public exp: number;\n}\n\nexport class Security {\n  @prop({ required: true, default: false })\n  public enabled: boolean;\n\n  @prop({ required: true, default: 0 })\n  public code1: number;\n\n  @prop({ required: true, default: 0 })\n  public code2: number;\n\n  @prop({ required: true, default: 0 })\n  public code3: number;\n\n  @prop({ required: true, default: 0 })\n  public code4: number;\n\n  @prop({ required: true, default: 0 })\n  public code5: number;\n\n  @prop({ required: true, default: 0 })\n  public twofactor: number;\n}\n\nexport class Membership {\n  @prop({ required: true, default: false })\n  public status: false;\n\n  @prop({ required: true, default: Date.now() })\n  public expiration: Date;\n\n  @prop({ required: true, default: Date.now() })\n  public transaction: Date;\n}\n\nexport class Rank {\n  @prop({ required: true, default: false })\n  public seller: boolean;\n\n  @prop({ required: true, default: false })\n  public mod: boolean;\n\n  @prop({ required: true, default: false })\n  public admin: boolean;\n}\n\nexport class Notifications {\n  @prop({ required: true, default: false })\n  public social: boolean;\n\n  @prop({ required: true, default: false })\n  public market: boolean;\n\n  @prop({ required: true, default: false })\n  public message: boolean;\n}\n\nexport class Online {\n  @prop({ required: true, default: false })\n  public online: boolean;\n\n  @prop({ required: true, default: 0 })\n  public mode: number;\n\n  @prop({ required: true, default: Date.now() })\n  public last: Date;\n}\n\nexport class Sessions extends TimeStamps {\n  // tslint:disable-next-line\n  public _id?: string;\n\n  @prop({ required: true })\n  public device: string | number;\n\n  @prop({ required: true })\n  public ip: string;\n\n  @prop({ required: true, default: false })\n  public twofactor: boolean;\n}\n\nexport class Email {\n  @prop({ required: true, trim: true })\n  public key: string;\n\n  @prop({ required: true, default: false })\n  public status: boolean;\n\n  @prop({ required: true })\n  public token: string;\n\n  @prop({ required: true, default: Date.now() })\n  public expiration?: Date;\n}\n\nexport class Password {\n  @prop({ required: true, trim: true })\n  public key: string;\n\n  @prop({ required: true, default: true })\n  public status?: boolean;\n\n  @prop({ required: true })\n  public token?: string;\n\n  @prop({ required: true, default: Date.now() })\n  public expiration?: Date;\n}\n\nexport class TransactionInfo {\n  @prop({ required: true })\n  public id: string;\n\n  @prop({ required: true })\n  public ip: string;\n\n  @prop({ required: true })\n  public device: string;\n}\n\nexport class Transaction extends TimeStamps {\n  // tslint:disable-next-line\n  public _id?: string;\n\n  @prop({ default: new TransactionInfo(), _id: false })\n  public buyer: TransactionInfo;\n\n  @prop({ required: true })\n  public seller: string;\n\n  @prop({ required: true })\n  public product: string;\n\n  @prop({ required: true })\n  public type: number;\n\n  @prop({ required: true })\n  public price: number;\n\n  @prop({ required: true })\n  public discount: number;\n\n  @prop({ required: true })\n  public market: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Rank.html":{"url":"classes/Rank.html","title":"class - Rank","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Rank\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/dto/user.dto.data.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                admin\n                            \n                            \n                                    Public\n                                mod\n                            \n                            \n                                    Public\n                                seller\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            admin\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/dto/user.dto.data.ts:72\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            mod\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/dto/user.dto.data.ts:70\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            seller\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/dto/user.dto.data.ts:68\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Market {\n  public description: string;\n\n  public price: number;\n\n  public type: number;\n\n  public discount: number;\n\n  public seller: string;\n\n  public device: number;\n\n  public ip: string;\n\n  public market: number;\n}\n\nexport class Reactions {\n  public author: string;\n\n  public type: number;\n}\n\nexport class Suspension {\n  public status: boolean;\n\n  public reason: string;\n}\n\nexport class Stats {\n  public spent: number;\n\n  public won: number;\n\n  public rewards: number;\n\n  public rep: number;\n\n  public exp: number;\n}\n\nexport class Security {\n  public enabled: boolean;\n\n  public code1: number;\n\n  public code2: number;\n\n  public code3: number;\n\n  public code4: number;\n\n  public code5: number;\n\n  public twofactor: number;\n}\n\nexport class Membership {\n  public status: false;\n\n  public expiration: Date;\n\n  public transaction: Date;\n}\n\nexport class Rank {\n  public seller: boolean;\n\n  public mod: boolean;\n\n  public admin: boolean;\n}\n\nexport class Notifications {\n  public social: boolean;\n\n  public market: boolean;\n\n  public message: boolean;\n}\n\nexport class Online {\n  public online: boolean;\n\n  public mode: number;\n\n  public last: Date;\n}\n\nexport class Sessions {\n  // tslint:disable-next-line\n  public _id?: string;\n\n  public device: string | number;\n\n  public ip: string;\n\n  public twofactor: boolean;\n}\n\nexport class Email {\n  public key: string;\n\n  public status: boolean;\n\n  public token: string;\n\n  public expiration?: Date;\n}\n\nexport class Password {\n  public key: string;\n\n  public status?: boolean;\n\n  public token?: string;\n\n  public expiration?: Date;\n}\n\nexport class TransactionBuyer {\n  public id: string;\n\n  public ip: string;\n\n  public device: string;\n}\nexport class Transaction {\n  // tslint:disable-next-line\n  public _id?: string;\n\n  public seller: string;\n\n  public buyer: TransactionBuyer;\n\n  public item: string;\n\n  public type: number;\n\n  public price: number;\n\n  public discount: number;\n\n  public market: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Rank-1.html":{"url":"classes/Rank-1.html","title":"class - Rank-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Rank\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/models/user.model.data.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                admin\n                            \n                            \n                                    Public\n                                mod\n                            \n                            \n                                    Public\n                                seller\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            admin\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/models/user.model.data.ts:89\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            mod\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/models/user.model.data.ts:86\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            seller\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/models/user.model.data.ts:83\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { prop, index } from '@typegoose/typegoose';\nimport { TimeStamps } from '@typegoose/typegoose/lib/defaultClasses';\n\nexport class Reactions {\n  /*@prop({\n    required: true,\n    lowercase: true,\n    trim: true,\n  })\n  public author: string;*/\n\n  @prop({ required: true, min: 0, max: 1 })\n  public type: number;\n}\n\nexport class Suspension {\n  @prop({ required: true, default: false })\n  public status: boolean;\n\n  @prop({\n    required: true,\n    default:\n      '[System]: The reason for suspension has not been specified. Please contact us for more information.',\n    minlength: 90,\n    maxlength: 200,\n  })\n  public reason: string;\n}\n\nexport class Stats {\n  @prop({ required: true, default: 0 })\n  public spent: number;\n\n  @prop({ required: true, default: 0 })\n  public won: number;\n\n  @prop({ required: true, default: 0 })\n  public rewards: number;\n\n  @prop({ required: true, default: 0 })\n  public rep: number;\n\n  @prop({ required: true, default: 0 })\n  public exp: number;\n}\n\nexport class Security {\n  @prop({ required: true, default: false })\n  public enabled: boolean;\n\n  @prop({ required: true, default: 0 })\n  public code1: number;\n\n  @prop({ required: true, default: 0 })\n  public code2: number;\n\n  @prop({ required: true, default: 0 })\n  public code3: number;\n\n  @prop({ required: true, default: 0 })\n  public code4: number;\n\n  @prop({ required: true, default: 0 })\n  public code5: number;\n\n  @prop({ required: true, default: 0 })\n  public twofactor: number;\n}\n\nexport class Membership {\n  @prop({ required: true, default: false })\n  public status: false;\n\n  @prop({ required: true, default: Date.now() })\n  public expiration: Date;\n\n  @prop({ required: true, default: Date.now() })\n  public transaction: Date;\n}\n\nexport class Rank {\n  @prop({ required: true, default: false })\n  public seller: boolean;\n\n  @prop({ required: true, default: false })\n  public mod: boolean;\n\n  @prop({ required: true, default: false })\n  public admin: boolean;\n}\n\nexport class Notifications {\n  @prop({ required: true, default: false })\n  public social: boolean;\n\n  @prop({ required: true, default: false })\n  public market: boolean;\n\n  @prop({ required: true, default: false })\n  public message: boolean;\n}\n\nexport class Online {\n  @prop({ required: true, default: false })\n  public online: boolean;\n\n  @prop({ required: true, default: 0 })\n  public mode: number;\n\n  @prop({ required: true, default: Date.now() })\n  public last: Date;\n}\n\nexport class Sessions extends TimeStamps {\n  // tslint:disable-next-line\n  public _id?: string;\n\n  @prop({ required: true })\n  public device: string | number;\n\n  @prop({ required: true })\n  public ip: string;\n\n  @prop({ required: true, default: false })\n  public twofactor: boolean;\n}\n\nexport class Email {\n  @prop({ required: true, trim: true })\n  public key: string;\n\n  @prop({ required: true, default: false })\n  public status: boolean;\n\n  @prop({ required: true })\n  public token: string;\n\n  @prop({ required: true, default: Date.now() })\n  public expiration?: Date;\n}\n\nexport class Password {\n  @prop({ required: true, trim: true })\n  public key: string;\n\n  @prop({ required: true, default: true })\n  public status?: boolean;\n\n  @prop({ required: true })\n  public token?: string;\n\n  @prop({ required: true, default: Date.now() })\n  public expiration?: Date;\n}\n\nexport class TransactionInfo {\n  @prop({ required: true })\n  public id: string;\n\n  @prop({ required: true })\n  public ip: string;\n\n  @prop({ required: true })\n  public device: string;\n}\n\nexport class Transaction extends TimeStamps {\n  // tslint:disable-next-line\n  public _id?: string;\n\n  @prop({ default: new TransactionInfo(), _id: false })\n  public buyer: TransactionInfo;\n\n  @prop({ required: true })\n  public seller: string;\n\n  @prop({ required: true })\n  public product: string;\n\n  @prop({ required: true })\n  public type: number;\n\n  @prop({ required: true })\n  public price: number;\n\n  @prop({ required: true })\n  public discount: number;\n\n  @prop({ required: true })\n  public market: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/RankGuard.html":{"url":"guards/RankGuard.html","title":"guard - RankGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    RankGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/guards/rank.guard.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector)\n                    \n                \n                        \n                            \n                                Defined in src/guards/rank.guard.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/guards/rank.guard.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { CanActivate, ExecutionContext, Injectable } from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\n\n@Injectable()\nexport class RankGuard implements CanActivate {\n  constructor(private readonly reflector: Reflector) {}\n\n  canActivate(context: ExecutionContext): boolean {\n    const ranks: string[] = this.reflector.get(\n      'rank',\n      context.getHandler(),\n    );\n\n    if (!ranks) {\n      return true;\n    }\n\n    const request = context.switchToHttp().getRequest();\n    const { user } = request;\n\n    const hasRole = () =>\n      user.rank.some((rank: string) => ranks.includes(rank));\n\n    return user && user.rank && hasRole();\n  }\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ReactionAddMarketDto.html":{"url":"classes/ReactionAddMarketDto.html","title":"class - ReactionAddMarketDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ReactionAddMarketDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/market/dto/reaction.add.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                device\n                            \n                            \n                                    Public\n                                ip\n                            \n                            \n                                    Public\n                                product\n                            \n                            \n                                    Public\n                                type\n                            \n                            \n                                    Public\n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            device\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string | number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/market/dto/reaction.add.dto.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ip\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/market/dto/reaction.add.dto.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            product\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/market/dto/reaction.add.dto.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/market/dto/reaction.add.dto.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/market/dto/reaction.add.dto.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Ref } from '@typegoose/typegoose';\n\nimport { UserModel } from '../../../modules/user/models/user.model';\nimport { IsNotEmpty, IsString } from 'class-validator';\n\nexport class ReactionAddMarketDto {\n  @IsNotEmpty()\n  @IsString()\n  public product: string;\n\n  @IsNotEmpty()\n  @IsString()\n  public user: Ref;\n\n  @IsNotEmpty()\n  @IsString()\n  public device: string | number;\n\n  @IsNotEmpty()\n  @IsString()\n  public ip: string;\n\n  @IsNotEmpty()\n  @IsString()\n  public type: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ReactionRemoveMarketDto.html":{"url":"classes/ReactionRemoveMarketDto.html","title":"class - ReactionRemoveMarketDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ReactionRemoveMarketDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/market/dto/reaction.remove.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                product\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            product\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/market/dto/reaction.remove.dto.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/market/dto/reaction.remove.dto.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsString } from 'class-validator';\n\nexport class ReactionRemoveMarketDto {\n  @IsNotEmpty()\n  @IsString()\n  product: string;\n\n  @IsNotEmpty()\n  @IsString()\n  user: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Reactions.html":{"url":"classes/Reactions.html","title":"class - Reactions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Reactions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/dto/user.dto.data.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                author\n                            \n                            \n                                    Public\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            author\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/dto/user.dto.data.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/dto/user.dto.data.ts:22\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Market {\n  public description: string;\n\n  public price: number;\n\n  public type: number;\n\n  public discount: number;\n\n  public seller: string;\n\n  public device: number;\n\n  public ip: string;\n\n  public market: number;\n}\n\nexport class Reactions {\n  public author: string;\n\n  public type: number;\n}\n\nexport class Suspension {\n  public status: boolean;\n\n  public reason: string;\n}\n\nexport class Stats {\n  public spent: number;\n\n  public won: number;\n\n  public rewards: number;\n\n  public rep: number;\n\n  public exp: number;\n}\n\nexport class Security {\n  public enabled: boolean;\n\n  public code1: number;\n\n  public code2: number;\n\n  public code3: number;\n\n  public code4: number;\n\n  public code5: number;\n\n  public twofactor: number;\n}\n\nexport class Membership {\n  public status: false;\n\n  public expiration: Date;\n\n  public transaction: Date;\n}\n\nexport class Rank {\n  public seller: boolean;\n\n  public mod: boolean;\n\n  public admin: boolean;\n}\n\nexport class Notifications {\n  public social: boolean;\n\n  public market: boolean;\n\n  public message: boolean;\n}\n\nexport class Online {\n  public online: boolean;\n\n  public mode: number;\n\n  public last: Date;\n}\n\nexport class Sessions {\n  // tslint:disable-next-line\n  public _id?: string;\n\n  public device: string | number;\n\n  public ip: string;\n\n  public twofactor: boolean;\n}\n\nexport class Email {\n  public key: string;\n\n  public status: boolean;\n\n  public token: string;\n\n  public expiration?: Date;\n}\n\nexport class Password {\n  public key: string;\n\n  public status?: boolean;\n\n  public token?: string;\n\n  public expiration?: Date;\n}\n\nexport class TransactionBuyer {\n  public id: string;\n\n  public ip: string;\n\n  public device: string;\n}\nexport class Transaction {\n  // tslint:disable-next-line\n  public _id?: string;\n\n  public seller: string;\n\n  public buyer: TransactionBuyer;\n\n  public item: string;\n\n  public type: number;\n\n  public price: number;\n\n  public discount: number;\n\n  public market: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Reactions-1.html":{"url":"classes/Reactions-1.html","title":"class - Reactions-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Reactions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/models/user.model.data.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, min: 0, max: 1})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/models/user.model.data.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { prop, index } from '@typegoose/typegoose';\nimport { TimeStamps } from '@typegoose/typegoose/lib/defaultClasses';\n\nexport class Reactions {\n  /*@prop({\n    required: true,\n    lowercase: true,\n    trim: true,\n  })\n  public author: string;*/\n\n  @prop({ required: true, min: 0, max: 1 })\n  public type: number;\n}\n\nexport class Suspension {\n  @prop({ required: true, default: false })\n  public status: boolean;\n\n  @prop({\n    required: true,\n    default:\n      '[System]: The reason for suspension has not been specified. Please contact us for more information.',\n    minlength: 90,\n    maxlength: 200,\n  })\n  public reason: string;\n}\n\nexport class Stats {\n  @prop({ required: true, default: 0 })\n  public spent: number;\n\n  @prop({ required: true, default: 0 })\n  public won: number;\n\n  @prop({ required: true, default: 0 })\n  public rewards: number;\n\n  @prop({ required: true, default: 0 })\n  public rep: number;\n\n  @prop({ required: true, default: 0 })\n  public exp: number;\n}\n\nexport class Security {\n  @prop({ required: true, default: false })\n  public enabled: boolean;\n\n  @prop({ required: true, default: 0 })\n  public code1: number;\n\n  @prop({ required: true, default: 0 })\n  public code2: number;\n\n  @prop({ required: true, default: 0 })\n  public code3: number;\n\n  @prop({ required: true, default: 0 })\n  public code4: number;\n\n  @prop({ required: true, default: 0 })\n  public code5: number;\n\n  @prop({ required: true, default: 0 })\n  public twofactor: number;\n}\n\nexport class Membership {\n  @prop({ required: true, default: false })\n  public status: false;\n\n  @prop({ required: true, default: Date.now() })\n  public expiration: Date;\n\n  @prop({ required: true, default: Date.now() })\n  public transaction: Date;\n}\n\nexport class Rank {\n  @prop({ required: true, default: false })\n  public seller: boolean;\n\n  @prop({ required: true, default: false })\n  public mod: boolean;\n\n  @prop({ required: true, default: false })\n  public admin: boolean;\n}\n\nexport class Notifications {\n  @prop({ required: true, default: false })\n  public social: boolean;\n\n  @prop({ required: true, default: false })\n  public market: boolean;\n\n  @prop({ required: true, default: false })\n  public message: boolean;\n}\n\nexport class Online {\n  @prop({ required: true, default: false })\n  public online: boolean;\n\n  @prop({ required: true, default: 0 })\n  public mode: number;\n\n  @prop({ required: true, default: Date.now() })\n  public last: Date;\n}\n\nexport class Sessions extends TimeStamps {\n  // tslint:disable-next-line\n  public _id?: string;\n\n  @prop({ required: true })\n  public device: string | number;\n\n  @prop({ required: true })\n  public ip: string;\n\n  @prop({ required: true, default: false })\n  public twofactor: boolean;\n}\n\nexport class Email {\n  @prop({ required: true, trim: true })\n  public key: string;\n\n  @prop({ required: true, default: false })\n  public status: boolean;\n\n  @prop({ required: true })\n  public token: string;\n\n  @prop({ required: true, default: Date.now() })\n  public expiration?: Date;\n}\n\nexport class Password {\n  @prop({ required: true, trim: true })\n  public key: string;\n\n  @prop({ required: true, default: true })\n  public status?: boolean;\n\n  @prop({ required: true })\n  public token?: string;\n\n  @prop({ required: true, default: Date.now() })\n  public expiration?: Date;\n}\n\nexport class TransactionInfo {\n  @prop({ required: true })\n  public id: string;\n\n  @prop({ required: true })\n  public ip: string;\n\n  @prop({ required: true })\n  public device: string;\n}\n\nexport class Transaction extends TimeStamps {\n  // tslint:disable-next-line\n  public _id?: string;\n\n  @prop({ default: new TransactionInfo(), _id: false })\n  public buyer: TransactionInfo;\n\n  @prop({ required: true })\n  public seller: string;\n\n  @prop({ required: true })\n  public product: string;\n\n  @prop({ required: true })\n  public type: number;\n\n  @prop({ required: true })\n  public price: number;\n\n  @prop({ required: true })\n  public discount: number;\n\n  @prop({ required: true })\n  public market: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ReactionsDto.html":{"url":"classes/ReactionsDto.html","title":"class - ReactionsDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ReactionsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/dto/reactions.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                ofId\n                            \n                            \n                                    Readonly\n                                toId\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            ofId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsString()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/dto/reactions.dto.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            toId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsString()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/dto/reactions.dto.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsString()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/dto/reactions.dto.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsString, IsNotEmpty } from 'class-validator';\n\nexport class ReactionsDto {\n  @IsString()\n  @IsNotEmpty()\n  readonly toId: string;\n\n  @IsString()\n  @IsNotEmpty()\n  readonly ofId: string;\n\n  @IsString()\n  @IsNotEmpty()\n  readonly type: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ReactionsMarket.html":{"url":"classes/ReactionsMarket.html","title":"class - ReactionsMarket","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ReactionsMarket\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/market/models/market.data.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                device\n                            \n                            \n                                    Public\n                                ip\n                            \n                            \n                                    Public\n                                type\n                            \n                            \n                                    Public\n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            device\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string | number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/market/models/market.data.model.ts:51\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ip\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/market/models/market.data.model.ts:54\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/market/models/market.data.model.ts:57\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, ref: 'Users'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/market/models/market.data.model.ts:48\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { prop, Ref } from '@typegoose/typegoose';\nimport { UserModel } from '../../../modules/user/models/user.model';\n\nexport class DiscountMarket {\n  @prop({ required: true, min: 0, max: 99 })\n  public percentage: number;\n\n  @prop({ required: true })\n  public exp: Date;\n}\n\nexport class BuyerMarket {\n  @prop({\n    required: true,\n    ref: 'Users',\n  })\n  public user: Ref;\n\n  @prop({ required: true })\n  public device: string | number;\n\n  @prop({ required: true })\n  public ip: string;\n}\n\nexport class CommentMarket {\n  @prop({\n    required: true,\n    ref: 'Users',\n  })\n  public author: Ref;\n\n  @prop({ required: true })\n  public device: string | number;\n\n  @prop({ required: true })\n  public ip: string;\n\n  @prop({ required: true, minlength: 50, maxlength: 500 })\n  public content: string;\n}\n\nexport class ReactionsMarket {\n  @prop({\n    required: true,\n    ref: 'Users',\n  })\n  public user: Ref;\n\n  @prop({ required: true })\n  public device: string | number;\n\n  @prop({ required: true })\n  public ip: string;\n\n  @prop({ required: true })\n  public type: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Security.html":{"url":"classes/Security.html","title":"class - Security","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Security\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/dto/user.dto.data.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                code1\n                            \n                            \n                                    Public\n                                code2\n                            \n                            \n                                    Public\n                                code3\n                            \n                            \n                                    Public\n                                code4\n                            \n                            \n                                    Public\n                                code5\n                            \n                            \n                                    Public\n                                enabled\n                            \n                            \n                                    Public\n                                twofactor\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            code1\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/dto/user.dto.data.ts:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            code2\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/dto/user.dto.data.ts:48\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            code3\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/dto/user.dto.data.ts:50\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            code4\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/dto/user.dto.data.ts:52\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            code5\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/dto/user.dto.data.ts:54\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            enabled\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/dto/user.dto.data.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            twofactor\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/dto/user.dto.data.ts:56\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Market {\n  public description: string;\n\n  public price: number;\n\n  public type: number;\n\n  public discount: number;\n\n  public seller: string;\n\n  public device: number;\n\n  public ip: string;\n\n  public market: number;\n}\n\nexport class Reactions {\n  public author: string;\n\n  public type: number;\n}\n\nexport class Suspension {\n  public status: boolean;\n\n  public reason: string;\n}\n\nexport class Stats {\n  public spent: number;\n\n  public won: number;\n\n  public rewards: number;\n\n  public rep: number;\n\n  public exp: number;\n}\n\nexport class Security {\n  public enabled: boolean;\n\n  public code1: number;\n\n  public code2: number;\n\n  public code3: number;\n\n  public code4: number;\n\n  public code5: number;\n\n  public twofactor: number;\n}\n\nexport class Membership {\n  public status: false;\n\n  public expiration: Date;\n\n  public transaction: Date;\n}\n\nexport class Rank {\n  public seller: boolean;\n\n  public mod: boolean;\n\n  public admin: boolean;\n}\n\nexport class Notifications {\n  public social: boolean;\n\n  public market: boolean;\n\n  public message: boolean;\n}\n\nexport class Online {\n  public online: boolean;\n\n  public mode: number;\n\n  public last: Date;\n}\n\nexport class Sessions {\n  // tslint:disable-next-line\n  public _id?: string;\n\n  public device: string | number;\n\n  public ip: string;\n\n  public twofactor: boolean;\n}\n\nexport class Email {\n  public key: string;\n\n  public status: boolean;\n\n  public token: string;\n\n  public expiration?: Date;\n}\n\nexport class Password {\n  public key: string;\n\n  public status?: boolean;\n\n  public token?: string;\n\n  public expiration?: Date;\n}\n\nexport class TransactionBuyer {\n  public id: string;\n\n  public ip: string;\n\n  public device: string;\n}\nexport class Transaction {\n  // tslint:disable-next-line\n  public _id?: string;\n\n  public seller: string;\n\n  public buyer: TransactionBuyer;\n\n  public item: string;\n\n  public type: number;\n\n  public price: number;\n\n  public discount: number;\n\n  public market: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Security-1.html":{"url":"classes/Security-1.html","title":"class - Security-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Security\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/models/user.model.data.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                code1\n                            \n                            \n                                    Public\n                                code2\n                            \n                            \n                                    Public\n                                code3\n                            \n                            \n                                    Public\n                                code4\n                            \n                            \n                                    Public\n                                code5\n                            \n                            \n                                    Public\n                                enabled\n                            \n                            \n                                    Public\n                                twofactor\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            code1\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: 0})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/models/user.model.data.ts:52\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            code2\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: 0})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/models/user.model.data.ts:55\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            code3\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: 0})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/models/user.model.data.ts:58\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            code4\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: 0})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/models/user.model.data.ts:61\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            code5\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: 0})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/models/user.model.data.ts:64\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            enabled\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/models/user.model.data.ts:49\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            twofactor\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: 0})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/models/user.model.data.ts:67\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { prop, index } from '@typegoose/typegoose';\nimport { TimeStamps } from '@typegoose/typegoose/lib/defaultClasses';\n\nexport class Reactions {\n  /*@prop({\n    required: true,\n    lowercase: true,\n    trim: true,\n  })\n  public author: string;*/\n\n  @prop({ required: true, min: 0, max: 1 })\n  public type: number;\n}\n\nexport class Suspension {\n  @prop({ required: true, default: false })\n  public status: boolean;\n\n  @prop({\n    required: true,\n    default:\n      '[System]: The reason for suspension has not been specified. Please contact us for more information.',\n    minlength: 90,\n    maxlength: 200,\n  })\n  public reason: string;\n}\n\nexport class Stats {\n  @prop({ required: true, default: 0 })\n  public spent: number;\n\n  @prop({ required: true, default: 0 })\n  public won: number;\n\n  @prop({ required: true, default: 0 })\n  public rewards: number;\n\n  @prop({ required: true, default: 0 })\n  public rep: number;\n\n  @prop({ required: true, default: 0 })\n  public exp: number;\n}\n\nexport class Security {\n  @prop({ required: true, default: false })\n  public enabled: boolean;\n\n  @prop({ required: true, default: 0 })\n  public code1: number;\n\n  @prop({ required: true, default: 0 })\n  public code2: number;\n\n  @prop({ required: true, default: 0 })\n  public code3: number;\n\n  @prop({ required: true, default: 0 })\n  public code4: number;\n\n  @prop({ required: true, default: 0 })\n  public code5: number;\n\n  @prop({ required: true, default: 0 })\n  public twofactor: number;\n}\n\nexport class Membership {\n  @prop({ required: true, default: false })\n  public status: false;\n\n  @prop({ required: true, default: Date.now() })\n  public expiration: Date;\n\n  @prop({ required: true, default: Date.now() })\n  public transaction: Date;\n}\n\nexport class Rank {\n  @prop({ required: true, default: false })\n  public seller: boolean;\n\n  @prop({ required: true, default: false })\n  public mod: boolean;\n\n  @prop({ required: true, default: false })\n  public admin: boolean;\n}\n\nexport class Notifications {\n  @prop({ required: true, default: false })\n  public social: boolean;\n\n  @prop({ required: true, default: false })\n  public market: boolean;\n\n  @prop({ required: true, default: false })\n  public message: boolean;\n}\n\nexport class Online {\n  @prop({ required: true, default: false })\n  public online: boolean;\n\n  @prop({ required: true, default: 0 })\n  public mode: number;\n\n  @prop({ required: true, default: Date.now() })\n  public last: Date;\n}\n\nexport class Sessions extends TimeStamps {\n  // tslint:disable-next-line\n  public _id?: string;\n\n  @prop({ required: true })\n  public device: string | number;\n\n  @prop({ required: true })\n  public ip: string;\n\n  @prop({ required: true, default: false })\n  public twofactor: boolean;\n}\n\nexport class Email {\n  @prop({ required: true, trim: true })\n  public key: string;\n\n  @prop({ required: true, default: false })\n  public status: boolean;\n\n  @prop({ required: true })\n  public token: string;\n\n  @prop({ required: true, default: Date.now() })\n  public expiration?: Date;\n}\n\nexport class Password {\n  @prop({ required: true, trim: true })\n  public key: string;\n\n  @prop({ required: true, default: true })\n  public status?: boolean;\n\n  @prop({ required: true })\n  public token?: string;\n\n  @prop({ required: true, default: Date.now() })\n  public expiration?: Date;\n}\n\nexport class TransactionInfo {\n  @prop({ required: true })\n  public id: string;\n\n  @prop({ required: true })\n  public ip: string;\n\n  @prop({ required: true })\n  public device: string;\n}\n\nexport class Transaction extends TimeStamps {\n  // tslint:disable-next-line\n  public _id?: string;\n\n  @prop({ default: new TransactionInfo(), _id: false })\n  public buyer: TransactionInfo;\n\n  @prop({ required: true })\n  public seller: string;\n\n  @prop({ required: true })\n  public product: string;\n\n  @prop({ required: true })\n  public type: number;\n\n  @prop({ required: true })\n  public price: number;\n\n  @prop({ required: true })\n  public discount: number;\n\n  @prop({ required: true })\n  public market: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SecurityCode.html":{"url":"classes/SecurityCode.html","title":"class - SecurityCode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SecurityCode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/security.update.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                code1\n                            \n                            \n                                    Readonly\n                                code2\n                            \n                            \n                                    Readonly\n                                code3\n                            \n                            \n                                    Readonly\n                                code4\n                            \n                            \n                                    Readonly\n                                code5\n                            \n                            \n                                    Readonly\n                                enabled\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            code1\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNumber()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auth/dto/security.update.dto.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            code2\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNumber()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auth/dto/security.update.dto.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            code3\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNumber()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auth/dto/security.update.dto.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            code4\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNumber()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auth/dto/security.update.dto.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            code5\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNumber()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auth/dto/security.update.dto.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            enabled\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsBoolean()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auth/dto/security.update.dto.ts:26\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsString, IsNotEmpty, IsNumber, IsBoolean } from 'class-validator';\n\nexport class SecurityCode {\n  @IsNumber()\n  @IsNotEmpty()\n  readonly code1: number;\n\n  @IsNumber()\n  @IsNotEmpty()\n  readonly code2: number;\n\n  @IsNumber()\n  @IsNotEmpty()\n  readonly code3: number;\n\n  @IsNumber()\n  @IsNotEmpty()\n  readonly code4: number;\n\n  @IsNumber()\n  @IsNotEmpty()\n  readonly code5: number;\n\n  @IsBoolean()\n  @IsNotEmpty()\n  readonly enabled: string;\n}\n\nexport class SecurityUpdateDto {\n  @IsString()\n  @IsNotEmpty()\n  id: string;\n\n  security: SecurityCode;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SecurityDto.html":{"url":"classes/SecurityDto.html","title":"class - SecurityDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SecurityDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/security.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                code1\n                            \n                            \n                                    Readonly\n                                code2\n                            \n                            \n                                    Readonly\n                                code3\n                            \n                            \n                                    Readonly\n                                code4\n                            \n                            \n                                    Readonly\n                                code5\n                            \n                            \n                                    Readonly\n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            code1\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNumber()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auth/dto/security.dto.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            code2\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNumber()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auth/dto/security.dto.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            code3\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNumber()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auth/dto/security.dto.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            code4\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNumber()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auth/dto/security.dto.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            code5\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNumber()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auth/dto/security.dto.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsString()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auth/dto/security.dto.ts:6\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNumber, IsString, IsNotEmpty } from 'class-validator';\n\nexport class SecurityDto {\n  @IsString()\n  @IsNotEmpty()\n  readonly id: string;\n\n  @IsNumber()\n  @IsNotEmpty()\n  readonly code1: number;\n\n  @IsNumber()\n  @IsNotEmpty()\n  readonly code2: number;\n\n  @IsNumber()\n  @IsNotEmpty()\n  readonly code3: number;\n\n  @IsNumber()\n  @IsNotEmpty()\n  readonly code4: number;\n\n  @IsNumber()\n  @IsNotEmpty()\n  readonly code5: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SecurityUpdateDto.html":{"url":"classes/SecurityUpdateDto.html","title":"class - SecurityUpdateDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SecurityUpdateDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/security.update.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                security\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsString()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auth/dto/security.update.dto.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            security\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SecurityCode\n\n                        \n                    \n                        \n                            \n                                    Defined in src/auth/dto/security.update.dto.ts:34\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsString, IsNotEmpty, IsNumber, IsBoolean } from 'class-validator';\n\nexport class SecurityCode {\n  @IsNumber()\n  @IsNotEmpty()\n  readonly code1: number;\n\n  @IsNumber()\n  @IsNotEmpty()\n  readonly code2: number;\n\n  @IsNumber()\n  @IsNotEmpty()\n  readonly code3: number;\n\n  @IsNumber()\n  @IsNotEmpty()\n  readonly code4: number;\n\n  @IsNumber()\n  @IsNotEmpty()\n  readonly code5: number;\n\n  @IsBoolean()\n  @IsNotEmpty()\n  readonly enabled: string;\n}\n\nexport class SecurityUpdateDto {\n  @IsString()\n  @IsNotEmpty()\n  id: string;\n\n  security: SecurityCode;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Sessions.html":{"url":"classes/Sessions.html","title":"class - Sessions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Sessions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/dto/user.dto.data.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                _id\n                            \n                            \n                                    Public\n                                device\n                            \n                            \n                                    Public\n                                ip\n                            \n                            \n                                    Public\n                                twofactor\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/dto/user.dto.data.ts:93\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            device\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string | number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/dto/user.dto.data.ts:95\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ip\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/dto/user.dto.data.ts:97\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            twofactor\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/dto/user.dto.data.ts:99\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Market {\n  public description: string;\n\n  public price: number;\n\n  public type: number;\n\n  public discount: number;\n\n  public seller: string;\n\n  public device: number;\n\n  public ip: string;\n\n  public market: number;\n}\n\nexport class Reactions {\n  public author: string;\n\n  public type: number;\n}\n\nexport class Suspension {\n  public status: boolean;\n\n  public reason: string;\n}\n\nexport class Stats {\n  public spent: number;\n\n  public won: number;\n\n  public rewards: number;\n\n  public rep: number;\n\n  public exp: number;\n}\n\nexport class Security {\n  public enabled: boolean;\n\n  public code1: number;\n\n  public code2: number;\n\n  public code3: number;\n\n  public code4: number;\n\n  public code5: number;\n\n  public twofactor: number;\n}\n\nexport class Membership {\n  public status: false;\n\n  public expiration: Date;\n\n  public transaction: Date;\n}\n\nexport class Rank {\n  public seller: boolean;\n\n  public mod: boolean;\n\n  public admin: boolean;\n}\n\nexport class Notifications {\n  public social: boolean;\n\n  public market: boolean;\n\n  public message: boolean;\n}\n\nexport class Online {\n  public online: boolean;\n\n  public mode: number;\n\n  public last: Date;\n}\n\nexport class Sessions {\n  // tslint:disable-next-line\n  public _id?: string;\n\n  public device: string | number;\n\n  public ip: string;\n\n  public twofactor: boolean;\n}\n\nexport class Email {\n  public key: string;\n\n  public status: boolean;\n\n  public token: string;\n\n  public expiration?: Date;\n}\n\nexport class Password {\n  public key: string;\n\n  public status?: boolean;\n\n  public token?: string;\n\n  public expiration?: Date;\n}\n\nexport class TransactionBuyer {\n  public id: string;\n\n  public ip: string;\n\n  public device: string;\n}\nexport class Transaction {\n  // tslint:disable-next-line\n  public _id?: string;\n\n  public seller: string;\n\n  public buyer: TransactionBuyer;\n\n  public item: string;\n\n  public type: number;\n\n  public price: number;\n\n  public discount: number;\n\n  public market: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Sessions-1.html":{"url":"classes/Sessions-1.html","title":"class - Sessions-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Sessions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/models/user.model.data.ts\n        \n\n\n            \n                Extends\n            \n            \n                    TimeStamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                _id\n                            \n                            \n                                    Public\n                                device\n                            \n                            \n                                    Public\n                                ip\n                            \n                            \n                                    Public\n                                twofactor\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/models/user.model.data.ts:116\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            device\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string | number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/models/user.model.data.ts:119\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ip\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/models/user.model.data.ts:122\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            twofactor\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/models/user.model.data.ts:125\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { prop, index } from '@typegoose/typegoose';\nimport { TimeStamps } from '@typegoose/typegoose/lib/defaultClasses';\n\nexport class Reactions {\n  /*@prop({\n    required: true,\n    lowercase: true,\n    trim: true,\n  })\n  public author: string;*/\n\n  @prop({ required: true, min: 0, max: 1 })\n  public type: number;\n}\n\nexport class Suspension {\n  @prop({ required: true, default: false })\n  public status: boolean;\n\n  @prop({\n    required: true,\n    default:\n      '[System]: The reason for suspension has not been specified. Please contact us for more information.',\n    minlength: 90,\n    maxlength: 200,\n  })\n  public reason: string;\n}\n\nexport class Stats {\n  @prop({ required: true, default: 0 })\n  public spent: number;\n\n  @prop({ required: true, default: 0 })\n  public won: number;\n\n  @prop({ required: true, default: 0 })\n  public rewards: number;\n\n  @prop({ required: true, default: 0 })\n  public rep: number;\n\n  @prop({ required: true, default: 0 })\n  public exp: number;\n}\n\nexport class Security {\n  @prop({ required: true, default: false })\n  public enabled: boolean;\n\n  @prop({ required: true, default: 0 })\n  public code1: number;\n\n  @prop({ required: true, default: 0 })\n  public code2: number;\n\n  @prop({ required: true, default: 0 })\n  public code3: number;\n\n  @prop({ required: true, default: 0 })\n  public code4: number;\n\n  @prop({ required: true, default: 0 })\n  public code5: number;\n\n  @prop({ required: true, default: 0 })\n  public twofactor: number;\n}\n\nexport class Membership {\n  @prop({ required: true, default: false })\n  public status: false;\n\n  @prop({ required: true, default: Date.now() })\n  public expiration: Date;\n\n  @prop({ required: true, default: Date.now() })\n  public transaction: Date;\n}\n\nexport class Rank {\n  @prop({ required: true, default: false })\n  public seller: boolean;\n\n  @prop({ required: true, default: false })\n  public mod: boolean;\n\n  @prop({ required: true, default: false })\n  public admin: boolean;\n}\n\nexport class Notifications {\n  @prop({ required: true, default: false })\n  public social: boolean;\n\n  @prop({ required: true, default: false })\n  public market: boolean;\n\n  @prop({ required: true, default: false })\n  public message: boolean;\n}\n\nexport class Online {\n  @prop({ required: true, default: false })\n  public online: boolean;\n\n  @prop({ required: true, default: 0 })\n  public mode: number;\n\n  @prop({ required: true, default: Date.now() })\n  public last: Date;\n}\n\nexport class Sessions extends TimeStamps {\n  // tslint:disable-next-line\n  public _id?: string;\n\n  @prop({ required: true })\n  public device: string | number;\n\n  @prop({ required: true })\n  public ip: string;\n\n  @prop({ required: true, default: false })\n  public twofactor: boolean;\n}\n\nexport class Email {\n  @prop({ required: true, trim: true })\n  public key: string;\n\n  @prop({ required: true, default: false })\n  public status: boolean;\n\n  @prop({ required: true })\n  public token: string;\n\n  @prop({ required: true, default: Date.now() })\n  public expiration?: Date;\n}\n\nexport class Password {\n  @prop({ required: true, trim: true })\n  public key: string;\n\n  @prop({ required: true, default: true })\n  public status?: boolean;\n\n  @prop({ required: true })\n  public token?: string;\n\n  @prop({ required: true, default: Date.now() })\n  public expiration?: Date;\n}\n\nexport class TransactionInfo {\n  @prop({ required: true })\n  public id: string;\n\n  @prop({ required: true })\n  public ip: string;\n\n  @prop({ required: true })\n  public device: string;\n}\n\nexport class Transaction extends TimeStamps {\n  // tslint:disable-next-line\n  public _id?: string;\n\n  @prop({ default: new TransactionInfo(), _id: false })\n  public buyer: TransactionInfo;\n\n  @prop({ required: true })\n  public seller: string;\n\n  @prop({ required: true })\n  public product: string;\n\n  @prop({ required: true })\n  public type: number;\n\n  @prop({ required: true })\n  public price: number;\n\n  @prop({ required: true })\n  public discount: number;\n\n  @prop({ required: true })\n  public market: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SignInDto.html":{"url":"classes/SignInDto.html","title":"class - SignInDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SignInDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/signin.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                device\n                            \n                            \n                                    Readonly\n                                email\n                            \n                            \n                                    Public\n                                ip\n                            \n                            \n                                    Readonly\n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            device\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string | number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auth/dto/signin.dto.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()@IsEmail()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auth/dto/signin.dto.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ip\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auth/dto/signin.dto.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auth/dto/signin.dto.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsString, IsEmail } from 'class-validator';\nexport class SignInDto {\n  @IsNotEmpty()\n  @IsEmail()\n  readonly email: string;\n\n  @IsNotEmpty()\n  @IsString()\n  readonly password: string;\n\n  @IsNotEmpty()\n  public device: string | number;\n\n  @IsNotEmpty()\n  @IsString()\n  public ip: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Stats.html":{"url":"classes/Stats.html","title":"class - Stats","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Stats\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/dto/user.dto.data.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                exp\n                            \n                            \n                                    Public\n                                rep\n                            \n                            \n                                    Public\n                                rewards\n                            \n                            \n                                    Public\n                                spent\n                            \n                            \n                                    Public\n                                won\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            exp\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/dto/user.dto.data.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            rep\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/dto/user.dto.data.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            rewards\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/dto/user.dto.data.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            spent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/dto/user.dto.data.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            won\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/dto/user.dto.data.ts:34\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Market {\n  public description: string;\n\n  public price: number;\n\n  public type: number;\n\n  public discount: number;\n\n  public seller: string;\n\n  public device: number;\n\n  public ip: string;\n\n  public market: number;\n}\n\nexport class Reactions {\n  public author: string;\n\n  public type: number;\n}\n\nexport class Suspension {\n  public status: boolean;\n\n  public reason: string;\n}\n\nexport class Stats {\n  public spent: number;\n\n  public won: number;\n\n  public rewards: number;\n\n  public rep: number;\n\n  public exp: number;\n}\n\nexport class Security {\n  public enabled: boolean;\n\n  public code1: number;\n\n  public code2: number;\n\n  public code3: number;\n\n  public code4: number;\n\n  public code5: number;\n\n  public twofactor: number;\n}\n\nexport class Membership {\n  public status: false;\n\n  public expiration: Date;\n\n  public transaction: Date;\n}\n\nexport class Rank {\n  public seller: boolean;\n\n  public mod: boolean;\n\n  public admin: boolean;\n}\n\nexport class Notifications {\n  public social: boolean;\n\n  public market: boolean;\n\n  public message: boolean;\n}\n\nexport class Online {\n  public online: boolean;\n\n  public mode: number;\n\n  public last: Date;\n}\n\nexport class Sessions {\n  // tslint:disable-next-line\n  public _id?: string;\n\n  public device: string | number;\n\n  public ip: string;\n\n  public twofactor: boolean;\n}\n\nexport class Email {\n  public key: string;\n\n  public status: boolean;\n\n  public token: string;\n\n  public expiration?: Date;\n}\n\nexport class Password {\n  public key: string;\n\n  public status?: boolean;\n\n  public token?: string;\n\n  public expiration?: Date;\n}\n\nexport class TransactionBuyer {\n  public id: string;\n\n  public ip: string;\n\n  public device: string;\n}\nexport class Transaction {\n  // tslint:disable-next-line\n  public _id?: string;\n\n  public seller: string;\n\n  public buyer: TransactionBuyer;\n\n  public item: string;\n\n  public type: number;\n\n  public price: number;\n\n  public discount: number;\n\n  public market: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Stats-1.html":{"url":"classes/Stats-1.html","title":"class - Stats-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Stats\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/models/user.model.data.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                exp\n                            \n                            \n                                    Public\n                                rep\n                            \n                            \n                                    Public\n                                rewards\n                            \n                            \n                                    Public\n                                spent\n                            \n                            \n                                    Public\n                                won\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            exp\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: 0})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/models/user.model.data.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            rep\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: 0})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/models/user.model.data.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            rewards\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: 0})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/models/user.model.data.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            spent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: 0})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/models/user.model.data.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            won\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: 0})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/models/user.model.data.ts:35\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { prop, index } from '@typegoose/typegoose';\nimport { TimeStamps } from '@typegoose/typegoose/lib/defaultClasses';\n\nexport class Reactions {\n  /*@prop({\n    required: true,\n    lowercase: true,\n    trim: true,\n  })\n  public author: string;*/\n\n  @prop({ required: true, min: 0, max: 1 })\n  public type: number;\n}\n\nexport class Suspension {\n  @prop({ required: true, default: false })\n  public status: boolean;\n\n  @prop({\n    required: true,\n    default:\n      '[System]: The reason for suspension has not been specified. Please contact us for more information.',\n    minlength: 90,\n    maxlength: 200,\n  })\n  public reason: string;\n}\n\nexport class Stats {\n  @prop({ required: true, default: 0 })\n  public spent: number;\n\n  @prop({ required: true, default: 0 })\n  public won: number;\n\n  @prop({ required: true, default: 0 })\n  public rewards: number;\n\n  @prop({ required: true, default: 0 })\n  public rep: number;\n\n  @prop({ required: true, default: 0 })\n  public exp: number;\n}\n\nexport class Security {\n  @prop({ required: true, default: false })\n  public enabled: boolean;\n\n  @prop({ required: true, default: 0 })\n  public code1: number;\n\n  @prop({ required: true, default: 0 })\n  public code2: number;\n\n  @prop({ required: true, default: 0 })\n  public code3: number;\n\n  @prop({ required: true, default: 0 })\n  public code4: number;\n\n  @prop({ required: true, default: 0 })\n  public code5: number;\n\n  @prop({ required: true, default: 0 })\n  public twofactor: number;\n}\n\nexport class Membership {\n  @prop({ required: true, default: false })\n  public status: false;\n\n  @prop({ required: true, default: Date.now() })\n  public expiration: Date;\n\n  @prop({ required: true, default: Date.now() })\n  public transaction: Date;\n}\n\nexport class Rank {\n  @prop({ required: true, default: false })\n  public seller: boolean;\n\n  @prop({ required: true, default: false })\n  public mod: boolean;\n\n  @prop({ required: true, default: false })\n  public admin: boolean;\n}\n\nexport class Notifications {\n  @prop({ required: true, default: false })\n  public social: boolean;\n\n  @prop({ required: true, default: false })\n  public market: boolean;\n\n  @prop({ required: true, default: false })\n  public message: boolean;\n}\n\nexport class Online {\n  @prop({ required: true, default: false })\n  public online: boolean;\n\n  @prop({ required: true, default: 0 })\n  public mode: number;\n\n  @prop({ required: true, default: Date.now() })\n  public last: Date;\n}\n\nexport class Sessions extends TimeStamps {\n  // tslint:disable-next-line\n  public _id?: string;\n\n  @prop({ required: true })\n  public device: string | number;\n\n  @prop({ required: true })\n  public ip: string;\n\n  @prop({ required: true, default: false })\n  public twofactor: boolean;\n}\n\nexport class Email {\n  @prop({ required: true, trim: true })\n  public key: string;\n\n  @prop({ required: true, default: false })\n  public status: boolean;\n\n  @prop({ required: true })\n  public token: string;\n\n  @prop({ required: true, default: Date.now() })\n  public expiration?: Date;\n}\n\nexport class Password {\n  @prop({ required: true, trim: true })\n  public key: string;\n\n  @prop({ required: true, default: true })\n  public status?: boolean;\n\n  @prop({ required: true })\n  public token?: string;\n\n  @prop({ required: true, default: Date.now() })\n  public expiration?: Date;\n}\n\nexport class TransactionInfo {\n  @prop({ required: true })\n  public id: string;\n\n  @prop({ required: true })\n  public ip: string;\n\n  @prop({ required: true })\n  public device: string;\n}\n\nexport class Transaction extends TimeStamps {\n  // tslint:disable-next-line\n  public _id?: string;\n\n  @prop({ default: new TransactionInfo(), _id: false })\n  public buyer: TransactionInfo;\n\n  @prop({ required: true })\n  public seller: string;\n\n  @prop({ required: true })\n  public product: string;\n\n  @prop({ required: true })\n  public type: number;\n\n  @prop({ required: true })\n  public price: number;\n\n  @prop({ required: true })\n  public discount: number;\n\n  @prop({ required: true })\n  public market: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Suspension.html":{"url":"classes/Suspension.html","title":"class - Suspension","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Suspension\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/dto/user.dto.data.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                reason\n                            \n                            \n                                    Public\n                                status\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            reason\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/dto/user.dto.data.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/dto/user.dto.data.ts:26\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Market {\n  public description: string;\n\n  public price: number;\n\n  public type: number;\n\n  public discount: number;\n\n  public seller: string;\n\n  public device: number;\n\n  public ip: string;\n\n  public market: number;\n}\n\nexport class Reactions {\n  public author: string;\n\n  public type: number;\n}\n\nexport class Suspension {\n  public status: boolean;\n\n  public reason: string;\n}\n\nexport class Stats {\n  public spent: number;\n\n  public won: number;\n\n  public rewards: number;\n\n  public rep: number;\n\n  public exp: number;\n}\n\nexport class Security {\n  public enabled: boolean;\n\n  public code1: number;\n\n  public code2: number;\n\n  public code3: number;\n\n  public code4: number;\n\n  public code5: number;\n\n  public twofactor: number;\n}\n\nexport class Membership {\n  public status: false;\n\n  public expiration: Date;\n\n  public transaction: Date;\n}\n\nexport class Rank {\n  public seller: boolean;\n\n  public mod: boolean;\n\n  public admin: boolean;\n}\n\nexport class Notifications {\n  public social: boolean;\n\n  public market: boolean;\n\n  public message: boolean;\n}\n\nexport class Online {\n  public online: boolean;\n\n  public mode: number;\n\n  public last: Date;\n}\n\nexport class Sessions {\n  // tslint:disable-next-line\n  public _id?: string;\n\n  public device: string | number;\n\n  public ip: string;\n\n  public twofactor: boolean;\n}\n\nexport class Email {\n  public key: string;\n\n  public status: boolean;\n\n  public token: string;\n\n  public expiration?: Date;\n}\n\nexport class Password {\n  public key: string;\n\n  public status?: boolean;\n\n  public token?: string;\n\n  public expiration?: Date;\n}\n\nexport class TransactionBuyer {\n  public id: string;\n\n  public ip: string;\n\n  public device: string;\n}\nexport class Transaction {\n  // tslint:disable-next-line\n  public _id?: string;\n\n  public seller: string;\n\n  public buyer: TransactionBuyer;\n\n  public item: string;\n\n  public type: number;\n\n  public price: number;\n\n  public discount: number;\n\n  public market: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Suspension-1.html":{"url":"classes/Suspension-1.html","title":"class - Suspension-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Suspension\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/models/user.model.data.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                reason\n                            \n                            \n                                    Public\n                                status\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            reason\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: '[System]: The reason for suspension has not been specified. Please contact us for more information.', minlength: 90, maxlength: 200})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/models/user.model.data.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/models/user.model.data.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { prop, index } from '@typegoose/typegoose';\nimport { TimeStamps } from '@typegoose/typegoose/lib/defaultClasses';\n\nexport class Reactions {\n  /*@prop({\n    required: true,\n    lowercase: true,\n    trim: true,\n  })\n  public author: string;*/\n\n  @prop({ required: true, min: 0, max: 1 })\n  public type: number;\n}\n\nexport class Suspension {\n  @prop({ required: true, default: false })\n  public status: boolean;\n\n  @prop({\n    required: true,\n    default:\n      '[System]: The reason for suspension has not been specified. Please contact us for more information.',\n    minlength: 90,\n    maxlength: 200,\n  })\n  public reason: string;\n}\n\nexport class Stats {\n  @prop({ required: true, default: 0 })\n  public spent: number;\n\n  @prop({ required: true, default: 0 })\n  public won: number;\n\n  @prop({ required: true, default: 0 })\n  public rewards: number;\n\n  @prop({ required: true, default: 0 })\n  public rep: number;\n\n  @prop({ required: true, default: 0 })\n  public exp: number;\n}\n\nexport class Security {\n  @prop({ required: true, default: false })\n  public enabled: boolean;\n\n  @prop({ required: true, default: 0 })\n  public code1: number;\n\n  @prop({ required: true, default: 0 })\n  public code2: number;\n\n  @prop({ required: true, default: 0 })\n  public code3: number;\n\n  @prop({ required: true, default: 0 })\n  public code4: number;\n\n  @prop({ required: true, default: 0 })\n  public code5: number;\n\n  @prop({ required: true, default: 0 })\n  public twofactor: number;\n}\n\nexport class Membership {\n  @prop({ required: true, default: false })\n  public status: false;\n\n  @prop({ required: true, default: Date.now() })\n  public expiration: Date;\n\n  @prop({ required: true, default: Date.now() })\n  public transaction: Date;\n}\n\nexport class Rank {\n  @prop({ required: true, default: false })\n  public seller: boolean;\n\n  @prop({ required: true, default: false })\n  public mod: boolean;\n\n  @prop({ required: true, default: false })\n  public admin: boolean;\n}\n\nexport class Notifications {\n  @prop({ required: true, default: false })\n  public social: boolean;\n\n  @prop({ required: true, default: false })\n  public market: boolean;\n\n  @prop({ required: true, default: false })\n  public message: boolean;\n}\n\nexport class Online {\n  @prop({ required: true, default: false })\n  public online: boolean;\n\n  @prop({ required: true, default: 0 })\n  public mode: number;\n\n  @prop({ required: true, default: Date.now() })\n  public last: Date;\n}\n\nexport class Sessions extends TimeStamps {\n  // tslint:disable-next-line\n  public _id?: string;\n\n  @prop({ required: true })\n  public device: string | number;\n\n  @prop({ required: true })\n  public ip: string;\n\n  @prop({ required: true, default: false })\n  public twofactor: boolean;\n}\n\nexport class Email {\n  @prop({ required: true, trim: true })\n  public key: string;\n\n  @prop({ required: true, default: false })\n  public status: boolean;\n\n  @prop({ required: true })\n  public token: string;\n\n  @prop({ required: true, default: Date.now() })\n  public expiration?: Date;\n}\n\nexport class Password {\n  @prop({ required: true, trim: true })\n  public key: string;\n\n  @prop({ required: true, default: true })\n  public status?: boolean;\n\n  @prop({ required: true })\n  public token?: string;\n\n  @prop({ required: true, default: Date.now() })\n  public expiration?: Date;\n}\n\nexport class TransactionInfo {\n  @prop({ required: true })\n  public id: string;\n\n  @prop({ required: true })\n  public ip: string;\n\n  @prop({ required: true })\n  public device: string;\n}\n\nexport class Transaction extends TimeStamps {\n  // tslint:disable-next-line\n  public _id?: string;\n\n  @prop({ default: new TransactionInfo(), _id: false })\n  public buyer: TransactionInfo;\n\n  @prop({ required: true })\n  public seller: string;\n\n  @prop({ required: true })\n  public product: string;\n\n  @prop({ required: true })\n  public type: number;\n\n  @prop({ required: true })\n  public price: number;\n\n  @prop({ required: true })\n  public discount: number;\n\n  @prop({ required: true })\n  public market: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Transaction.html":{"url":"classes/Transaction.html","title":"class - Transaction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Transaction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/dto/user.dto.data.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                _id\n                            \n                            \n                                    Public\n                                buyer\n                            \n                            \n                                    Public\n                                discount\n                            \n                            \n                                    Public\n                                item\n                            \n                            \n                                    Public\n                                market\n                            \n                            \n                                    Public\n                                price\n                            \n                            \n                                    Public\n                                seller\n                            \n                            \n                                    Public\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/dto/user.dto.data.ts:131\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            buyer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TransactionBuyer\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/dto/user.dto.data.ts:135\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            discount\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/dto/user.dto.data.ts:143\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            item\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/dto/user.dto.data.ts:137\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            market\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/dto/user.dto.data.ts:145\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            price\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/dto/user.dto.data.ts:141\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            seller\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/dto/user.dto.data.ts:133\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/dto/user.dto.data.ts:139\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Market {\n  public description: string;\n\n  public price: number;\n\n  public type: number;\n\n  public discount: number;\n\n  public seller: string;\n\n  public device: number;\n\n  public ip: string;\n\n  public market: number;\n}\n\nexport class Reactions {\n  public author: string;\n\n  public type: number;\n}\n\nexport class Suspension {\n  public status: boolean;\n\n  public reason: string;\n}\n\nexport class Stats {\n  public spent: number;\n\n  public won: number;\n\n  public rewards: number;\n\n  public rep: number;\n\n  public exp: number;\n}\n\nexport class Security {\n  public enabled: boolean;\n\n  public code1: number;\n\n  public code2: number;\n\n  public code3: number;\n\n  public code4: number;\n\n  public code5: number;\n\n  public twofactor: number;\n}\n\nexport class Membership {\n  public status: false;\n\n  public expiration: Date;\n\n  public transaction: Date;\n}\n\nexport class Rank {\n  public seller: boolean;\n\n  public mod: boolean;\n\n  public admin: boolean;\n}\n\nexport class Notifications {\n  public social: boolean;\n\n  public market: boolean;\n\n  public message: boolean;\n}\n\nexport class Online {\n  public online: boolean;\n\n  public mode: number;\n\n  public last: Date;\n}\n\nexport class Sessions {\n  // tslint:disable-next-line\n  public _id?: string;\n\n  public device: string | number;\n\n  public ip: string;\n\n  public twofactor: boolean;\n}\n\nexport class Email {\n  public key: string;\n\n  public status: boolean;\n\n  public token: string;\n\n  public expiration?: Date;\n}\n\nexport class Password {\n  public key: string;\n\n  public status?: boolean;\n\n  public token?: string;\n\n  public expiration?: Date;\n}\n\nexport class TransactionBuyer {\n  public id: string;\n\n  public ip: string;\n\n  public device: string;\n}\nexport class Transaction {\n  // tslint:disable-next-line\n  public _id?: string;\n\n  public seller: string;\n\n  public buyer: TransactionBuyer;\n\n  public item: string;\n\n  public type: number;\n\n  public price: number;\n\n  public discount: number;\n\n  public market: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Transaction-1.html":{"url":"classes/Transaction-1.html","title":"class - Transaction-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Transaction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/models/user.model.data.ts\n        \n\n\n            \n                Extends\n            \n            \n                    TimeStamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                _id\n                            \n                            \n                                    Public\n                                buyer\n                            \n                            \n                                    Public\n                                discount\n                            \n                            \n                                    Public\n                                market\n                            \n                            \n                                    Public\n                                price\n                            \n                            \n                                    Public\n                                product\n                            \n                            \n                                    Public\n                                seller\n                            \n                            \n                                    Public\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/models/user.model.data.ts:169\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            buyer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TransactionInfo\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, _id: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/models/user.model.data.ts:172\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            discount\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/models/user.model.data.ts:187\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            market\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/models/user.model.data.ts:190\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            price\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/models/user.model.data.ts:184\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            product\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/models/user.model.data.ts:178\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            seller\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/models/user.model.data.ts:175\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/models/user.model.data.ts:181\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { prop, index } from '@typegoose/typegoose';\nimport { TimeStamps } from '@typegoose/typegoose/lib/defaultClasses';\n\nexport class Reactions {\n  /*@prop({\n    required: true,\n    lowercase: true,\n    trim: true,\n  })\n  public author: string;*/\n\n  @prop({ required: true, min: 0, max: 1 })\n  public type: number;\n}\n\nexport class Suspension {\n  @prop({ required: true, default: false })\n  public status: boolean;\n\n  @prop({\n    required: true,\n    default:\n      '[System]: The reason for suspension has not been specified. Please contact us for more information.',\n    minlength: 90,\n    maxlength: 200,\n  })\n  public reason: string;\n}\n\nexport class Stats {\n  @prop({ required: true, default: 0 })\n  public spent: number;\n\n  @prop({ required: true, default: 0 })\n  public won: number;\n\n  @prop({ required: true, default: 0 })\n  public rewards: number;\n\n  @prop({ required: true, default: 0 })\n  public rep: number;\n\n  @prop({ required: true, default: 0 })\n  public exp: number;\n}\n\nexport class Security {\n  @prop({ required: true, default: false })\n  public enabled: boolean;\n\n  @prop({ required: true, default: 0 })\n  public code1: number;\n\n  @prop({ required: true, default: 0 })\n  public code2: number;\n\n  @prop({ required: true, default: 0 })\n  public code3: number;\n\n  @prop({ required: true, default: 0 })\n  public code4: number;\n\n  @prop({ required: true, default: 0 })\n  public code5: number;\n\n  @prop({ required: true, default: 0 })\n  public twofactor: number;\n}\n\nexport class Membership {\n  @prop({ required: true, default: false })\n  public status: false;\n\n  @prop({ required: true, default: Date.now() })\n  public expiration: Date;\n\n  @prop({ required: true, default: Date.now() })\n  public transaction: Date;\n}\n\nexport class Rank {\n  @prop({ required: true, default: false })\n  public seller: boolean;\n\n  @prop({ required: true, default: false })\n  public mod: boolean;\n\n  @prop({ required: true, default: false })\n  public admin: boolean;\n}\n\nexport class Notifications {\n  @prop({ required: true, default: false })\n  public social: boolean;\n\n  @prop({ required: true, default: false })\n  public market: boolean;\n\n  @prop({ required: true, default: false })\n  public message: boolean;\n}\n\nexport class Online {\n  @prop({ required: true, default: false })\n  public online: boolean;\n\n  @prop({ required: true, default: 0 })\n  public mode: number;\n\n  @prop({ required: true, default: Date.now() })\n  public last: Date;\n}\n\nexport class Sessions extends TimeStamps {\n  // tslint:disable-next-line\n  public _id?: string;\n\n  @prop({ required: true })\n  public device: string | number;\n\n  @prop({ required: true })\n  public ip: string;\n\n  @prop({ required: true, default: false })\n  public twofactor: boolean;\n}\n\nexport class Email {\n  @prop({ required: true, trim: true })\n  public key: string;\n\n  @prop({ required: true, default: false })\n  public status: boolean;\n\n  @prop({ required: true })\n  public token: string;\n\n  @prop({ required: true, default: Date.now() })\n  public expiration?: Date;\n}\n\nexport class Password {\n  @prop({ required: true, trim: true })\n  public key: string;\n\n  @prop({ required: true, default: true })\n  public status?: boolean;\n\n  @prop({ required: true })\n  public token?: string;\n\n  @prop({ required: true, default: Date.now() })\n  public expiration?: Date;\n}\n\nexport class TransactionInfo {\n  @prop({ required: true })\n  public id: string;\n\n  @prop({ required: true })\n  public ip: string;\n\n  @prop({ required: true })\n  public device: string;\n}\n\nexport class Transaction extends TimeStamps {\n  // tslint:disable-next-line\n  public _id?: string;\n\n  @prop({ default: new TransactionInfo(), _id: false })\n  public buyer: TransactionInfo;\n\n  @prop({ required: true })\n  public seller: string;\n\n  @prop({ required: true })\n  public product: string;\n\n  @prop({ required: true })\n  public type: number;\n\n  @prop({ required: true })\n  public price: number;\n\n  @prop({ required: true })\n  public discount: number;\n\n  @prop({ required: true })\n  public market: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TransactionBuyer.html":{"url":"classes/TransactionBuyer.html","title":"class - TransactionBuyer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TransactionBuyer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/dto/user.dto.data.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                device\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                ip\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            device\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/dto/user.dto.data.ts:127\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/dto/user.dto.data.ts:123\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ip\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/dto/user.dto.data.ts:125\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Market {\n  public description: string;\n\n  public price: number;\n\n  public type: number;\n\n  public discount: number;\n\n  public seller: string;\n\n  public device: number;\n\n  public ip: string;\n\n  public market: number;\n}\n\nexport class Reactions {\n  public author: string;\n\n  public type: number;\n}\n\nexport class Suspension {\n  public status: boolean;\n\n  public reason: string;\n}\n\nexport class Stats {\n  public spent: number;\n\n  public won: number;\n\n  public rewards: number;\n\n  public rep: number;\n\n  public exp: number;\n}\n\nexport class Security {\n  public enabled: boolean;\n\n  public code1: number;\n\n  public code2: number;\n\n  public code3: number;\n\n  public code4: number;\n\n  public code5: number;\n\n  public twofactor: number;\n}\n\nexport class Membership {\n  public status: false;\n\n  public expiration: Date;\n\n  public transaction: Date;\n}\n\nexport class Rank {\n  public seller: boolean;\n\n  public mod: boolean;\n\n  public admin: boolean;\n}\n\nexport class Notifications {\n  public social: boolean;\n\n  public market: boolean;\n\n  public message: boolean;\n}\n\nexport class Online {\n  public online: boolean;\n\n  public mode: number;\n\n  public last: Date;\n}\n\nexport class Sessions {\n  // tslint:disable-next-line\n  public _id?: string;\n\n  public device: string | number;\n\n  public ip: string;\n\n  public twofactor: boolean;\n}\n\nexport class Email {\n  public key: string;\n\n  public status: boolean;\n\n  public token: string;\n\n  public expiration?: Date;\n}\n\nexport class Password {\n  public key: string;\n\n  public status?: boolean;\n\n  public token?: string;\n\n  public expiration?: Date;\n}\n\nexport class TransactionBuyer {\n  public id: string;\n\n  public ip: string;\n\n  public device: string;\n}\nexport class Transaction {\n  // tslint:disable-next-line\n  public _id?: string;\n\n  public seller: string;\n\n  public buyer: TransactionBuyer;\n\n  public item: string;\n\n  public type: number;\n\n  public price: number;\n\n  public discount: number;\n\n  public market: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/TransactionController.html":{"url":"controllers/TransactionController.html","title":"controller - TransactionController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  TransactionController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/transaction/transaction.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                transaction\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                DeleteTransaction\n                            \n                            \n                                    Public\n                                    Async\n                                GetTransactions\n                            \n                            \n                                    Public\n                                    Async\n                                ProcessTransaction\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            DeleteTransaction\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    DeleteTransaction(transactionDeleteDto: TransactionDeleteDto, response, lang: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Rank(RanksEnum.ADMINISTRATOR, RanksEnum.MODERATOR)@Delete('/delete/purchase')\n                \n            \n\n            \n                \n                    Defined in src/modules/transaction/transaction.controller.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    transactionDeleteDto\n                                    \n                                                TransactionDeleteDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    response\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    lang\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            GetTransactions\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    GetTransactions()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Rank(RanksEnum.ADMINISTRATOR, RanksEnum.MODERATOR)@Get('/get/all')\n                \n            \n\n            \n                \n                    Defined in src/modules/transaction/transaction.controller.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            ProcessTransaction\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ProcessTransaction(transactionModel: TransactionModel)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put('/process/purchase')\n                \n            \n\n            \n                \n                    Defined in src/modules/transaction/transaction.controller.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    transactionModel\n                                    \n                                                TransactionModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Put,\n  Body,\n  UseGuards,\n  Delete,\n  Res,\n  HttpStatus,\n  Get,\n} from '@nestjs/common';\nimport { TransactionService } from './transaction.service';\nimport { TransactionModel } from './models/transaction.model';\nimport { RankGuard } from '../../guards/rank.guard';\nimport { AuthGuard } from '@nestjs/passport';\nimport { TransactionDeleteDto } from './dto/transaction.delete.dto';\nimport { RanksEnum } from '../../keys/ranks.enum';\nimport { Rank } from '../../decorators/rank.decorator';\nimport { I18nLang, I18nService } from 'nestjs-i18n';\n\n@UseGuards(AuthGuard(), RankGuard)\n@Controller('transaction')\nexport class TransactionController {\n  constructor(\n    private readonly transactionService: TransactionService,\n    private readonly i18nService: I18nService,\n  ) {}\n\n  @Put('/process/purchase')\n  public async ProcessTransaction(@Body() transactionModel: TransactionModel) {\n    return await this.transactionService.ProcessTransaction(transactionModel);\n  }\n\n  @Rank(RanksEnum.ADMINISTRATOR, RanksEnum.MODERATOR)\n  @Delete('/delete/purchase')\n  public async DeleteTransaction(\n    @Body() transactionDeleteDto: TransactionDeleteDto,\n    @Res() response,\n    @I18nLang() lang: string,\n  ) {\n    return await this.transactionService\n      .DeleteTransaction(transactionDeleteDto)\n      .then(() => {\n        response.status(HttpStatus.OK).json({\n          statusCode: HttpStatus.OK,\n          message: this.i18nService.translate(\n            'translations.transactions.service.transaction_deleted',\n            {\n              lang,\n            },\n          ),\n        });\n      });\n  }\n\n  @Rank(RanksEnum.ADMINISTRATOR, RanksEnum.MODERATOR)\n  @Get('/get/all')\n  public async GetTransactions() {\n    return this.transactionService.GetAllTransactions();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TransactionDeleteDto.html":{"url":"classes/TransactionDeleteDto.html","title":"class - TransactionDeleteDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TransactionDeleteDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/transaction/dto/transaction.delete.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                buyer\n                            \n                            \n                                    Public\n                                product\n                            \n                            \n                                    Public\n                                seller\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            buyer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/transaction/dto/transaction.delete.dto.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            product\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/transaction/dto/transaction.delete.dto.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            seller\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/transaction/dto/transaction.delete.dto.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsString } from 'class-validator';\n\nexport class TransactionDeleteDto {\n  @IsNotEmpty()\n  @IsString()\n  public buyer: string;\n\n  @IsNotEmpty()\n  @IsString()\n  public seller: string;\n\n  @IsNotEmpty()\n  @IsString()\n  public product: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TransactionInfo.html":{"url":"classes/TransactionInfo.html","title":"class - TransactionInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TransactionInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/models/user.model.data.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                device\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                ip\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            device\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/models/user.model.data.ts:164\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/models/user.model.data.ts:158\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ip\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/models/user.model.data.ts:161\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { prop, index } from '@typegoose/typegoose';\nimport { TimeStamps } from '@typegoose/typegoose/lib/defaultClasses';\n\nexport class Reactions {\n  /*@prop({\n    required: true,\n    lowercase: true,\n    trim: true,\n  })\n  public author: string;*/\n\n  @prop({ required: true, min: 0, max: 1 })\n  public type: number;\n}\n\nexport class Suspension {\n  @prop({ required: true, default: false })\n  public status: boolean;\n\n  @prop({\n    required: true,\n    default:\n      '[System]: The reason for suspension has not been specified. Please contact us for more information.',\n    minlength: 90,\n    maxlength: 200,\n  })\n  public reason: string;\n}\n\nexport class Stats {\n  @prop({ required: true, default: 0 })\n  public spent: number;\n\n  @prop({ required: true, default: 0 })\n  public won: number;\n\n  @prop({ required: true, default: 0 })\n  public rewards: number;\n\n  @prop({ required: true, default: 0 })\n  public rep: number;\n\n  @prop({ required: true, default: 0 })\n  public exp: number;\n}\n\nexport class Security {\n  @prop({ required: true, default: false })\n  public enabled: boolean;\n\n  @prop({ required: true, default: 0 })\n  public code1: number;\n\n  @prop({ required: true, default: 0 })\n  public code2: number;\n\n  @prop({ required: true, default: 0 })\n  public code3: number;\n\n  @prop({ required: true, default: 0 })\n  public code4: number;\n\n  @prop({ required: true, default: 0 })\n  public code5: number;\n\n  @prop({ required: true, default: 0 })\n  public twofactor: number;\n}\n\nexport class Membership {\n  @prop({ required: true, default: false })\n  public status: false;\n\n  @prop({ required: true, default: Date.now() })\n  public expiration: Date;\n\n  @prop({ required: true, default: Date.now() })\n  public transaction: Date;\n}\n\nexport class Rank {\n  @prop({ required: true, default: false })\n  public seller: boolean;\n\n  @prop({ required: true, default: false })\n  public mod: boolean;\n\n  @prop({ required: true, default: false })\n  public admin: boolean;\n}\n\nexport class Notifications {\n  @prop({ required: true, default: false })\n  public social: boolean;\n\n  @prop({ required: true, default: false })\n  public market: boolean;\n\n  @prop({ required: true, default: false })\n  public message: boolean;\n}\n\nexport class Online {\n  @prop({ required: true, default: false })\n  public online: boolean;\n\n  @prop({ required: true, default: 0 })\n  public mode: number;\n\n  @prop({ required: true, default: Date.now() })\n  public last: Date;\n}\n\nexport class Sessions extends TimeStamps {\n  // tslint:disable-next-line\n  public _id?: string;\n\n  @prop({ required: true })\n  public device: string | number;\n\n  @prop({ required: true })\n  public ip: string;\n\n  @prop({ required: true, default: false })\n  public twofactor: boolean;\n}\n\nexport class Email {\n  @prop({ required: true, trim: true })\n  public key: string;\n\n  @prop({ required: true, default: false })\n  public status: boolean;\n\n  @prop({ required: true })\n  public token: string;\n\n  @prop({ required: true, default: Date.now() })\n  public expiration?: Date;\n}\n\nexport class Password {\n  @prop({ required: true, trim: true })\n  public key: string;\n\n  @prop({ required: true, default: true })\n  public status?: boolean;\n\n  @prop({ required: true })\n  public token?: string;\n\n  @prop({ required: true, default: Date.now() })\n  public expiration?: Date;\n}\n\nexport class TransactionInfo {\n  @prop({ required: true })\n  public id: string;\n\n  @prop({ required: true })\n  public ip: string;\n\n  @prop({ required: true })\n  public device: string;\n}\n\nexport class Transaction extends TimeStamps {\n  // tslint:disable-next-line\n  public _id?: string;\n\n  @prop({ default: new TransactionInfo(), _id: false })\n  public buyer: TransactionInfo;\n\n  @prop({ required: true })\n  public seller: string;\n\n  @prop({ required: true })\n  public product: string;\n\n  @prop({ required: true })\n  public type: number;\n\n  @prop({ required: true })\n  public price: number;\n\n  @prop({ required: true })\n  public discount: number;\n\n  @prop({ required: true })\n  public market: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TransactionModel.html":{"url":"classes/TransactionModel.html","title":"class - TransactionModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TransactionModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/transaction/models/transaction.model.ts\n        \n\n\n            \n                Extends\n            \n            \n                    TimeStamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                buyer\n                            \n                            \n                                    Public\n                                device\n                            \n                            \n                                    Public\n                                ip\n                            \n                            \n                                    Public\n                                product\n                            \n                            \n                                    Public\n                                seller\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            buyer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, ref: 'Users'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/transaction/models/transaction.model.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            device\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string | number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/transaction/models/transaction.model.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ip\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/transaction/models/transaction.model.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            product\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Ref\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, ref: 'Market'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/transaction/models/transaction.model.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            seller\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, ref: 'Users'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/transaction/models/transaction.model.ts:28\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { modelOptions, index, prop, Ref } from '@typegoose/typegoose';\nimport { MarketModel } from '../../../modules/market/models/market.model';\nimport { UserModel } from '../../../modules/user/models/user.model';\nimport { TimeStamps } from '@typegoose/typegoose/lib/defaultClasses';\n\n@modelOptions({\n  options: {\n    customName: 'Transactions',\n  },\n})\nexport class TransactionModel extends TimeStamps {\n  @prop({\n    required: true,\n    ref: 'Market',\n  })\n  public product: Ref;\n\n  @prop({\n    required: true,\n    ref: 'Users',\n  })\n  public buyer: Ref;\n\n  @prop({\n    required: true,\n    ref: 'Users',\n  })\n  public seller: Ref;\n\n  @prop({ required: true })\n  public device: string | number;\n\n  @prop({ required: true })\n  public ip: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TransactionModule.html":{"url":"modules/TransactionModule.html","title":"module - TransactionModule","body":"\n                   \n\n\n\n\n    Modules\n    TransactionModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TransactionModule\n\n\n\ncluster_TransactionModule_imports\n\n\n\ncluster_TransactionModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nTransactionModule\n\nTransactionModule\n\nTransactionModule -->\n\nAuthModule->TransactionModule\n\n\n\n\n\nTransactionService\n\nTransactionService\n\nTransactionModule -->\n\nTransactionService->TransactionModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/transaction/transaction.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            TransactionService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            TransactionController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TransactionController } from './transaction.controller';\nimport { TransactionService } from './transaction.service';\nimport { TransactionModel } from './models/transaction.model';\nimport { TypegooseModule } from 'nestjs-typegoose';\nimport { AuthModule } from '../../auth/auth.module';\nimport { UserModel } from '../user/models/user.model';\nimport { MarketModel } from '../market/models/market.model';\n\n@Module({\n  imports: [\n    TypegooseModule.forFeature([TransactionModel, UserModel, MarketModel]),\n    AuthModule,\n  ],\n  controllers: [TransactionController],\n  providers: [TransactionService],\n})\nexport class TransactionModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TransactionService.html":{"url":"injectables/TransactionService.html","title":"injectable - TransactionService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TransactionService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/transaction/transaction.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                DeleteTransaction\n                            \n                            \n                                    Public\n                                    Async\n                                GetAllTransactions\n                            \n                            \n                                    Public\n                                    Async\n                                ProcessTransaction\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(i18nService: I18nRequestScopeService, transactionModel: ReturnModelType<>, userModel: ReturnModelType<>, marketModel: ReturnModelType<>)\n                    \n                \n                        \n                            \n                                Defined in src/modules/transaction/transaction.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        i18nService\n                                                  \n                                                        \n                                                                    I18nRequestScopeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        transactionModel\n                                                  \n                                                        \n                                                                    ReturnModelType<>\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userModel\n                                                  \n                                                        \n                                                                    ReturnModelType<>\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        marketModel\n                                                  \n                                                        \n                                                                    ReturnModelType<>\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            DeleteTransaction\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    DeleteTransaction(transactionDeleteDto: TransactionDeleteDto)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/transaction/transaction.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    transactionDeleteDto\n                                    \n                                                TransactionDeleteDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            GetAllTransactions\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    GetAllTransactions()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/transaction/transaction.service.ts:299\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            ProcessTransaction\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ProcessTransaction(transactionModel: TransactionModel)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/transaction/transaction.service.ts:93\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    transactionModel\n                                    \n                                                TransactionModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            logger\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Logger\n\n                        \n                    \n                    \n                        \n                            Default value : new Logger('Transaction')\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/transaction/transaction.service.ts:17\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {\n  Injectable,\n  ConflictException,\n  BadRequestException,\n  Logger,\n} from '@nestjs/common';\nimport { TransactionModel } from './models/transaction.model';\nimport { InjectModel } from 'nestjs-typegoose';\nimport { ReturnModelType } from '@typegoose/typegoose';\nimport { UserModel } from '../user/models/user.model';\nimport { I18nRequestScopeService } from 'nestjs-i18n';\nimport { MarketModel } from '../market/models/market.model';\nimport { TransactionDeleteDto } from './dto/transaction.delete.dto';\n\n@Injectable()\nexport class TransactionService {\n  private readonly logger: Logger = new Logger('Transaction');\n\n  constructor(\n    private readonly i18nService: I18nRequestScopeService,\n    @InjectModel(TransactionModel)\n    private readonly transactionModel: ReturnModelType,\n    @InjectModel(UserModel)\n    private readonly userModel: ReturnModelType,\n    @InjectModel(MarketModel)\n    private readonly marketModel: ReturnModelType,\n  ) {}\n\n  public async DeleteTransaction(transactionDeleteDto: TransactionDeleteDto) {\n    return await this.marketModel\n      .findOneAndUpdate(\n        transactionDeleteDto.product,\n        {\n          $pull: {\n            buyers: {\n              user: transactionDeleteDto.buyer,\n            },\n          },\n        },\n        { new: true },\n      )\n      .catch(() => {\n        throw new BadRequestException(\n          this.i18nService.translate(\n            'translations.transactions.controller.transaction_error_deleted',\n          ),\n        );\n      })\n      .then(() => {\n        this.userModel\n          .findOneAndUpdate(\n            transactionDeleteDto.buyer,\n            {\n              $pull: {\n                transactions: {\n                  product: transactionDeleteDto.product,\n                },\n              },\n            },\n            { new: true },\n          )\n          .catch(() => {\n            throw new BadRequestException(\n              this.i18nService.translate(\n                'translations.transactions.controller.transaction_error_deleted',\n              ),\n            );\n          })\n          .then(() => {\n            this.userModel\n              .findOneAndUpdate(\n                transactionDeleteDto.seller,\n                {\n                  $pull: {\n                    transactions: {\n                      product: transactionDeleteDto.product,\n                    },\n                  },\n                },\n                { new: true },\n              )\n              .catch(() => {\n                throw new BadRequestException(\n                  this.i18nService.translate(\n                    'translations.transactions.controller.transaction_error_deleted',\n                  ),\n                );\n              });\n          });\n      });\n  }\n\n  public async ProcessTransaction(\n    transactionModel: TransactionModel,\n  ): Promise {\n    const { buyer, product, device, ip } = transactionModel;\n    let marketTransaction;\n    let userBuyer;\n    let userSeller;\n\n    this.logger.log(\n      `Starting process of a new transaction by user ${buyer} with device ${device} and with IP address ${ip}...`,\n    );\n\n    try {\n      userBuyer = await this.userModel.findById(buyer);\n      marketTransaction = await this.marketModel.findById(product);\n    } catch (error) {\n      this.logger.error(\n        `The transaction could not be processed because the product ${product} or buyer ${buyer} does not exist in the database.`,\n      );\n\n      throw new ConflictException(\n        this.i18nService.translate(\n          'translations.transactions.controller.transaction_error_process',\n        ),\n      );\n    }\n\n    if (!marketTransaction) {\n      this.logger.error(\n        `The transaction could not be processed because the product ${product} does not exist.`,\n      );\n\n      throw new BadRequestException(\n        this.i18nService.translate(\n          'translations.transactions.controller.product_not_found',\n        ),\n      );\n    }\n\n    const userSellerId = marketTransaction.author;\n    try {\n      userSeller = await this.userModel.findById(userSellerId);\n    } catch (error) {\n      this.logger.error(\n        `The transaction could not be processed because the seller does not exist.`,\n      );\n\n      throw new ConflictException(\n        this.i18nService.translate(\n          'translations.transactions.controller.transaction_error_process',\n        ),\n      );\n    }\n\n    const discountTotal = Math.round(\n      marketTransaction.price -\n        (marketTransaction.discount.percentage * marketTransaction.price) / 100,\n    );\n\n    if (!userBuyer || !userSeller) {\n      this.logger.error(\n        `The transaction could not be processed because the buyer ${buyer} or seller ${userSellerId} does not exist.`,\n      );\n\n      throw new ConflictException(\n        this.i18nService.translate('translations.auth.service.user_not_found'),\n      );\n    }\n\n    if (userBuyer.tachi \n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserDto.html":{"url":"classes/UpdateUserDto.html","title":"class - UpdateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/dto/update-user.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                id\n                            \n                            \n                                    Readonly\n                                key\n                            \n                            \n                                    Readonly\n                                value\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsString()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/dto/update-user.dto.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            key\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsString()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/dto/update-user.dto.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            value\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string | number | Date | boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/dto/update-user.dto.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsString, IsNotEmpty } from 'class-validator';\n\nexport class UpdateUserDto {\n  @IsString()\n  @IsNotEmpty()\n  readonly id: string;\n\n  @IsString()\n  @IsNotEmpty()\n  readonly key: string;\n\n  @IsNotEmpty()\n  readonly value: string | number | Date | boolean;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserController.html":{"url":"controllers/UserController.html","title":"controller - UserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/user.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                user\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Async\n                                addReaction\n                            \n                            \n                                    Protected\n                                    Async\n                                changeCoverPhoto\n                            \n                            \n                                    Protected\n                                    Async\n                                changeProfilePhoto\n                            \n                            \n                                    Protected\n                                    Async\n                                getAllUsers\n                            \n                            \n                                    Public\n                                getUser\n                            \n                            \n                                    Protected\n                                    Async\n                                removeReaction\n                            \n                            \n                                    Public\n                                    Async\n                                updateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Async\n                            addReaction\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addReaction(res, reactionsDto: ReactionsDto, lang: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put('/reactions/add')\n                \n            \n\n            \n                \n                    Defined in src/modules/user/user.controller.ts:174\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    res\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    reactionsDto\n                                    \n                                                ReactionsDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    lang\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Async\n                            changeCoverPhoto\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    changeCoverPhoto(file, id: string, res, lang: string, userRequestId: string, userRequestRank: string[])\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseInterceptors(undefined)@Post('/upload/cover/:id')\n                \n            \n\n            \n                \n                    Defined in src/modules/user/user.controller.ts:139\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    file\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    lang\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userRequestId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userRequestRank\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Async\n                            changeProfilePhoto\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    changeProfilePhoto(file, id: string, res, lang: string, userRequestId: string, userRequestRank: string[])\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/upload/photo/:id')@UseInterceptors(undefined)\n                \n            \n\n            \n                \n                    Defined in src/modules/user/user.controller.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    file\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    lang\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userRequestId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userRequestRank\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Async\n                            getAllUsers\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllUsers()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/modules/user/user.controller.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUser(userId: string, userRequestId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/find/:userId')\n                \n            \n\n            \n                \n                    Defined in src/modules/user/user.controller.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userRequestId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Async\n                            removeReaction\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    removeReaction(res, toId: string, ofId: string, lang: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Rank(RanksEnum.ADMINISTRATOR)@Delete('/reactions/remove')\n                \n            \n\n            \n                \n                    Defined in src/modules/user/user.controller.ts:194\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    res\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    toId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    ofId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    lang\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            updateUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateUser(updateUserDto: UpdateUserDto, response, lang: string, userRequestId: string, userRequestRank: string[])\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch('/update')\n                \n            \n\n            \n                \n                    Defined in src/modules/user/user.controller.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    updateUserDto\n                                    \n                                                UpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    response\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    lang\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userRequestId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userRequestRank\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Param,\n  Body,\n  Res,\n  HttpStatus,\n  Patch,\n  Delete,\n  Post,\n  UseInterceptors,\n  UploadedFile,\n  Put,\n  UseGuards,\n} from '@nestjs/common';\nimport { FileInterceptor } from '@nestjs/platform-express';\nimport { UserService } from './user.service';\nimport { UpdateUserDto } from './dto/update-user.dto';\nimport { Rank } from '../../decorators/rank.decorator';\nimport { extname } from 'path';\nimport { diskStorage } from 'multer';\nimport { ConfigurationEnum } from '../../keys/configuration.enum';\nimport { ConfigService } from '../../config/config.service';\nimport { ReactionsDto } from './dto/reactions.dto';\nimport { I18nService, I18nLang } from 'nestjs-i18n';\nimport { AuthGuard } from '@nestjs/passport';\nimport { RanksEnum } from '../../keys/ranks.enum';\nimport { GetUser } from '../../decorators/user.decorator';\n\n@UseGuards(AuthGuard())\n@Controller('user')\nexport class UserController {\n  constructor(\n    private readonly userService: UserService,\n    private readonly configService: ConfigService,\n    private readonly i18nService: I18nService,\n  ) {}\n\n  @Get('/find/:userId')\n  public getUser(\n    @Param('userId') userId: string,\n    @GetUser('id') userRequestId: string,\n  ) {\n    return this.userService.getPublicUser(userId, userRequestId);\n  }\n\n  @Patch('/update')\n  public async updateUser(\n    @Body() updateUserDto: UpdateUserDto,\n    @Res() response,\n    @I18nLang() lang: string,\n    @GetUser('id') userRequestId: string,\n    @GetUser('rank') userRequestRank: string[],\n  ) {\n    await this.userService.updateUser(\n      updateUserDto,\n      userRequestId,\n      userRequestRank,\n    );\n    response.status(HttpStatus.OK).json({\n      statusCode: HttpStatus.OK,\n      message: this.i18nService.translate('translations.general.saved', {\n        lang,\n      }),\n    });\n  }\n\n  @Get()\n  protected async getAllUsers() {\n    return await this.userService.getUsers();\n  }\n\n  @Post('/upload/photo/:id')\n  @UseInterceptors(\n    FileInterceptor('photo', {\n      storage: diskStorage({\n        destination: './uploads/profile_photo',\n        // tslint:disable-next-line: variable-name\n        filename: (_req, file, cb) => {\n          const randomName = Array(32)\n            .fill(null)\n            .map(() => Math.round(Math.random() * 16).toString(16))\n            .join('');\n          return cb(null, `${randomName}${extname(file.originalname)}`);\n        },\n      }),\n    }),\n  )\n  protected async changeProfilePhoto(\n    @UploadedFile() file,\n    @Param('id') id: string,\n    @Res() res,\n    @I18nLang() lang: string,\n    @GetUser('id') userRequestId: string,\n    @GetUser('rank') userRequestRank: string[],\n  ) {\n    return await this.userService\n      .updatePhoto(\n        id,\n        `${this.configService.get(\n          ConfigurationEnum.SERVER_HOST,\n        )}/uploads/profile_photo/${file.filename}`,\n        'photo',\n        userRequestId,\n        userRequestRank,\n      )\n      .then(() => {\n        res.status(HttpStatus.OK).json({\n          statusCode: HttpStatus.OK,\n          message: this.i18nService.translate(\n            'translations.user.controller.profile_photo_updated',\n            {\n              lang,\n            },\n          ),\n          path: `${this.configService.get(\n            ConfigurationEnum.SERVER_HOST,\n          )}/uploads/profile_photo/${file.filename}`,\n        });\n      });\n  }\n\n  @UseInterceptors(\n    FileInterceptor('cover', {\n      storage: diskStorage({\n        destination: './uploads/cover_photo',\n        // tslint:disable-next-line: variable-name\n        filename: (_req, file, cb) => {\n          const randomName = Array(32)\n            .fill(null)\n            .map(() => Math.round(Math.random() * 16).toString(16))\n            .join('');\n          return cb(null, `${randomName}${extname(file.originalname)}`);\n        },\n      }),\n    }),\n  )\n  @Post('/upload/cover/:id')\n  protected async changeCoverPhoto(\n    @UploadedFile() file,\n    @Param('id') id: string,\n    @Res() res,\n    @I18nLang() lang: string,\n    @GetUser('id') userRequestId: string,\n    @GetUser('rank') userRequestRank: string[],\n  ) {\n    return await this.userService\n      .updatePhoto(\n        id,\n        `${this.configService.get(\n          ConfigurationEnum.SERVER_HOST,\n        )}/uploads/${id}/cover_photo/${file.filename}`,\n        'cover',\n        userRequestId,\n        userRequestRank,\n      )\n      .then(() => {\n        res.status(HttpStatus.OK).json({\n          statusCode: HttpStatus.OK,\n          message: this.i18nService.translate(\n            'translations.user.controller.cover_photo_updated',\n            {\n              lang,\n            },\n          ),\n          path: `${this.configService.get(\n            ConfigurationEnum.SERVER_HOST,\n          )}/uploads/cover_photo/${file.filename}`,\n        });\n      });\n  }\n\n  @Put('/reactions/add')\n  protected async addReaction(\n    @Res() res,\n    @Body() reactionsDto: ReactionsDto,\n    @I18nLang() lang: string,\n  ) {\n    return await this.userService.addReaction(reactionsDto).then(() => {\n      res.status(HttpStatus.OK).json({\n        statusCode: HttpStatus.OK,\n        message: this.i18nService.translate(\n          'translations.user.controller.reaction_added',\n          {\n            lang,\n          },\n        ),\n      });\n    });\n  }\n\n  @Rank(RanksEnum.ADMINISTRATOR)\n  @Delete('/reactions/remove')\n  protected async removeReaction(\n    @Res() res,\n    @Body('toId') toId: string,\n    @Body('ofId') ofId: string,\n    @I18nLang() lang: string,\n  ) {\n    return await this.userService.removeReaction(ofId, toId).then(() => {\n      res.status(HttpStatus.OK).json({\n        statusCode: HttpStatus.OK,\n        message: this.i18nService.translate(\n          'translations.user.controller.reactions_deleted',\n          {\n            lang,\n          },\n        ),\n      });\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserDto.html":{"url":"classes/UserDto.html","title":"class - UserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/dto/user.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                _id\n                            \n                            \n                                    Public\n                                cover\n                            \n                            \n                                    Public\n                                device\n                            \n                            \n                                    Public\n                                email\n                            \n                            \n                                    Public\n                                ip\n                            \n                            \n                                    Public\n                                market\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                notifications\n                            \n                            \n                                    Public\n                                offer\n                            \n                            \n                                    Public\n                                online\n                            \n                            \n                                    Public\n                                password\n                            \n                            \n                                    Public\n                                photo\n                            \n                            \n                                    Public\n                                premium\n                            \n                            \n                                    Public\n                                rank\n                            \n                            \n                                    Public\n                                reactions\n                            \n                            \n                                    Public\n                                security\n                            \n                            \n                                    Public\n                                sessions\n                            \n                            \n                                    Public\n                                specialty\n                            \n                            \n                                    Public\n                                stats\n                            \n                            \n                                    Public\n                                suspension\n                            \n                            \n                                    Public\n                                tachi\n                            \n                            \n                                    Public\n                                transactions\n                            \n                            \n                                    Public\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/dto/user.dto.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            cover\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/dto/user.dto.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            device\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/dto/user.dto.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Email\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/dto/user.dto.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ip\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/dto/user.dto.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            market\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Market[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/dto/user.dto.ts:59\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/dto/user.dto.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            notifications\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Notifications\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/dto/user.dto.ts:53\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            offer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/dto/user.dto.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            online\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Online\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/dto/user.dto.ts:55\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Password\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/dto/user.dto.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            photo\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/dto/user.dto.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            premium\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Membership\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/dto/user.dto.ts:49\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            rank\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Rank\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/dto/user.dto.ts:51\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            reactions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Reactions[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/dto/user.dto.ts:61\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            security\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Security\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/dto/user.dto.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            sessions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Sessions[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/dto/user.dto.ts:63\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            specialty\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/dto/user.dto.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            stats\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Stats\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/dto/user.dto.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            suspension\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Suspension\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/dto/user.dto.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            tachi\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/dto/user.dto.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            transactions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Transaction[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/dto/user.dto.ts:57\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/dto/user.dto.ts:25\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Email,\n  Password,\n  Security,\n  Suspension,\n  Membership,\n  Rank,\n  Notifications,\n  Online,\n  Market,\n  Reactions,\n  Sessions,\n  Stats,\n  Transaction,\n} from './user.dto.data';\n\nexport class UserDto {\n  // tslint:disable-next-line\n  public _id?: string;\n\n  public name: string;\n\n  public email: Email;\n\n  public username: string;\n\n  public password: Password;\n\n  public offer: string;\n\n  public specialty: string;\n\n  public photo: string;\n\n  public cover: string;\n\n  public ip: string;\n\n  public device: string;\n\n  public tachi: number;\n\n  public stats: Stats;\n\n  public security: Security;\n\n  public suspension: Suspension;\n\n  public premium: Membership;\n\n  public rank: Rank;\n\n  public notifications: Notifications;\n\n  public online: Online;\n\n  public transactions: Transaction[];\n\n  public market: Market[];\n\n  public reactions: Reactions[];\n\n  public sessions: Sessions[];\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserModel.html":{"url":"classes/UserModel.html","title":"class - UserModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/models/user.model.ts\n        \n\n\n            \n                Extends\n            \n            \n                    TimeStamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                _id\n                            \n                            \n                                    Public\n                                cover\n                            \n                            \n                                    Public\n                                device\n                            \n                            \n                                    Public\n                                email\n                            \n                            \n                                    Public\n                                ip\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                notifications\n                            \n                            \n                                    Public\n                                offer\n                            \n                            \n                                    Public\n                                online\n                            \n                            \n                                    Public\n                                password\n                            \n                            \n                                    Public\n                                photo\n                            \n                            \n                                    Public\n                                premium\n                            \n                            \n                                    Public\n                                rank\n                            \n                            \n                                    Public\n                                reactions\n                            \n                            \n                                    Public\n                                security\n                            \n                            \n                                    Public\n                                sessions\n                            \n                            \n                                    Public\n                                specialty\n                            \n                            \n                                    Public\n                                stats\n                            \n                            \n                                    Public\n                                suspension\n                            \n                            \n                                    Public\n                                tachi\n                            \n                            \n                                    Public\n                                transactions\n                            \n                            \n                                    Public\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/models/user.model.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            cover\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: 'https://api.akatsukiapp.com/uploads/placeholders/cover_photo.jpg', trim: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/models/user.model.ts:75\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            device\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, trim: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/models/user.model.ts:81\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Email\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, _id: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/models/user.model.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ip\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: '127.0.0.1', trim: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/models/user.model.ts:78\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, minlength: 5, maxlength: 30})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/models/user.model.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            notifications\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Notifications\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, _id: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/models/user.model.ts:102\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            offer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: 'Hello, welcome to my profile! At the moment I dont have offers available to offer to the public, or I dont have enough range to change this. :)', minlength: 140, maxlength: 1000})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/models/user.model.ts:55\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            online\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Online\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, _id: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/models/user.model.ts:105\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Password\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, _id: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/models/user.model.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            photo\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: 'https://api.akatsukiapp.com/uploads/placeholders/profile_photo.jpg', trim: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/models/user.model.ts:69\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            premium\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Membership\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, _id: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/models/user.model.ts:96\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            rank\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Rank\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, _id: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/models/user.model.ts:99\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            reactions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Reactions[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @arrayProp({items: Reactions})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/models/user.model.ts:111\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            security\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Security\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, _id: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/models/user.model.ts:90\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            sessions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Sessions[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @arrayProp({items: Sessions})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/models/user.model.ts:114\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            specialty\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, minlength: 10, maxlength: 100})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/models/user.model.ts:62\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            stats\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Stats\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, _id: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/models/user.model.ts:87\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            suspension\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Suspension\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, _id: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/models/user.model.ts:93\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            tachi\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: 0})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/models/user.model.ts:84\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            transactions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Transaction[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @arrayProp({items: Transaction})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/models/user.model.ts:108\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, lowercase: true, trim: true, minlength: 5, maxlength: 15})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/models/user.model.ts:44\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { prop, modelOptions, arrayProp, index } from '@typegoose/typegoose';\nimport { TimeStamps } from '@typegoose/typegoose/lib/defaultClasses';\nimport {\n  Suspension,\n  Stats,\n  Security,\n  Membership,\n  Rank,\n  Notifications,\n  Reactions,\n  Sessions,\n  Password,\n  Email,\n  Online,\n  Transaction,\n} from './user.model.data';\n\n@modelOptions({ options: { customName: 'Users' } })\n@index(\n  { 'email': 1, 'username': 1, 'device': 1, 'ip': 1, 'sessions.device': 1, 'sessions.ip': 1 },\n  { unique: true },\n)\nexport class UserModel extends TimeStamps {\n  // tslint:disable-next-line\n  public _id?: string;\n\n  @prop({\n    required: true,\n    minlength: 5,\n    maxlength: 30,\n  })\n  public name: string;\n\n  @prop({ default: new Email(), _id: false })\n  public email: Email;\n\n  @prop({\n    required: true,\n    lowercase: true,\n    trim: true,\n    minlength: 5,\n    maxlength: 15,\n  })\n  public username: string;\n\n  @prop({ default: new Password(), _id: false })\n  public password: Password;\n\n  @prop({\n    default:\n      'Hello, welcome to my profile! At the moment I dont have offers available to offer to the public, or I dont have enough range to change this. :)',\n    minlength: 140,\n    maxlength: 1000,\n  })\n  public offer: string;\n\n  @prop({\n    required: true,\n    minlength: 10,\n    maxlength: 100,\n  })\n  public specialty: string;\n\n  @prop({\n    default:\n      'https://api.akatsukiapp.com/uploads/placeholders/profile_photo.jpg',\n    trim: true,\n  })\n  public photo: string;\n\n  @prop({\n    default: 'https://api.akatsukiapp.com/uploads/placeholders/cover_photo.jpg',\n    trim: true,\n  })\n  public cover: string;\n\n  @prop({ default: '127.0.0.1', trim: true })\n  public ip: string;\n\n  @prop({ required: true, trim: true })\n  public device: string;\n\n  @prop({ required: true, default: 0 })\n  public tachi: number;\n\n  @prop({ default: new Stats(), _id: false })\n  public stats: Stats;\n\n  @prop({ default: new Security(), _id: false })\n  public security: Security;\n\n  @prop({ default: new Suspension(), _id: false })\n  public suspension: Suspension;\n\n  @prop({ default: new Membership(), _id: false })\n  public premium: Membership;\n\n  @prop({ default: new Rank(), _id: false })\n  public rank: Rank;\n\n  @prop({ default: new Notifications(), _id: false })\n  public notifications: Notifications;\n\n  @prop({ default: new Online(), _id: false })\n  public online: Online;\n\n  @arrayProp({ items: Transaction })\n  public transactions: Transaction[];\n\n  @arrayProp({ items: Reactions })\n  public reactions: Reactions[];\n\n  @arrayProp({ items: Sessions })\n  public sessions: Sessions[];\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UserModule\n\n\n\ncluster_UserModule_imports\n\n\n\ncluster_UserModule_exports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nAuthModule->UserModule\n\n\n\n\n\nConfigModule\n\nConfigModule\n\nUserModule -->\n\nConfigModule->UserModule\n\n\n\n\n\nUserService \n\nUserService \n\nUserService  -->\n\nUserModule->UserService \n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/user/user.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UserController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            ConfigModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UserService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UserService } from './user.service';\nimport { UserController } from './user.controller';\nimport { TypegooseModule } from 'nestjs-typegoose';\nimport { UserModel } from './models/user.model';\nimport { AuthModule } from '../../auth/auth.module';\nimport { ConfigModule } from '../../config/config.module';\n\n@Module({\n  imports: [TypegooseModule.forFeature([UserModel]), AuthModule, ConfigModule],\n  providers: [UserService],\n  controllers: [UserController],\n  exports: [UserService],\n})\nexport class UserModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/user.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                addReaction\n                            \n                            \n                                    Public\n                                    Async\n                                deleteUser\n                            \n                            \n                                    Public\n                                    Async\n                                getPublicUser\n                            \n                            \n                                    Public\n                                    Async\n                                getUsers\n                            \n                            \n                                    Public\n                                    Async\n                                removeReaction\n                            \n                            \n                                    Public\n                                    Async\n                                updateOnlineUser\n                            \n                            \n                                    Public\n                                    Async\n                                updatePhoto\n                            \n                            \n                                    Public\n                                    Async\n                                updateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userModel: ReturnModelType<>, i18nService: I18nRequestScopeService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/user/user.service.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userModel\n                                                  \n                                                        \n                                                                    ReturnModelType<>\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        i18nService\n                                                  \n                                                        \n                                                                    I18nRequestScopeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            addReaction\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addReaction(reactionsDto: ReactionsDto)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/user/user.service.ts:304\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    reactionsDto\n                                    \n                                                ReactionsDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            deleteUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteUser(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/user/user.service.ts:375\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            getPublicUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getPublicUser(userId: string, userRequestId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/user/user.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userRequestId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            getUsers\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUsers()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/user/user.service.ts:100\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            removeReaction\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    removeReaction(ofId: string, toId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/user/user.service.ts:355\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ofId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    toId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            updateOnlineUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateOnlineUser(id: string, online: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/user/user.service.ts:213\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    online\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            updatePhoto\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updatePhoto(userId: string, dir: string, type: string, requetUserId: string, requestUserRank: string[])\n                \n            \n\n\n            \n                \n                    Defined in src/modules/user/user.service.ts:224\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dir\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    requetUserId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    requestUserRank\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            updateUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateUser(updateUserDto: UpdateUserDto, requetUserId: string, requestUserRank: string[])\n                \n            \n\n\n            \n                \n                    Defined in src/modules/user/user.service.ts:120\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    updateUserDto\n                                    \n                                                UpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    requetUserId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    requestUserRank\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            logger\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Logger\n\n                        \n                    \n                    \n                        \n                            Default value : new Logger('User')\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/user.service.ts:20\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {\n  ConflictException,\n  UnauthorizedException,\n  ForbiddenException,\n  BadRequestException,\n  Injectable,\n  NotFoundException,\n  Logger,\n} from '@nestjs/common';\nimport { InjectModel } from 'nestjs-typegoose';\nimport { UserModel } from './models/user.model';\nimport { ReturnModelType } from '@typegoose/typegoose';\nimport { I18nRequestScopeService } from 'nestjs-i18n';\nimport { UpdateUserDto } from './dto/update-user.dto';\nimport { ReactionsDto } from './dto/reactions.dto';\nimport { RanksEnum } from '../../keys/ranks.enum';\n\n@Injectable()\nexport class UserService {\n  private readonly logger: Logger = new Logger('User');\n\n  constructor(\n    @InjectModel(UserModel)\n    private readonly userModel: ReturnModelType,\n    private readonly i18nService: I18nRequestScopeService,\n  ) {}\n\n  public async getPublicUser(\n    userId: string,\n    userRequestId: string,\n  ): Promise {\n    let user: UserModel;\n    try {\n      if (userRequestId === userId) {\n        this.logger.log(\n          `Obtaining private information from the user ${userId} by the user ${userRequestId}.`,\n        );\n        user = await this.userModel\n          .findById(userId)\n          .select([\n            'email.key',\n            'password.key',\n            'offer',\n            'photo',\n            'cover',\n            'stats',\n            'online',\n            'name',\n            'username',\n            'specialty',\n            'reactions',\n            'tachi',\n            'security',\n            'premium',\n            'notifications',\n            'transactions',\n            'market',\n            'sessions',\n            'rank',\n          ]);\n      } else {\n        this.logger.log(\n          `Obtaining public information of the user ${userId} by the user ${userRequestId}.`,\n        );\n        user = await this.userModel\n          .findById(userId)\n          .select([\n            'offer',\n            'photo',\n            'cover',\n            'stats',\n            'online',\n            'name',\n            'username',\n            'specialty',\n            'reactions',\n            'rank',\n          ]);\n      }\n    } catch (error) {\n      this.logger.error(\n        `Could not get user information ${userId} by user ${userRequestId} because the user does not exist.`,\n      );\n      throw new ConflictException(\n        this.i18nService.translate('translations.auth.service.user_not_found'),\n      );\n    }\n\n    if (!user) {\n      this.logger.error(\n        `Could not get user information ${userId} by user ${userRequestId} because the user does not exist.`,\n      );\n      throw new UnauthorizedException(\n        this.i18nService.translate('translations.auth.service.user_not_found'),\n      );\n    }\n    return user;\n  }\n\n  public async getUsers() {\n    this.logger.log(\n      'Obtaining list of all users registered in Akatsuki Project.',\n    );\n    return await this.userModel\n      .find()\n      .select([\n        'offer',\n        'photo',\n        'cover',\n        'stats',\n        'online',\n        'name',\n        'username',\n        'specialty',\n        'reactions',\n      ])\n      .exec();\n  }\n\n  public async updateUser(\n    updateUserDto: UpdateUserDto,\n    requetUserId: string,\n    requestUserRank: string[],\n  ): Promise {\n    this.logger.log(\n      `Updating the user ${updateUserDto.id} by the user ${requetUserId}.`,\n    );\n    let user: UserModel;\n    const { id, key, value } = updateUserDto;\n    const blockKey: string[] = [\n      'email.status',\n      'email.expiration',\n      'email.token',\n      'password.status',\n      'password.expiration',\n      'password.token',\n      'ip',\n      'tachi',\n      'stats',\n      'suspension',\n      'premium',\n      'rank',\n      'transactions',\n      'market',\n      'device',\n      'reactions',\n      'sessions',\n      'createdAt',\n      'updatedAt',\n      '__v',\n    ];\n    try {\n      user = await this.userModel.findById(id);\n    } catch (error) {\n      this.logger.error(\n        `Could not update user ${id} by user ${requetUserId} because the user does not exist.`,\n      );\n      throw new ConflictException(\n        this.i18nService.translate('translations.auth.service.user_not_found'),\n      );\n    }\n\n    if (!user) {\n      this.logger.error(\n        `Could not update user ${id} by user ${requetUserId} because the user does not exist.`,\n      );\n      throw new UnauthorizedException(\n        this.i18nService.translate('translations.auth.service.user_not_found'),\n      );\n    }\n\n    if (blockKey.includes(key)) {\n      this.logger.error(\n        `Could not update user ${id} by user ${requetUserId} because he does not have sufficient permissions to update the ${key} key with the value ${value}.`,\n      );\n      throw new ForbiddenException(\n        this.i18nService.translate(\n          'translations.general.account_no_permission',\n        ),\n      );\n    }\n\n    if (requetUserId !== id) {\n      if (\n        !requestUserRank.includes(RanksEnum.ADMINISTRATOR) &&\n        !requestUserRank.includes(RanksEnum.MODERATOR)\n      ) {\n        this.logger.error(\n          `Could not update user ${id} by user ${requetUserId} because the user who wants to update does not have sufficient permissions on the account.`,\n        );\n        throw new ForbiddenException(\n          this.i18nService.translate(\n            'translations.general.account_no_permission',\n          ),\n        );\n      }\n    }\n\n    return await this.userModel\n      .findByIdAndUpdate(id, {\n        [key]: value,\n      })\n      .catch(() => {\n        this.logger.error(\n          `Could not update user ${id} by user ${requetUserId} due to a system error.`,\n        );\n        throw new BadRequestException(\n          this.i18nService.translate('translations.general.process_failed'),\n        );\n      });\n  }\n\n  public async updateOnlineUser(\n    id: string,\n    online: { online: { online: boolean; mode: number; last: Date } },\n  ): Promise {\n    return await this.userModel.findByIdAndUpdate(id, online).catch(() => {\n      throw new BadRequestException(\n        this.i18nService.translate('translations.general.process_failed'),\n      );\n    });\n  }\n\n  public async updatePhoto(\n    userId: string,\n    dir: string,\n    type: string,\n    requetUserId: string,\n    requestUserRank: string[],\n  ): Promise {\n    this.logger.log(\n      `Updating profile picture of ${userId} by user ${requetUserId}.`,\n    );\n    let user: UserModel;\n    try {\n      user = await this.userModel.findById(userId);\n    } catch (error) {\n      throw new ConflictException(\n        this.i18nService.translate('translations.auth.service.user_not_found'),\n      );\n    }\n\n    if (!user) {\n      this.logger.error(\n        `Could not update user ${userId} by user ${requetUserId} because the user does not exist.`,\n      );\n      throw new UnauthorizedException(\n        this.i18nService.translate('translations.auth.service.user_not_found'),\n      );\n    }\n\n    if (requetUserId !== userId) {\n      if (\n        !requestUserRank.includes(RanksEnum.ADMINISTRATOR) &&\n        !requestUserRank.includes(RanksEnum.MODERATOR)\n      ) {\n        this.logger.error(\n          `Could not update user ${userId} by user ${requetUserId} because the user who wants to update does not have sufficient permissions on the account.`,\n        );\n        throw new ForbiddenException(\n          this.i18nService.translate(\n            'translations.general.account_no_permission',\n          ),\n        );\n      }\n    }\n\n    if (!type) {\n      this.logger.error(\n        `Could not update profile picture of ${userId} by user ${requetUserId} because the type of photo to update was not specified.`,\n      );\n      throw new BadRequestException(\n        this.i18nService.translate('translations.user.service.type_photo'),\n      );\n    }\n\n    if (type === 'photo') {\n      await this.userModel\n        .findByIdAndUpdate(userId, { photo: dir })\n        .catch(() => {\n          this.logger.error(\n            `Could not update profile picture of ${userId} by user ${requetUserId} due to a system error.`,\n          );\n          throw new BadRequestException(\n            this.i18nService.translate('translations.general.process_failed'),\n          );\n        });\n    }\n\n    if (type === 'cover') {\n      await this.userModel\n        .findByIdAndUpdate(userId, { cover: dir })\n        .catch(() => {\n          this.logger.error(\n            `Could not update the cover photo of ${userId} by user ${requetUserId} due to a system error.`,\n          );\n          throw new BadRequestException(\n            this.i18nService.translate('translations.general.process_failed'),\n          );\n        });\n    }\n  }\n\n  public async addReaction(reactionsDto: ReactionsDto): Promise {\n    const { toId, ofId, type } = reactionsDto;\n    this.logger.error(\n      `Adding new reaction to user ${toId} by user ${ofId} with reaction type ${type}.`,\n    );\n    let user;\n    try {\n      user = await this.userModel.findById(toId);\n    } catch (error) {\n      this.logger.error(\n        `The process of adding reaction to user ${toId} by user ${ofId} could not be completed because the user does not exist.`,\n      );\n      throw new ConflictException(\n        this.i18nService.translate('translations.auth.service.user_not_found'),\n      );\n    }\n\n    if (!user) {\n      this.logger.error(\n        `The process of adding reaction to user ${toId} by user ${ofId} could not be completed because the user does not exist.`,\n      );\n      throw new NotFoundException(\n        this.i18nService.translate('translations.auth.service.user_not_found'),\n      );\n    }\n\n    if (type === 'upvote') {\n      user.reactions.push({ author: ofId, type: 0 });\n      await user.save().catch(error => {\n        this.logger.error(\n          `Could not add user reaction ${ofId} to user ${toId} due to a system error.`,\n        );\n        throw new BadRequestException(\n          this.i18nService.translate('translations.general.process_failed'),\n        );\n      });\n    }\n\n    if (type === 'downvote') {\n      user.reactions.push({ author: ofId, type: 1 });\n      await user.save().catch(() => {\n        this.logger.error(\n          `Could not add user reaction ${ofId} to user ${toId} due to a system error.`,\n        );\n        throw new BadRequestException(\n          this.i18nService.translate('translations.general.process_failed'),\n        );\n      });\n    }\n  }\n\n  public async removeReaction(ofId: string, toId: string): Promise {\n    this.logger.error(`Eliminando reaccion de ${ofId} por el usuario ${toId}.`);\n    return await this.userModel\n      .findOneAndUpdate(\n        toId,\n        {\n          $pull: { reactions: { author: ofId } },\n        },\n        { new: true },\n      )\n      .catch(() => {\n        this.logger.error(\n          `Could not remove user reaction ${ofId} to user ${toId} due to a system error.`,\n        );\n        throw new BadRequestException(\n          this.i18nService.translate('translations.general.process_failed'),\n        );\n      });\n  }\n\n  public async deleteUser(id: string): Promise {\n    return await this.userModel.findByIdAndDelete(id).catch(() => {\n      this.logger.error(\n        `The user ${id} could not be deleted due to a system error.`,\n      );\n      throw new BadRequestException(\n        this.i18nService.translate('translations.general.process_failed'),\n      );\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/auth/dto/security.dto.ts\n            \n            class\n            SecurityDto\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/auth/dto/security.update.dto.ts\n            \n            class\n            SecurityCode\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/auth/dto/security.update.dto.ts\n            \n            class\n            SecurityUpdateDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/dto/signin.dto.ts\n            \n            class\n            SignInDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/auth/jwt.payload.interface.ts\n            \n            interface\n            IJwtPayload\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/auth/strategies/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/config/config.service.ts\n            \n            class\n            ConfigService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/decorators/rank.decorator.ts\n            \n            variable\n            Rank\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorators/user.decorator.ts\n            \n            variable\n            GetUser\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/gateways/general.gateway.ts\n            \n            class\n            GeneralGateway\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/guards/rank.guard.ts\n            \n            guard\n            RankGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/admin/admin.controller.ts\n            \n            controller\n            AdminController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/admin/admin.service.ts\n            \n            injectable\n            AdminService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/admin/models/changelog.data.model.ts\n            \n            class\n            ChangelogAuthor\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/admin/models/changelog.model.ts\n            \n            class\n            ChangelogModel\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/modules/market/dto/buyer.add.dto.ts\n            \n            class\n            BuyerAddMarketDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/modules/market/dto/buyer.remove.dto.ts\n            \n            class\n            BuyerRemoveMarketDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/market/dto/comment.add.dto.ts\n            \n            class\n            CommentMarketDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/modules/market/dto/comment.remove.dto.ts\n            \n            class\n            CommentRemoveMarketDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/market/dto/reaction.add.dto.ts\n            \n            class\n            ReactionAddMarketDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/modules/market/dto/reaction.remove.dto.ts\n            \n            class\n            ReactionRemoveMarketDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/market/market.controller.ts\n            \n            controller\n            MarketController\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/modules/market/market.service.ts\n            \n            injectable\n            MarketService\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/modules/market/models/market.data.model.ts\n            \n            class\n            BuyerMarket\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/market/models/market.data.model.ts\n            \n            class\n            CommentMarket\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/modules/market/models/market.data.model.ts\n            \n            class\n            DiscountMarket\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/market/models/market.data.model.ts\n            \n            class\n            ReactionsMarket\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/modules/market/models/market.model.ts\n            \n            class\n            MarketModel\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/modules/transaction/dto/transaction.delete.dto.ts\n            \n            class\n            TransactionDeleteDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/transaction/models/transaction.model.ts\n            \n            class\n            TransactionModel\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/modules/transaction/transaction.controller.ts\n            \n            controller\n            TransactionController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/transaction/transaction.service.ts\n            \n            injectable\n            TransactionService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/modules/user/dto/reactions.dto.ts\n            \n            class\n            ReactionsDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/user/dto/update-user.dto.ts\n            \n            class\n            UpdateUserDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/user/dto/user.dto.data.ts\n            \n            class\n            Email\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/modules/user/dto/user.dto.data.ts\n            \n            class\n            Market\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/modules/user/dto/user.dto.data.ts\n            \n            class\n            Membership\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/user/dto/user.dto.data.ts\n            \n            class\n            Notifications\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/user/dto/user.dto.data.ts\n            \n            class\n            Online\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/user/dto/user.dto.data.ts\n            \n            class\n            Password\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/modules/user/dto/user.dto.data.ts\n            \n            class\n            Rank\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/user/dto/user.dto.data.ts\n            \n            class\n            Reactions\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/user/dto/user.dto.data.ts\n            \n            class\n            Security\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/modules/user/dto/user.dto.data.ts\n            \n            class\n            Sessions\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/modules/user/dto/user.dto.data.ts\n            \n            class\n            Stats\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/modules/user/dto/user.dto.data.ts\n            \n            class\n            Suspension\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/user/dto/user.dto.data.ts\n            \n            class\n            Transaction\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/modules/user/dto/user.dto.data.ts\n            \n            class\n            TransactionBuyer\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/user/dto/user.dto.ts\n            \n            class\n            UserDto\n            \n                0 %\n                (0/24)\n            \n        \n        \n            \n                \n                src/modules/user/models/user.model.data.ts\n            \n            class\n            Email\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/modules/user/models/user.model.data.ts\n            \n            class\n            Membership\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/user/models/user.model.data.ts\n            \n            class\n            Notifications\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/user/models/user.model.data.ts\n            \n            class\n            Online\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/user/models/user.model.data.ts\n            \n            class\n            Password\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/modules/user/models/user.model.data.ts\n            \n            class\n            Rank\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/user/models/user.model.data.ts\n            \n            class\n            Reactions\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/user/models/user.model.data.ts\n            \n            class\n            Security\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/modules/user/models/user.model.data.ts\n            \n            class\n            Sessions\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/modules/user/models/user.model.data.ts\n            \n            class\n            Stats\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/modules/user/models/user.model.data.ts\n            \n            class\n            Suspension\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/user/models/user.model.data.ts\n            \n            class\n            Transaction\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/modules/user/models/user.model.data.ts\n            \n            class\n            TransactionInfo\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/user/models/user.model.ts\n            \n            class\n            UserModel\n            \n                0 %\n                (0/23)\n            \n        \n        \n            \n                \n                src/modules/user/user.controller.ts\n            \n            controller\n            UserController\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/modules/user/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/11)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nest-modules/mailer : ^1.1.3\n        \n            @nestjs/common : ^6.7.2\n        \n            @nestjs/core : ^6.7.2\n        \n            @nestjs/jwt : ^6.1.1\n        \n            @nestjs/passport : ^6.1.1\n        \n            @nestjs/platform-express : ^6.7.2\n        \n            @nestjs/platform-socket.io : ^6.10.14\n        \n            @nestjs/websockets : ^6.10.14\n        \n            @typegoose/typegoose : ^6.2.1\n        \n            @types/moment-timezone : ^0.5.12\n        \n            bcryptjs : ^2.4.3\n        \n            cache-manager : ^2.10.1\n        \n            class-transformer : ^0.2.3\n        \n            class-validator : ^0.11.0\n        \n            compression : ^1.7.4\n        \n            express-rate-limit : ^5.0.0\n        \n            helmet : ^3.21.2\n        \n            jsonwebtoken : ^8.5.1\n        \n            moment : ^2.24.0\n        \n            moment-timezone : ^0.5.27\n        \n            mongoose : ^5.8.7\n        \n            multer : ^1.4.2\n        \n            nestjs-i18n : ^4.1.3\n        \n            nestjs-typegoose : ^7.0.0\n        \n            passport : ^0.4.1\n        \n            passport-jwt : ^4.0.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.0\n        \n            rxjs : ^6.5.3\n        \n            ts-token-generator : ^1.0.4\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ConfigurationEnum   (src/.../configuration.enum.ts)\n                        \n                        \n                            RanksEnum   (src/.../ranks.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/keys/configuration.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        ConfigurationEnum\n                    \n                \n                        \n                            \n                                 PORT_API\n                            \n                        \n                        \n                            \n                                Value : PORT_API\n                            \n                        \n                        \n                            \n                                 TOKEN_SECRET\n                            \n                        \n                        \n                            \n                                Value : TOKEN_SECRET\n                            \n                        \n                        \n                            \n                                 EMAIL_HOST\n                            \n                        \n                        \n                            \n                                Value : EMAIL_HOST\n                            \n                        \n                        \n                            \n                                 EMAIL_FROM\n                            \n                        \n                        \n                            \n                                Value : EMAIL_FROM\n                            \n                        \n                        \n                            \n                                 DB_HOST\n                            \n                        \n                        \n                            \n                                Value : DB_HOST\n                            \n                        \n                        \n                            \n                                 SERVER_HOST\n                            \n                        \n                        \n                            \n                                Value : SERVER_HOST\n                            \n                        \n            \n        \n\n    src/keys/ranks.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        RanksEnum\n                    \n                \n                        \n                            \n                                 ADMINISTRATOR\n                            \n                        \n                        \n                            \n                                Value : ADMINISTRATOR\n                            \n                        \n                        \n                            \n                                 MODERATOR\n                            \n                        \n                        \n                            \n                                Value : MODERATOR\n                            \n                        \n                        \n                            \n                                 PREMIUM\n                            \n                        \n                        \n                            \n                                Value : PREMIUM\n                            \n                        \n                        \n                            \n                                 SELLER\n                            \n                        \n                        \n                            \n                                Value : SELLER\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            bootstrap\n                        \n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nAkatsuki Project Global API REST test by the Kodachi team.\nThese tests are generated with the Postman client program and are intended to test and verify that the API works correctly and that the client can use it safely, easily and without any problems.\nImportant notes\n\nThe tests must be executed with the authorization of the administrator and all events, problems or actions carried out with the API must be informed.\nThe API can only be tested by assistant administrators and some moderators, to avoid unwanted data leakage.\n\nReporting any important problem is recommended so that it can be corrected by high-ranking administrators and prevent the end customer from being affected by damaging the platform. Please inform all of this to high-ranking administrators or make a \"Failure Report\" in the API repository.\nStart the API\n- $ yarn start: 'With this command the API is initialized locally and without changes in real time.'\n- $ yarn start:dev_: 'With this command the API is initialized locally and with changes in real time.'\n- $ yarn format: 'With this command the entire API code is formatted to maintain a standard and order in the code.'Important notes about new Commits.\n\nThe commit will not be accepted if it has a corrupt code or the code has a bug that was not corrected.\nThe commit will not be accepted if the general file structure of the API is changed.\nThe commit will be accepted after being reviewed by the administrators and tested by the same on a local PC before it can be released to the public and added to the master branch.\nAny questions, problems or comments, inform the general administrator \"@Sawako__\".\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AdminModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ConfigModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MarketModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TransactionModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AdminModule\n\n\n\ncluster_AdminModule_providers\n\n\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_ConfigModule\n\n\n\ncluster_ConfigModule_exports\n\n\n\ncluster_MarketModule\n\n\n\ncluster_MarketModule_providers\n\n\n\ncluster_TransactionModule\n\n\n\ncluster_TransactionModule_providers\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_exports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nAdminService\n\nAdminService\n\n\n\nAdminModule\n\nAdminModule\n\nAdminModule -->\n\nAdminService->AdminModule\n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAdminModule->AppModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nMarketModule\n\nMarketModule\n\nMarketModule -->\n\nAuthModule->MarketModule\n\n\n\n\n\nTransactionModule\n\nTransactionModule\n\nTransactionModule -->\n\nAuthModule->TransactionModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nAuthModule->UserModule\n\n\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nJwtStrategy \n\nJwtStrategy \n\nJwtStrategy  -->\n\nAuthModule->JwtStrategy \n\n\n\n\n\nConfigModule\n\nConfigModule\n\nUserModule -->\n\nConfigModule->UserModule\n\n\n\nAppModule -->\n\nConfigModule->AppModule\n\n\n\n\n\nConfigService \n\nConfigService \n\nConfigService  -->\n\nConfigModule->ConfigService \n\n\n\nAppModule -->\n\nMarketModule->AppModule\n\n\n\nAppModule -->\n\nTransactionModule->AppModule\n\n\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nUserService \n\nUserService \n\nUserService  -->\n\nUserModule->UserService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nMarketService\n\nMarketService\n\nMarketModule -->\n\nMarketService->MarketModule\n\n\n\n\n\nTransactionService\n\nTransactionService\n\nTransactionModule -->\n\nTransactionService->TransactionModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        7 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    6 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    6 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    52 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            GetUser   (src/.../user.decorator.ts)\n                        \n                        \n                            Rank   (src/.../rank.decorator.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/decorators/user.decorator.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            GetUser\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createParamDecorator((key, req) =>\n  key ? req.user[key] : req.user,\n)\n                        \n                    \n\n\n            \n        \n\n    src/decorators/rank.decorator.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            Rank\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (...rank: string[]) => SetMetadata('rank', rank)\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
